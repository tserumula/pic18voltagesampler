

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Dec 29 17:55:49 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78   000000                     
    79                           ; Generated 12/10/2023 GMT
    80                           ; 
    81                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F14K50 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113   000FE0                     bsr             equ	4064
   114   000FE9                     fsr0            equ	4073
   115   000FEA                     fsr0h           equ	4074
   116   000FE9                     fsr0l           equ	4073
   117   000FE1                     fsr1            equ	4065
   118   000FE2                     fsr1h           equ	4066
   119   000FE1                     fsr1l           equ	4065
   120   000FD9                     fsr2            equ	4057
   121   000FDA                     fsr2h           equ	4058
   122   000FD9                     fsr2l           equ	4057
   123   000FEF                     indf0           equ	4079
   124   000FE7                     indf1           equ	4071
   125   000FDF                     indf2           equ	4063
   126   000FF2                     intcon          equ	4082
   127   000000                     nvmcon          equ	0
   128   000FF9                     pcl             equ	4089
   129   000FFA                     pclath          equ	4090
   130   000FFB                     pclatu          equ	4091
   131   000FEB                     plusw0          equ	4075
   132   000FE3                     plusw1          equ	4067
   133   000FDB                     plusw2          equ	4059
   134   000FED                     postdec0        equ	4077
   135   000FE5                     postdec1        equ	4069
   136   000FDD                     postdec2        equ	4061
   137   000FEE                     postinc0        equ	4078
   138   000FE6                     postinc1        equ	4070
   139   000FDE                     postinc2        equ	4062
   140   000FEC                     preinc0         equ	4076
   141   000FE4                     preinc1         equ	4068
   142   000FDC                     preinc2         equ	4060
   143   000FF3                     prod            equ	4083
   144   000FF4                     prodh           equ	4084
   145   000FF3                     prodl           equ	4083
   146   000FD8                     status          equ	4056
   147   000FF5                     tablat          equ	4085
   148   000FF6                     tblptr          equ	4086
   149   000FF7                     tblptrh         equ	4087
   150   000FF6                     tblptrl         equ	4086
   151   000FF8                     tblptru         equ	4088
   152   000FFD                     tosl            equ	4093
   153   000FE8                     wreg            equ	4072
   154   000F53                     UEP0            equ	3923	;# 
   155   000F54                     UEP1            equ	3924	;# 
   156   000F55                     UEP2            equ	3925	;# 
   157   000F56                     UEP3            equ	3926	;# 
   158   000F57                     UEP4            equ	3927	;# 
   159   000F58                     UEP5            equ	3928	;# 
   160   000F59                     UEP6            equ	3929	;# 
   161   000F5A                     UEP7            equ	3930	;# 
   162   000F5B                     UEIE            equ	3931	;# 
   163   000F5C                     UADDR           equ	3932	;# 
   164   000F5D                     UFRML           equ	3933	;# 
   165   000F5E                     UFRMH           equ	3934	;# 
   166   000F5F                     UEIR            equ	3935	;# 
   167   000F60                     UIE             equ	3936	;# 
   168   000F61                     UCFG            equ	3937	;# 
   169   000F62                     UIR             equ	3938	;# 
   170   000F63                     USTAT           equ	3939	;# 
   171   000F64                     UCON            equ	3940	;# 
   172   000F68                     SRCON0          equ	3944	;# 
   173   000F69                     SRCON1          equ	3945	;# 
   174   000F6B                     CM2CON0         equ	3947	;# 
   175   000F6C                     CM2CON1         equ	3948	;# 
   176   000F6D                     CM1CON0         equ	3949	;# 
   177   000F6F                     SSPMSK          equ	3951	;# 
   178   000F6F                     SSPMASK         equ	3951	;# 
   179   000F76                     SLRCON          equ	3958	;# 
   180   000F77                     WPUA            equ	3959	;# 
   181   000F78                     WPUB            equ	3960	;# 
   182   000F79                     IOCA            equ	3961	;# 
   183   000F7A                     IOCB            equ	3962	;# 
   184   000F7E                     ANSEL           equ	3966	;# 
   185   000F7F                     ANSELH          equ	3967	;# 
   186   000F80                     PORTA           equ	3968	;# 
   187   000F81                     PORTB           equ	3969	;# 
   188   000F82                     PORTC           equ	3970	;# 
   189   000F89                     LATA            equ	3977	;# 
   190   000F8A                     LATB            equ	3978	;# 
   191   000F8B                     LATC            equ	3979	;# 
   192   000F92                     TRISA           equ	3986	;# 
   193   000F92                     DDRA            equ	3986	;# 
   194   000F93                     TRISB           equ	3987	;# 
   195   000F93                     DDRB            equ	3987	;# 
   196   000F94                     TRISC           equ	3988	;# 
   197   000F94                     DDRC            equ	3988	;# 
   198   000F9B                     OSCTUNE         equ	3995	;# 
   199   000F9D                     PIE1            equ	3997	;# 
   200   000F9E                     PIR1            equ	3998	;# 
   201   000F9F                     IPR1            equ	3999	;# 
   202   000FA0                     PIE2            equ	4000	;# 
   203   000FA1                     PIR2            equ	4001	;# 
   204   000FA2                     IPR2            equ	4002	;# 
   205   000FA6                     EECON1          equ	4006	;# 
   206   000FA7                     EECON2          equ	4007	;# 
   207   000FA8                     EEDATA          equ	4008	;# 
   208   000FA9                     EEADR           equ	4009	;# 
   209   000FAB                     RCSTA           equ	4011	;# 
   210   000FAB                     RCSTA1          equ	4011	;# 
   211   000FAC                     TXSTA           equ	4012	;# 
   212   000FAC                     TXSTA1          equ	4012	;# 
   213   000FAD                     TXREG           equ	4013	;# 
   214   000FAD                     TXREG1          equ	4013	;# 
   215   000FAE                     RCREG           equ	4014	;# 
   216   000FAE                     RCREG1          equ	4014	;# 
   217   000FAF                     SPBRG           equ	4015	;# 
   218   000FAF                     SPBRG1          equ	4015	;# 
   219   000FB0                     SPBRGH          equ	4016	;# 
   220   000FB1                     T3CON           equ	4017	;# 
   221   000FB2                     TMR3            equ	4018	;# 
   222   000FB2                     TMR3L           equ	4018	;# 
   223   000FB3                     TMR3H           equ	4019	;# 
   224   000FB6                     ECCP1AS         equ	4022	;# 
   225   000FB7                     PWM1CON         equ	4023	;# 
   226   000FB8                     BAUDCON         equ	4024	;# 
   227   000FB8                     BAUDCTL         equ	4024	;# 
   228   000FB9                     PSTRCON         equ	4025	;# 
   229   000FBA                     REFCON0         equ	4026	;# 
   230   000FBA                     VREFCON0        equ	4026	;# 
   231   000FBB                     REFCON1         equ	4027	;# 
   232   000FBB                     VREFCON1        equ	4027	;# 
   233   000FBC                     REFCON2         equ	4028	;# 
   234   000FBC                     VREFCON2        equ	4028	;# 
   235   000FBD                     CCP1CON         equ	4029	;# 
   236   000FBE                     CCPR1           equ	4030	;# 
   237   000FBE                     CCPR1L          equ	4030	;# 
   238   000FBF                     CCPR1H          equ	4031	;# 
   239   000FC0                     ADCON2          equ	4032	;# 
   240   000FC1                     ADCON1          equ	4033	;# 
   241   000FC2                     ADCON0          equ	4034	;# 
   242   000FC3                     ADRES           equ	4035	;# 
   243   000FC3                     ADRESL          equ	4035	;# 
   244   000FC4                     ADRESH          equ	4036	;# 
   245   000FC5                     SSPCON2         equ	4037	;# 
   246   000FC6                     SSPCON1         equ	4038	;# 
   247   000FC7                     SSPSTAT         equ	4039	;# 
   248   000FC8                     SSPADD          equ	4040	;# 
   249   000FC9                     SSPBUF          equ	4041	;# 
   250   000FCA                     T2CON           equ	4042	;# 
   251   000FCB                     PR2             equ	4043	;# 
   252   000FCB                     MEMCON          equ	4043	;# 
   253   000FCC                     TMR2            equ	4044	;# 
   254   000FCD                     T1CON           equ	4045	;# 
   255   000FCE                     TMR1            equ	4046	;# 
   256   000FCE                     TMR1L           equ	4046	;# 
   257   000FCF                     TMR1H           equ	4047	;# 
   258   000FD0                     RCON            equ	4048	;# 
   259   000FD1                     WDTCON          equ	4049	;# 
   260   000FD2                     OSCCON2         equ	4050	;# 
   261   000FD3                     OSCCON          equ	4051	;# 
   262   000FD5                     T0CON           equ	4053	;# 
   263   000FD6                     TMR0            equ	4054	;# 
   264   000FD6                     TMR0L           equ	4054	;# 
   265   000FD7                     TMR0H           equ	4055	;# 
   266   000FD8                     STATUS          equ	4056	;# 
   267   000FD9                     FSR2            equ	4057	;# 
   268   000FD9                     FSR2L           equ	4057	;# 
   269   000FDA                     FSR2H           equ	4058	;# 
   270   000FDB                     PLUSW2          equ	4059	;# 
   271   000FDC                     PREINC2         equ	4060	;# 
   272   000FDD                     POSTDEC2        equ	4061	;# 
   273   000FDE                     POSTINC2        equ	4062	;# 
   274   000FDF                     INDF2           equ	4063	;# 
   275   000FE0                     BSR             equ	4064	;# 
   276   000FE1                     FSR1            equ	4065	;# 
   277   000FE1                     FSR1L           equ	4065	;# 
   278   000FE2                     FSR1H           equ	4066	;# 
   279   000FE3                     PLUSW1          equ	4067	;# 
   280   000FE4                     PREINC1         equ	4068	;# 
   281   000FE5                     POSTDEC1        equ	4069	;# 
   282   000FE6                     POSTINC1        equ	4070	;# 
   283   000FE7                     INDF1           equ	4071	;# 
   284   000FE8                     WREG            equ	4072	;# 
   285   000FE9                     FSR0            equ	4073	;# 
   286   000FE9                     FSR0L           equ	4073	;# 
   287   000FEA                     FSR0H           equ	4074	;# 
   288   000FEB                     PLUSW0          equ	4075	;# 
   289   000FEC                     PREINC0         equ	4076	;# 
   290   000FED                     POSTDEC0        equ	4077	;# 
   291   000FEE                     POSTINC0        equ	4078	;# 
   292   000FEF                     INDF0           equ	4079	;# 
   293   000FF0                     INTCON3         equ	4080	;# 
   294   000FF1                     INTCON2         equ	4081	;# 
   295   000FF2                     INTCON          equ	4082	;# 
   296   000FF3                     PROD            equ	4083	;# 
   297   000FF3                     PRODL           equ	4083	;# 
   298   000FF4                     PRODH           equ	4084	;# 
   299   000FF5                     TABLAT          equ	4085	;# 
   300   000FF6                     TBLPTR          equ	4086	;# 
   301   000FF6                     TBLPTRL         equ	4086	;# 
   302   000FF7                     TBLPTRH         equ	4087	;# 
   303   000FF8                     TBLPTRU         equ	4088	;# 
   304   000FF9                     PCLAT           equ	4089	;# 
   305   000FF9                     PC              equ	4089	;# 
   306   000FF9                     PCL             equ	4089	;# 
   307   000FFA                     PCLATH          equ	4090	;# 
   308   000FFB                     PCLATU          equ	4091	;# 
   309   000FFC                     STKPTR          equ	4092	;# 
   310   000FFD                     TOS             equ	4093	;# 
   311   000FFD                     TOSL            equ	4093	;# 
   312   000FFE                     TOSH            equ	4094	;# 
   313   000FFF                     TOSU            equ	4095	;# 
   314                           
   315                           	psect	idataCOMRAM
   316   003E90                     __pidataCOMRAM:
   317                           	callstack 0
   318                           
   319                           ;initializer for _adc_step_size
   320                           ;main.c: 88: uint16_t adcResult = 0;;main.c: 90: uint8_t overflowCount = 0;;main.c: 91: 
      +                          uint8_t sampling = 0;;main.c: 93: uint8_t eeprom_data_lsb = 0;;main.c: 94: uint8_t eepro
      +                          m_data_msb = 0;;main.c: 95: uint8_t eeprom_data_ctl = 0;;main.c: 96: uint16_t eeprom_dat
      +                          a = 0;;main.c: 98: uint8_t received_data = 0;;main.c: 100: uint8_t address_low_byte = 0;
      +                          ;main.c: 101: uint8_t address_high_byte = 0;;main.c: 102: uint16_t address_index = 0;;ma
      +                          in.c: 103: uint16_t tmp_index = 0;;main.c: 105: uint8_t segPattern0;;main.c: 106: uint8_
      +                          t segPattern1;
   321   003E90  280A               	dw	10250
   322   003E92  3BA0               	dw	15264
   323   000FCE                     _TMR1           set	4046
   324   000FAD                     _TXREG          set	4013
   325   000FAB                     _RCSTAbits      set	4011
   326   000FAC                     _TXSTAbits      set	4012
   327   000FAF                     _SPBRG          set	4015
   328   000FB8                     _BAUDCONbits    set	4024
   329   000FC7                     _SSPSTATbits    set	4039
   330   000FC9                     _SSPBUF         set	4041
   331   000FC5                     _SSPCON2bits    set	4037
   332   000FF1                     _INTCON2bits    set	4081
   333   000FC5                     _SSPCON2        set	4037
   334   000FC7                     _SSPSTAT        set	4039
   335   000FC8                     _SSPADD         set	4040
   336   000FC6                     _SSPCON1        set	4038
   337   000F93                     _TRISBbits      set	3987
   338   000F9D                     _PIE1bits       set	3997
   339   000FCD                     _T1CON          set	4045
   340   000FC0                     _ADCON2         set	4032
   341   000FC2                     _ADCON0         set	4034
   342   000FC1                     _ADCON1         set	4033
   343   000F82                     _PORTCbits      set	3970
   344   000FF2                     _INTCONbits     set	4082
   345   000F8B                     _LATCbits       set	3979
   346   000F7E                     _ANSELbits      set	3966
   347   000F94                     _TRISCbits      set	3988
   348   000F92                     _TRISA          set	3986
   349   000F7E                     _ANSEL          set	3966
   350   000FD3                     _OSCCONbits     set	4051
   351   000FF0                     _INTCON3bits    set	4080
   352   000F89                     _LATAbits       set	3977
   353   000F9E                     _PIR1bits       set	3998
   354   000FC3                     _ADRESL         set	4035
   355   000FC4                     _ADRESH         set	4036
   356   000FC2                     _ADCON0bits     set	4034
   357                           
   358                           	psect	smallconst
   359   000300                     __psmallconst:
   360                           	callstack 0
   361   000300  00                 	db	0
   362   000301                     STR_1:
   363   000301  53                 	db	83	;'S'
   364   000302  54                 	db	84	;'T'
   365   000303  41                 	db	65	;'A'
   366   000304  52                 	db	82	;'R'
   367   000305  54                 	db	84	;'T'
   368   000306  20                 	db	32
   369   000307  0D                 	db	13
   370   000308  0A                 	db	10
   371   000309  00                 	db	0
   372   00030A                     STR_5:
   373   00030A  45                 	db	69	;'E'
   374   00030B  4E                 	db	78	;'N'
   375   00030C  44                 	db	68	;'D'
   376   00030D  20                 	db	32
   377   00030E  0D                 	db	13
   378   00030F  0A                 	db	10
   379   000310  00                 	db	0
   380   000311                     STR_2:
   381   000311  25                 	db	37
   382   000312  2E                 	db	46
   383   000313  32                 	db	50	;'2'
   384   000314  66                 	db	102	;'f'
   385   000315  00                 	db	0
   386   000316                     STR_8:
   387   000316  69                 	db	105	;'i'
   388   000317  6E                 	db	110	;'n'
   389   000318  66                 	db	102	;'f'
   390   000319  00                 	db	0
   391   00031A                     STR_11:
   392   00031A  6E                 	db	110	;'n'
   393   00031B  61                 	db	97	;'a'
   394   00031C  6E                 	db	110	;'n'
   395   00031D  00                 	db	0
   396   00031A                     STR_12          equ	STR_11
   397   00031A                     STR_13          equ	STR_11
   398   000316                     STR_9           equ	STR_8
   399   000316                     STR_10          equ	STR_8
   400   000311                     STR_6           equ	STR_2
   401   000301                     STR_4           equ	STR_1
   402   00030E                     STR_3           equ	STR_5+4
   403   00030E                     STR_7           equ	STR_5+4
   404   00031E  00                 	db	0	; dummy byte at the end
   405   000002                     __activetblptr  equ	2
   406                           
   407                           ; #config settings
   408                           
   409                           	psect	cinit
   410   003A32                     __pcinit:
   411                           	callstack 0
   412   003A32                     start_initialization:
   413                           	callstack 0
   414   003A32                     __initialization:
   415                           	callstack 0
   416                           
   417                           ; Initialize objects allocated to COMRAM (4 bytes)
   418                           ; load TBLPTR registers with __pidataCOMRAM
   419   003A32  0E90               	movlw	low __pidataCOMRAM
   420   003A34  6EF6               	movwf	tblptrl,c
   421   003A36  0E3E               	movlw	high __pidataCOMRAM
   422   003A38  6EF7               	movwf	tblptrh,c
   423   003A3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   424   003A3C  6EF8               	movwf	tblptru,c
   425   003A3E  EE00  F04E         	lfsr	0,__pdataCOMRAM
   426   003A42  EE10 F004          	lfsr	1,4
   427   003A46                     copy_data0:
   428   003A46  0009               	tblrd		*+
   429   003A48  CFF5 FFEE          	movff	tablat,postinc0
   430   003A4C  50E5               	movf	postdec1,w,c
   431   003A4E  50E1               	movf	fsr1l,w,c
   432   003A50  E1FA               	bnz	copy_data0
   433                           
   434                           ; Clear objects allocated to BANK1 (80 bytes)
   435   003A52  EE01  F000         	lfsr	0,__pbssBANK1
   436   003A56  0E50               	movlw	80
   437   003A58                     clear_0:
   438   003A58  6AEE               	clrf	postinc0,c
   439   003A5A  06E8               	decf	wreg,f,c
   440   003A5C  E1FD               	bnz	clear_0
   441                           
   442                           ; Clear objects allocated to BANK0 (27 bytes)
   443   003A5E  EE00  F0E4         	lfsr	0,__pbssBANK0
   444   003A62  0E1B               	movlw	27
   445   003A64                     clear_1:
   446   003A64  6AEE               	clrf	postinc0,c
   447   003A66  06E8               	decf	wreg,f,c
   448   003A68  E1FD               	bnz	clear_1
   449                           
   450                           ; Clear objects allocated to COMRAM (34 bytes)
   451   003A6A  EE00  F02C         	lfsr	0,__pbssCOMRAM
   452   003A6E  0E22               	movlw	34
   453   003A70                     clear_2:
   454   003A70  6AEE               	clrf	postinc0,c
   455   003A72  06E8               	decf	wreg,f,c
   456   003A74  E1FD               	bnz	clear_2
   457   003A76                     end_of_initialization:
   458                           	callstack 0
   459   003A76                     __end_of__initialization:
   460                           	callstack 0
   461   003A76  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   462   003A78  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   463   003A7A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   464   003A7C  6EF8               	movwf	tblptru,c
   465   003A7E  0100               	movlb	0
   466   003A80  EF0D  F00D         	goto	_main	;jump to C main() function
   467                           
   468                           	psect	bssCOMRAM
   469   00002C                     __pbssCOMRAM:
   470                           	callstack 0
   471   00002C                     floorf@F521:
   472                           	callstack 0
   473   00002C                     	ds	4
   474   000030                     _button_counter:
   475                           	callstack 0
   476   000030                     	ds	2
   477   000032                     _c_number:
   478                           	callstack 0
   479   000032                     	ds	2
   480   000034                     _c_remainder:
   481                           	callstack 0
   482   000034                     	ds	2
   483   000036                     _c_target:
   484                           	callstack 0
   485   000036                     	ds	2
   486   000038                     _displaySample:
   487                           	callstack 0
   488   000038                     	ds	1
   489   000039                     _displayAddress:
   490                           	callstack 0
   491   000039                     	ds	1
   492   00003A                     _displayDigit2:
   493                           	callstack 0
   494   00003A                     	ds	1
   495   00003B                     _displayDigit1:
   496                           	callstack 0
   497   00003B                     	ds	1
   498   00003C                     _displayDigit0:
   499                           	callstack 0
   500   00003C                     	ds	1
   501   00003D                     _segPattern2:
   502                           	callstack 0
   503   00003D                     	ds	1
   504   00003E                     _segPattern1:
   505                           	callstack 0
   506   00003E                     	ds	1
   507   00003F                     _segPattern0:
   508                           	callstack 0
   509   00003F                     	ds	1
   510   000040                     _address_high_byte:
   511                           	callstack 0
   512   000040                     	ds	1
   513   000041                     _address_low_byte:
   514                           	callstack 0
   515   000041                     	ds	1
   516   000042                     _received_data:
   517                           	callstack 0
   518   000042                     	ds	1
   519   000043                     _overflowCount:
   520                           	callstack 0
   521   000043                     	ds	1
   522   000044                     _uart_buffer:
   523                           	callstack 0
   524   000044                     	ds	10
   525                           
   526                           	psect	dataCOMRAM
   527   00004E                     __pdataCOMRAM:
   528                           	callstack 0
   529   00004E                     _adc_step_size:
   530                           	callstack 0
   531   00004E                     	ds	4
   532                           
   533                           	psect	bssBANK0
   534   0000E4                     __pbssBANK0:
   535                           	callstack 0
   536   0000E4                     ___fpclassifyf@F465:
   537                           	callstack 0
   538   0000E4                     	ds	4
   539   0000E8                     _adc_voltage:
   540                           	callstack 0
   541   0000E8                     	ds	4
   542   0000EC                     _width:
   543                           	callstack 0
   544   0000EC                     	ds	2
   545   0000EE                     _prec:
   546                           	callstack 0
   547   0000EE                     	ds	2
   548   0000F0                     _tmp_index:
   549                           	callstack 0
   550   0000F0                     	ds	2
   551   0000F2                     _address_index:
   552                           	callstack 0
   553   0000F2                     	ds	2
   554   0000F4                     _eeprom_data:
   555                           	callstack 0
   556   0000F4                     	ds	2
   557   0000F6                     _adcResult:
   558                           	callstack 0
   559   0000F6                     	ds	2
   560   0000F8                     _flags:
   561                           	callstack 0
   562   0000F8                     	ds	1
   563   0000F9                     _fsm_state:
   564                           	callstack 0
   565   0000F9                     	ds	1
   566   0000FA                     _turnOnDisplay:
   567                           	callstack 0
   568   0000FA                     	ds	1
   569   0000FB                     _eeprom_data_ctl:
   570                           	callstack 0
   571   0000FB                     	ds	1
   572   0000FC                     _eeprom_data_msb:
   573                           	callstack 0
   574   0000FC                     	ds	1
   575   0000FD                     _eeprom_data_lsb:
   576                           	callstack 0
   577   0000FD                     	ds	1
   578   0000FE                     _sampling:
   579                           	callstack 0
   580   0000FE                     	ds	1
   581                           
   582                           	psect	bssBANK1
   583   000100                     __pbssBANK1:
   584                           	callstack 0
   585   000100                     _dbuf:
   586                           	callstack 0
   587   000100                     	ds	80
   588                           
   589                           	psect	cstackBANK1
   590   000150                     __pcstackBANK1:
   591                           	callstack 0
   592   000150                     sprintf@ap:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x0
   596   000150                     	ds	1
   597   000151                     sprintf@f:
   598                           	callstack 0
   599                           
   600                           ; 11 bytes @ 0x1
   601   000151                     	ds	11
   602                           
   603                           	psect	cstackBANK0
   604   000060                     __pcstackBANK0:
   605                           	callstack 0
   606   000060                     ?___fpclassifyf:
   607                           	callstack 0
   608   000060                     ?___lwdiv:
   609                           	callstack 0
   610   000060                     ?___lwmod:
   611                           	callstack 0
   612   000060                     ?_read_prec_or_width:
   613                           	callstack 0
   614   000060                     ?___fladd:
   615                           	callstack 0
   616   000060                     ?___fldiv:
   617                           	callstack 0
   618   000060                     ?_labs:
   619                           	callstack 0
   620   000060                     ?___flneg:
   621                           	callstack 0
   622   000060                     ?___xxtofl:
   623                           	callstack 0
   624   000060                     get7SegmentPattern@digit:
   625                           	callstack 0
   626   000060                     displayDigits@digit1:
   627                           	callstack 0
   628   000060                     I2CWrite@data:
   629                           	callstack 0
   630   000060                     I2CRead@ack:
   631                           	callstack 0
   632   000060                     EUSART_TransmitChar@data:
   633                           	callstack 0
   634   000060                     read_prec_or_width@fmt:
   635                           	callstack 0
   636   000060                     getLowByte@number:
   637                           	callstack 0
   638   000060                     getHighByte@number:
   639                           	callstack 0
   640   000060                     ___lwdiv@dividend:
   641                           	callstack 0
   642   000060                     ___lwmod@dividend:
   643                           	callstack 0
   644   000060                     memcpy@d1:
   645                           	callstack 0
   646   000060                     fputc@c:
   647                           	callstack 0
   648   000060                     strcpy@dest:
   649                           	callstack 0
   650   000060                     ___fleq@ff1:
   651                           	callstack 0
   652   000060                     ___flneg@f1:
   653                           	callstack 0
   654   000060                     ___fladd@b:
   655                           	callstack 0
   656   000060                     ___fldiv@b:
   657                           	callstack 0
   658   000060                     ___xxtofl@val:
   659                           	callstack 0
   660   000060                     ___fpclassifyf@x:
   661                           	callstack 0
   662   000060                     labs@a:
   663                           	callstack 0
   664   000060                     ??_adcSampling:
   665   000060                     
   666                           ; 1 bytes @ 0x0
   667   000060                     	ds	1
   668   000061                     get7SegmentPattern@pattern:
   669                           	callstack 0
   670   000061                     displayDigits@digit2:
   671                           	callstack 0
   672   000061                     EUSART_TransmitString@a:
   673                           	callstack 0
   674   000061                     read_prec_or_width@ap:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x1
   678   000061                     	ds	1
   679   000062                     strcpy@src:
   680                           	callstack 0
   681   000062                     EEPROMWrite@address:
   682                           	callstack 0
   683   000062                     EEPROMRead@address:
   684                           	callstack 0
   685   000062                     ___lwdiv@divisor:
   686                           	callstack 0
   687   000062                     ___lwmod@divisor:
   688                           	callstack 0
   689   000062                     memcpy@s1:
   690                           	callstack 0
   691   000062                     fputc@fp:
   692                           	callstack 0
   693   000062                     ??_displayDigits:
   694                           
   695                           ; 1 bytes @ 0x2
   696   000062                     	ds	1
   697   000063                     ??_EUSART_TransmitString:
   698   000063                     ??_strcpy:
   699   000063                     ??_read_prec_or_width:
   700                           
   701                           ; 1 bytes @ 0x3
   702   000063                     	ds	1
   703   000064                     displayDigits@digit0:
   704                           	callstack 0
   705   000064                     EEPROMWrite@data:
   706                           	callstack 0
   707   000064                     EEPROMRead@data:
   708                           	callstack 0
   709   000064                     ___lwdiv@counter:
   710                           	callstack 0
   711   000064                     ___lwmod@counter:
   712                           	callstack 0
   713   000064                     memcpy@n:
   714                           	callstack 0
   715   000064                     strcpy@d:
   716                           	callstack 0
   717   000064                     ___fleq@ff2:
   718                           	callstack 0
   719   000064                     ___fladd@a:
   720                           	callstack 0
   721   000064                     ___fldiv@a:
   722                           	callstack 0
   723   000064                     ??_fputc:
   724   000064                     ??___fpclassifyf:
   725   000064                     ??_labs:
   726   000064                     ??___xxtofl:
   727                           
   728                           ; 1 bytes @ 0x4
   729   000064                     	ds	1
   730   000065                     read_prec_or_width@c:
   731                           	callstack 0
   732   000065                     displayDigits@i:
   733                           	callstack 0
   734   000065                     EUSART_TransmitString@i:
   735                           	callstack 0
   736   000065                     ___lwdiv@quotient:
   737                           	callstack 0
   738   000065                     ??_EEPROMWrite:
   739                           
   740                           ; 1 bytes @ 0x5
   741   000065                     	ds	1
   742   000066                     memcpy@tmp:
   743                           	callstack 0
   744   000066                     read_prec_or_width@n:
   745                           	callstack 0
   746   000066                     
   747                           ; 1 bytes @ 0x6
   748   000066                     	ds	1
   749   000067                     memcpy@d:
   750                           	callstack 0
   751   000067                     
   752                           ; 1 bytes @ 0x7
   753   000067                     	ds	1
   754   000068                     ___xxtofl@sign:
   755                           	callstack 0
   756   000068                     ___fpclassifyf@e:
   757                           	callstack 0
   758   000068                     ??___fladd:
   759   000068                     ??___fldiv:
   760   000068                     ??___fleq:
   761                           
   762                           ; 1 bytes @ 0x8
   763   000068                     	ds	1
   764   000069                     ___xxtofl@exp:
   765                           	callstack 0
   766   000069                     memcpy@s:
   767                           	callstack 0
   768   000069                     fputs@s:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x9
   772   000069                     	ds	1
   773   00006A                     ___xxtofl@arg:
   774                           	callstack 0
   775   00006A                     ___fpclassifyf@u:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0xA
   779   00006A                     	ds	1
   780   00006B                     fputs@fp:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0xB
   784   00006B                     	ds	1
   785   00006C                     ___fladd@signs:
   786                           	callstack 0
   787   00006C                     ___fldiv@rem:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0xC
   791   00006C                     	ds	1
   792   00006D                     ___fladd@aexp:
   793                           	callstack 0
   794   00006D                     fputs@c:
   795                           	callstack 0
   796   00006D                     
   797                           ; 1 bytes @ 0xD
   798   00006D                     	ds	1
   799   00006E                     ?___flmul:
   800                           	callstack 0
   801   00006E                     ___fladd@bexp:
   802                           	callstack 0
   803   00006E                     fputs@i:
   804                           	callstack 0
   805   00006E                     ___flmul@b:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0xE
   809   00006E                     	ds	1
   810   00006F                     ___fladd@grs:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0xF
   814   00006F                     	ds	1
   815   000070                     ___fldiv@sign:
   816                           	callstack 0
   817   000070                     pad@fp:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x10
   821   000070                     	ds	1
   822   000071                     ___fldiv@new_exp:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x11
   826   000071                     	ds	1
   827   000072                     pad@buf:
   828                           	callstack 0
   829   000072                     ___flmul@a:
   830                           	callstack 0
   831                           
   832                           ; 4 bytes @ 0x12
   833   000072                     	ds	1
   834   000073                     ___fldiv@grs:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x13
   838   000073                     	ds	1
   839   000074                     pad@p:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x14
   843   000074                     	ds	2
   844   000076                     ??___flmul:
   845   000076                     ??_pad:
   846                           
   847                           ; 1 bytes @ 0x16
   848   000076                     	ds	1
   849   000077                     ___fldiv@bexp:
   850                           	callstack 0
   851   000077                     pad@i:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x17
   855   000077                     	ds	1
   856   000078                     ___fldiv@aexp:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x18
   860   000078                     	ds	1
   861   000079                     ?_floorf:
   862                           	callstack 0
   863   000079                     floorf@x:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x19
   867   000079                     	ds	1
   868   00007A                     ___flmul@sign:
   869                           	callstack 0
   870                           
   871                           ; 1 bytes @ 0x1A
   872   00007A                     	ds	1
   873   00007B                     ___flmul@aexp:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x1B
   877   00007B                     	ds	1
   878   00007C                     ___flmul@grs:
   879                           	callstack 0
   880                           
   881                           ; 4 bytes @ 0x1C
   882   00007C                     	ds	1
   883   00007D                     ??_floorf:
   884                           
   885                           ; 1 bytes @ 0x1D
   886   00007D                     	ds	3
   887   000080                     ___flmul@bexp:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x20
   891   000080                     	ds	1
   892   000081                     ___flmul@prod:
   893                           	callstack 0
   894                           
   895                           ; 4 bytes @ 0x21
   896   000081                     	ds	2
   897   000083                     floorf@m:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0x23
   901   000083                     	ds	2
   902   000085                     ___flmul@temp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x25
   906   000085                     	ds	2
   907   000087                     ?___flsub:
   908                           	callstack 0
   909   000087                     ?___fltol:
   910                           	callstack 0
   911   000087                     floorf@e:
   912                           	callstack 0
   913   000087                     ___flge@ff1:
   914                           	callstack 0
   915   000087                     ___fltol@f1:
   916                           	callstack 0
   917   000087                     ___flsub@b:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x27
   921   000087                     	ds	2
   922   000089                     floorf@u:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x29
   926   000089                     	ds	2
   927   00008B                     ___flge@ff2:
   928                           	callstack 0
   929   00008B                     ___flsub@a:
   930                           	callstack 0
   931   00008B                     ??___fltol:
   932                           
   933                           ; 1 bytes @ 0x2B
   934   00008B                     	ds	4
   935   00008F                     ___fltol@sign1:
   936                           	callstack 0
   937   00008F                     ??___flge:
   938                           
   939                           ; 1 bytes @ 0x2F
   940   00008F                     	ds	1
   941   000090                     ___fltol@exp1:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x30
   945   000090                     	ds	1
   946   000091                     
   947                           ; 1 bytes @ 0x31
   948   000091                     	ds	2
   949   000093                     efgtoa@fp:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x33
   953   000093                     	ds	2
   954   000095                     efgtoa@f:
   955                           	callstack 0
   956                           
   957                           ; 4 bytes @ 0x35
   958   000095                     	ds	4
   959   000099                     efgtoa@c:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x39
   963   000099                     	ds	1
   964   00009A                     ??_efgtoa:
   965                           
   966                           ; 1 bytes @ 0x3A
   967   00009A                     	ds	2
   968   00009C                     efgtoa@ne:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x3C
   972   00009C                     	ds	2
   973   00009E                     efgtoa@p:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x3E
   977   00009E                     	ds	2
   978   0000A0                     efgtoa@t:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x40
   982   0000A0                     	ds	2
   983   0000A2                     _efgtoa$1752:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x42
   987   0000A2                     	ds	2
   988   0000A4                     efgtoa@pp:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x44
   992   0000A4                     	ds	1
   993   0000A5                     efgtoa@mode:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x45
   997   0000A5                     	ds	1
   998   0000A6                     efgtoa@nmode:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x46
  1002   0000A6                     	ds	1
  1003   0000A7                     efgtoa@d:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x47
  1007   0000A7                     	ds	2
  1008   0000A9                     efgtoa@m:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x49
  1012   0000A9                     	ds	2
  1013   0000AB                     efgtoa@e:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x4B
  1017   0000AB                     	ds	2
  1018   0000AD                     efgtoa@w:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x4D
  1022   0000AD                     	ds	2
  1023   0000AF                     efgtoa@ou:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x4F
  1027   0000AF                     	ds	4
  1028   0000B3                     efgtoa@i:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x53
  1032   0000B3                     	ds	2
  1033   0000B5                     efgtoa@h:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x55
  1037   0000B5                     	ds	4
  1038   0000B9                     efgtoa@l:
  1039                           	callstack 0
  1040                           
  1041                           ; 4 bytes @ 0x59
  1042   0000B9                     	ds	4
  1043   0000BD                     efgtoa@sign:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x5D
  1047   0000BD                     	ds	1
  1048   0000BE                     efgtoa@g:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x5E
  1052   0000BE                     	ds	4
  1053   0000C2                     efgtoa@n:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x62
  1057   0000C2                     	ds	2
  1058   0000C4                     efgtoa@u:
  1059                           	callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x64
  1062   0000C4                     	ds	4
  1063   0000C8                     vfpfcnvrt@fp:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x68
  1067   0000C8                     	ds	2
  1068   0000CA                     vfpfcnvrt@fmt:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x6A
  1072   0000CA                     	ds	1
  1073   0000CB                     vfpfcnvrt@ap:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x6B
  1077   0000CB                     	ds	2
  1078   0000CD                     ??_vfpfcnvrt:
  1079                           
  1080                           ; 1 bytes @ 0x6D
  1081   0000CD                     	ds	1
  1082   0000CE                     vfpfcnvrt@convarg:
  1083                           	callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x6E
  1086   0000CE                     	ds	4
  1087   0000D2                     vfpfcnvrt@c:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x72
  1091   0000D2                     	ds	1
  1092   0000D3                     vfpfcnvrt@cp:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x73
  1096   0000D3                     	ds	1
  1097   0000D4                     ?_vfprintf:
  1098                           	callstack 0
  1099   0000D4                     vfprintf@fp:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x74
  1103   0000D4                     	ds	2
  1104   0000D6                     vfprintf@fmt:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x76
  1108   0000D6                     	ds	1
  1109   0000D7                     vfprintf@ap:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x77
  1113   0000D7                     	ds	2
  1114   0000D9                     vfprintf@cfmt:
  1115                           	callstack 0
  1116   0000D9                     
  1117                           ; 1 bytes @ 0x79
  1118   0000D9                     	ds	1
  1119   0000DA                     ?_sprintf:
  1120                           	callstack 0
  1121   0000DA                     sprintf@s:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x7A
  1125   0000DA                     	ds	1
  1126   0000DB                     sprintf@fmt:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x7B
  1130   0000DB                     	ds	5
  1131   0000E0                     ??_main:
  1132                           
  1133                           ; 1 bytes @ 0x80
  1134   0000E0                     	ds	2
  1135   0000E2                     _main$2068:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x82
  1139   0000E2                     	ds	1
  1140   0000E3                     _main$2069:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x83
  1144   0000E3                     	ds	1
  1145                           
  1146                           	psect	cstackCOMRAM
  1147   000001                     __pcstackCOMRAM:
  1148                           	callstack 0
  1149   000001                     ?i2___lwdiv:
  1150                           	callstack 0
  1151   000001                     ?i2___lwmod:
  1152                           	callstack 0
  1153   000001                     ?i2___flmul:
  1154                           	callstack 0
  1155   000001                     i2get7SegmentPattern@digit:
  1156                           	callstack 0
  1157   000001                     i2displayDigits@digit1:
  1158                           	callstack 0
  1159   000001                     i2EUSART_TransmitChar@data:
  1160                           	callstack 0
  1161   000001                     i2___lwdiv@dividend:
  1162                           	callstack 0
  1163   000001                     i2___lwmod@dividend:
  1164                           	callstack 0
  1165   000001                     i2___flmul@b:
  1166                           	callstack 0
  1167   000001                     ??i2_adcSampling:
  1168   000001                     
  1169                           ; 1 bytes @ 0x0
  1170   000001                     	ds	1
  1171   000002                     i2get7SegmentPattern@pattern:
  1172                           	callstack 0
  1173   000002                     i2displayDigits@digit2:
  1174                           	callstack 0
  1175   000002                     i2EUSART_TransmitString@a:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x1
  1179   000002                     	ds	1
  1180   000003                     i2___lwdiv@divisor:
  1181                           	callstack 0
  1182   000003                     i2___lwmod@divisor:
  1183                           	callstack 0
  1184   000003                     ??i2_displayDigits:
  1185                           
  1186                           ; 1 bytes @ 0x2
  1187   000003                     	ds	1
  1188   000004                     ??i2_EUSART_TransmitString:
  1189                           
  1190                           ; 1 bytes @ 0x3
  1191   000004                     	ds	1
  1192   000005                     i2displayDigits@digit0:
  1193                           	callstack 0
  1194   000005                     i2___lwmod@counter:
  1195                           	callstack 0
  1196   000005                     i2___lwdiv@quotient:
  1197                           	callstack 0
  1198   000005                     i2___flmul@a:
  1199                           	callstack 0
  1200   000005                     
  1201                           ; 1 bytes @ 0x4
  1202   000005                     	ds	1
  1203   000006                     i2displayDigits@i:
  1204                           	callstack 0
  1205   000006                     i2EUSART_TransmitString@i:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x5
  1209   000006                     	ds	1
  1210   000007                     i2___lwdiv@counter:
  1211                           	callstack 0
  1212                           
  1213                           ; 1 bytes @ 0x6
  1214   000007                     	ds	1
  1215   000008                     
  1216                           ; 1 bytes @ 0x7
  1217   000008                     	ds	1
  1218   000009                     ??i2___flmul:
  1219                           
  1220                           ; 1 bytes @ 0x8
  1221   000009                     	ds	4
  1222   00000D                     i2___flmul@sign:
  1223                           	callstack 0
  1224                           
  1225                           ; 1 bytes @ 0xC
  1226   00000D                     	ds	1
  1227   00000E                     i2___flmul@grs:
  1228                           	callstack 0
  1229                           
  1230                           ; 4 bytes @ 0xD
  1231   00000E                     	ds	4
  1232   000012                     i2___flmul@aexp:
  1233                           	callstack 0
  1234                           
  1235                           ; 1 bytes @ 0x11
  1236   000012                     	ds	1
  1237   000013                     i2___flmul@bexp:
  1238                           	callstack 0
  1239                           
  1240                           ; 1 bytes @ 0x12
  1241   000013                     	ds	1
  1242   000014                     i2___flmul@prod:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x13
  1246   000014                     	ds	4
  1247   000018                     i2___flmul@temp:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x17
  1251   000018                     	ds	2
  1252   00001A                     ?i2___fltol:
  1253                           	callstack 0
  1254   00001A                     i2___fltol@f1:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x19
  1258   00001A                     	ds	4
  1259   00001E                     ??i2___fltol:
  1260                           
  1261                           ; 1 bytes @ 0x1D
  1262   00001E                     	ds	4
  1263   000022                     i2___fltol@sign1:
  1264                           	callstack 0
  1265                           
  1266                           ; 1 bytes @ 0x21
  1267   000022                     	ds	1
  1268   000023                     i2___fltol@exp1:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x22
  1272   000023                     	ds	1
  1273   000024                     ??_ISR:
  1274   000024                     
  1275                           ; 1 bytes @ 0x23
  1276   000024                     	ds	8
  1277                           
  1278 ;;
  1279 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1280 ;;
  1281 ;; *************** function _main *****************
  1282 ;; Defined at:
  1283 ;;		line 296 in file "main.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1297 ;;      Params:         0       0       0       0
  1298 ;;      Locals:         0       2       0       0
  1299 ;;      Temps:          0       2       0       0
  1300 ;;      Totals:         0       4       0       0
  1301 ;;Total ram usage:        4 bytes
  1302 ;; Hardware stack levels required when called: 11
  1303 ;; This function calls:
  1304 ;;		_EEPROMRead
  1305 ;;		_EEPROMWrite
  1306 ;;		_EUSART_TransmitString
  1307 ;;		___flmul
  1308 ;;		___xxtofl
  1309 ;;		_adcSampling
  1310 ;;		_getHighByte
  1311 ;;		_getLowByte
  1312 ;;		_setButtonInterrupt
  1313 ;;		_setDisplayDigits
  1314 ;;		_setupADC
  1315 ;;		_setupEUSART
  1316 ;;		_setupI2C
  1317 ;;		_setupTimer1
  1318 ;;		_show7Segment
  1319 ;;		_sprintf
  1320 ;; This function is called by:
  1321 ;;		Startup code after reset
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text0
  1326   001A1A                     __ptext0:
  1327                           	callstack 0
  1328   001A1A                     _main:
  1329                           	callstack 20
  1330   001A1A                     
  1331                           ;main.c: 299:     OSCCONbits.SCS0 = 1;
  1332   001A1A  80D3               	bsf	211,0,c	;volatile
  1333                           
  1334                           ;main.c: 300:     OSCCONbits.SCS1 = 1;
  1335   001A1C  82D3               	bsf	211,1,c	;volatile
  1336                           
  1337                           ;main.c: 302:     OSCCONbits.OSTS = 0;
  1338   001A1E  96D3               	bcf	211,3,c	;volatile
  1339                           
  1340                           ;main.c: 305:     OSCCONbits.IRCF0 = 0;
  1341   001A20  98D3               	bcf	211,4,c	;volatile
  1342                           
  1343                           ;main.c: 306:     OSCCONbits.IRCF1 = 0;
  1344   001A22  9AD3               	bcf	211,5,c	;volatile
  1345                           
  1346                           ;main.c: 307:     OSCCONbits.IRCF2 = 1;
  1347   001A24  8CD3               	bsf	211,6,c	;volatile
  1348   001A26                     
  1349                           ;main.c: 309:     _delay((unsigned long)((500)*(2000000/4000.0)));
  1350   001A26  0E02               	movlw	2
  1351   001A28  0100               	movlb	0	; () banked
  1352   001A2A  6FE1               	movwf	(??_main+1)& (0+255),b
  1353   001A2C  0E45               	movlw	69
  1354   001A2E  6FE0               	movwf	??_main& (0+255),b
  1355   001A30  0EA9               	movlw	169
  1356   001A32                     u7847:
  1357   001A32  2EE8               	decfsz	wreg,f,c
  1358   001A34  D7FE               	bra	u7847
  1359   001A36  2FE0               	decfsz	??_main& (0+255),f,b
  1360   001A38  D7FC               	bra	u7847
  1361   001A3A  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1362   001A3C  D7FA               	bra	u7847
  1363   001A3E  D000               	nop2	
  1364   001A40                     
  1365                           ;main.c: 312:     ANSEL = 0b00001000;
  1366   001A40  0E08               	movlw	8
  1367   001A42  6E7E               	movwf	126,c	;volatile
  1368   001A44                     
  1369                           ;main.c: 313:     TRISA = 0b00010000;
  1370   001A44  0E10               	movlw	16
  1371   001A46  6E92               	movwf	146,c	;volatile
  1372   001A48                     
  1373                           ;main.c: 315:     TRISCbits.RC0 = 0;
  1374   001A48  9094               	bcf	148,0,c	;volatile
  1375   001A4A                     
  1376                           ;main.c: 316:     ANSELbits.ANS4 = 0;
  1377   001A4A  987E               	bcf	126,4,c	;volatile
  1378   001A4C                     
  1379                           ;main.c: 318:     setupADC();
  1380   001A4C  EC3C  F01F         	call	_setupADC	;wreg free
  1381   001A50                     
  1382                           ;main.c: 320:     _delay((unsigned long)((100)*(2000000/4000000.0)));
  1383   001A50  0E10               	movlw	16
  1384   001A52                     u7857:
  1385   001A52  2EE8               	decfsz	wreg,f,c
  1386   001A54  D7FE               	bra	u7857
  1387   001A56  D000               	nop2	
  1388                           
  1389                           ;main.c: 323:     setupTimer1();
  1390   001A58  ECEB  F01E         	call	_setupTimer1	;wreg free
  1391                           
  1392                           ;main.c: 325:     setupI2C();
  1393   001A5C  EC0F  F01F         	call	_setupI2C	;wreg free
  1394   001A60                     
  1395                           ;main.c: 329:     TRISCbits.TRISC5 = 0;
  1396   001A60  9A94               	bcf	148,5,c	;volatile
  1397   001A62                     
  1398                           ;main.c: 330:     TRISCbits.TRISC4 = 0;
  1399   001A62  9894               	bcf	148,4,c	;volatile
  1400   001A64                     
  1401                           ;main.c: 331:     TRISCbits.TRISC3 = 0;
  1402   001A64  9694               	bcf	148,3,c	;volatile
  1403   001A66                     
  1404                           ;main.c: 332:     TRISCbits.TRISC6 = 0;
  1405   001A66  9C94               	bcf	148,6,c	;volatile
  1406   001A68                     
  1407                           ;main.c: 333:     TRISCbits.TRISC7 = 0;
  1408   001A68  9E94               	bcf	148,7,c	;volatile
  1409   001A6A                     
  1410                           ;main.c: 335:     LATCbits.LATC5 = 0;
  1411   001A6A  9A8B               	bcf	139,5,c	;volatile
  1412   001A6C                     
  1413                           ;main.c: 336:     LATCbits.LATC4 = 0;
  1414   001A6C  988B               	bcf	139,4,c	;volatile
  1415   001A6E                     
  1416                           ;main.c: 337:     LATCbits.LATC3 = 0;
  1417   001A6E  968B               	bcf	139,3,c	;volatile
  1418   001A70                     
  1419                           ;main.c: 338:     LATCbits.LATC6 = 0;
  1420   001A70  9C8B               	bcf	139,6,c	;volatile
  1421   001A72                     
  1422                           ;main.c: 339:     LATCbits.LATC7 = 0;
  1423   001A72  9E8B               	bcf	139,7,c	;volatile
  1424   001A74                     
  1425                           ;main.c: 342:     TRISCbits.RC1 = 1;
  1426   001A74  8294               	bsf	148,1,c	;volatile
  1427   001A76                     
  1428                           ;main.c: 343:     TRISCbits.RC2 = 1;
  1429   001A76  8494               	bsf	148,2,c	;volatile
  1430   001A78                     
  1431                           ;main.c: 344:     setButtonInterrupt();
  1432   001A78  EC18  F01F         	call	_setButtonInterrupt	;wreg free
  1433   001A7C                     
  1434                           ;main.c: 347:     setupEUSART();
  1435   001A7C  ECDB  F01E         	call	_setupEUSART	;wreg free
  1436   001A80                     
  1437                           ;main.c: 349:     INTCONbits.PEIE = 1;
  1438   001A80  8CF2               	bsf	242,6,c	;volatile
  1439   001A82                     
  1440                           ;main.c: 350:     INTCONbits.GIE = 1;
  1441   001A82  8EF2               	bsf	242,7,c	;volatile
  1442   001A84                     
  1443                           ;main.c: 352:     adcSampling();
  1444   001A84  ECA2  F01E         	call	_adcSampling	;wreg free
  1445   001A88                     l6393:
  1446                           
  1447                           ;main.c: 356:         if( sampling == 1 && fsm_state == 1 ){
  1448   001A88  0100               	movlb	0	; () banked
  1449   001A8A  05FE               	decf	_sampling& (0+255),w,b
  1450   001A8C  A4D8               	btfss	status,2,c
  1451   001A8E  EF4B  F00D         	goto	u7731
  1452   001A92  EF4D  F00D         	goto	u7730
  1453   001A96                     u7731:
  1454   001A96  EFD0  F00D         	goto	l6431
  1455   001A9A                     u7730:
  1456   001A9A                     
  1457                           ; BSR set to: 0
  1458   001A9A  05F9               	decf	_fsm_state& (0+255),w,b
  1459   001A9C  A4D8               	btfss	status,2,c
  1460   001A9E  EF53  F00D         	goto	u7741
  1461   001AA2  EF55  F00D         	goto	u7740
  1462   001AA6                     u7741:
  1463   001AA6  EFD0  F00D         	goto	l6431
  1464   001AAA                     u7740:
  1465   001AAA                     
  1466                           ; BSR set to: 0
  1467                           ;main.c: 358:             LATAbits.LA5 = 1;
  1468   001AAA  8A89               	bsf	137,5,c	;volatile
  1469   001AAC                     
  1470                           ; BSR set to: 0
  1471                           ;main.c: 360:             adc_voltage = adc_step_size * adcResult;
  1472   001AAC  C0F6  F060         	movff	_adcResult,___xxtofl@val
  1473   001AB0  C0F7  F061         	movff	_adcResult+1,___xxtofl@val+1
  1474   001AB4  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1475   001AB6  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1476   001AB8  0E00               	movlw	0
  1477   001ABA  EC29  F015         	call	___xxtofl
  1478   001ABE  C060  F06E         	movff	?___xxtofl,___flmul@b
  1479   001AC2  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1480   001AC6  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1481   001ACA  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1482   001ACE  0E0A               	movlw	10
  1483   001AD0  0100               	movlb	0	; () banked
  1484   001AD2  6F72               	movwf	___flmul@a& (0+255),b
  1485   001AD4  0E28               	movlw	40
  1486   001AD6  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1487   001AD8  0EA0               	movlw	160
  1488   001ADA  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1489   001ADC  0E3B               	movlw	59
  1490   001ADE  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1491   001AE0  ECE6  F008         	call	___flmul	;wreg free
  1492   001AE4  C06E  F0E8         	movff	?___flmul,_adc_voltage
  1493   001AE8  C06F  F0E9         	movff	?___flmul+1,_adc_voltage+1
  1494   001AEC  C070  F0EA         	movff	?___flmul+2,_adc_voltage+2
  1495   001AF0  C071  F0EB         	movff	?___flmul+3,_adc_voltage+3
  1496   001AF4                     
  1497                           ;main.c: 373:             address_index++;
  1498   001AF4  0100               	movlb	0	; () banked
  1499   001AF6  4BF2               	infsnz	_address_index& (0+255),f,b
  1500   001AF8  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1501   001AFA                     
  1502                           ; BSR set to: 0
  1503                           ;main.c: 374:             EEPROMWrite(address_index, getLowByte(tmp_index) );
  1504   001AFA  C0F0  F060         	movff	_tmp_index,getLowByte@number
  1505   001AFE  C0F1  F061         	movff	_tmp_index+1,getLowByte@number+1
  1506   001B02  EC42  F01F         	call	_getLowByte	;wreg free
  1507   001B06  0100               	movlb	0	; () banked
  1508   001B08  6FE2               	movwf	_main$2068& (0+255),b
  1509   001B0A                     
  1510                           ; BSR set to: 0
  1511                           ;main.c: 374:             EEPROMWrite(address_index, getLowByte(tmp_index) );
  1512   001B0A  C0F2  F062         	movff	_address_index,EEPROMWrite@address
  1513   001B0E  C0F3  F063         	movff	_address_index+1,EEPROMWrite@address+1
  1514   001B12  C0E2  F064         	movff	_main$2068,EEPROMWrite@data
  1515   001B16  EC6B  F01D         	call	_EEPROMWrite	;wreg free
  1516   001B1A                     
  1517                           ;main.c: 375:             address_index++;
  1518   001B1A  0100               	movlb	0	; () banked
  1519   001B1C  4BF2               	infsnz	_address_index& (0+255),f,b
  1520   001B1E  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1521   001B20                     
  1522                           ; BSR set to: 0
  1523                           ;main.c: 376:             EEPROMWrite(address_index, getHighByte( tmp_index) );
  1524   001B20  C0F0  F060         	movff	_tmp_index,getHighByte@number
  1525   001B24  C0F1  F061         	movff	_tmp_index+1,getHighByte@number+1
  1526   001B28  EC45  F01F         	call	_getHighByte	;wreg free
  1527   001B2C  0100               	movlb	0	; () banked
  1528   001B2E  6FE3               	movwf	_main$2069& (0+255),b
  1529   001B30                     
  1530                           ; BSR set to: 0
  1531                           ;main.c: 376:             EEPROMWrite(address_index, getHighByte( tmp_index) );
  1532   001B30  C0F2  F062         	movff	_address_index,EEPROMWrite@address
  1533   001B34  C0F3  F063         	movff	_address_index+1,EEPROMWrite@address+1
  1534   001B38  C0E3  F064         	movff	_main$2069,EEPROMWrite@data
  1535   001B3C  EC6B  F01D         	call	_EEPROMWrite	;wreg free
  1536   001B40                     
  1537                           ;main.c: 377:             address_index++;
  1538   001B40  0100               	movlb	0	; () banked
  1539   001B42  4BF2               	infsnz	_address_index& (0+255),f,b
  1540   001B44  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1541   001B46                     
  1542                           ; BSR set to: 0
  1543                           ;main.c: 378:             EEPROMWrite(address_index, 254 );
  1544   001B46  C0F2  F062         	movff	_address_index,EEPROMWrite@address
  1545   001B4A  C0F3  F063         	movff	_address_index+1,EEPROMWrite@address+1
  1546   001B4E  0EFE               	movlw	254
  1547   001B50  6F64               	movwf	EEPROMWrite@data& (0+255),b
  1548   001B52  EC6B  F01D         	call	_EEPROMWrite	;wreg free
  1549   001B56                     
  1550                           ;main.c: 380:             tmp_index++;
  1551   001B56  0100               	movlb	0	; () banked
  1552   001B58  4BF0               	infsnz	_tmp_index& (0+255),f,b
  1553   001B5A  2BF1               	incf	(_tmp_index+1)& (0+255),f,b
  1554   001B5C                     
  1555                           ; BSR set to: 0
  1556                           ;main.c: 382:             if( address_index >= 7900 ){
  1557   001B5C  0EDC               	movlw	220
  1558   001B5E  5DF2               	subwf	_address_index& (0+255),w,b
  1559   001B60  0E1E               	movlw	30
  1560   001B62  59F3               	subwfb	(_address_index+1)& (0+255),w,b
  1561   001B64  A0D8               	btfss	status,0,c
  1562   001B66  EFB7  F00D         	goto	u7751
  1563   001B6A  EFB9  F00D         	goto	u7750
  1564   001B6E                     u7751:
  1565   001B6E  EFBE  F00D         	goto	l6425
  1566   001B72                     u7750:
  1567   001B72                     
  1568                           ; BSR set to: 0
  1569                           ;main.c: 387:                 fsm_state = 0;
  1570   001B72  6BF9               	clrf	_fsm_state& (0+255),b
  1571   001B74                     
  1572                           ; BSR set to: 0
  1573                           ;main.c: 388:                 address_index = 0;
  1574   001B74  0E00               	movlw	0
  1575   001B76  6FF3               	movwf	(_address_index+1)& (0+255),b
  1576   001B78  0E00               	movlw	0
  1577   001B7A  6FF2               	movwf	_address_index& (0+255),b
  1578   001B7C                     l6425:
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;main.c: 391:             _delay((unsigned long)((1000)*(2000000/4000.0)));
  1582   001B7C  0E03               	movlw	3
  1583   001B7E  0100               	movlb	0	; () banked
  1584   001B80  6FE1               	movwf	(??_main+1)& (0+255),b
  1585   001B82  0E8A               	movlw	138
  1586   001B84  6FE0               	movwf	??_main& (0+255),b
  1587   001B86  0E55               	movlw	85
  1588   001B88                     u7867:
  1589   001B88  2EE8               	decfsz	wreg,f,c
  1590   001B8A  D7FE               	bra	u7867
  1591   001B8C  2FE0               	decfsz	??_main& (0+255),f,b
  1592   001B8E  D7FC               	bra	u7867
  1593   001B90  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1594   001B92  D7FA               	bra	u7867
  1595   001B94  D000               	nop2	
  1596   001B96                     
  1597                           ;main.c: 393:             sampling = 0;
  1598   001B96  0100               	movlb	0	; () banked
  1599   001B98  6BFE               	clrf	_sampling& (0+255),b
  1600   001B9A                     
  1601                           ; BSR set to: 0
  1602                           ;main.c: 394:             LATAbits.LA5 = 0;
  1603   001B9A  9A89               	bcf	137,5,c	;volatile
  1604                           
  1605                           ;main.c: 396:         }else if( sampling == 1 && fsm_state == 2 ){
  1606   001B9C  EF34  F00E         	goto	l6451
  1607   001BA0                     l6431:
  1608                           
  1609                           ; BSR set to: 0
  1610   001BA0  05FE               	decf	_sampling& (0+255),w,b
  1611   001BA2  A4D8               	btfss	status,2,c
  1612   001BA4  EFD6  F00D         	goto	u7761
  1613   001BA8  EFD8  F00D         	goto	u7760
  1614   001BAC                     u7761:
  1615   001BAC  EF34  F00E         	goto	l6451
  1616   001BB0                     u7760:
  1617   001BB0                     
  1618                           ; BSR set to: 0
  1619   001BB0  0E02               	movlw	2
  1620   001BB2  19F9               	xorwf	_fsm_state& (0+255),w,b
  1621   001BB4  A4D8               	btfss	status,2,c
  1622   001BB6  EFDF  F00D         	goto	u7771
  1623   001BBA  EFE1  F00D         	goto	u7770
  1624   001BBE                     u7771:
  1625   001BBE  EF34  F00E         	goto	l6451
  1626   001BC2                     u7770:
  1627   001BC2                     
  1628                           ; BSR set to: 0
  1629                           ;main.c: 397:             LATAbits.LA5 = 1;
  1630   001BC2  8A89               	bsf	137,5,c	;volatile
  1631   001BC4                     
  1632                           ; BSR set to: 0
  1633                           ;main.c: 398:             adc_voltage = adc_step_size * adcResult;
  1634   001BC4  C0F6  F060         	movff	_adcResult,___xxtofl@val
  1635   001BC8  C0F7  F061         	movff	_adcResult+1,___xxtofl@val+1
  1636   001BCC  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1637   001BCE  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1638   001BD0  0E00               	movlw	0
  1639   001BD2  EC29  F015         	call	___xxtofl
  1640   001BD6  C060  F06E         	movff	?___xxtofl,___flmul@b
  1641   001BDA  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1642   001BDE  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1643   001BE2  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1644   001BE6  0E0A               	movlw	10
  1645   001BE8  0100               	movlb	0	; () banked
  1646   001BEA  6F72               	movwf	___flmul@a& (0+255),b
  1647   001BEC  0E28               	movlw	40
  1648   001BEE  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1649   001BF0  0EA0               	movlw	160
  1650   001BF2  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1651   001BF4  0E3B               	movlw	59
  1652   001BF6  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1653   001BF8  ECE6  F008         	call	___flmul	;wreg free
  1654   001BFC  C06E  F0E8         	movff	?___flmul,_adc_voltage
  1655   001C00  C06F  F0E9         	movff	?___flmul+1,_adc_voltage+1
  1656   001C04  C070  F0EA         	movff	?___flmul+2,_adc_voltage+2
  1657   001C08  C071  F0EB         	movff	?___flmul+3,_adc_voltage+3
  1658   001C0C                     
  1659                           ;main.c: 402:             sprintf(uart_buffer, "%.2f", adc_voltage);
  1660   001C0C  0E44               	movlw	low _uart_buffer
  1661   001C0E  0100               	movlb	0	; () banked
  1662   001C10  6FDA               	movwf	sprintf@s& (0+255),b
  1663   001C12  0E11               	movlw	low STR_2
  1664   001C14  6FDB               	movwf	sprintf@fmt& (0+255),b
  1665   001C16  C0E8  F0DC         	movff	_adc_voltage,?_sprintf+2
  1666   001C1A  C0E9  F0DD         	movff	_adc_voltage+1,?_sprintf+3
  1667   001C1E  C0EA  F0DE         	movff	_adc_voltage+2,?_sprintf+4
  1668   001C22  C0EB  F0DF         	movff	_adc_voltage+3,?_sprintf+5
  1669   001C26  EC29  F01E         	call	_sprintf	;wreg free
  1670   001C2A                     
  1671                           ;main.c: 404:             EUSART_TransmitString(uart_buffer);
  1672   001C2A  0E44               	movlw	low _uart_buffer
  1673   001C2C  0100               	movlb	0	; () banked
  1674   001C2E  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1675   001C30  6B62               	clrf	(EUSART_TransmitString@a+1)& (0+255),b
  1676   001C32  ECF7  F01A         	call	_EUSART_TransmitString	;wreg free
  1677   001C36                     
  1678                           ;main.c: 405:             EUSART_TransmitString("\r\n");
  1679   001C36  0E0E               	movlw	low (STR_5+4)
  1680   001C38  0100               	movlb	0	; () banked
  1681   001C3A  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1682   001C3C  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1683   001C3E  A4D8               	btfss	status,2,c
  1684   001C40  0E03               	movlw	high __smallconst
  1685   001C42  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1686   001C44  ECF7  F01A         	call	_EUSART_TransmitString	;wreg free
  1687   001C48                     
  1688                           ;main.c: 407:             _delay((unsigned long)((1000)*(2000000/4000.0)));
  1689   001C48  0E03               	movlw	3
  1690   001C4A  0100               	movlb	0	; () banked
  1691   001C4C  6FE1               	movwf	(??_main+1)& (0+255),b
  1692   001C4E  0E8A               	movlw	138
  1693   001C50  6FE0               	movwf	??_main& (0+255),b
  1694   001C52  0E55               	movlw	85
  1695   001C54                     u7877:
  1696   001C54  2EE8               	decfsz	wreg,f,c
  1697   001C56  D7FE               	bra	u7877
  1698   001C58  2FE0               	decfsz	??_main& (0+255),f,b
  1699   001C5A  D7FC               	bra	u7877
  1700   001C5C  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1701   001C5E  D7FA               	bra	u7877
  1702   001C60  D000               	nop2	
  1703   001C62                     
  1704                           ;main.c: 409:             sampling = 0;
  1705   001C62  0100               	movlb	0	; () banked
  1706   001C64  6BFE               	clrf	_sampling& (0+255),b
  1707   001C66                     
  1708                           ; BSR set to: 0
  1709                           ;main.c: 410:             LATAbits.LA5 = 0;
  1710   001C66  9A89               	bcf	137,5,c	;volatile
  1711   001C68                     l6451:
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;main.c: 414:         if( fsm_state == 3 ){
  1715   001C68  0E03               	movlw	3
  1716   001C6A  19F9               	xorwf	_fsm_state& (0+255),w,b
  1717   001C6C  A4D8               	btfss	status,2,c
  1718   001C6E  EF3B  F00E         	goto	u7781
  1719   001C72  EF3D  F00E         	goto	u7780
  1720   001C76                     u7781:
  1721   001C76  EFE5  F00E         	goto	l6491
  1722   001C7A                     u7780:
  1723   001C7A                     
  1724                           ; BSR set to: 0
  1725                           ;main.c: 416:             LATAbits.LA5 = 1;
  1726   001C7A  8A89               	bsf	137,5,c	;volatile
  1727   001C7C                     
  1728                           ; BSR set to: 0
  1729                           ;main.c: 418:             if( address_index == 0){
  1730   001C7C  51F2               	movf	_address_index& (0+255),w,b
  1731   001C7E  11F3               	iorwf	(_address_index+1)& (0+255),w,b
  1732   001C80  A4D8               	btfss	status,2,c
  1733   001C82  EF45  F00E         	goto	u7791
  1734   001C86  EF47  F00E         	goto	u7790
  1735   001C8A                     u7791:
  1736   001C8A  EF54  F00E         	goto	l6461
  1737   001C8E                     u7790:
  1738   001C8E                     
  1739                           ; BSR set to: 0
  1740                           ;main.c: 419:                 EUSART_TransmitString("START \r\n");
  1741   001C8E  0E01               	movlw	low STR_1
  1742   001C90  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1743   001C92  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1744   001C94  A4D8               	btfss	status,2,c
  1745   001C96  0E03               	movlw	high __smallconst
  1746   001C98  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1747   001C9A  ECF7  F01A         	call	_EUSART_TransmitString	;wreg free
  1748   001C9E                     
  1749                           ;main.c: 420:                 address_index++;
  1750   001C9E  0100               	movlb	0	; () banked
  1751   001CA0  4BF2               	infsnz	_address_index& (0+255),f,b
  1752   001CA2  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1753                           
  1754                           ;main.c: 422:             }else if(address_index >= 7900 ){
  1755   001CA4  EFEE  F00E         	goto	l6495
  1756   001CA8                     l6461:
  1757                           
  1758                           ; BSR set to: 0
  1759   001CA8  0EDC               	movlw	220
  1760   001CAA  5DF2               	subwf	_address_index& (0+255),w,b
  1761   001CAC  0E1E               	movlw	30
  1762   001CAE  59F3               	subwfb	(_address_index+1)& (0+255),w,b
  1763   001CB0  A0D8               	btfss	status,0,c
  1764   001CB2  EF5D  F00E         	goto	u7801
  1765   001CB6  EF5F  F00E         	goto	u7800
  1766   001CBA                     u7801:
  1767   001CBA  EF6E  F00E         	goto	l6467
  1768   001CBE                     u7800:
  1769   001CBE                     
  1770                           ; BSR set to: 0
  1771                           ;main.c: 423:                 EUSART_TransmitString("END \r\n");
  1772   001CBE  0E0A               	movlw	low STR_5
  1773   001CC0  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1774   001CC2  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1775   001CC4  A4D8               	btfss	status,2,c
  1776   001CC6  0E03               	movlw	high __smallconst
  1777   001CC8  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1778   001CCA  ECF7  F01A         	call	_EUSART_TransmitString	;wreg free
  1779   001CCE                     
  1780                           ;main.c: 424:                 address_index = 0;
  1781   001CCE  0E00               	movlw	0
  1782   001CD0  0100               	movlb	0	; () banked
  1783   001CD2  6FF3               	movwf	(_address_index+1)& (0+255),b
  1784   001CD4  0E00               	movlw	0
  1785   001CD6  6FF2               	movwf	_address_index& (0+255),b
  1786                           
  1787                           ;main.c: 426:             }else {
  1788   001CD8  EFEE  F00E         	goto	l6495
  1789   001CDC                     l6467:
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;main.c: 427:                 eeprom_data_lsb = EEPROMRead(address_index);
  1793   001CDC  C0F2  F062         	movff	_address_index,EEPROMRead@address
  1794   001CE0  C0F3  F063         	movff	_address_index+1,EEPROMRead@address+1
  1795   001CE4  EC94  F01D         	call	_EEPROMRead	;wreg free
  1796   001CE8  0100               	movlb	0	; () banked
  1797   001CEA  6FFD               	movwf	_eeprom_data_lsb& (0+255),b
  1798   001CEC                     
  1799                           ; BSR set to: 0
  1800                           ;main.c: 428:                 address_index++;
  1801   001CEC  4BF2               	infsnz	_address_index& (0+255),f,b
  1802   001CEE  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1803   001CF0                     
  1804                           ; BSR set to: 0
  1805                           ;main.c: 429:                 eeprom_data_msb = EEPROMRead(address_index);
  1806   001CF0  C0F2  F062         	movff	_address_index,EEPROMRead@address
  1807   001CF4  C0F3  F063         	movff	_address_index+1,EEPROMRead@address+1
  1808   001CF8  EC94  F01D         	call	_EEPROMRead	;wreg free
  1809   001CFC  0100               	movlb	0	; () banked
  1810   001CFE  6FFC               	movwf	_eeprom_data_msb& (0+255),b
  1811                           
  1812                           ;main.c: 430:                 address_index++;
  1813   001D00  4BF2               	infsnz	_address_index& (0+255),f,b
  1814   001D02  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1815   001D04                     
  1816                           ; BSR set to: 0
  1817                           ;main.c: 431:                 eeprom_data_ctl = EEPROMRead(address_index);
  1818   001D04  C0F2  F062         	movff	_address_index,EEPROMRead@address
  1819   001D08  C0F3  F063         	movff	_address_index+1,EEPROMRead@address+1
  1820   001D0C  EC94  F01D         	call	_EEPROMRead	;wreg free
  1821   001D10  0100               	movlb	0	; () banked
  1822   001D12  6FFB               	movwf	_eeprom_data_ctl& (0+255),b
  1823   001D14                     
  1824                           ; BSR set to: 0
  1825                           ;main.c: 432:                 address_index++;
  1826   001D14  4BF2               	infsnz	_address_index& (0+255),f,b
  1827   001D16  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1828   001D18                     
  1829                           ; BSR set to: 0
  1830                           ;main.c: 434:                 if( eeprom_data_ctl == 254 ){
  1831   001D18  0EFE               	movlw	254
  1832   001D1A  19FB               	xorwf	_eeprom_data_ctl& (0+255),w,b
  1833   001D1C  A4D8               	btfss	status,2,c
  1834   001D1E  EF93  F00E         	goto	u7811
  1835   001D22  EF95  F00E         	goto	u7810
  1836   001D26                     u7811:
  1837   001D26  EFDF  F00E         	goto	l6489
  1838   001D2A                     u7810:
  1839   001D2A                     
  1840                           ; BSR set to: 0
  1841                           ;main.c: 437:                     eeprom_data = ((uint16_t) eeprom_data_msb << 8) | eepr
      +                          om_data_lsb;
  1842   001D2A  51FC               	movf	_eeprom_data_msb& (0+255),w,b
  1843   001D2C  6FE0               	movwf	??_main& (0+255),b
  1844   001D2E  51FD               	movf	_eeprom_data_lsb& (0+255),w,b
  1845   001D30  6FF4               	movwf	_eeprom_data& (0+255),b
  1846   001D32  C0E0  F0F5         	movff	??_main,_eeprom_data+1
  1847   001D36                     
  1848                           ; BSR set to: 0
  1849                           ;main.c: 439:                     adc_voltage = adc_step_size * eeprom_data;
  1850   001D36  C0F4  F060         	movff	_eeprom_data,___xxtofl@val
  1851   001D3A  C0F5  F061         	movff	_eeprom_data+1,___xxtofl@val+1
  1852   001D3E  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1853   001D40  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1854   001D42  0E00               	movlw	0
  1855   001D44  EC29  F015         	call	___xxtofl
  1856   001D48  C060  F06E         	movff	?___xxtofl,___flmul@b
  1857   001D4C  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1858   001D50  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1859   001D54  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1860   001D58  0E0A               	movlw	10
  1861   001D5A  0100               	movlb	0	; () banked
  1862   001D5C  6F72               	movwf	___flmul@a& (0+255),b
  1863   001D5E  0E28               	movlw	40
  1864   001D60  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1865   001D62  0EA0               	movlw	160
  1866   001D64  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1867   001D66  0E3B               	movlw	59
  1868   001D68  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1869   001D6A  ECE6  F008         	call	___flmul	;wreg free
  1870   001D6E  C06E  F0E8         	movff	?___flmul,_adc_voltage
  1871   001D72  C06F  F0E9         	movff	?___flmul+1,_adc_voltage+1
  1872   001D76  C070  F0EA         	movff	?___flmul+2,_adc_voltage+2
  1873   001D7A  C071  F0EB         	movff	?___flmul+3,_adc_voltage+3
  1874   001D7E                     
  1875                           ;main.c: 442:                     sprintf(uart_buffer, "%.2f", adc_voltage);
  1876   001D7E  0E44               	movlw	low _uart_buffer
  1877   001D80  0100               	movlb	0	; () banked
  1878   001D82  6FDA               	movwf	sprintf@s& (0+255),b
  1879   001D84  0E11               	movlw	low STR_2
  1880   001D86  6FDB               	movwf	sprintf@fmt& (0+255),b
  1881   001D88  C0E8  F0DC         	movff	_adc_voltage,?_sprintf+2
  1882   001D8C  C0E9  F0DD         	movff	_adc_voltage+1,?_sprintf+3
  1883   001D90  C0EA  F0DE         	movff	_adc_voltage+2,?_sprintf+4
  1884   001D94  C0EB  F0DF         	movff	_adc_voltage+3,?_sprintf+5
  1885   001D98  EC29  F01E         	call	_sprintf	;wreg free
  1886   001D9C                     
  1887                           ;main.c: 444:                     EUSART_TransmitString(uart_buffer);
  1888   001D9C  0E44               	movlw	low _uart_buffer
  1889   001D9E  0100               	movlb	0	; () banked
  1890   001DA0  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1891   001DA2  6B62               	clrf	(EUSART_TransmitString@a+1)& (0+255),b
  1892   001DA4  ECF7  F01A         	call	_EUSART_TransmitString	;wreg free
  1893   001DA8                     
  1894                           ;main.c: 445:                     EUSART_TransmitString("\r\n");
  1895   001DA8  0E0E               	movlw	low (STR_5+4)
  1896   001DAA  0100               	movlb	0	; () banked
  1897   001DAC  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1898   001DAE  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1899   001DB0  A4D8               	btfss	status,2,c
  1900   001DB2  0E03               	movlw	high __smallconst
  1901   001DB4  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1902   001DB6  ECF7  F01A         	call	_EUSART_TransmitString	;wreg free
  1903                           
  1904                           ;main.c: 446:                 }else{
  1905   001DBA  EFEE  F00E         	goto	l6495
  1906   001DBE                     l6489:
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;main.c: 447:                     address_index = 7900;
  1910   001DBE  0E1E               	movlw	30
  1911   001DC0  6FF3               	movwf	(_address_index+1)& (0+255),b
  1912   001DC2  0EDC               	movlw	220
  1913   001DC4  6FF2               	movwf	_address_index& (0+255),b
  1914   001DC6  EFEE  F00E         	goto	l6495
  1915   001DCA                     l6491:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;main.c: 452:             if( fsm_state < 7){
  1919   001DCA  0E07               	movlw	7
  1920   001DCC  61F9               	cpfslt	_fsm_state& (0+255),b
  1921   001DCE  EFEB  F00E         	goto	u7821
  1922   001DD2  EFED  F00E         	goto	u7820
  1923   001DD6                     u7821:
  1924   001DD6  EFEE  F00E         	goto	l6495
  1925   001DDA                     u7820:
  1926   001DDA                     
  1927                           ; BSR set to: 0
  1928                           ;main.c: 453:                 LATAbits.LA5 = 0;
  1929   001DDA  9A89               	bcf	137,5,c	;volatile
  1930   001DDC                     l6495:
  1931                           
  1932                           ;main.c: 457:         if( turnOnDisplay == 1 ){
  1933   001DDC  0100               	movlb	0	; () banked
  1934   001DDE  05FA               	decf	_turnOnDisplay& (0+255),w,b
  1935   001DE0  A4D8               	btfss	status,2,c
  1936   001DE2  EFF5  F00E         	goto	u7831
  1937   001DE6  EFF7  F00E         	goto	u7830
  1938   001DEA                     u7831:
  1939   001DEA  EF0D  F00F         	goto	l221
  1940   001DEE                     u7830:
  1941   001DEE                     
  1942                           ; BSR set to: 0
  1943                           ;main.c: 459:             PORTCbits.RC0 = 0;
  1944   001DEE  9082               	bcf	130,0,c	;volatile
  1945   001DF0                     
  1946                           ; BSR set to: 0
  1947                           ;main.c: 461:             setDisplayDigits();
  1948   001DF0  ECE8  F010         	call	_setDisplayDigits	;wreg free
  1949   001DF4                     
  1950                           ;main.c: 462:             show7Segment();
  1951   001DF4  EC8B  F01C         	call	_show7Segment	;wreg free
  1952   001DF8                     
  1953                           ;main.c: 464:             _delay((unsigned long)((10000)*(2000000/4000.0)));
  1954   001DF8  0E1A               	movlw	26
  1955   001DFA  0100               	movlb	0	; () banked
  1956   001DFC  6FE1               	movwf	(??_main+1)& (0+255),b
  1957   001DFE  0E5E               	movlw	94
  1958   001E00  6FE0               	movwf	??_main& (0+255),b
  1959   001E02  0E6E               	movlw	110
  1960   001E04                     u7887:
  1961   001E04  2EE8               	decfsz	wreg,f,c
  1962   001E06  D7FE               	bra	u7887
  1963   001E08  2FE0               	decfsz	??_main& (0+255),f,b
  1964   001E0A  D7FC               	bra	u7887
  1965   001E0C  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1966   001E0E  D7FA               	bra	u7887
  1967   001E10  0000               	nop	
  1968   001E12                     
  1969                           ;main.c: 466:             turnOnDisplay = 0;
  1970   001E12  0100               	movlb	0	; () banked
  1971   001E14  6BFA               	clrf	_turnOnDisplay& (0+255),b
  1972                           
  1973                           ;main.c: 468:         }else{
  1974   001E16  EF44  F00D         	goto	l6393
  1975   001E1A                     l221:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;main.c: 470:             PORTCbits.RC0 = 1;
  1979   001E1A  8082               	bsf	130,0,c	;volatile
  1980   001E1C                     
  1981                           ; BSR set to: 0
  1982                           ;main.c: 472:              _delay((unsigned long)((1000)*(2000000/4000.0)));
  1983   001E1C  0E03               	movlw	3
  1984   001E1E  0100               	movlb	0	; () banked
  1985   001E20  6FE1               	movwf	(??_main+1)& (0+255),b
  1986   001E22  0E8A               	movlw	138
  1987   001E24  6FE0               	movwf	??_main& (0+255),b
  1988   001E26  0E55               	movlw	85
  1989   001E28                     u7897:
  1990   001E28  2EE8               	decfsz	wreg,f,c
  1991   001E2A  D7FE               	bra	u7897
  1992   001E2C  2FE0               	decfsz	??_main& (0+255),f,b
  1993   001E2E  D7FC               	bra	u7897
  1994   001E30  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1995   001E32  D7FA               	bra	u7897
  1996   001E34  D000               	nop2	
  1997   001E36  EF44  F00D         	goto	l6393
  1998   001E3A  EF33  F001         	goto	start
  1999   001E3E                     __end_of_main:
  2000                           	callstack 0
  2001                           
  2002 ;; *************** function _sprintf *****************
  2003 ;; Defined at:
  2004 ;;		line 9 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_sprintf.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  s               1  122[BANK0 ] PTR unsigned char 
  2007 ;;		 -> uart_buffer(10), 
  2008 ;;  fmt             1  123[BANK0 ] PTR const unsigned char 
  2009 ;;		 -> STR_6(5), STR_2(5), 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  f              11    1[BANK1 ] struct _IO_FILE
  2012 ;;  ret             2    0        int 
  2013 ;;  ap              1    0[BANK1 ] PTR void [1]
  2014 ;;		 -> ?_sprintf(2), 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  2  122[BANK0 ] int 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2024 ;;      Params:         0       6       0       0
  2025 ;;      Locals:         0       0      12       0
  2026 ;;      Temps:          0       0       0       0
  2027 ;;      Totals:         0       6      12       0
  2028 ;;Total ram usage:       18 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 10
  2031 ;; This function calls:
  2032 ;;		_vfprintf
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text1
  2039   003C52                     __ptext1:
  2040                           	callstack 0
  2041   003C52                     _sprintf:
  2042                           	callstack 20
  2043   003C52  0EDC               	movlw	low (?_sprintf+2)
  2044   003C54  0101               	movlb	1	; () banked
  2045   003C56  6F50               	movwf	sprintf@ap& (0+255),b
  2046   003C58  C0DA  F151         	movff	sprintf@s,sprintf@f
  2047   003C5C                     
  2048                           ; BSR set to: 1
  2049   003C5C  0E00               	movlw	0
  2050   003C5E  6F54               	movwf	(sprintf@f+3)& (0+255),b
  2051   003C60  0E00               	movlw	0
  2052   003C62  6F53               	movwf	(sprintf@f+2)& (0+255),b
  2053   003C64                     
  2054                           ; BSR set to: 1
  2055   003C64  0E00               	movlw	0
  2056   003C66  6F5B               	movwf	(sprintf@f+10)& (0+255),b
  2057   003C68  0E00               	movlw	0
  2058   003C6A  6F5A               	movwf	(sprintf@f+9)& (0+255),b
  2059   003C6C                     
  2060                           ; BSR set to: 1
  2061   003C6C  0E51               	movlw	low sprintf@f
  2062   003C6E  0100               	movlb	0	; () banked
  2063   003C70  6FD4               	movwf	vfprintf@fp& (0+255),b
  2064   003C72  0E01               	movlw	high sprintf@f
  2065   003C74  6FD5               	movwf	(vfprintf@fp+1)& (0+255),b
  2066   003C76  C0DB  F0D6         	movff	sprintf@fmt,vfprintf@fmt
  2067   003C7A  0E50               	movlw	low sprintf@ap
  2068   003C7C  6FD7               	movwf	vfprintf@ap& (0+255),b
  2069   003C7E  0E01               	movlw	high sprintf@ap
  2070   003C80  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  2071   003C82  ECBC  F01D         	call	_vfprintf	;wreg free
  2072   003C86  0100               	movlb	0	; () banked
  2073   003C88  51DA               	movf	sprintf@s& (0+255),w,b
  2074   003C8A  0101               	movlb	1	; () banked
  2075   003C8C  2553               	addwf	(sprintf@f+2)& (0+255),w,b
  2076   003C8E  6ED9               	movwf	fsr2l,c
  2077   003C90  6ADA               	clrf	fsr2h,c
  2078   003C92  6ADF               	clrf	indf2,c
  2079   003C94                     
  2080                           ; BSR set to: 1
  2081   003C94  0012               	return		;funcret
  2082   003C96                     __end_of_sprintf:
  2083                           	callstack 0
  2084                           
  2085 ;; *************** function _vfprintf *****************
  2086 ;; Defined at:
  2087 ;;		line 1817 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  fp              2  116[BANK0 ] PTR struct _IO_FILE
  2090 ;;		 -> sprintf@f(11), 
  2091 ;;  fmt             1  118[BANK0 ] PTR const unsigned char 
  2092 ;;		 -> STR_6(5), STR_2(5), 
  2093 ;;  ap              2  119[BANK0 ] PTR PTR void 
  2094 ;;		 -> sprintf@ap(1), 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  cfmt            1  121[BANK0 ] PTR unsigned char 
  2097 ;;		 -> STR_6(5), STR_2(5), 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  2  116[BANK0 ] int 
  2100 ;; Registers used:
  2101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2107 ;;      Params:         0       5       0       0
  2108 ;;      Locals:         0       1       0       0
  2109 ;;      Temps:          0       0       0       0
  2110 ;;      Totals:         0       6       0       0
  2111 ;;Total ram usage:        6 bytes
  2112 ;; Hardware stack levels used: 1
  2113 ;; Hardware stack levels required when called: 9
  2114 ;; This function calls:
  2115 ;;		_vfpfcnvrt
  2116 ;; This function is called by:
  2117 ;;		_sprintf
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text2
  2122   003B78                     __ptext2:
  2123                           	callstack 0
  2124   003B78                     _vfprintf:
  2125                           	callstack 20
  2126   003B78                     
  2127                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
  2128   003B78  C0D6  F0D9         	movff	vfprintf@fmt,vfprintf@cfmt
  2129                           
  2130                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  2131   003B7C  EFCD  F01D         	goto	l6117
  2132   003B80                     l6115:
  2133                           
  2134                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt,
      +                           ap);
  2135   003B80  C0D4  F0C8         	movff	vfprintf@fp,vfpfcnvrt@fp
  2136   003B84  C0D5  F0C9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2137   003B88  0ED9               	movlw	low vfprintf@cfmt
  2138   003B8A  0100               	movlb	0	; () banked
  2139   003B8C  6FCA               	movwf	vfpfcnvrt@fmt& (0+255),b
  2140   003B8E  C0D7  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  2141   003B92  C0D8  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2142   003B96  EC38  F014         	call	_vfpfcnvrt	;wreg free
  2143   003B9A                     l6117:
  2144                           
  2145                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  2146   003B9A  C0D9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2147   003B9E                     	if	1	;There is more than 1 active tblptr byte
  2148   003B9E  0E03               	movlw	high __smallconst
  2149   003BA0  6EF7               	movwf	tblptrh,c
  2150   003BA2                     	endif
  2151   003BA2                     	if	0	;tblptru may be non-zero
  2152   003BA2                     	endif
  2153   003BA2                     	if	0	;tblptru may be non-zero
  2154   003BA2                     	endif
  2155   003BA2  0008               	tblrd		*
  2156   003BA4  50F5               	movf	tablat,w,c
  2157   003BA6  0900               	iorlw	0
  2158   003BA8  A4D8               	btfss	status,2,c
  2159   003BAA  EFD9  F01D         	goto	u7471
  2160   003BAE  EFDB  F01D         	goto	u7470
  2161   003BB2                     u7471:
  2162   003BB2  EFC0  F01D         	goto	l6115
  2163   003BB6                     u7470:
  2164   003BB6                     
  2165                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  2166   003BB6  0E00               	movlw	0
  2167   003BB8  0100               	movlb	0	; () banked
  2168   003BBA  6FD5               	movwf	(?_vfprintf+1)& (0+255),b
  2169   003BBC  0E00               	movlw	0
  2170   003BBE  6FD4               	movwf	?_vfprintf& (0+255),b
  2171   003BC0                     
  2172                           ; BSR set to: 0
  2173   003BC0  0012               	return		;funcret
  2174   003BC2                     __end_of_vfprintf:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _vfpfcnvrt *****************
  2178 ;; Defined at:
  2179 ;;		line 1177 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  fp              2  104[BANK0 ] PTR struct _IO_FILE
  2182 ;;		 -> sprintf@f(11), 
  2183 ;;  fmt             1  106[BANK0 ] PTR PTR unsigned char 
  2184 ;;		 -> vfprintf@cfmt(1), 
  2185 ;;  ap              2  107[BANK0 ] PTR PTR void 
  2186 ;;		 -> sprintf@ap(1), 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  convarg         4  110[BANK0 ] struct .
  2189 ;;  cp              1  115[BANK0 ] PTR unsigned char 
  2190 ;;		 -> STR_6(5), STR_2(5), 
  2191 ;;  c               1  114[BANK0 ] unsigned char 
  2192 ;;  done            1    0        _Bool 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2202 ;;      Params:         0       5       0       0
  2203 ;;      Locals:         0       6       0       0
  2204 ;;      Temps:          0       1       0       0
  2205 ;;      Totals:         0      12       0       0
  2206 ;;Total ram usage:       12 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; Hardware stack levels required when called: 8
  2209 ;; This function calls:
  2210 ;;		_efgtoa
  2211 ;;		_fputc
  2212 ;;		_read_prec_or_width
  2213 ;; This function is called by:
  2214 ;;		_vfprintf
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text3
  2219   002870                     __ptext3:
  2220                           	callstack 0
  2221   002870                     _vfpfcnvrt:
  2222                           	callstack 20
  2223   002870                     
  2224                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v2.50/pic/sources/c99/common/doprnt.c: 1188:  } convarg;;/opt/microchip/xc8/v2.50/pi
      +                          c/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2225   002870  0100               	movlb	0	; () banked
  2226   002872  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2227   002874  6ED9               	movwf	fsr2l,c
  2228   002876  6ADA               	clrf	fsr2h,c
  2229   002878  CFDF FFF6          	movff	indf2,tblptrl
  2230   00287C                     	if	1	;There is more than 1 active tblptr byte
  2231   00287C  0E03               	movlw	high __smallconst
  2232   00287E  6EF7               	movwf	tblptrh,c
  2233   002880                     	endif
  2234   002880                     	if	0	;tblptru may be non-zero
  2235   002880                     	endif
  2236   002880                     	if	0	;tblptru may be non-zero
  2237   002880                     	endif
  2238   002880  0008               	tblrd		*
  2239   002882  50F5               	movf	tablat,w,c
  2240   002884  0A25               	xorlw	37
  2241   002886  A4D8               	btfss	status,2,c
  2242   002888  EF48  F014         	goto	u7251
  2243   00288C  EF4A  F014         	goto	u7250
  2244   002890                     u7251:
  2245   002890  EF15  F015         	goto	l5981
  2246   002894                     u7250:
  2247   002894                     
  2248                           ; BSR set to: 0
  2249                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
  2250   002894  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2251   002896  6ED9               	movwf	fsr2l,c
  2252   002898  6ADA               	clrf	fsr2h,c
  2253   00289A  2ADF               	incf	indf2,f,c
  2254   00289C                     
  2255                           ; BSR set to: 0
  2256                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
  2257   00289C  0E00               	movlw	0
  2258   00289E  6FED               	movwf	(_width+1)& (0+255),b
  2259   0028A0  0E00               	movlw	0
  2260   0028A2  6FEC               	movwf	_width& (0+255),b
  2261   0028A4  C0EC  F0F8         	movff	_width,_flags
  2262   0028A8                     
  2263                           ; BSR set to: 0
  2264                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
  2265   0028A8  69EE               	setf	_prec& (0+255),b
  2266   0028AA  69EF               	setf	(_prec+1)& (0+255),b
  2267   0028AC                     
  2268                           ; BSR set to: 0
  2269                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1265:         if ((*fmt)[0] =
      +                          = '.') {
  2270   0028AC  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2271   0028AE  6ED9               	movwf	fsr2l,c
  2272   0028B0  6ADA               	clrf	fsr2h,c
  2273   0028B2  CFDF FFF6          	movff	indf2,tblptrl
  2274   0028B6                     	if	1	;There is more than 1 active tblptr byte
  2275   0028B6  0E03               	movlw	high __smallconst
  2276   0028B8  6EF7               	movwf	tblptrh,c
  2277   0028BA                     	endif
  2278   0028BA                     	if	0	;tblptru may be non-zero
  2279   0028BA                     	endif
  2280   0028BA                     	if	0	;tblptru may be non-zero
  2281   0028BA                     	endif
  2282   0028BA  0008               	tblrd		*
  2283   0028BC  50F5               	movf	tablat,w,c
  2284   0028BE  0A2E               	xorlw	46
  2285   0028C0  A4D8               	btfss	status,2,c
  2286   0028C2  EF65  F014         	goto	u7261
  2287   0028C6  EF67  F014         	goto	u7260
  2288   0028CA                     u7261:
  2289   0028CA  EF77  F014         	goto	l5945
  2290   0028CE                     u7260:
  2291   0028CE                     
  2292                           ; BSR set to: 0
  2293                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1266:             ++*fmt;
  2294   0028CE  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2295   0028D0  6ED9               	movwf	fsr2l,c
  2296   0028D2  6ADA               	clrf	fsr2h,c
  2297   0028D4  2ADF               	incf	indf2,f,c
  2298   0028D6                     
  2299                           ; BSR set to: 0
  2300                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1267:    prec = read_prec_or_
      +                          width(fmt, ap);
  2301   0028D6  C0CA  F060         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2302   0028DA  C0CB  F061         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2303   0028DE  C0CC  F062         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  2304   0028E2  ECA3  F01A         	call	_read_prec_or_width	;wreg free
  2305   0028E6  C060  F0EE         	movff	?_read_prec_or_width,_prec
  2306   0028EA  C061  F0EF         	movff	?_read_prec_or_width+1,_prec+1
  2307   0028EE                     l5945:
  2308                           
  2309                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1689:   cp = *fmt;
  2310   0028EE  0100               	movlb	0	; () banked
  2311   0028F0  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2312   0028F2  6ED9               	movwf	fsr2l,c
  2313   0028F4  6ADA               	clrf	fsr2h,c
  2314   0028F6  50DF               	movf	indf2,w,c
  2315   0028F8  6FD3               	movwf	vfpfcnvrt@cp& (0+255),b
  2316   0028FA                     
  2317                           ; BSR set to: 0
  2318                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1690:   c = *cp;
  2319   0028FA  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2320   0028FE                     	if	1	;There is more than 1 active tblptr byte
  2321   0028FE  0E03               	movlw	high __smallconst
  2322   002900  6EF7               	movwf	tblptrh,c
  2323   002902                     	endif
  2324   002902                     	if	0	;tblptru may be non-zero
  2325   002902                     	endif
  2326   002902                     	if	0	;tblptru may be non-zero
  2327   002902                     	endif
  2328   002902  0008               	tblrd		*
  2329   002904  CFF5 F0D2          	movff	tablat,vfpfcnvrt@c
  2330                           
  2331                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1691:   switch(c) {
  2332   002908  EF90  F014         	goto	l5955
  2333   00290C                     l5949:
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1695:     cp++;
  2337   00290C  2BD3               	incf	vfpfcnvrt@cp& (0+255),f,b
  2338                           
  2339                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1696:     break;
  2340   00290E  EF9F  F014         	goto	l5957
  2341   002912                     l5951:
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1721:     c = 'l';
  2345   002912  0E6C               	movlw	108
  2346   002914  6FD2               	movwf	vfpfcnvrt@c& (0+255),b
  2347                           
  2348                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1722:     break;
  2349   002916  EF9F  F014         	goto	l5957
  2350   00291A                     l1128:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1724:     c = 0;
  2354   00291A  6BD2               	clrf	vfpfcnvrt@c& (0+255),b
  2355                           
  2356                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1725:     break;
  2357   00291C  EF9F  F014         	goto	l5957
  2358   002920                     l5955:
  2359                           
  2360                           ; BSR set to: 0
  2361   002920  51D2               	movf	vfpfcnvrt@c& (0+255),w,b
  2362                           
  2363                           ; Switch size 1, requested type "simple"
  2364                           ; Number of cases is 3, Range of values is 76 to 108
  2365                           ; switch strategies available:
  2366                           ; Name         Instructions Cycles
  2367                           ; simple_byte           10     6 (average)
  2368                           ;	Chosen strategy is simple_byte
  2369   002922  0A4C               	xorlw	76	; case 76
  2370   002924  B4D8               	btfsc	status,2,c
  2371   002926  EF86  F014         	goto	l5949
  2372   00292A  0A2A               	xorlw	42	; case 102
  2373   00292C  B4D8               	btfsc	status,2,c
  2374   00292E  EF89  F014         	goto	l5951
  2375   002932  0A0A               	xorlw	10	; case 108
  2376   002934  B4D8               	btfsc	status,2,c
  2377   002936  EF86  F014         	goto	l5949
  2378   00293A  EF8D  F014         	goto	l1128
  2379   00293E                     l5957:
  2380                           
  2381                           ; BSR set to: 0
  2382   00293E  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2383   002942                     	if	1	;There is more than 1 active tblptr byte
  2384   002942  0E03               	movlw	high __smallconst
  2385   002944  6EF7               	movwf	tblptrh,c
  2386   002946                     	endif
  2387   002946                     	if	0	;tblptru may be non-zero
  2388   002946                     	endif
  2389   002946                     	if	0	;tblptru may be non-zero
  2390   002946                     	endif
  2391   002946  0008               	tblrd		*
  2392   002948  50F5               	movf	tablat,w,c
  2393   00294A  0A66               	xorlw	102
  2394   00294C  A4D8               	btfss	status,2,c
  2395   00294E  EFAB  F014         	goto	u7271
  2396   002952  EFAD  F014         	goto	u7270
  2397   002956                     u7271:
  2398   002956  EF0E  F015         	goto	l5977
  2399   00295A                     u7270:
  2400   00295A  EFD9  F014         	goto	l5965
  2401   00295E                     l5959:
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1756:      convarg.f = (long 
      +                          double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2405   00295E  C0CB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2406   002962  C0CC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2407   002966  CFDF F0CD          	movff	indf2,??_vfpfcnvrt
  2408   00296A  0E04               	movlw	4
  2409   00296C  26DF               	addwf	indf2,f,c
  2410   00296E  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  2411   002970  6ED9               	movwf	fsr2l,c
  2412   002972  6ADA               	clrf	fsr2h,c
  2413   002974  CFDE F0CE          	movff	postinc2,vfpfcnvrt@convarg
  2414   002978  CFDE F0CF          	movff	postinc2,vfpfcnvrt@convarg+1
  2415   00297C  CFDE F0D0          	movff	postinc2,vfpfcnvrt@convarg+2
  2416   002980  CFDE F0D1          	movff	postinc2,vfpfcnvrt@convarg+3
  2417                           
  2418                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1757:      break;
  2419   002984  EFE4  F014         	goto	l5967
  2420   002988                     l5961:
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1759:      convarg.f = (long 
      +                          double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2424   002988  C0CB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2425   00298C  C0CC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2426   002990  CFDF F0CD          	movff	indf2,??_vfpfcnvrt
  2427   002994  0E04               	movlw	4
  2428   002996  26DF               	addwf	indf2,f,c
  2429   002998  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  2430   00299A  6ED9               	movwf	fsr2l,c
  2431   00299C  6ADA               	clrf	fsr2h,c
  2432   00299E  CFDE F0CE          	movff	postinc2,vfpfcnvrt@convarg
  2433   0029A2  CFDE F0CF          	movff	postinc2,vfpfcnvrt@convarg+1
  2434   0029A6  CFDE F0D0          	movff	postinc2,vfpfcnvrt@convarg+2
  2435   0029AA  CFDE F0D1          	movff	postinc2,vfpfcnvrt@convarg+3
  2436                           
  2437                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1760:      break;
  2438   0029AE  EFE4  F014         	goto	l5967
  2439   0029B2                     l5965:
  2440                           
  2441                           ; BSR set to: 0
  2442   0029B2  51D2               	movf	vfpfcnvrt@c& (0+255),w,b
  2443                           
  2444                           ; Switch size 1, requested type "simple"
  2445                           ; Number of cases is 2, Range of values is 76 to 108
  2446                           ; switch strategies available:
  2447                           ; Name         Instructions Cycles
  2448                           ; simple_byte            7     4 (average)
  2449                           ;	Chosen strategy is simple_byte
  2450   0029B4  0A4C               	xorlw	76	; case 76
  2451   0029B6  B4D8               	btfsc	status,2,c
  2452   0029B8  EFC4  F014         	goto	l5961
  2453   0029BC  0A20               	xorlw	32	; case 108
  2454   0029BE  B4D8               	btfsc	status,2,c
  2455   0029C0  EFAF  F014         	goto	l5959
  2456   0029C4  EFE4  F014         	goto	l5967
  2457   0029C8                     l5967:
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1762:    *fmt = cp+1;
  2461   0029C8  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2462   0029CA  6ED9               	movwf	fsr2l,c
  2463   0029CC  6ADA               	clrf	fsr2h,c
  2464   0029CE  29D3               	incf	vfpfcnvrt@cp& (0+255),w,b
  2465   0029D0  6EDF               	movwf	indf2,c
  2466                           
  2467                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1763:    switch (*cp) {
  2468   0029D2  EF02  F015         	goto	l5975
  2469   0029D6                     l5969:
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1790:      return (void) efgt
      +                          oa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2473   0029D6  C0C8  F093         	movff	vfpfcnvrt@fp,efgtoa@fp
  2474   0029DA  C0C9  F094         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2475   0029DE  C0CE  F095         	movff	vfpfcnvrt@convarg,efgtoa@f
  2476   0029E2  C0CF  F096         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2477   0029E6  C0D0  F097         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2478   0029EA  C0D1  F098         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2479   0029EE  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2480   0029F2                     	if	1	;There is more than 1 active tblptr byte
  2481   0029F2  0E03               	movlw	high __smallconst
  2482   0029F4  6EF7               	movwf	tblptrh,c
  2483   0029F6                     	endif
  2484   0029F6                     	if	0	;tblptru may be non-zero
  2485   0029F6                     	endif
  2486   0029F6                     	if	0	;tblptru may be non-zero
  2487   0029F6                     	endif
  2488   0029F6  0008               	tblrd		*
  2489   0029F8  CFF5 F099          	movff	tablat,efgtoa@c
  2490   0029FC  EC90  F001         	call	_efgtoa	;wreg free
  2491   002A00  EF28  F015         	goto	l1138
  2492   002A04                     l5975:
  2493                           
  2494                           ; BSR set to: 0
  2495   002A04  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2496   002A08                     	if	1	;There is more than 1 active tblptr byte
  2497   002A08  0E03               	movlw	high __smallconst
  2498   002A0A  6EF7               	movwf	tblptrh,c
  2499   002A0C                     	endif
  2500   002A0C                     	if	0	;tblptru may be non-zero
  2501   002A0C                     	endif
  2502   002A0C                     	if	0	;tblptru may be non-zero
  2503   002A0C                     	endif
  2504   002A0C  0008               	tblrd		*
  2505   002A0E  50F5               	movf	tablat,w,c
  2506                           
  2507                           ; Switch size 1, requested type "simple"
  2508                           ; Number of cases is 1, Range of values is 102 to 102
  2509                           ; switch strategies available:
  2510                           ; Name         Instructions Cycles
  2511                           ; simple_byte            4     3 (average)
  2512                           ;	Chosen strategy is simple_byte
  2513   002A10  0A66               	xorlw	102	; case 102
  2514   002A12  B4D8               	btfsc	status,2,c
  2515   002A14  EFEB  F014         	goto	l5969
  2516   002A18  EF0E  F015         	goto	l5977
  2517   002A1C                     l5977:
  2518                           
  2519                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
  2520   002A1C  0100               	movlb	0	; () banked
  2521   002A1E  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2522   002A20  6ED9               	movwf	fsr2l,c
  2523   002A22  6ADA               	clrf	fsr2h,c
  2524   002A24  2ADF               	incf	indf2,f,c
  2525   002A26  EF28  F015         	goto	l1138
  2526   002A2A                     l5981:
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
  2530   002A2A  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2531   002A2C  6ED9               	movwf	fsr2l,c
  2532   002A2E  6ADA               	clrf	fsr2h,c
  2533   002A30  CFDF FFF6          	movff	indf2,tblptrl
  2534   002A34                     	if	1	;There is more than 1 active tblptr byte
  2535   002A34  0E03               	movlw	high __smallconst
  2536   002A36  6EF7               	movwf	tblptrh,c
  2537   002A38                     	endif
  2538   002A38                     	if	0	;tblptru may be non-zero
  2539   002A38                     	endif
  2540   002A38                     	if	0	;tblptru may be non-zero
  2541   002A38                     	endif
  2542   002A38  0008               	tblrd		*
  2543   002A3A  50F5               	movf	tablat,w,c
  2544   002A3C  6F60               	movwf	fputc@c& (0+255),b
  2545   002A3E  6B61               	clrf	(fputc@c+1)& (0+255),b
  2546   002A40  C0C8  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2547   002A44  C0C9  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2548   002A48  ECEF  F019         	call	_fputc	;wreg free
  2549   002A4C  EF0E  F015         	goto	l5977
  2550   002A50                     l1138:
  2551   002A50  0012               	return		;funcret
  2552   002A52                     __end_of_vfpfcnvrt:
  2553                           	callstack 0
  2554                           
  2555 ;; *************** function _read_prec_or_width *****************
  2556 ;; Defined at:
  2557 ;;		line 1158 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  fmt             1    0[BANK0 ] PTR PTR const unsigned c
  2560 ;;		 -> vfprintf@cfmt(1), 
  2561 ;;  ap              2    1[BANK0 ] PTR PTR void [1]
  2562 ;;		 -> sprintf@ap(1), 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  c               1    5[BANK0 ] unsigned char 
  2565 ;;  n               2    6[BANK0 ] int 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  2    0[BANK0 ] int 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2575 ;;      Params:         0       3       0       0
  2576 ;;      Locals:         0       3       0       0
  2577 ;;      Temps:          0       2       0       0
  2578 ;;      Totals:         0       8       0       0
  2579 ;;Total ram usage:        8 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 3
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_vfpfcnvrt
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text4
  2590   003546                     __ptext4:
  2591                           	callstack 0
  2592   003546                     _read_prec_or_width:
  2593                           	callstack 24
  2594   003546                     
  2595                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  2596   003546  0E00               	movlw	0
  2597   003548  0100               	movlb	0	; () banked
  2598   00354A  6F67               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2599   00354C  0E00               	movlw	0
  2600   00354E  6F66               	movwf	read_prec_or_width@n& (0+255),b
  2601   003550                     
  2602                           ; BSR set to: 0
  2603                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)[0] == '*
      +                          ') {
  2604   003550  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2605   003552  6ED9               	movwf	fsr2l,c
  2606   003554  6ADA               	clrf	fsr2h,c
  2607   003556  CFDF FFF6          	movff	indf2,tblptrl
  2608   00355A                     	if	1	;There is more than 1 active tblptr byte
  2609   00355A  0E03               	movlw	high __smallconst
  2610   00355C  6EF7               	movwf	tblptrh,c
  2611   00355E                     	endif
  2612   00355E                     	if	0	;tblptru may be non-zero
  2613   00355E                     	endif
  2614   00355E                     	if	0	;tblptru may be non-zero
  2615   00355E                     	endif
  2616   00355E  0008               	tblrd		*
  2617   003560  50F5               	movf	tablat,w,c
  2618   003562  0A2A               	xorlw	42
  2619   003564  A4D8               	btfss	status,2,c
  2620   003566  EFB7  F01A         	goto	u7231
  2621   00356A  EFB9  F01A         	goto	u7230
  2622   00356E                     u7231:
  2623   00356E  EFDF  F01A         	goto	l5929
  2624   003572                     u7230:
  2625   003572                     
  2626                           ; BSR set to: 0
  2627                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt;
  2628   003572  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2629   003574  6ED9               	movwf	fsr2l,c
  2630   003576  6ADA               	clrf	fsr2h,c
  2631   003578  2ADF               	incf	indf2,f,c
  2632   00357A                     
  2633                           ; BSR set to: 0
  2634                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1162:         n = (*(int *)__
      +                          va_arg(*(int **)*ap, (int)0));
  2635   00357A  C061  FFD9         	movff	read_prec_or_width@ap,fsr2l
  2636   00357E  C062  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  2637   003582  0E02               	movlw	2
  2638   003584  26DF               	addwf	indf2,f,c
  2639   003586  5CDF               	subwf	indf2,w,c
  2640   003588  6ED9               	movwf	fsr2l,c
  2641   00358A  6ADA               	clrf	fsr2h,c
  2642   00358C  CFDE F066          	movff	postinc2,read_prec_or_width@n
  2643   003590  CFDE F067          	movff	postinc2,read_prec_or_width@n+1
  2644                           
  2645                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1163:     } else {
  2646   003594  EFF2  F01A         	goto	l1114
  2647   003598                     l5925:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1166:             n = n * 10 
      +                          + c;
  2651   003598  0E0A               	movlw	10
  2652   00359A  0366               	mulwf	read_prec_or_width@n& (0+255),b
  2653   00359C  CFF3 F063          	movff	prodl,??_read_prec_or_width
  2654   0035A0  CFF4 F064          	movff	prodh,??_read_prec_or_width+1
  2655   0035A4  0367               	mulwf	(read_prec_or_width@n+1)& (0+255),b
  2656   0035A6  50F3               	movf	prodl,w,c
  2657   0035A8  2764               	addwf	(??_read_prec_or_width+1)& (0+255),f,b
  2658   0035AA  5165               	movf	read_prec_or_width@c& (0+255),w,b
  2659   0035AC  2563               	addwf	??_read_prec_or_width& (0+255),w,b
  2660   0035AE  6F66               	movwf	read_prec_or_width@n& (0+255),b
  2661   0035B0  0E00               	movlw	0
  2662   0035B2  2164               	addwfc	(??_read_prec_or_width+1)& (0+255),w,b
  2663   0035B4  6F67               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2664   0035B6                     
  2665                           ; BSR set to: 0
  2666                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1167:             ++*fmt;
  2667   0035B6  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2668   0035B8  6ED9               	movwf	fsr2l,c
  2669   0035BA  6ADA               	clrf	fsr2h,c
  2670   0035BC  2ADF               	incf	indf2,f,c
  2671   0035BE                     l5929:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1165:         while ((c = ((u
      +                          nsigned)(*fmt)[0]) - '0') < 10) {
  2675   0035BE  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2676   0035C0  6ED9               	movwf	fsr2l,c
  2677   0035C2  6ADA               	clrf	fsr2h,c
  2678   0035C4  CFDF FFF6          	movff	indf2,tblptrl
  2679   0035C8                     	if	1	;There is more than 1 active tblptr byte
  2680   0035C8  0E03               	movlw	high __smallconst
  2681   0035CA  6EF7               	movwf	tblptrh,c
  2682   0035CC                     	endif
  2683   0035CC                     	if	0	;tblptru may be non-zero
  2684   0035CC                     	endif
  2685   0035CC                     	if	0	;tblptru may be non-zero
  2686   0035CC                     	endif
  2687   0035CC  0008               	tblrd		*
  2688   0035CE  50F5               	movf	tablat,w,c
  2689   0035D0  0FD0               	addlw	208
  2690   0035D2  6F65               	movwf	read_prec_or_width@c& (0+255),b
  2691   0035D4  0E09               	movlw	9
  2692   0035D6  6565               	cpfsgt	read_prec_or_width@c& (0+255),b
  2693   0035D8  EFF0  F01A         	goto	u7241
  2694   0035DC  EFF2  F01A         	goto	u7240
  2695   0035E0                     u7241:
  2696   0035E0  EFCC  F01A         	goto	l5925
  2697   0035E4                     u7240:
  2698   0035E4                     l1114:
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1170:     return n;
  2702   0035E4  C066  F060         	movff	read_prec_or_width@n,?_read_prec_or_width
  2703   0035E8  C067  F061         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2704   0035EC                     
  2705                           ; BSR set to: 0
  2706   0035EC  0012               	return		;funcret
  2707   0035EE                     __end_of_read_prec_or_width:
  2708                           	callstack 0
  2709                           
  2710 ;; *************** function _efgtoa *****************
  2711 ;; Defined at:
  2712 ;;		line 587 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  fp              2   51[BANK0 ] PTR struct _IO_FILE
  2715 ;;		 -> sprintf@f(11), 
  2716 ;;  f               4   53[BANK0 ] PTR struct _IO_FILE
  2717 ;;  c               1   57[BANK0 ] unsigned char 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  u               4  100[BANK0 ] struct flui
  2720 ;;  g               4   94[BANK0 ] struct flui
  2721 ;;  l               4   89[BANK0 ] struct flui
  2722 ;;  h               4   85[BANK0 ] struct flui
  2723 ;;  ou              4   79[BANK0 ] struct flui
  2724 ;;  n               2   98[BANK0 ] int 
  2725 ;;  i               2   83[BANK0 ] int 
  2726 ;;  w               2   77[BANK0 ] int 
  2727 ;;  e               2   75[BANK0 ] int 
  2728 ;;  m               2   73[BANK0 ] int 
  2729 ;;  d               2   71[BANK0 ] int 
  2730 ;;  t               2   64[BANK0 ] int 
  2731 ;;  p               2   62[BANK0 ] int 
  2732 ;;  ne              2   60[BANK0 ] int 
  2733 ;;  sign            1   93[BANK0 ] unsigned char 
  2734 ;;  nmode           1   70[BANK0 ] unsigned char 
  2735 ;;  mode            1   69[BANK0 ] unsigned char 
  2736 ;;  pp              1   68[BANK0 ] unsigned char 
  2737 ;;  esign           1    0        unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2747 ;;      Params:         0       7       0       0
  2748 ;;      Locals:         0      44       0       0
  2749 ;;      Temps:          0       2       0       0
  2750 ;;      Totals:         0      53       0       0
  2751 ;;Total ram usage:       53 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 7
  2754 ;; This function calls:
  2755 ;;		___fladd
  2756 ;;		___fldiv
  2757 ;;		___fleq
  2758 ;;		___flge
  2759 ;;		___flmul
  2760 ;;		___flneg
  2761 ;;		___flsub
  2762 ;;		___fltol
  2763 ;;		___fpclassifyf
  2764 ;;		_floorf
  2765 ;;		_labs
  2766 ;;		_memcpy
  2767 ;;		_pad
  2768 ;;		_strcpy
  2769 ;; This function is called by:
  2770 ;;		_vfpfcnvrt
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text5
  2775   000320                     __ptext5:
  2776                           	callstack 0
  2777   000320                     _efgtoa:
  2778                           	callstack 20
  2779   000320                     
  2780                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 587: static void efgtoa(FILE 
      +                          *fp, long double f, char c);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 58
      +                          8: {;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 589:     char mode, nmode
      +                          , pp, sign, esign;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 590:     in
      +                          t d, e, i, m, n, ne, p, t, w;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 
      +                          591:     long double h, l;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 592
      +                          :  union flui g, u, ou;
  2781   000320  0100               	movlb	0	; () banked
  2782   000322  6BBD               	clrf	efgtoa@sign& (0+255),b
  2783                           
  2784                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 596:     g.f = f;
  2785   000324  C095  F0BE         	movff	efgtoa@f,efgtoa@g
  2786   000328  C096  F0BF         	movff	efgtoa@f+1,efgtoa@g+1
  2787   00032C  C097  F0C0         	movff	efgtoa@f+2,efgtoa@g+2
  2788   000330  C098  F0C1         	movff	efgtoa@f+3,efgtoa@g+3
  2789   000334                     
  2790                           ; BSR set to: 0
  2791                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 597:     if (g.f < 0.0) {
  2792   000334  BFC1               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2793   000336  EFA1  F001         	goto	u6910
  2794   00033A  EF9F  F001         	goto	u6911
  2795   00033E                     u6911:
  2796   00033E  EFB5  F001         	goto	l5705
  2797   000342                     u6910:
  2798   000342                     
  2799                           ; BSR set to: 0
  2800                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 598:         sign = 1;
  2801   000342  0E01               	movlw	1
  2802   000344  6FBD               	movwf	efgtoa@sign& (0+255),b
  2803   000346                     
  2804                           ; BSR set to: 0
  2805                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 599:         g.f = -g.f;
  2806   000346  C0BE  F060         	movff	efgtoa@g,___flneg@f1
  2807   00034A  C0BF  F061         	movff	efgtoa@g+1,___flneg@f1+1
  2808   00034E  C0C0  F062         	movff	efgtoa@g+2,___flneg@f1+2
  2809   000352  C0C1  F063         	movff	efgtoa@g+3,___flneg@f1+3
  2810   000356  EC69  F01E         	call	___flneg	;wreg free
  2811   00035A  C060  F0BE         	movff	?___flneg,efgtoa@g
  2812   00035E  C061  F0BF         	movff	?___flneg+1,efgtoa@g+1
  2813   000362  C062  F0C0         	movff	?___flneg+2,efgtoa@g+2
  2814   000366  C063  F0C1         	movff	?___flneg+3,efgtoa@g+3
  2815   00036A                     l5705:
  2816                           
  2817                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 603:     n = 0;
  2818   00036A  0E00               	movlw	0
  2819   00036C  0100               	movlb	0	; () banked
  2820   00036E  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2821   000370  0E00               	movlw	0
  2822   000372  6FC2               	movwf	efgtoa@n& (0+255),b
  2823   000374                     
  2824                           ; BSR set to: 0
  2825                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 604:     w = width;
  2826   000374  C0EC  F0AD         	movff	_width,efgtoa@w
  2827   000378  C0ED  F0AE         	movff	_width+1,efgtoa@w+1
  2828   00037C                     
  2829                           ; BSR set to: 0
  2830                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 605:     if (sign
  2831   00037C  51BD               	movf	efgtoa@sign& (0+255),w,b
  2832   00037E  B4D8               	btfsc	status,2,c
  2833   000380  EFC4  F001         	goto	u6921
  2834   000384  EFC6  F001         	goto	u6920
  2835   000388                     u6921:
  2836   000388  EFDA  F001         	goto	l5719
  2837   00038C                     u6920:
  2838   00038C                     
  2839                           ; BSR set to: 0
  2840                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 609:    ) {;/opt/microchip/xc
      +                          8/v2.50/pic/sources/c99/common/doprnt.c: 610:   sign = sign ? '-' : '+';
  2841   00038C  51BD               	movf	efgtoa@sign& (0+255),w,b
  2842   00038E  A4D8               	btfss	status,2,c
  2843   000390  EFCC  F001         	goto	u6931
  2844   000394  EFCE  F001         	goto	u6930
  2845   000398                     u6931:
  2846   000398  EFD4  F001         	goto	l5715
  2847   00039C                     u6930:
  2848   00039C                     
  2849                           ; BSR set to: 0
  2850   00039C  0E00               	movlw	0
  2851   00039E  6FA3               	movwf	(_efgtoa$1752+1)& (0+255),b
  2852   0003A0  0E2B               	movlw	43
  2853   0003A2  6FA2               	movwf	_efgtoa$1752& (0+255),b
  2854   0003A4  EFD8  F001         	goto	l5717
  2855   0003A8                     l5715:
  2856                           
  2857                           ; BSR set to: 0
  2858   0003A8  0E00               	movlw	0
  2859   0003AA  6FA3               	movwf	(_efgtoa$1752+1)& (0+255),b
  2860   0003AC  0E2D               	movlw	45
  2861   0003AE  6FA2               	movwf	_efgtoa$1752& (0+255),b
  2862   0003B0                     l5717:
  2863                           
  2864                           ; BSR set to: 0
  2865   0003B0  C0A2  F0BD         	movff	_efgtoa$1752,efgtoa@sign
  2866   0003B4                     l5719:
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 619:     if (( __fpclassifyf(
      +                          g.f) == 1 )) {
  2870   0003B4  C0BE  F060         	movff	efgtoa@g,___fpclassifyf@x
  2871   0003B8  C0BF  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2872   0003BC  C0C0  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2873   0003C0  C0C1  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2874   0003C4  EC9F  F018         	call	___fpclassifyf	;wreg free
  2875   0003C8  0100               	movlb	0	; () banked
  2876   0003CA  0560               	decf	?___fpclassifyf& (0+255),w,b
  2877   0003CC  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2878   0003CE  A4D8               	btfss	status,2,c
  2879   0003D0  EFEC  F001         	goto	u6941
  2880   0003D4  EFEE  F001         	goto	u6940
  2881   0003D8                     u6941:
  2882   0003D8  EF1E  F002         	goto	l5737
  2883   0003DC                     u6940:
  2884   0003DC                     
  2885                           ; BSR set to: 0
  2886                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 620:   if (sign) {
  2887   0003DC  51BD               	movf	efgtoa@sign& (0+255),w,b
  2888   0003DE  B4D8               	btfsc	status,2,c
  2889   0003E0  EFF4  F001         	goto	u6951
  2890   0003E4  EFF6  F001         	goto	u6950
  2891   0003E8                     u6951:
  2892   0003E8  EFFF  F001         	goto	l5729
  2893   0003EC                     u6950:
  2894   0003EC                     
  2895                           ; BSR set to: 0
  2896                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 621:    dbuf[0] = sign;
  2897   0003EC  C0BD  F100         	movff	efgtoa@sign,_dbuf
  2898   0003F0                     
  2899                           ; BSR set to: 0
  2900                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 622:    w--;
  2901   0003F0  07AD               	decf	efgtoa@w& (0+255),f,b
  2902   0003F2  A0D8               	btfss	status,0,c
  2903   0003F4  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  2904   0003F6                     
  2905                           ; BSR set to: 0
  2906                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 623:    n = 1;
  2907   0003F6  0E00               	movlw	0
  2908   0003F8  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2909   0003FA  0E01               	movlw	1
  2910   0003FC  6FC2               	movwf	efgtoa@n& (0+255),b
  2911   0003FE                     l5729:
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 631:   {;/opt/microchip/xc8/v
      +                          2.50/pic/sources/c99/common/doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  2915   0003FE  0E00               	movlw	low _dbuf
  2916   000400  25C2               	addwf	efgtoa@n& (0+255),w,b
  2917   000402  6F60               	movwf	strcpy@dest& (0+255),b
  2918   000404  0E01               	movlw	high _dbuf
  2919   000406  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2920   000408  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2921   00040A  0E16               	movlw	low STR_8
  2922   00040C  6F62               	movwf	strcpy@src& (0+255),b
  2923   00040E  EC4B  F01E         	call	_strcpy	;wreg free
  2924   000412                     l5731:
  2925                           
  2926                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 633:         };/opt/microchip
      +                          /xc8/v2.50/pic/sources/c99/common/doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("in
      +                          f"[0]))-1);
  2927   000412  0100               	movlb	0	; () banked
  2928   000414  0EFD               	movlw	253
  2929   000416  27AD               	addwf	efgtoa@w& (0+255),f,b
  2930   000418  0EFF               	movlw	255
  2931   00041A  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2932   00041C                     
  2933                           ; BSR set to: 0
  2934                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 635:         return (void) pa
      +                          d(fp, &dbuf[0], w);
  2935   00041C  C093  F070         	movff	efgtoa@fp,pad@fp
  2936   000420  C094  F071         	movff	efgtoa@fp+1,pad@fp+1
  2937   000424  0E00               	movlw	low _dbuf
  2938   000426  6F72               	movwf	pad@buf& (0+255),b
  2939   000428  0E01               	movlw	high _dbuf
  2940   00042A  6F73               	movwf	(pad@buf+1)& (0+255),b
  2941   00042C  C0AD  F074         	movff	efgtoa@w,pad@p
  2942   000430  C0AE  F075         	movff	efgtoa@w+1,pad@p+1
  2943   000434  ECED  F01B         	call	_pad	;wreg free
  2944   000438  EF89  F006         	goto	l1069
  2945   00043C                     l5737:
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 637:     if (( __fpclassifyf(
      +                          g.f) == 0 )) {
  2949   00043C  C0BE  F060         	movff	efgtoa@g,___fpclassifyf@x
  2950   000440  C0BF  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2951   000444  C0C0  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2952   000448  C0C1  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2953   00044C  EC9F  F018         	call	___fpclassifyf	;wreg free
  2954   000450  0100               	movlb	0	; () banked
  2955   000452  5160               	movf	?___fpclassifyf& (0+255),w,b
  2956   000454  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2957   000456  A4D8               	btfss	status,2,c
  2958   000458  EF30  F002         	goto	u6961
  2959   00045C  EF32  F002         	goto	u6960
  2960   000460                     u6961:
  2961   000460  EF4F  F002         	goto	l5755
  2962   000464                     u6960:
  2963   000464                     
  2964                           ; BSR set to: 0
  2965                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 638:   if (sign) {
  2966   000464  51BD               	movf	efgtoa@sign& (0+255),w,b
  2967   000466  B4D8               	btfsc	status,2,c
  2968   000468  EF38  F002         	goto	u6971
  2969   00046C  EF3A  F002         	goto	u6970
  2970   000470                     u6971:
  2971   000470  EF43  F002         	goto	l5747
  2972   000474                     u6970:
  2973   000474                     
  2974                           ; BSR set to: 0
  2975                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 639:    dbuf[0] = sign;
  2976   000474  C0BD  F100         	movff	efgtoa@sign,_dbuf
  2977   000478                     
  2978                           ; BSR set to: 0
  2979                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 640:    w--;
  2980   000478  07AD               	decf	efgtoa@w& (0+255),f,b
  2981   00047A  A0D8               	btfss	status,0,c
  2982   00047C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  2983   00047E                     
  2984                           ; BSR set to: 0
  2985                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 641:    n = 1;
  2986   00047E  0E00               	movlw	0
  2987   000480  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2988   000482  0E01               	movlw	1
  2989   000484  6FC2               	movwf	efgtoa@n& (0+255),b
  2990   000486                     l5747:
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 649:   {;/opt/microchip/xc8/v
      +                          2.50/pic/sources/c99/common/doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  2994   000486  0E00               	movlw	low _dbuf
  2995   000488  25C2               	addwf	efgtoa@n& (0+255),w,b
  2996   00048A  6F60               	movwf	strcpy@dest& (0+255),b
  2997   00048C  0E01               	movlw	high _dbuf
  2998   00048E  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2999   000490  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3000   000492  0E1A               	movlw	low STR_11
  3001   000494  6F62               	movwf	strcpy@src& (0+255),b
  3002   000496  EC4B  F01E         	call	_strcpy	;wreg free
  3003   00049A  EF09  F002         	goto	l5731
  3004   00049E                     l5755:
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 657:     u.f = 1.0;
  3008   00049E  0E00               	movlw	0
  3009   0004A0  6FC4               	movwf	efgtoa@u& (0+255),b
  3010   0004A2  0E00               	movlw	0
  3011   0004A4  6FC5               	movwf	(efgtoa@u+1)& (0+255),b
  3012   0004A6  0E80               	movlw	128
  3013   0004A8  6FC6               	movwf	(efgtoa@u+2)& (0+255),b
  3014   0004AA  0E3F               	movlw	63
  3015   0004AC  6FC7               	movwf	(efgtoa@u+3)& (0+255),b
  3016                           
  3017                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 658:     e = 0;
  3018   0004AE  0E00               	movlw	0
  3019   0004B0  6FAC               	movwf	(efgtoa@e+1)& (0+255),b
  3020   0004B2  0E00               	movlw	0
  3021   0004B4  6FAB               	movwf	efgtoa@e& (0+255),b
  3022   0004B6                     
  3023                           ; BSR set to: 0
  3024                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 659:  if (!(g.f == 0.0)) {
  3025   0004B6  C0BE  F060         	movff	efgtoa@g,___fleq@ff1
  3026   0004BA  C0BF  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  3027   0004BE  C0C0  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  3028   0004C2  C0C1  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  3029   0004C6  0E00               	movlw	0
  3030   0004C8  6F64               	movwf	___fleq@ff2& (0+255),b
  3031   0004CA  0E00               	movlw	0
  3032   0004CC  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  3033   0004CE  0E00               	movlw	0
  3034   0004D0  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  3035   0004D2  0E00               	movlw	0
  3036   0004D4  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  3037   0004D6  EC4D  F01A         	call	___fleq	;wreg free
  3038   0004DA  0100               	movlb	0	; () banked
  3039   0004DC  B0D8               	btfsc	status,0,c
  3040   0004DE  EF73  F002         	goto	u6981
  3041   0004E2  EF75  F002         	goto	u6980
  3042   0004E6                     u6981:
  3043   0004E6  EF57  F003         	goto	l1072
  3044   0004EA                     u6980:
  3045   0004EA  EF81  F002         	goto	l5763
  3046   0004EE                     l1074:
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 661:    u = ou;
  3050   0004EE  C0AF  F0C4         	movff	efgtoa@ou,efgtoa@u
  3051   0004F2  C0B0  F0C5         	movff	efgtoa@ou+1,efgtoa@u+1
  3052   0004F6  C0B1  F0C6         	movff	efgtoa@ou+2,efgtoa@u+2
  3053   0004FA  C0B2  F0C7         	movff	efgtoa@ou+3,efgtoa@u+3
  3054   0004FE                     
  3055                           ; BSR set to: 0
  3056                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 662:    ++e;
  3057   0004FE  4BAB               	infsnz	efgtoa@e& (0+255),f,b
  3058   000500  2BAC               	incf	(efgtoa@e+1)& (0+255),f,b
  3059   000502                     l5763:
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 660:   while ((labs((g).u-((o
      +                          u.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3063   000502  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3064   000506  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3065   00050A  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3066   00050E  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3067   000512  0E00               	movlw	0
  3068   000514  6F72               	movwf	___flmul@a& (0+255),b
  3069   000516  0E00               	movlw	0
  3070   000518  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3071   00051A  0E20               	movlw	32
  3072   00051C  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3073   00051E  0E41               	movlw	65
  3074   000520  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3075   000522  ECE6  F008         	call	___flmul	;wreg free
  3076   000526  C06E  F0AF         	movff	?___flmul,efgtoa@ou
  3077   00052A  C06F  F0B0         	movff	?___flmul+1,efgtoa@ou+1
  3078   00052E  C070  F0B1         	movff	?___flmul+2,efgtoa@ou+2
  3079   000532  C071  F0B2         	movff	?___flmul+3,efgtoa@ou+3
  3080   000536  0100               	movlb	0	; () banked
  3081   000538  51AF               	movf	efgtoa@ou& (0+255),w,b
  3082   00053A  5DBE               	subwf	efgtoa@g& (0+255),w,b
  3083   00053C  6F60               	movwf	labs@a& (0+255),b
  3084   00053E  51B0               	movf	(efgtoa@ou+1)& (0+255),w,b
  3085   000540  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3086   000542  6F61               	movwf	(labs@a+1)& (0+255),b
  3087   000544  51B1               	movf	(efgtoa@ou+2)& (0+255),w,b
  3088   000546  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3089   000548  6F62               	movwf	(labs@a+2)& (0+255),b
  3090   00054A  51B2               	movf	(efgtoa@ou+3)& (0+255),w,b
  3091   00054C  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3092   00054E  6F63               	movwf	(labs@a+3)& (0+255),b
  3093   000550  ECED  F01C         	call	_labs	;wreg free
  3094   000554  0100               	movlb	0	; () banked
  3095   000556  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  3096   000558  EFB9  F002         	goto	u6991
  3097   00055C  5163               	movf	(?_labs+3)& (0+255),w,b
  3098   00055E  1162               	iorwf	(?_labs+2)& (0+255),w,b
  3099   000560  1161               	iorwf	(?_labs+1)& (0+255),w,b
  3100   000562  E109               	bnz	u6990
  3101   000564  0E02               	movlw	2
  3102   000566  5D60               	subwf	?_labs& (0+255),w,b
  3103   000568  A0D8               	btfss	status,0,c
  3104   00056A  EFB9  F002         	goto	u6991
  3105   00056E  EFBB  F002         	goto	u6990
  3106   000572                     u6991:
  3107   000572  EF77  F002         	goto	l1074
  3108   000576                     u6990:
  3109   000576                     
  3110                           ; BSR set to: 0
  3111   000576  C0AF  F087         	movff	efgtoa@ou,___flge@ff1
  3112   00057A  C0B0  F088         	movff	efgtoa@ou+1,___flge@ff1+1
  3113   00057E  C0B1  F089         	movff	efgtoa@ou+2,___flge@ff1+2
  3114   000582  C0B2  F08A         	movff	efgtoa@ou+3,___flge@ff1+3
  3115   000586  C0BE  F08B         	movff	efgtoa@g,___flge@ff2
  3116   00058A  C0BF  F08C         	movff	efgtoa@g+1,___flge@ff2+1
  3117   00058E  C0C0  F08D         	movff	efgtoa@g+2,___flge@ff2+2
  3118   000592  C0C1  F08E         	movff	efgtoa@g+3,___flge@ff2+3
  3119   000596  EC99  F017         	call	___flge	;wreg free
  3120   00059A  0100               	movlb	0	; () banked
  3121   00059C  A0D8               	btfss	status,0,c
  3122   00059E  EFD3  F002         	goto	u7001
  3123   0005A2  EFD5  F002         	goto	u7000
  3124   0005A6                     u7001:
  3125   0005A6  EF77  F002         	goto	l1074
  3126   0005AA                     u7000:
  3127   0005AA                     
  3128                           ; BSR set to: 0
  3129                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 664:   if ((labs((g).u-(u).u)
      +                           <= 1)) {
  3130   0005AA  51C4               	movf	efgtoa@u& (0+255),w,b
  3131   0005AC  5DBE               	subwf	efgtoa@g& (0+255),w,b
  3132   0005AE  6F60               	movwf	labs@a& (0+255),b
  3133   0005B0  51C5               	movf	(efgtoa@u+1)& (0+255),w,b
  3134   0005B2  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3135   0005B4  6F61               	movwf	(labs@a+1)& (0+255),b
  3136   0005B6  51C6               	movf	(efgtoa@u+2)& (0+255),w,b
  3137   0005B8  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3138   0005BA  6F62               	movwf	(labs@a+2)& (0+255),b
  3139   0005BC  51C7               	movf	(efgtoa@u+3)& (0+255),w,b
  3140   0005BE  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3141   0005C0  6F63               	movwf	(labs@a+3)& (0+255),b
  3142   0005C2  ECED  F01C         	call	_labs	;wreg free
  3143   0005C6  0100               	movlb	0	; () banked
  3144   0005C8  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  3145   0005CA  EFF4  F002         	goto	u7010
  3146   0005CE  5163               	movf	(?_labs+3)& (0+255),w,b
  3147   0005D0  1162               	iorwf	(?_labs+2)& (0+255),w,b
  3148   0005D2  1161               	iorwf	(?_labs+1)& (0+255),w,b
  3149   0005D4  E107               	bnz	u7011
  3150   0005D6  0E02               	movlw	2
  3151   0005D8  5D60               	subwf	?_labs& (0+255),w,b
  3152   0005DA  B0D8               	btfsc	status,0,c
  3153   0005DC  EFF2  F002         	goto	u7011
  3154   0005E0  EFF4  F002         	goto	u7010
  3155   0005E4                     u7011:
  3156   0005E4  EF3D  F003         	goto	l5781
  3157   0005E8                     u7010:
  3158   0005E8                     l5771:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 665:    g = u;
  3162   0005E8  C0C4  F0BE         	movff	efgtoa@u,efgtoa@g
  3163   0005EC  C0C5  F0BF         	movff	efgtoa@u+1,efgtoa@g+1
  3164   0005F0  C0C6  F0C0         	movff	efgtoa@u+2,efgtoa@g+2
  3165   0005F4  C0C7  F0C1         	movff	efgtoa@u+3,efgtoa@g+3
  3166                           
  3167                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 666:   }
  3168   0005F8  EF57  F003         	goto	l1072
  3169   0005FC                     l5773:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 669:     u.f = u.f/10.0;
  3173   0005FC  C0C4  F060         	movff	efgtoa@u,___fldiv@b
  3174   000600  C0C5  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3175   000604  C0C6  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3176   000608  C0C7  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3177   00060C  0E00               	movlw	0
  3178   00060E  6F64               	movwf	___fldiv@a& (0+255),b
  3179   000610  0E00               	movlw	0
  3180   000612  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3181   000614  0E20               	movlw	32
  3182   000616  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3183   000618  0E41               	movlw	65
  3184   00061A  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3185   00061C  EC1F  F00F         	call	___fldiv	;wreg free
  3186   000620  C060  F0C4         	movff	?___fldiv,efgtoa@u
  3187   000624  C061  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  3188   000628  C062  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  3189   00062C  C063  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  3190   000630                     
  3191                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 670:     --e;
  3192   000630  0100               	movlb	0	; () banked
  3193   000632  07AB               	decf	efgtoa@e& (0+255),f,b
  3194   000634  A0D8               	btfss	status,0,c
  3195   000636  07AC               	decf	(efgtoa@e+1)& (0+255),f,b
  3196   000638                     
  3197                           ; BSR set to: 0
  3198                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 671:     if ((labs((g).u-(u).
      +                          u) <= 1)) {
  3199   000638  51C4               	movf	efgtoa@u& (0+255),w,b
  3200   00063A  5DBE               	subwf	efgtoa@g& (0+255),w,b
  3201   00063C  6F60               	movwf	labs@a& (0+255),b
  3202   00063E  51C5               	movf	(efgtoa@u+1)& (0+255),w,b
  3203   000640  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3204   000642  6F61               	movwf	(labs@a+1)& (0+255),b
  3205   000644  51C6               	movf	(efgtoa@u+2)& (0+255),w,b
  3206   000646  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3207   000648  6F62               	movwf	(labs@a+2)& (0+255),b
  3208   00064A  51C7               	movf	(efgtoa@u+3)& (0+255),w,b
  3209   00064C  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3210   00064E  6F63               	movwf	(labs@a+3)& (0+255),b
  3211   000650  ECED  F01C         	call	_labs	;wreg free
  3212   000654  0100               	movlb	0	; () banked
  3213   000656  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  3214   000658  EF3B  F003         	goto	u7020
  3215   00065C  5163               	movf	(?_labs+3)& (0+255),w,b
  3216   00065E  1162               	iorwf	(?_labs+2)& (0+255),w,b
  3217   000660  1161               	iorwf	(?_labs+1)& (0+255),w,b
  3218   000662  E107               	bnz	u7021
  3219   000664  0E02               	movlw	2
  3220   000666  5D60               	subwf	?_labs& (0+255),w,b
  3221   000668  B0D8               	btfsc	status,0,c
  3222   00066A  EF39  F003         	goto	u7021
  3223   00066E  EF3B  F003         	goto	u7020
  3224   000672                     u7021:
  3225   000672  EF3D  F003         	goto	l5781
  3226   000676                     u7020:
  3227   000676  EFF4  F002         	goto	l5771
  3228   00067A                     l5781:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 668:    while (g.f < u.f) {
  3232   00067A  C0BE  F087         	movff	efgtoa@g,___flge@ff1
  3233   00067E  C0BF  F088         	movff	efgtoa@g+1,___flge@ff1+1
  3234   000682  C0C0  F089         	movff	efgtoa@g+2,___flge@ff1+2
  3235   000686  C0C1  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  3236   00068A  C0C4  F08B         	movff	efgtoa@u,___flge@ff2
  3237   00068E  C0C5  F08C         	movff	efgtoa@u+1,___flge@ff2+1
  3238   000692  C0C6  F08D         	movff	efgtoa@u+2,___flge@ff2+2
  3239   000696  C0C7  F08E         	movff	efgtoa@u+3,___flge@ff2+3
  3240   00069A  EC99  F017         	call	___flge	;wreg free
  3241   00069E  0100               	movlb	0	; () banked
  3242   0006A0  A0D8               	btfss	status,0,c
  3243   0006A2  EF55  F003         	goto	u7031
  3244   0006A6  EF57  F003         	goto	u7030
  3245   0006AA                     u7031:
  3246   0006AA  EFFE  F002         	goto	l5773
  3247   0006AE                     u7030:
  3248   0006AE                     l1072:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 683:  mode = c;
  3252   0006AE  C099  F0A5         	movff	efgtoa@c,efgtoa@mode
  3253                           
  3254                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 685:     nmode = mode;
  3255   0006B2  C0A5  F0A6         	movff	efgtoa@mode,efgtoa@nmode
  3256   0006B6                     
  3257                           ; BSR set to: 0
  3258                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 695:  {;/opt/microchip/xc8/v2
      +                          .50/pic/sources/c99/common/doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
  3259   0006B6  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  3260   0006B8  EF60  F003         	goto	u7041
  3261   0006BC  EF62  F003         	goto	u7040
  3262   0006C0                     u7041:
  3263   0006C0  EF68  F003         	goto	l5787
  3264   0006C4                     u7040:
  3265   0006C4                     
  3266                           ; BSR set to: 0
  3267   0006C4  C0EE  F09E         	movff	_prec,efgtoa@p
  3268   0006C8  C0EF  F09F         	movff	_prec+1,efgtoa@p+1
  3269   0006CC  EF6C  F003         	goto	l5789
  3270   0006D0                     l5787:
  3271                           
  3272                           ; BSR set to: 0
  3273   0006D0  0E00               	movlw	0
  3274   0006D2  6F9F               	movwf	(efgtoa@p+1)& (0+255),b
  3275   0006D4  0E06               	movlw	6
  3276   0006D6  6F9E               	movwf	efgtoa@p& (0+255),b
  3277   0006D8                     l5789:
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 697:     };/opt/microchip/xc8
      +                          /v2.50/pic/sources/c99/common/doprnt.c: 711:     m = p;
  3281   0006D8  C09E  F0A9         	movff	efgtoa@p,efgtoa@m
  3282   0006DC  C09F  F0AA         	movff	efgtoa@p+1,efgtoa@m+1
  3283   0006E0                     
  3284                           ; BSR set to: 0
  3285                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 715:  {;/opt/microchip/xc8/v2
      +                          .50/pic/sources/c99/common/doprnt.c: 716:         ++m;
  3286   0006E0  4BA9               	infsnz	efgtoa@m& (0+255),f,b
  3287   0006E2  2BAA               	incf	(efgtoa@m+1)& (0+255),f,b
  3288   0006E4                     
  3289                           ; BSR set to: 0
  3290                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 717:     };/opt/microchip/xc8
      +                          /v2.50/pic/sources/c99/common/doprnt.c: 721:     if (nmode == 'f') {
  3291   0006E4  0E66               	movlw	102
  3292   0006E6  19A6               	xorwf	efgtoa@nmode& (0+255),w,b
  3293   0006E8  A4D8               	btfss	status,2,c
  3294   0006EA  EF79  F003         	goto	u7051
  3295   0006EE  EF7B  F003         	goto	u7050
  3296   0006F2                     u7051:
  3297   0006F2  EF9B  F003         	goto	l5803
  3298   0006F6                     u7050:
  3299   0006F6                     
  3300                           ; BSR set to: 0
  3301                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 722:         if (e < 0) {
  3302   0006F6  BFAC               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3303   0006F8  EF82  F003         	goto	u7060
  3304   0006FC  EF80  F003         	goto	u7061
  3305   000700                     u7061:
  3306   000700  EF8E  F003         	goto	l5799
  3307   000704                     u7060:
  3308   000704                     
  3309                           ; BSR set to: 0
  3310                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 723:             u.f = 1.0;
  3311   000704  0E00               	movlw	0
  3312   000706  6FC4               	movwf	efgtoa@u& (0+255),b
  3313   000708  0E00               	movlw	0
  3314   00070A  6FC5               	movwf	(efgtoa@u+1)& (0+255),b
  3315   00070C  0E80               	movlw	128
  3316   00070E  6FC6               	movwf	(efgtoa@u+2)& (0+255),b
  3317   000710  0E3F               	movlw	63
  3318   000712  6FC7               	movwf	(efgtoa@u+3)& (0+255),b
  3319                           
  3320                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 724:             e = 0;
  3321   000714  0E00               	movlw	0
  3322   000716  6FAC               	movwf	(efgtoa@e+1)& (0+255),b
  3323   000718  0E00               	movlw	0
  3324   00071A  6FAB               	movwf	efgtoa@e& (0+255),b
  3325   00071C                     l5799:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 726:         if (!(mode == 'g
      +                          ')) {
  3329   00071C  0E67               	movlw	103
  3330   00071E  19A5               	xorwf	efgtoa@mode& (0+255),w,b
  3331   000720  B4D8               	btfsc	status,2,c
  3332   000722  EF95  F003         	goto	u7071
  3333   000726  EF97  F003         	goto	u7070
  3334   00072A                     u7071:
  3335   00072A  EF9B  F003         	goto	l5803
  3336   00072E                     u7070:
  3337   00072E                     
  3338                           ; BSR set to: 0
  3339                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 727:             m += e;
  3340   00072E  51AB               	movf	efgtoa@e& (0+255),w,b
  3341   000730  27A9               	addwf	efgtoa@m& (0+255),f,b
  3342   000732  51AC               	movf	(efgtoa@e+1)& (0+255),w,b
  3343   000734  23AA               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3344   000736                     l5803:
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 733:     i = 0;
  3348   000736  0E00               	movlw	0
  3349   000738  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3350   00073A  0E00               	movlw	0
  3351   00073C  6FB3               	movwf	efgtoa@i& (0+255),b
  3352   00073E                     
  3353                           ; BSR set to: 0
  3354                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 734:     h = g.f;
  3355   00073E  C0BE  F0B5         	movff	efgtoa@g,efgtoa@h
  3356   000742  C0BF  F0B6         	movff	efgtoa@g+1,efgtoa@h+1
  3357   000746  C0C0  F0B7         	movff	efgtoa@g+2,efgtoa@h+2
  3358   00074A  C0C1  F0B8         	movff	efgtoa@g+3,efgtoa@h+3
  3359   00074E                     
  3360                           ; BSR set to: 0
  3361                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 735:     ou = u;
  3362   00074E  C0C4  F0AF         	movff	efgtoa@u,efgtoa@ou
  3363   000752  C0C5  F0B0         	movff	efgtoa@u+1,efgtoa@ou+1
  3364   000756  C0C6  F0B1         	movff	efgtoa@u+2,efgtoa@ou+2
  3365   00075A  C0C7  F0B2         	movff	efgtoa@u+3,efgtoa@ou+3
  3366                           
  3367                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 736:     while (i < m) {
  3368   00075E  EF2D  F004         	goto	l5817
  3369   000762                     l5809:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 737:         l = floorf(h/u.f
      +                          );
  3373   000762  C0B5  F060         	movff	efgtoa@h,___fldiv@b
  3374   000766  C0B6  F061         	movff	efgtoa@h+1,___fldiv@b+1
  3375   00076A  C0B7  F062         	movff	efgtoa@h+2,___fldiv@b+2
  3376   00076E  C0B8  F063         	movff	efgtoa@h+3,___fldiv@b+3
  3377   000772  C0C4  F064         	movff	efgtoa@u,___fldiv@a
  3378   000776  C0C5  F065         	movff	efgtoa@u+1,___fldiv@a+1
  3379   00077A  C0C6  F066         	movff	efgtoa@u+2,___fldiv@a+2
  3380   00077E  C0C7  F067         	movff	efgtoa@u+3,___fldiv@a+3
  3381   000782  EC1F  F00F         	call	___fldiv	;wreg free
  3382   000786  C060  F079         	movff	?___fldiv,floorf@x
  3383   00078A  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  3384   00078E  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  3385   000792  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  3386   000796  EC2D  F013         	call	_floorf	;wreg free
  3387   00079A  C079  F0B9         	movff	?_floorf,efgtoa@l
  3388   00079E  C07A  F0BA         	movff	?_floorf+1,efgtoa@l+1
  3389   0007A2  C07B  F0BB         	movff	?_floorf+2,efgtoa@l+2
  3390   0007A6  C07C  F0BC         	movff	?_floorf+3,efgtoa@l+3
  3391                           
  3392                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 738:         d = (int)l;
  3393   0007AA  C0B9  F087         	movff	efgtoa@l,___fltol@f1
  3394   0007AE  C0BA  F088         	movff	efgtoa@l+1,___fltol@f1+1
  3395   0007B2  C0BB  F089         	movff	efgtoa@l+2,___fltol@f1+2
  3396   0007B6  C0BC  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  3397   0007BA  EC15  F017         	call	___fltol	;wreg free
  3398   0007BE  C087  F0A7         	movff	?___fltol,efgtoa@d
  3399   0007C2  C088  F0A8         	movff	?___fltol+1,efgtoa@d+1
  3400   0007C6                     
  3401                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 739:         h -= l*u.f;
  3402   0007C6  C0B5  F087         	movff	efgtoa@h,___flsub@b
  3403   0007CA  C0B6  F088         	movff	efgtoa@h+1,___flsub@b+1
  3404   0007CE  C0B7  F089         	movff	efgtoa@h+2,___flsub@b+2
  3405   0007D2  C0B8  F08A         	movff	efgtoa@h+3,___flsub@b+3
  3406   0007D6  C0B9  F072         	movff	efgtoa@l,___flmul@a
  3407   0007DA  C0BA  F073         	movff	efgtoa@l+1,___flmul@a+1
  3408   0007DE  C0BB  F074         	movff	efgtoa@l+2,___flmul@a+2
  3409   0007E2  C0BC  F075         	movff	efgtoa@l+3,___flmul@a+3
  3410   0007E6  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3411   0007EA  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3412   0007EE  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3413   0007F2  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3414   0007F6  ECE6  F008         	call	___flmul	;wreg free
  3415   0007FA  C06E  F08B         	movff	?___flmul,___flsub@a
  3416   0007FE  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  3417   000802  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  3418   000806  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  3419   00080A  EC05  F01E         	call	___flsub	;wreg free
  3420   00080E  C087  F0B5         	movff	?___flsub,efgtoa@h
  3421   000812  C088  F0B6         	movff	?___flsub+1,efgtoa@h+1
  3422   000816  C089  F0B7         	movff	?___flsub+2,efgtoa@h+2
  3423   00081A  C08A  F0B8         	movff	?___flsub+3,efgtoa@h+3
  3424   00081E                     
  3425                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 740:         u.f = u.f/10.0;
  3426   00081E  C0C4  F060         	movff	efgtoa@u,___fldiv@b
  3427   000822  C0C5  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3428   000826  C0C6  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3429   00082A  C0C7  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3430   00082E  0E00               	movlw	0
  3431   000830  0100               	movlb	0	; () banked
  3432   000832  6F64               	movwf	___fldiv@a& (0+255),b
  3433   000834  0E00               	movlw	0
  3434   000836  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3435   000838  0E20               	movlw	32
  3436   00083A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3437   00083C  0E41               	movlw	65
  3438   00083E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3439   000840  EC1F  F00F         	call	___fldiv	;wreg free
  3440   000844  C060  F0C4         	movff	?___fldiv,efgtoa@u
  3441   000848  C061  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  3442   00084C  C062  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  3443   000850  C063  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  3444   000854                     
  3445                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 741:         ++i;
  3446   000854  0100               	movlb	0	; () banked
  3447   000856  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  3448   000858  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  3449   00085A                     l5817:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 736:     while (i < m) {
  3453   00085A  51A9               	movf	efgtoa@m& (0+255),w,b
  3454   00085C  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3455   00085E  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3456   000860  0A80               	xorlw	128
  3457   000862  6F9A               	movwf	??_efgtoa& (0+255),b
  3458   000864  51AA               	movf	(efgtoa@m+1)& (0+255),w,b
  3459   000866  0A80               	xorlw	128
  3460   000868  599A               	subwfb	??_efgtoa& (0+255),w,b
  3461   00086A  A0D8               	btfss	status,0,c
  3462   00086C  EF3A  F004         	goto	u7081
  3463   000870  EF3C  F004         	goto	u7080
  3464   000874                     u7081:
  3465   000874  EFB1  F003         	goto	l5809
  3466   000878                     u7080:
  3467   000878                     
  3468                           ; BSR set to: 0
  3469                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 745:     l = u.f*5.0;
  3470   000878  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3471   00087C  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3472   000880  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3473   000884  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3474   000888  0E00               	movlw	0
  3475   00088A  6F72               	movwf	___flmul@a& (0+255),b
  3476   00088C  0E00               	movlw	0
  3477   00088E  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3478   000890  0EA0               	movlw	160
  3479   000892  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3480   000894  0E40               	movlw	64
  3481   000896  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3482   000898  ECE6  F008         	call	___flmul	;wreg free
  3483   00089C  C06E  F0B9         	movff	?___flmul,efgtoa@l
  3484   0008A0  C06F  F0BA         	movff	?___flmul+1,efgtoa@l+1
  3485   0008A4  C070  F0BB         	movff	?___flmul+2,efgtoa@l+2
  3486   0008A8  C071  F0BC         	movff	?___flmul+3,efgtoa@l+3
  3487   0008AC                     
  3488                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 746:     if (h < l) {
  3489   0008AC  C0B5  F087         	movff	efgtoa@h,___flge@ff1
  3490   0008B0  C0B6  F088         	movff	efgtoa@h+1,___flge@ff1+1
  3491   0008B4  C0B7  F089         	movff	efgtoa@h+2,___flge@ff1+2
  3492   0008B8  C0B8  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  3493   0008BC  C0B9  F08B         	movff	efgtoa@l,___flge@ff2
  3494   0008C0  C0BA  F08C         	movff	efgtoa@l+1,___flge@ff2+1
  3495   0008C4  C0BB  F08D         	movff	efgtoa@l+2,___flge@ff2+2
  3496   0008C8  C0BC  F08E         	movff	efgtoa@l+3,___flge@ff2+3
  3497   0008CC  EC99  F017         	call	___flge	;wreg free
  3498   0008D0  0100               	movlb	0	; () banked
  3499   0008D2  B0D8               	btfsc	status,0,c
  3500   0008D4  EF6E  F004         	goto	u7091
  3501   0008D8  EF70  F004         	goto	u7090
  3502   0008DC                     u7091:
  3503   0008DC  EF7A  F004         	goto	l5825
  3504   0008E0                     u7090:
  3505   0008E0                     
  3506                           ; BSR set to: 0
  3507                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 747:         l = 0.0;
  3508   0008E0  0E00               	movlw	0
  3509   0008E2  6FB9               	movwf	efgtoa@l& (0+255),b
  3510   0008E4  0E00               	movlw	0
  3511   0008E6  6FBA               	movwf	(efgtoa@l+1)& (0+255),b
  3512   0008E8  0E00               	movlw	0
  3513   0008EA  6FBB               	movwf	(efgtoa@l+2)& (0+255),b
  3514   0008EC  0E00               	movlw	0
  3515   0008EE  6FBC               	movwf	(efgtoa@l+3)& (0+255),b
  3516                           
  3517                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 748:     } else {
  3518   0008F0  EFA3  F004         	goto	l5831
  3519   0008F4                     l5825:
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 750:         if ((h == l) && 
      +                          !(d % 2)) {
  3523   0008F4  C0B5  F060         	movff	efgtoa@h,___fleq@ff1
  3524   0008F8  C0B6  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  3525   0008FC  C0B7  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  3526   000900  C0B8  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  3527   000904  C0B9  F064         	movff	efgtoa@l,___fleq@ff2
  3528   000908  C0BA  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  3529   00090C  C0BB  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  3530   000910  C0BC  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  3531   000914  EC4D  F01A         	call	___fleq	;wreg free
  3532   000918  0100               	movlb	0	; () banked
  3533   00091A  A0D8               	btfss	status,0,c
  3534   00091C  EF92  F004         	goto	u7101
  3535   000920  EF94  F004         	goto	u7100
  3536   000924                     u7101:
  3537   000924  EFA3  F004         	goto	l5831
  3538   000928                     u7100:
  3539   000928                     
  3540                           ; BSR set to: 0
  3541   000928  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  3542   00092A  EF99  F004         	goto	u7111
  3543   00092E  EF9B  F004         	goto	u7110
  3544   000932                     u7111:
  3545   000932  EFA3  F004         	goto	l5831
  3546   000936                     u7110:
  3547   000936                     
  3548                           ; BSR set to: 0
  3549                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 751:             l = 0.0;
  3550   000936  0E00               	movlw	0
  3551   000938  6FB9               	movwf	efgtoa@l& (0+255),b
  3552   00093A  0E00               	movlw	0
  3553   00093C  6FBA               	movwf	(efgtoa@l+1)& (0+255),b
  3554   00093E  0E00               	movlw	0
  3555   000940  6FBB               	movwf	(efgtoa@l+2)& (0+255),b
  3556   000942  0E00               	movlw	0
  3557   000944  6FBC               	movwf	(efgtoa@l+3)& (0+255),b
  3558   000946                     l5831:
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 756:     h = g.f + l;
  3562   000946  C0BE  F060         	movff	efgtoa@g,___fladd@b
  3563   00094A  C0BF  F061         	movff	efgtoa@g+1,___fladd@b+1
  3564   00094E  C0C0  F062         	movff	efgtoa@g+2,___fladd@b+2
  3565   000952  C0C1  F063         	movff	efgtoa@g+3,___fladd@b+3
  3566   000956  C0B9  F064         	movff	efgtoa@l,___fladd@a
  3567   00095A  C0BA  F065         	movff	efgtoa@l+1,___fladd@a+1
  3568   00095E  C0BB  F066         	movff	efgtoa@l+2,___fladd@a+2
  3569   000962  C0BC  F067         	movff	efgtoa@l+3,___fladd@a+3
  3570   000966  EC8A  F006         	call	___fladd	;wreg free
  3571   00096A  C060  F0B5         	movff	?___fladd,efgtoa@h
  3572   00096E  C061  F0B6         	movff	?___fladd+1,efgtoa@h+1
  3573   000972  C062  F0B7         	movff	?___fladd+2,efgtoa@h+2
  3574   000976  C063  F0B8         	movff	?___fladd+3,efgtoa@h+3
  3575   00097A                     
  3576                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 758:  if (h >= (ou.f*10.0)) {
  3577   00097A  C0B5  F087         	movff	efgtoa@h,___flge@ff1
  3578   00097E  C0B6  F088         	movff	efgtoa@h+1,___flge@ff1+1
  3579   000982  C0B7  F089         	movff	efgtoa@h+2,___flge@ff1+2
  3580   000986  C0B8  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  3581   00098A  0E00               	movlw	0
  3582   00098C  0100               	movlb	0	; () banked
  3583   00098E  6F72               	movwf	___flmul@a& (0+255),b
  3584   000990  0E00               	movlw	0
  3585   000992  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3586   000994  0E20               	movlw	32
  3587   000996  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3588   000998  0E41               	movlw	65
  3589   00099A  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3590   00099C  C0AF  F06E         	movff	efgtoa@ou,___flmul@b
  3591   0009A0  C0B0  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  3592   0009A4  C0B1  F070         	movff	efgtoa@ou+2,___flmul@b+2
  3593   0009A8  C0B2  F071         	movff	efgtoa@ou+3,___flmul@b+3
  3594   0009AC  ECE6  F008         	call	___flmul	;wreg free
  3595   0009B0  C06E  F08B         	movff	?___flmul,___flge@ff2
  3596   0009B4  C06F  F08C         	movff	?___flmul+1,___flge@ff2+1
  3597   0009B8  C070  F08D         	movff	?___flmul+2,___flge@ff2+2
  3598   0009BC  C071  F08E         	movff	?___flmul+3,___flge@ff2+3
  3599   0009C0  EC99  F017         	call	___flge	;wreg free
  3600   0009C4  0100               	movlb	0	; () banked
  3601   0009C6  A0D8               	btfss	status,0,c
  3602   0009C8  EFE8  F004         	goto	u7121
  3603   0009CC  EFEA  F004         	goto	u7120
  3604   0009D0                     u7121:
  3605   0009D0  EF12  F005         	goto	l5843
  3606   0009D4                     u7120:
  3607   0009D4                     
  3608                           ; BSR set to: 0
  3609                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 759:   e++;
  3610   0009D4  4BAB               	infsnz	efgtoa@e& (0+255),f,b
  3611   0009D6  2BAC               	incf	(efgtoa@e+1)& (0+255),f,b
  3612   0009D8                     
  3613                           ; BSR set to: 0
  3614                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 760:   ou.f *= 10.0;
  3615   0009D8  C0AF  F06E         	movff	efgtoa@ou,___flmul@b
  3616   0009DC  C0B0  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  3617   0009E0  C0B1  F070         	movff	efgtoa@ou+2,___flmul@b+2
  3618   0009E4  C0B2  F071         	movff	efgtoa@ou+3,___flmul@b+3
  3619   0009E8  0E00               	movlw	0
  3620   0009EA  6F72               	movwf	___flmul@a& (0+255),b
  3621   0009EC  0E00               	movlw	0
  3622   0009EE  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3623   0009F0  0E20               	movlw	32
  3624   0009F2  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3625   0009F4  0E41               	movlw	65
  3626   0009F6  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3627   0009F8  ECE6  F008         	call	___flmul	;wreg free
  3628   0009FC  C06E  F0AF         	movff	?___flmul,efgtoa@ou
  3629   000A00  C06F  F0B0         	movff	?___flmul+1,efgtoa@ou+1
  3630   000A04  C070  F0B1         	movff	?___flmul+2,efgtoa@ou+2
  3631   000A08  C071  F0B2         	movff	?___flmul+3,efgtoa@ou+3
  3632   000A0C                     
  3633                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 762:   if (nmode == 'f') {
  3634   000A0C  0E66               	movlw	102
  3635   000A0E  0100               	movlb	0	; () banked
  3636   000A10  19A6               	xorwf	efgtoa@nmode& (0+255),w,b
  3637   000A12  A4D8               	btfss	status,2,c
  3638   000A14  EF0E  F005         	goto	u7131
  3639   000A18  EF10  F005         	goto	u7130
  3640   000A1C                     u7131:
  3641   000A1C  EF12  F005         	goto	l5843
  3642   000A20                     u7130:
  3643   000A20                     
  3644                           ; BSR set to: 0
  3645                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 764:    m++;
  3646   000A20  4BA9               	infsnz	efgtoa@m& (0+255),f,b
  3647   000A22  2BAA               	incf	(efgtoa@m+1)& (0+255),f,b
  3648   000A24                     l5843:
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 770:     u = ou;
  3652   000A24  C0AF  F0C4         	movff	efgtoa@ou,efgtoa@u
  3653   000A28  C0B0  F0C5         	movff	efgtoa@ou+1,efgtoa@u+1
  3654   000A2C  C0B1  F0C6         	movff	efgtoa@ou+2,efgtoa@u+2
  3655   000A30  C0B2  F0C7         	movff	efgtoa@ou+3,efgtoa@u+3
  3656   000A34                     
  3657                           ; BSR set to: 0
  3658                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 774:  ne = e;
  3659   000A34  C0AB  F09C         	movff	efgtoa@e,efgtoa@ne
  3660   000A38  C0AC  F09D         	movff	efgtoa@e+1,efgtoa@ne+1
  3661   000A3C                     
  3662                           ; BSR set to: 0
  3663                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 776:     pp = 0;
  3664   000A3C  6BA4               	clrf	efgtoa@pp& (0+255),b
  3665   000A3E                     
  3666                           ; BSR set to: 0
  3667                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 777:     t = 0;
  3668   000A3E  0E00               	movlw	0
  3669   000A40  6FA1               	movwf	(efgtoa@t+1)& (0+255),b
  3670   000A42  0E00               	movlw	0
  3671   000A44  6FA0               	movwf	efgtoa@t& (0+255),b
  3672   000A46                     
  3673                           ; BSR set to: 0
  3674                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 778:     i = 0;
  3675   000A46  0E00               	movlw	0
  3676   000A48  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3677   000A4A  0E00               	movlw	0
  3678   000A4C  6FB3               	movwf	efgtoa@i& (0+255),b
  3679                           
  3680                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 779:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3681   000A4E  EF0F  F006         	goto	l5893
  3682   000A52                     l5853:
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 780:         l = floorf(h/u.f
      +                          );
  3686   000A52  C0B5  F060         	movff	efgtoa@h,___fldiv@b
  3687   000A56  C0B6  F061         	movff	efgtoa@h+1,___fldiv@b+1
  3688   000A5A  C0B7  F062         	movff	efgtoa@h+2,___fldiv@b+2
  3689   000A5E  C0B8  F063         	movff	efgtoa@h+3,___fldiv@b+3
  3690   000A62  C0C4  F064         	movff	efgtoa@u,___fldiv@a
  3691   000A66  C0C5  F065         	movff	efgtoa@u+1,___fldiv@a+1
  3692   000A6A  C0C6  F066         	movff	efgtoa@u+2,___fldiv@a+2
  3693   000A6E  C0C7  F067         	movff	efgtoa@u+3,___fldiv@a+3
  3694   000A72  EC1F  F00F         	call	___fldiv	;wreg free
  3695   000A76  C060  F079         	movff	?___fldiv,floorf@x
  3696   000A7A  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  3697   000A7E  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  3698   000A82  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  3699   000A86  EC2D  F013         	call	_floorf	;wreg free
  3700   000A8A  C079  F0B9         	movff	?_floorf,efgtoa@l
  3701   000A8E  C07A  F0BA         	movff	?_floorf+1,efgtoa@l+1
  3702   000A92  C07B  F0BB         	movff	?_floorf+2,efgtoa@l+2
  3703   000A96  C07C  F0BC         	movff	?_floorf+3,efgtoa@l+3
  3704                           
  3705                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 781:         d = (int)l > 9 ?
      +                           9 : (int)l;
  3706   000A9A  C0B9  F087         	movff	efgtoa@l,___fltol@f1
  3707   000A9E  C0BA  F088         	movff	efgtoa@l+1,___fltol@f1+1
  3708   000AA2  C0BB  F089         	movff	efgtoa@l+2,___fltol@f1+2
  3709   000AA6  C0BC  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  3710   000AAA  EC15  F017         	call	___fltol	;wreg free
  3711   000AAE  0100               	movlb	0	; () banked
  3712   000AB0  BF88               	btfsc	(?___fltol+1)& (0+255),7,b
  3713   000AB2  EF66  F005         	goto	u7140
  3714   000AB6  5188               	movf	(?___fltol+1)& (0+255),w,b
  3715   000AB8  E107               	bnz	u7141
  3716   000ABA  0E0A               	movlw	10
  3717   000ABC  5D87               	subwf	?___fltol& (0+255),w,b
  3718   000ABE  B0D8               	btfsc	status,0,c
  3719   000AC0  EF64  F005         	goto	u7141
  3720   000AC4  EF66  F005         	goto	u7140
  3721   000AC8                     u7141:
  3722   000AC8  EF76  F005         	goto	l5857
  3723   000ACC                     u7140:
  3724   000ACC                     
  3725                           ; BSR set to: 0
  3726   000ACC  C0B9  F087         	movff	efgtoa@l,___fltol@f1
  3727   000AD0  C0BA  F088         	movff	efgtoa@l+1,___fltol@f1+1
  3728   000AD4  C0BB  F089         	movff	efgtoa@l+2,___fltol@f1+2
  3729   000AD8  C0BC  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  3730   000ADC  EC15  F017         	call	___fltol	;wreg free
  3731   000AE0  C087  F0A7         	movff	?___fltol,efgtoa@d
  3732   000AE4  C088  F0A8         	movff	?___fltol+1,efgtoa@d+1
  3733   000AE8  EF7A  F005         	goto	l1102
  3734   000AEC                     l5857:
  3735                           
  3736                           ; BSR set to: 0
  3737   000AEC  0E00               	movlw	0
  3738   000AEE  6FA8               	movwf	(efgtoa@d+1)& (0+255),b
  3739   000AF0  0E09               	movlw	9
  3740   000AF2  6FA7               	movwf	efgtoa@d& (0+255),b
  3741   000AF4                     l1102:
  3742                           
  3743                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 792:   {;/opt/microchip/xc8/v
      +                          2.50/pic/sources/c99/common/doprnt.c: 793:             if (!pp && (ne < 0)) {
  3744   000AF4  0100               	movlb	0	; () banked
  3745   000AF6  51A4               	movf	efgtoa@pp& (0+255),w,b
  3746   000AF8  A4D8               	btfss	status,2,c
  3747   000AFA  EF81  F005         	goto	u7151
  3748   000AFE  EF83  F005         	goto	u7150
  3749   000B02                     u7151:
  3750   000B02  EFAB  F005         	goto	l5877
  3751   000B06                     u7150:
  3752   000B06                     
  3753                           ; BSR set to: 0
  3754   000B06  BF9D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3755   000B08  EF8A  F005         	goto	u7160
  3756   000B0C  EF88  F005         	goto	u7161
  3757   000B10                     u7161:
  3758   000B10  EFAB  F005         	goto	l5877
  3759   000B14                     u7160:
  3760   000B14                     
  3761                           ; BSR set to: 0
  3762                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 794:                 dbuf[n++
      +                          ] = '.';
  3763   000B14  0E00               	movlw	low _dbuf
  3764   000B16  25C2               	addwf	efgtoa@n& (0+255),w,b
  3765   000B18  6ED9               	movwf	fsr2l,c
  3766   000B1A  0E01               	movlw	high _dbuf
  3767   000B1C  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3768   000B1E  6EDA               	movwf	fsr2h,c
  3769   000B20  0E2E               	movlw	46
  3770   000B22  6EDF               	movwf	indf2,c
  3771   000B24                     
  3772                           ; BSR set to: 0
  3773   000B24  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3774   000B26  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3775   000B28                     
  3776                           ; BSR set to: 0
  3777                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 795:                 --w;
  3778   000B28  07AD               	decf	efgtoa@w& (0+255),f,b
  3779   000B2A  A0D8               	btfss	status,0,c
  3780   000B2C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3781   000B2E                     
  3782                           ; BSR set to: 0
  3783                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 796:                 pp = 1;
  3784   000B2E  0E01               	movlw	1
  3785   000B30  6FA4               	movwf	efgtoa@pp& (0+255),b
  3786   000B32  EFAB  F005         	goto	l5877
  3787   000B36                     l5869:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 799:                 dbuf[n++
      +                          ] = '0';
  3791   000B36  0E00               	movlw	low _dbuf
  3792   000B38  25C2               	addwf	efgtoa@n& (0+255),w,b
  3793   000B3A  6ED9               	movwf	fsr2l,c
  3794   000B3C  0E01               	movlw	high _dbuf
  3795   000B3E  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3796   000B40  6EDA               	movwf	fsr2h,c
  3797   000B42  0E30               	movlw	48
  3798   000B44  6EDF               	movwf	indf2,c
  3799   000B46                     
  3800                           ; BSR set to: 0
  3801   000B46  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3802   000B48  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3803   000B4A                     
  3804                           ; BSR set to: 0
  3805                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 800:                 --w;
  3806   000B4A  07AD               	decf	efgtoa@w& (0+255),f,b
  3807   000B4C  A0D8               	btfss	status,0,c
  3808   000B4E  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3809   000B50                     
  3810                           ; BSR set to: 0
  3811                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 801:                 --t;
  3812   000B50  07A0               	decf	efgtoa@t& (0+255),f,b
  3813   000B52  A0D8               	btfss	status,0,c
  3814   000B54  07A1               	decf	(efgtoa@t+1)& (0+255),f,b
  3815   000B56                     l5877:
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 798:             while (t) {
  3819   000B56  51A0               	movf	efgtoa@t& (0+255),w,b
  3820   000B58  11A1               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3821   000B5A  A4D8               	btfss	status,2,c
  3822   000B5C  EFB2  F005         	goto	u7171
  3823   000B60  EFB4  F005         	goto	u7170
  3824   000B64                     u7171:
  3825   000B64  EF9B  F005         	goto	l5869
  3826   000B68                     u7170:
  3827   000B68                     
  3828                           ; BSR set to: 0
  3829                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 803:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  3830   000B68  0E00               	movlw	low _dbuf
  3831   000B6A  25C2               	addwf	efgtoa@n& (0+255),w,b
  3832   000B6C  6ED9               	movwf	fsr2l,c
  3833   000B6E  0E01               	movlw	high _dbuf
  3834   000B70  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3835   000B72  6EDA               	movwf	fsr2h,c
  3836   000B74  51A7               	movf	efgtoa@d& (0+255),w,b
  3837   000B76  0F30               	addlw	48
  3838   000B78  6EDF               	movwf	indf2,c
  3839   000B7A                     
  3840                           ; BSR set to: 0
  3841   000B7A  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3842   000B7C  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3843   000B7E                     
  3844                           ; BSR set to: 0
  3845                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 804:             --w;
  3846   000B7E  07AD               	decf	efgtoa@w& (0+255),f,b
  3847   000B80  A0D8               	btfss	status,0,c
  3848   000B82  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3849   000B84                     
  3850                           ; BSR set to: 0
  3851                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 805:         };/opt/microchip
      +                          /xc8/v2.50/pic/sources/c99/common/doprnt.c: 806:         h -= l*u.f;
  3852   000B84  C0B5  F087         	movff	efgtoa@h,___flsub@b
  3853   000B88  C0B6  F088         	movff	efgtoa@h+1,___flsub@b+1
  3854   000B8C  C0B7  F089         	movff	efgtoa@h+2,___flsub@b+2
  3855   000B90  C0B8  F08A         	movff	efgtoa@h+3,___flsub@b+3
  3856   000B94  C0B9  F072         	movff	efgtoa@l,___flmul@a
  3857   000B98  C0BA  F073         	movff	efgtoa@l+1,___flmul@a+1
  3858   000B9C  C0BB  F074         	movff	efgtoa@l+2,___flmul@a+2
  3859   000BA0  C0BC  F075         	movff	efgtoa@l+3,___flmul@a+3
  3860   000BA4  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3861   000BA8  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3862   000BAC  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3863   000BB0  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3864   000BB4  ECE6  F008         	call	___flmul	;wreg free
  3865   000BB8  C06E  F08B         	movff	?___flmul,___flsub@a
  3866   000BBC  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  3867   000BC0  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  3868   000BC4  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  3869   000BC8  EC05  F01E         	call	___flsub	;wreg free
  3870   000BCC  C087  F0B5         	movff	?___flsub,efgtoa@h
  3871   000BD0  C088  F0B6         	movff	?___flsub+1,efgtoa@h+1
  3872   000BD4  C089  F0B7         	movff	?___flsub+2,efgtoa@h+2
  3873   000BD8  C08A  F0B8         	movff	?___flsub+3,efgtoa@h+3
  3874   000BDC                     
  3875                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 807:         u.f = u.f/10.0;
  3876   000BDC  C0C4  F060         	movff	efgtoa@u,___fldiv@b
  3877   000BE0  C0C5  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3878   000BE4  C0C6  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3879   000BE8  C0C7  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3880   000BEC  0E00               	movlw	0
  3881   000BEE  0100               	movlb	0	; () banked
  3882   000BF0  6F64               	movwf	___fldiv@a& (0+255),b
  3883   000BF2  0E00               	movlw	0
  3884   000BF4  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3885   000BF6  0E20               	movlw	32
  3886   000BF8  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3887   000BFA  0E41               	movlw	65
  3888   000BFC  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3889   000BFE  EC1F  F00F         	call	___fldiv	;wreg free
  3890   000C02  C060  F0C4         	movff	?___fldiv,efgtoa@u
  3891   000C06  C061  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  3892   000C0A  C062  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  3893   000C0E  C063  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  3894   000C12                     
  3895                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 808:         --ne;
  3896   000C12  0100               	movlb	0	; () banked
  3897   000C14  079C               	decf	efgtoa@ne& (0+255),f,b
  3898   000C16  A0D8               	btfss	status,0,c
  3899   000C18  079D               	decf	(efgtoa@ne+1)& (0+255),f,b
  3900   000C1A                     
  3901                           ; BSR set to: 0
  3902                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 809:         ++i;
  3903   000C1A  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  3904   000C1C  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  3905   000C1E                     l5893:
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 779:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3909   000C1E  51A9               	movf	efgtoa@m& (0+255),w,b
  3910   000C20  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3911   000C22  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3912   000C24  0A80               	xorlw	128
  3913   000C26  6F9A               	movwf	??_efgtoa& (0+255),b
  3914   000C28  51AA               	movf	(efgtoa@m+1)& (0+255),w,b
  3915   000C2A  0A80               	xorlw	128
  3916   000C2C  599A               	subwfb	??_efgtoa& (0+255),w,b
  3917   000C2E  B0D8               	btfsc	status,0,c
  3918   000C30  EF1C  F006         	goto	u7181
  3919   000C34  EF1E  F006         	goto	u7180
  3920   000C38                     u7181:
  3921   000C38  EF2C  F006         	goto	l5897
  3922   000C3C                     u7180:
  3923   000C3C                     
  3924                           ; BSR set to: 0
  3925   000C3C  BFC3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3926   000C3E  EF2A  F006         	goto	u7191
  3927   000C42  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3928   000C44  E109               	bnz	u7190
  3929   000C46  0E4B               	movlw	75
  3930   000C48  5DC2               	subwf	efgtoa@n& (0+255),w,b
  3931   000C4A  A0D8               	btfss	status,0,c
  3932   000C4C  EF2A  F006         	goto	u7191
  3933   000C50  EF2C  F006         	goto	u7190
  3934   000C54                     u7191:
  3935   000C54  EF29  F005         	goto	l5853
  3936   000C58                     u7190:
  3937   000C58                     l5897:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 816:  i = sizeof(dbuf) - 1;
  3941   000C58  0E00               	movlw	0
  3942   000C5A  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3943   000C5C  0E4F               	movlw	79
  3944   000C5E  6FB3               	movwf	efgtoa@i& (0+255),b
  3945   000C60                     
  3946                           ; BSR set to: 0
  3947                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 817:     dbuf[i] = '\0';
  3948   000C60  0E00               	movlw	low _dbuf
  3949   000C62  25B3               	addwf	efgtoa@i& (0+255),w,b
  3950   000C64  6ED9               	movwf	fsr2l,c
  3951   000C66  0E01               	movlw	high _dbuf
  3952   000C68  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3953   000C6A  6EDA               	movwf	fsr2h,c
  3954   000C6C  6ADF               	clrf	indf2,c
  3955   000C6E                     
  3956                           ; BSR set to: 0
  3957                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 848:  memcpy(&dbuf[i-n], &dbu
      +                          f[0], (size_t)n);
  3958   000C6E  0E00               	movlw	low _dbuf
  3959   000C70  6F9A               	movwf	??_efgtoa& (0+255),b
  3960   000C72  0E01               	movlw	high _dbuf
  3961   000C74  6F9B               	movwf	(??_efgtoa+1)& (0+255),b
  3962   000C76  51C2               	movf	efgtoa@n& (0+255),w,b
  3963   000C78  5F9A               	subwf	??_efgtoa& (0+255),f,b
  3964   000C7A  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3965   000C7C  5B9B               	subwfb	(??_efgtoa+1)& (0+255),f,b
  3966   000C7E  51B3               	movf	efgtoa@i& (0+255),w,b
  3967   000C80  259A               	addwf	??_efgtoa& (0+255),w,b
  3968   000C82  6F60               	movwf	memcpy@d1& (0+255),b
  3969   000C84  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3970   000C86  219B               	addwfc	(??_efgtoa+1)& (0+255),w,b
  3971   000C88  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3972   000C8A  0E00               	movlw	low _dbuf
  3973   000C8C  6F62               	movwf	memcpy@s1& (0+255),b
  3974   000C8E  0E01               	movlw	high _dbuf
  3975   000C90  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  3976   000C92  C0C2  F064         	movff	efgtoa@n,memcpy@n
  3977   000C96  C0C3  F065         	movff	efgtoa@n+1,memcpy@n+1
  3978   000C9A  EC42  F01D         	call	_memcpy	;wreg free
  3979   000C9E                     
  3980                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 849:  n = i-n;
  3981   000C9E  0100               	movlb	0	; () banked
  3982   000CA0  51C2               	movf	efgtoa@n& (0+255),w,b
  3983   000CA2  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3984   000CA4  6FC2               	movwf	efgtoa@n& (0+255),b
  3985   000CA6  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3986   000CA8  59B4               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3987   000CAA  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  3988   000CAC                     
  3989                           ; BSR set to: 0
  3990                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 850:  i = sign == 0 ? 0 : 1;
  3991   000CAC  51BD               	movf	efgtoa@sign& (0+255),w,b
  3992   000CAE  A4D8               	btfss	status,2,c
  3993   000CB0  EF5C  F006         	goto	u7201
  3994   000CB4  EF5F  F006         	goto	u7200
  3995   000CB8                     u7201:
  3996   000CB8  0E01               	movlw	1
  3997   000CBA  EF60  F006         	goto	u7210
  3998   000CBE                     u7200:
  3999   000CBE  0E00               	movlw	0
  4000   000CC0                     u7210:
  4001   000CC0  6FB3               	movwf	efgtoa@i& (0+255),b
  4002   000CC2  6BB4               	clrf	(efgtoa@i+1)& (0+255),b
  4003   000CC4                     
  4004                           ; BSR set to: 0
  4005                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 861:  if (sign) {
  4006   000CC4  51BD               	movf	efgtoa@sign& (0+255),w,b
  4007   000CC6  B4D8               	btfsc	status,2,c
  4008   000CC8  EF68  F006         	goto	u7221
  4009   000CCC  EF6A  F006         	goto	u7220
  4010   000CD0                     u7221:
  4011   000CD0  EF75  F006         	goto	l5911
  4012   000CD4                     u7220:
  4013   000CD4                     
  4014                           ; BSR set to: 0
  4015                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 862:   dbuf[--n] = sign;
  4016   000CD4  07C2               	decf	efgtoa@n& (0+255),f,b
  4017   000CD6  A0D8               	btfss	status,0,c
  4018   000CD8  07C3               	decf	(efgtoa@n+1)& (0+255),f,b
  4019   000CDA  0E00               	movlw	low _dbuf
  4020   000CDC  25C2               	addwf	efgtoa@n& (0+255),w,b
  4021   000CDE  6ED9               	movwf	fsr2l,c
  4022   000CE0  0E01               	movlw	high _dbuf
  4023   000CE2  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4024   000CE4  6EDA               	movwf	fsr2h,c
  4025   000CE6  C0BD  FFDF         	movff	efgtoa@sign,indf2
  4026   000CEA                     l5911:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 864:  w -= i;
  4030   000CEA  51B3               	movf	efgtoa@i& (0+255),w,b
  4031   000CEC  5FAD               	subwf	efgtoa@w& (0+255),f,b
  4032   000CEE  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  4033   000CF0  5BAE               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4034   000CF2                     
  4035                           ; BSR set to: 0
  4036                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 867:     return (void) pad(fp
      +                          , &dbuf[n], w);
  4037   000CF2  C093  F070         	movff	efgtoa@fp,pad@fp
  4038   000CF6  C094  F071         	movff	efgtoa@fp+1,pad@fp+1
  4039   000CFA  0E00               	movlw	low _dbuf
  4040   000CFC  25C2               	addwf	efgtoa@n& (0+255),w,b
  4041   000CFE  6F72               	movwf	pad@buf& (0+255),b
  4042   000D00  0E01               	movlw	high _dbuf
  4043   000D02  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4044   000D04  6F73               	movwf	(pad@buf+1)& (0+255),b
  4045   000D06  C0AD  F074         	movff	efgtoa@w,pad@p
  4046   000D0A  C0AE  F075         	movff	efgtoa@w+1,pad@p+1
  4047   000D0E  ECED  F01B         	call	_pad	;wreg free
  4048   000D12                     l1069:
  4049   000D12  0012               	return		;funcret
  4050   000D14                     __end_of_efgtoa:
  4051                           	callstack 0
  4052                           
  4053 ;; *************** function _strcpy *****************
  4054 ;; Defined at:
  4055 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/strcpy.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  4058 ;;		 -> dbuf(80), 
  4059 ;;  src             1    2[BANK0 ] PTR const unsigned char 
  4060 ;;		 -> STR_11(4), STR_8(4), 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;  d               2    4[BANK0 ] PTR unsigned char 
  4063 ;;		 -> dbuf(80), 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  2    0[BANK0 ] PTR unsigned char 
  4066 ;; Registers used:
  4067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4073 ;;      Params:         0       3       0       0
  4074 ;;      Locals:         0       2       0       0
  4075 ;;      Temps:          0       1       0       0
  4076 ;;      Totals:         0       6       0       0
  4077 ;;Total ram usage:        6 bytes
  4078 ;; Hardware stack levels used: 1
  4079 ;; Hardware stack levels required when called: 3
  4080 ;; This function calls:
  4081 ;;		Nothing
  4082 ;; This function is called by:
  4083 ;;		_efgtoa
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text6
  4088   003C96                     __ptext6:
  4089                           	callstack 0
  4090   003C96                     _strcpy:
  4091                           	callstack 23
  4092   003C96  C060  F064         	movff	strcpy@dest,strcpy@d
  4093   003C9A  C061  F065         	movff	strcpy@dest+1,strcpy@d+1
  4094   003C9E                     l5647:
  4095   003C9E  0100               	movlb	0	; () banked
  4096   003CA0  2B62               	incf	strcpy@src& (0+255),f,b
  4097   003CA2  0562               	decf	strcpy@src& (0+255),w,b
  4098   003CA4  6F63               	movwf	??_strcpy& (0+255),b
  4099   003CA6  C063  FFF6         	movff	??_strcpy,tblptrl
  4100   003CAA                     	if	1	;There is more than 1 active tblptr byte
  4101   003CAA  0E03               	movlw	high __smallconst
  4102   003CAC  6EF7               	movwf	tblptrh,c
  4103   003CAE                     	endif
  4104   003CAE                     	if	0	;tblptru may be non-zero
  4105   003CAE                     	endif
  4106   003CAE                     	if	0	;tblptru may be non-zero
  4107   003CAE                     	endif
  4108   003CAE  C064  FFD9         	movff	strcpy@d,fsr2l
  4109   003CB2  C065  FFDA         	movff	strcpy@d+1,fsr2h
  4110   003CB6  4B64               	infsnz	strcpy@d& (0+255),f,b
  4111   003CB8  2B65               	incf	(strcpy@d+1)& (0+255),f,b
  4112   003CBA  0008               	tblrd		*
  4113   003CBC  CFF5 FFDF          	movff	tablat,indf2
  4114   003CC0  50DF               	movf	indf2,w,c
  4115   003CC2  A4D8               	btfss	status,2,c
  4116   003CC4  EF66  F01E         	goto	u6781
  4117   003CC8  EF68  F01E         	goto	u6780
  4118   003CCC                     u6781:
  4119   003CCC  EF4F  F01E         	goto	l5647
  4120   003CD0                     u6780:
  4121   003CD0                     
  4122                           ; BSR set to: 0
  4123   003CD0  0012               	return		;funcret
  4124   003CD2                     __end_of_strcpy:
  4125                           	callstack 0
  4126                           
  4127 ;; *************** function _pad *****************
  4128 ;; Defined at:
  4129 ;;		line 193 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  4132 ;;		 -> sprintf@f(11), 
  4133 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  4134 ;;		 -> dbuf(80), 
  4135 ;;  p               2   20[BANK0 ] int 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  i               2   23[BANK0 ] int 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  1    wreg      void 
  4140 ;; Registers used:
  4141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4147 ;;      Params:         0       6       0       0
  4148 ;;      Locals:         0       2       0       0
  4149 ;;      Temps:          0       1       0       0
  4150 ;;      Totals:         0       9       0       0
  4151 ;;Total ram usage:        9 bytes
  4152 ;; Hardware stack levels used: 1
  4153 ;; Hardware stack levels required when called: 6
  4154 ;; This function calls:
  4155 ;;		_fputc
  4156 ;;		_fputs
  4157 ;; This function is called by:
  4158 ;;		_efgtoa
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text7
  4163   0037DA                     __ptext7:
  4164                           	callstack 0
  4165   0037DA                     _pad:
  4166                           	callstack 20
  4167   0037DA                     
  4168                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 193: static void pad(FILE *fp
      +                          , char *buf, int p);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 194: {;/op
      +                          t/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 195:     int i;;/opt/microchip/xc
      +                          8/v2.50/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  4169   0037DA  0100               	movlb	0	; () banked
  4170   0037DC  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  4171   0037DE  EFF5  F01B         	goto	u6690
  4172   0037E2  EFF3  F01B         	goto	u6691
  4173   0037E6                     u6691:
  4174   0037E6  EFF9  F01B         	goto	l1054
  4175   0037EA                     u6690:
  4176   0037EA                     
  4177                           ; BSR set to: 0
  4178                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  4179   0037EA  0E00               	movlw	0
  4180   0037EC  6F75               	movwf	(pad@p+1)& (0+255),b
  4181   0037EE  0E00               	movlw	0
  4182   0037F0  6F74               	movwf	pad@p& (0+255),b
  4183   0037F2                     l1054:
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  4187   0037F2  0E00               	movlw	0
  4188   0037F4  6F78               	movwf	(pad@i+1)& (0+255),b
  4189   0037F6  0E00               	movlw	0
  4190   0037F8  6F77               	movwf	pad@i& (0+255),b
  4191                           
  4192                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  4193   0037FA  EF0C  F01C         	goto	l5619
  4194   0037FE                     l5615:
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 210:         fputc(' ', fp);
  4198   0037FE  0E00               	movlw	0
  4199   003800  6F61               	movwf	(fputc@c+1)& (0+255),b
  4200   003802  0E20               	movlw	32
  4201   003804  6F60               	movwf	fputc@c& (0+255),b
  4202   003806  C070  F062         	movff	pad@fp,fputc@fp
  4203   00380A  C071  F063         	movff	pad@fp+1,fputc@fp+1
  4204   00380E  ECEF  F019         	call	_fputc	;wreg free
  4205   003812                     
  4206                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 211:         ++i;
  4207   003812  0100               	movlb	0	; () banked
  4208   003814  4B77               	infsnz	pad@i& (0+255),f,b
  4209   003816  2B78               	incf	(pad@i+1)& (0+255),f,b
  4210   003818                     l5619:
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  4214   003818  5174               	movf	pad@p& (0+255),w,b
  4215   00381A  5D77               	subwf	pad@i& (0+255),w,b
  4216   00381C  5178               	movf	(pad@i+1)& (0+255),w,b
  4217   00381E  0A80               	xorlw	128
  4218   003820  6F76               	movwf	??_pad& (0+255),b
  4219   003822  5175               	movf	(pad@p+1)& (0+255),w,b
  4220   003824  0A80               	xorlw	128
  4221   003826  5976               	subwfb	??_pad& (0+255),w,b
  4222   003828  A0D8               	btfss	status,0,c
  4223   00382A  EF19  F01C         	goto	u6701
  4224   00382E  EF1B  F01C         	goto	u6700
  4225   003832                     u6701:
  4226   003832  EFFF  F01B         	goto	l5615
  4227   003836                     u6700:
  4228   003836                     
  4229                           ; BSR set to: 0
  4230                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 218:         fputs((const cha
      +                          r *)buf, fp);
  4231   003836  C072  F069         	movff	pad@buf,fputs@s
  4232   00383A  C073  F06A         	movff	pad@buf+1,fputs@s+1
  4233   00383E  C070  F06B         	movff	pad@fp,fputs@fp
  4234   003842  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  4235   003846  ECE1  F01D         	call	_fputs	;wreg free
  4236   00384A  0012               	return		;funcret
  4237   00384C                     __end_of_pad:
  4238                           	callstack 0
  4239                           
  4240 ;; *************** function _fputs *****************
  4241 ;; Defined at:
  4242 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputs.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4245 ;;		 -> dbuf(80), 
  4246 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4247 ;;		 -> sprintf@f(11), 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  i               2   14[BANK0 ] int 
  4250 ;;  c               1   13[BANK0 ] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  2    9[BANK0 ] int 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4260 ;;      Params:         0       4       0       0
  4261 ;;      Locals:         0       3       0       0
  4262 ;;      Temps:          0       0       0       0
  4263 ;;      Totals:         0       7       0       0
  4264 ;;Total ram usage:        7 bytes
  4265 ;; Hardware stack levels used: 1
  4266 ;; Hardware stack levels required when called: 5
  4267 ;; This function calls:
  4268 ;;		_fputc
  4269 ;; This function is called by:
  4270 ;;		_pad
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text8
  4275   003BC2                     __ptext8:
  4276                           	callstack 0
  4277   003BC2                     _fputs:
  4278                           	callstack 20
  4279   003BC2  0E00               	movlw	0
  4280   003BC4  0100               	movlb	0	; () banked
  4281   003BC6  6F6F               	movwf	(fputs@i+1)& (0+255),b
  4282   003BC8  0E00               	movlw	0
  4283   003BCA  6F6E               	movwf	fputs@i& (0+255),b
  4284   003BCC  EFF4  F01D         	goto	l5249
  4285   003BD0                     l5245:
  4286                           
  4287                           ; BSR set to: 0
  4288   003BD0  C06D  F060         	movff	fputs@c,fputc@c
  4289   003BD4  6B61               	clrf	(fputc@c+1)& (0+255),b
  4290   003BD6  C06B  F062         	movff	fputs@fp,fputc@fp
  4291   003BDA  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  4292   003BDE  ECEF  F019         	call	_fputc	;wreg free
  4293   003BE2  0100               	movlb	0	; () banked
  4294   003BE4  4B6E               	infsnz	fputs@i& (0+255),f,b
  4295   003BE6  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  4296   003BE8                     l5249:
  4297                           
  4298                           ; BSR set to: 0
  4299   003BE8  516E               	movf	fputs@i& (0+255),w,b
  4300   003BEA  2569               	addwf	fputs@s& (0+255),w,b
  4301   003BEC  6ED9               	movwf	fsr2l,c
  4302   003BEE  516F               	movf	(fputs@i+1)& (0+255),w,b
  4303   003BF0  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  4304   003BF2  6EDA               	movwf	fsr2h,c
  4305   003BF4  50DF               	movf	indf2,w,c
  4306   003BF6  6F6D               	movwf	fputs@c& (0+255),b
  4307   003BF8  516D               	movf	fputs@c& (0+255),w,b
  4308   003BFA  A4D8               	btfss	status,2,c
  4309   003BFC  EF02  F01E         	goto	u6101
  4310   003C00  EF04  F01E         	goto	u6100
  4311   003C04                     u6101:
  4312   003C04  EFE8  F01D         	goto	l5245
  4313   003C08                     u6100:
  4314   003C08                     
  4315                           ; BSR set to: 0
  4316   003C08  0012               	return		;funcret
  4317   003C0A                     __end_of_fputs:
  4318                           	callstack 0
  4319                           
  4320 ;; *************** function _fputc *****************
  4321 ;; Defined at:
  4322 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputc.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  c               2    0[BANK0 ] int 
  4325 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4326 ;;		 -> sprintf@f(11), 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  2    0[BANK0 ] int 
  4331 ;; Registers used:
  4332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4338 ;;      Params:         0       4       0       0
  4339 ;;      Locals:         0       0       0       0
  4340 ;;      Temps:          0       5       0       0
  4341 ;;      Totals:         0       9       0       0
  4342 ;;Total ram usage:        9 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 4
  4345 ;; This function calls:
  4346 ;;		_putch
  4347 ;; This function is called by:
  4348 ;;		_pad
  4349 ;;		_vfpfcnvrt
  4350 ;;		_fputs
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text9
  4355   0033DE                     __ptext9:
  4356                           	callstack 0
  4357   0033DE                     _fputc:
  4358                           	callstack 23
  4359   0033DE  0100               	movlb	0	; () banked
  4360   0033E0  5162               	movf	fputc@fp& (0+255),w,b
  4361   0033E2  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4362   0033E4  B4D8               	btfsc	status,2,c
  4363   0033E6  EFF7  F019         	goto	u5671
  4364   0033EA  EFF9  F019         	goto	u5670
  4365   0033EE                     u5671:
  4366   0033EE  EF02  F01A         	goto	l5039
  4367   0033F2                     u5670:
  4368   0033F2                     
  4369                           ; BSR set to: 0
  4370   0033F2  5162               	movf	fputc@fp& (0+255),w,b
  4371   0033F4  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4372   0033F6  A4D8               	btfss	status,2,c
  4373   0033F8  EF00  F01A         	goto	u5681
  4374   0033FC  EF02  F01A         	goto	u5680
  4375   003400                     u5681:
  4376   003400  EF07  F01A         	goto	l5041
  4377   003404                     u5680:
  4378   003404                     l5039:
  4379                           
  4380                           ; BSR set to: 0
  4381   003404  5160               	movf	fputc@c& (0+255),w,b
  4382   003406  EC4A  F01F         	call	_putch
  4383   00340A  EF4C  F01A         	goto	l1194
  4384   00340E                     l5041:
  4385                           
  4386                           ; BSR set to: 0
  4387   00340E  EE20 F009          	lfsr	2,9
  4388   003412  5162               	movf	fputc@fp& (0+255),w,b
  4389   003414  26D9               	addwf	fsr2l,f,c
  4390   003416  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4391   003418  22DA               	addwfc	fsr2h,f,c
  4392   00341A  50DE               	movf	postinc2,w,c
  4393   00341C  10DE               	iorwf	postinc2,w,c
  4394   00341E  B4D8               	btfsc	status,2,c
  4395   003420  EF14  F01A         	goto	u5691
  4396   003424  EF16  F01A         	goto	u5690
  4397   003428                     u5691:
  4398   003428  EF31  F01A         	goto	l5045
  4399   00342C                     u5690:
  4400   00342C                     
  4401                           ; BSR set to: 0
  4402   00342C  EE20 F009          	lfsr	2,9
  4403   003430  5162               	movf	fputc@fp& (0+255),w,b
  4404   003432  26D9               	addwf	fsr2l,f,c
  4405   003434  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4406   003436  22DA               	addwfc	fsr2h,f,c
  4407   003438  EE10 F002          	lfsr	1,2
  4408   00343C  5162               	movf	fputc@fp& (0+255),w,b
  4409   00343E  26E1               	addwf	fsr1l,f,c
  4410   003440  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4411   003442  22E2               	addwfc	fsr1h,f,c
  4412   003444  50DE               	movf	postinc2,w,c
  4413   003446  5CE6               	subwf	postinc1,w,c
  4414   003448  50E6               	movf	postinc1,w,c
  4415   00344A  0A80               	xorlw	128
  4416   00344C  6F68               	movwf	(??_fputc+4)& (0+255),b
  4417   00344E  50DE               	movf	postinc2,w,c
  4418   003450  0A80               	xorlw	128
  4419   003452  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  4420   003454  B0D8               	btfsc	status,0,c
  4421   003456  EF2F  F01A         	goto	u5701
  4422   00345A  EF31  F01A         	goto	u5700
  4423   00345E                     u5701:
  4424   00345E  EF4C  F01A         	goto	l1194
  4425   003462                     u5700:
  4426   003462                     l5045:
  4427                           
  4428                           ; BSR set to: 0
  4429   003462  EE20 F002          	lfsr	2,2
  4430   003466  5162               	movf	fputc@fp& (0+255),w,b
  4431   003468  26D9               	addwf	fsr2l,f,c
  4432   00346A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4433   00346C  22DA               	addwfc	fsr2h,f,c
  4434   00346E  50DF               	movf	indf2,w,c
  4435   003470  6F64               	movwf	??_fputc& (0+255),b
  4436   003472  C062  FFD9         	movff	fputc@fp,fsr2l
  4437   003476  C063  FFDA         	movff	fputc@fp+1,fsr2h
  4438   00347A  50DF               	movf	indf2,w,c
  4439   00347C  2564               	addwf	??_fputc& (0+255),w,b
  4440   00347E  6ED9               	movwf	fsr2l,c
  4441   003480  6ADA               	clrf	fsr2h,c
  4442   003482  C060  FFDF         	movff	fputc@c,indf2
  4443   003486  EE20 F002          	lfsr	2,2
  4444   00348A  5162               	movf	fputc@fp& (0+255),w,b
  4445   00348C  26D9               	addwf	fsr2l,f,c
  4446   00348E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4447   003490  22DA               	addwfc	fsr2h,f,c
  4448   003492  2ADE               	incf	postinc2,f,c
  4449   003494  0E00               	movlw	0
  4450   003496  22DD               	addwfc	postdec2,f,c
  4451   003498                     l1194:
  4452   003498  0012               	return		;funcret
  4453   00349A                     __end_of_fputc:
  4454                           	callstack 0
  4455                           
  4456 ;; *************** function _putch *****************
  4457 ;; Defined at:
  4458 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/putch.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  c               1    wreg     unsigned char 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  c               1    0[COMRAM] unsigned char 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4472 ;;      Params:         0       0       0       0
  4473 ;;      Locals:         0       0       0       0
  4474 ;;      Temps:          0       0       0       0
  4475 ;;      Totals:         0       0       0       0
  4476 ;;Total ram usage:        0 bytes
  4477 ;; Hardware stack levels used: 1
  4478 ;; Hardware stack levels required when called: 3
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_fputc
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text10
  4487   003E94                     __ptext10:
  4488                           	callstack 0
  4489   003E94                     _putch:
  4490                           	callstack 23
  4491   003E94  0012               	return		;funcret
  4492   003E96                     __end_of_putch:
  4493                           	callstack 0
  4494                           
  4495 ;; *************** function _memcpy *****************
  4496 ;; Defined at:
  4497 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/memcpy.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;  d1              2    0[BANK0 ] PTR void 
  4500 ;;		 -> dbuf(80), 
  4501 ;;  s1              2    2[BANK0 ] PTR const void 
  4502 ;;		 -> dbuf(80), 
  4503 ;;  n               2    4[BANK0 ] unsigned int 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4506 ;;		 -> dbuf(80), 
  4507 ;;  d               2    7[BANK0 ] PTR unsigned char 
  4508 ;;		 -> dbuf(80), 
  4509 ;;  tmp             1    6[BANK0 ] unsigned char 
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  2    0[BANK0 ] PTR void 
  4512 ;; Registers used:
  4513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4519 ;;      Params:         0       6       0       0
  4520 ;;      Locals:         0       5       0       0
  4521 ;;      Temps:          0       0       0       0
  4522 ;;      Totals:         0      11       0       0
  4523 ;;Total ram usage:       11 bytes
  4524 ;; Hardware stack levels used: 1
  4525 ;; Hardware stack levels required when called: 3
  4526 ;; This function calls:
  4527 ;;		Nothing
  4528 ;; This function is called by:
  4529 ;;		_efgtoa
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text11
  4534   003A84                     __ptext11:
  4535                           	callstack 0
  4536   003A84                     _memcpy:
  4537                           	callstack 23
  4538   003A84  C062  F069         	movff	memcpy@s1,memcpy@s
  4539   003A88  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
  4540   003A8C  C060  F067         	movff	memcpy@d1,memcpy@d
  4541   003A90  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
  4542   003A94  EF5C  F01D         	goto	l5695
  4543   003A98                     l5687:
  4544                           
  4545                           ; BSR set to: 0
  4546   003A98  C069  FFD9         	movff	memcpy@s,fsr2l
  4547   003A9C  C06A  FFDA         	movff	memcpy@s+1,fsr2h
  4548   003AA0  50DF               	movf	indf2,w,c
  4549   003AA2  6F66               	movwf	memcpy@tmp& (0+255),b
  4550   003AA4                     
  4551                           ; BSR set to: 0
  4552   003AA4  4B69               	infsnz	memcpy@s& (0+255),f,b
  4553   003AA6  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
  4554   003AA8                     
  4555                           ; BSR set to: 0
  4556   003AA8  C067  FFD9         	movff	memcpy@d,fsr2l
  4557   003AAC  C068  FFDA         	movff	memcpy@d+1,fsr2h
  4558   003AB0  C066  FFDF         	movff	memcpy@tmp,indf2
  4559   003AB4                     
  4560                           ; BSR set to: 0
  4561   003AB4  4B67               	infsnz	memcpy@d& (0+255),f,b
  4562   003AB6  2B68               	incf	(memcpy@d+1)& (0+255),f,b
  4563   003AB8                     l5695:
  4564   003AB8  0100               	movlb	0	; () banked
  4565   003ABA  0764               	decf	memcpy@n& (0+255),f,b
  4566   003ABC  A0D8               	btfss	status,0,c
  4567   003ABE  0765               	decf	(memcpy@n+1)& (0+255),f,b
  4568   003AC0  2964               	incf	memcpy@n& (0+255),w,b
  4569   003AC2  E106               	bnz	u6901
  4570   003AC4  2965               	incf	(memcpy@n+1)& (0+255),w,b
  4571   003AC6  A4D8               	btfss	status,2,c
  4572   003AC8  EF68  F01D         	goto	u6901
  4573   003ACC  EF6A  F01D         	goto	u6900
  4574   003AD0                     u6901:
  4575   003AD0  EF4C  F01D         	goto	l5687
  4576   003AD4                     u6900:
  4577   003AD4                     
  4578                           ; BSR set to: 0
  4579   003AD4  0012               	return		;funcret
  4580   003AD6                     __end_of_memcpy:
  4581                           	callstack 0
  4582                           
  4583 ;; *************** function _labs *****************
  4584 ;; Defined at:
  4585 ;;		line 1 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/labs.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  a               4    0[BANK0 ] long 
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;		None
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  4    0[BANK0 ] long 
  4592 ;; Registers used:
  4593 ;;		wreg, status,2, status,0
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4599 ;;      Params:         0       4       0       0
  4600 ;;      Locals:         0       0       0       0
  4601 ;;      Temps:          0       4       0       0
  4602 ;;      Totals:         0       8       0       0
  4603 ;;Total ram usage:        8 bytes
  4604 ;; Hardware stack levels used: 1
  4605 ;; Hardware stack levels required when called: 3
  4606 ;; This function calls:
  4607 ;;		Nothing
  4608 ;; This function is called by:
  4609 ;;		_efgtoa
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text12
  4614   0039DA                     __ptext12:
  4615                           	callstack 0
  4616   0039DA                     _labs:
  4617                           	callstack 23
  4618   0039DA  0100               	movlb	0	; () banked
  4619   0039DC  BF63               	btfsc	(labs@a+3)& (0+255),7,b
  4620   0039DE  EFF3  F01C         	goto	u6791
  4621   0039E2  EFF5  F01C         	goto	u6790
  4622   0039E6                     u6791:
  4623   0039E6  EFFF  F01C         	goto	l5653
  4624   0039EA                     u6790:
  4625   0039EA                     
  4626                           ; BSR set to: 0
  4627   0039EA  C060  F060         	movff	labs@a,?_labs
  4628   0039EE  C061  F061         	movff	labs@a+1,?_labs+1
  4629   0039F2  C062  F062         	movff	labs@a+2,?_labs+2
  4630   0039F6  C063  F063         	movff	labs@a+3,?_labs+3
  4631   0039FA  EF18  F01D         	goto	l1176
  4632   0039FE                     l5653:
  4633                           
  4634                           ; BSR set to: 0
  4635   0039FE  C060  F064         	movff	labs@a,??_labs
  4636   003A02  C061  F065         	movff	labs@a+1,??_labs+1
  4637   003A06  C062  F066         	movff	labs@a+2,??_labs+2
  4638   003A0A  C063  F067         	movff	labs@a+3,??_labs+3
  4639   003A0E  1F64               	comf	??_labs& (0+255),f,b
  4640   003A10  1F65               	comf	(??_labs+1)& (0+255),f,b
  4641   003A12  1F66               	comf	(??_labs+2)& (0+255),f,b
  4642   003A14  1F67               	comf	(??_labs+3)& (0+255),f,b
  4643   003A16  2B64               	incf	??_labs& (0+255),f,b
  4644   003A18  0E00               	movlw	0
  4645   003A1A  2365               	addwfc	(??_labs+1)& (0+255),f,b
  4646   003A1C  2366               	addwfc	(??_labs+2)& (0+255),f,b
  4647   003A1E  2367               	addwfc	(??_labs+3)& (0+255),f,b
  4648   003A20  C064  F060         	movff	??_labs,?_labs
  4649   003A24  C065  F061         	movff	??_labs+1,?_labs+1
  4650   003A28  C066  F062         	movff	??_labs+2,?_labs+2
  4651   003A2C  C067  F063         	movff	??_labs+3,?_labs+3
  4652   003A30                     l1176:
  4653                           
  4654                           ; BSR set to: 0
  4655   003A30  0012               	return		;funcret
  4656   003A32                     __end_of_labs:
  4657                           	callstack 0
  4658                           
  4659 ;; *************** function _floorf *****************
  4660 ;; Defined at:
  4661 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/floorf.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  x               4   25[BANK0 ] float 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  u               4   41[BANK0 ] struct .
  4666 ;;  m               4   35[BANK0 ] unsigned long 
  4667 ;;  e               2   39[BANK0 ] int 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  4   25[BANK0 ] float 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4677 ;;      Params:         0       4       0       0
  4678 ;;      Locals:         0      10       0       0
  4679 ;;      Temps:          0       6       0       0
  4680 ;;      Totals:         0      20       0       0
  4681 ;;Total ram usage:       20 bytes
  4682 ;; Hardware stack levels used: 1
  4683 ;; Hardware stack levels required when called: 3
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_efgtoa
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text13
  4692   00265A                     __ptext13:
  4693                           	callstack 0
  4694   00265A                     _floorf:
  4695                           	callstack 23
  4696   00265A  C02C  F089         	movff	floorf@F521,floorf@u
  4697   00265E  C02D  F08A         	movff	floorf@F521+1,floorf@u+1
  4698   002662  C02E  F08B         	movff	floorf@F521+2,floorf@u+2
  4699   002666  C02F  F08C         	movff	floorf@F521+3,floorf@u+3
  4700   00266A  C079  F089         	movff	floorf@x,floorf@u
  4701   00266E  C07A  F08A         	movff	floorf@x+1,floorf@u+1
  4702   002672  C07B  F08B         	movff	floorf@x+2,floorf@u+2
  4703   002676  C07C  F08C         	movff	floorf@x+3,floorf@u+3
  4704   00267A  0E81               	movlw	129
  4705   00267C  0100               	movlb	0	; () banked
  4706   00267E  6F7D               	movwf	??_floorf& (0+255),b
  4707   002680  0EFF               	movlw	255
  4708   002682  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4709   002684  C089  F07F         	movff	floorf@u,??_floorf+2
  4710   002688  C08A  F080         	movff	floorf@u+1,??_floorf+3
  4711   00268C  C08B  F081         	movff	floorf@u+2,??_floorf+4
  4712   002690  C08C  F082         	movff	floorf@u+3,??_floorf+5
  4713   002694  0E18               	movlw	24
  4714   002696  EF52  F013         	goto	u6800
  4715   00269A                     u6805:
  4716   00269A  90D8               	bcf	status,0,c
  4717   00269C  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  4718   00269E  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4719   0026A0  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4720   0026A2  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4721   0026A4                     u6800:
  4722   0026A4  2EE8               	decfsz	wreg,f,c
  4723   0026A6  EF4D  F013         	goto	u6805
  4724   0026AA  517F               	movf	(??_floorf+2)& (0+255),w,b
  4725   0026AC  257D               	addwf	??_floorf& (0+255),w,b
  4726   0026AE  6F87               	movwf	floorf@e& (0+255),b
  4727   0026B0  0E00               	movlw	0
  4728   0026B2  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  4729   0026B4  6F88               	movwf	(floorf@e+1)& (0+255),b
  4730   0026B6  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4731   0026B8  EF67  F013         	goto	u6811
  4732   0026BC  5188               	movf	(floorf@e+1)& (0+255),w,b
  4733   0026BE  E109               	bnz	u6810
  4734   0026C0  0E17               	movlw	23
  4735   0026C2  5D87               	subwf	floorf@e& (0+255),w,b
  4736   0026C4  A0D8               	btfss	status,0,c
  4737   0026C6  EF67  F013         	goto	u6811
  4738   0026CA  EF69  F013         	goto	u6810
  4739   0026CE                     u6811:
  4740   0026CE  EF73  F013         	goto	l5663
  4741   0026D2                     u6810:
  4742   0026D2                     l5661:
  4743                           
  4744                           ; BSR set to: 0
  4745   0026D2  C079  F079         	movff	floorf@x,?_floorf
  4746   0026D6  C07A  F07A         	movff	floorf@x+1,?_floorf+1
  4747   0026DA  C07B  F07B         	movff	floorf@x+2,?_floorf+2
  4748   0026DE  C07C  F07C         	movff	floorf@x+3,?_floorf+3
  4749   0026E2  EF37  F014         	goto	l1162
  4750   0026E6                     l5663:
  4751                           
  4752                           ; BSR set to: 0
  4753   0026E6  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4754   0026E8  EF78  F013         	goto	u6821
  4755   0026EC  EF7A  F013         	goto	u6820
  4756   0026F0                     u6821:
  4757   0026F0  EFEB  F013         	goto	l5673
  4758   0026F4                     u6820:
  4759   0026F4                     
  4760                           ; BSR set to: 0
  4761   0026F4  C087  F07D         	movff	floorf@e,??_floorf
  4762   0026F8  0EFF               	movlw	255
  4763   0026FA  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4764   0026FC  0EFF               	movlw	255
  4765   0026FE  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4766   002700  0E7F               	movlw	127
  4767   002702  6F80               	movwf	(??_floorf+3)& (0+255),b
  4768   002704  0E00               	movlw	0
  4769   002706  6F81               	movwf	(??_floorf+4)& (0+255),b
  4770   002708                     u6835:
  4771   002708  677D               	tstfsz	??_floorf& (0+255),b
  4772   00270A  EF89  F013         	goto	u6836
  4773   00270E  EF91  F013         	goto	u6837
  4774   002712                     u6836:
  4775   002712  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  4776   002714  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4777   002716  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4778   002718  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4779   00271A  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4780   00271C  2F7D               	decfsz	??_floorf& (0+255),f,b
  4781   00271E  EF84  F013         	goto	u6835
  4782   002722                     u6837:
  4783   002722  C07E  F083         	movff	??_floorf+1,floorf@m
  4784   002726  C07F  F084         	movff	??_floorf+2,floorf@m+1
  4785   00272A  C080  F085         	movff	??_floorf+3,floorf@m+2
  4786   00272E  C081  F086         	movff	??_floorf+4,floorf@m+3
  4787   002732  0100               	movlb	0	; () banked
  4788   002734  5183               	movf	floorf@m& (0+255),w,b
  4789   002736  1589               	andwf	floorf@u& (0+255),w,b
  4790   002738  6F7D               	movwf	??_floorf& (0+255),b
  4791   00273A  5184               	movf	(floorf@m+1)& (0+255),w,b
  4792   00273C  158A               	andwf	(floorf@u+1)& (0+255),w,b
  4793   00273E  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4794   002740  5185               	movf	(floorf@m+2)& (0+255),w,b
  4795   002742  158B               	andwf	(floorf@u+2)& (0+255),w,b
  4796   002744  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4797   002746  5186               	movf	(floorf@m+3)& (0+255),w,b
  4798   002748  158C               	andwf	(floorf@u+3)& (0+255),w,b
  4799   00274A  6F80               	movwf	(??_floorf+3)& (0+255),b
  4800   00274C  517D               	movf	??_floorf& (0+255),w,b
  4801   00274E  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4802   002750  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4803   002752  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4804   002754  A4D8               	btfss	status,2,c
  4805   002756  EFAF  F013         	goto	u6841
  4806   00275A  EFB1  F013         	goto	u6840
  4807   00275E                     u6841:
  4808   00275E  EFB3  F013         	goto	l5669
  4809   002762                     u6840:
  4810   002762  EF69  F013         	goto	l5661
  4811   002766                     l5669:
  4812                           
  4813                           ; BSR set to: 0
  4814   002766  C089  F07D         	movff	floorf@u,??_floorf
  4815   00276A  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  4816   00276E  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  4817   002772  C08C  F080         	movff	floorf@u+3,??_floorf+3
  4818   002776  0E20               	movlw	32
  4819   002778  EFC3  F013         	goto	u6850
  4820   00277C                     u6855:
  4821   00277C  90D8               	bcf	status,0,c
  4822   00277E  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4823   002780  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4824   002782  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4825   002784  337D               	rrcf	??_floorf& (0+255),f,b
  4826   002786                     u6850:
  4827   002786  2EE8               	decfsz	wreg,f,c
  4828   002788  EFBE  F013         	goto	u6855
  4829   00278C  517D               	movf	??_floorf& (0+255),w,b
  4830   00278E  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4831   002790  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4832   002792  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4833   002794  B4D8               	btfsc	status,2,c
  4834   002796  EFCF  F013         	goto	u6861
  4835   00279A  EFD1  F013         	goto	u6860
  4836   00279E                     u6861:
  4837   00279E  EFD9  F013         	goto	l1165
  4838   0027A2                     u6860:
  4839   0027A2                     
  4840                           ; BSR set to: 0
  4841   0027A2  5183               	movf	floorf@m& (0+255),w,b
  4842   0027A4  2789               	addwf	floorf@u& (0+255),f,b
  4843   0027A6  5184               	movf	(floorf@m+1)& (0+255),w,b
  4844   0027A8  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  4845   0027AA  5185               	movf	(floorf@m+2)& (0+255),w,b
  4846   0027AC  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  4847   0027AE  5186               	movf	(floorf@m+3)& (0+255),w,b
  4848   0027B0  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  4849   0027B2                     l1165:
  4850                           
  4851                           ; BSR set to: 0
  4852   0027B2  1D83               	comf	floorf@m& (0+255),w,b
  4853   0027B4  6F7D               	movwf	??_floorf& (0+255),b
  4854   0027B6  1D84               	comf	(floorf@m+1)& (0+255),w,b
  4855   0027B8  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4856   0027BA  1D85               	comf	(floorf@m+2)& (0+255),w,b
  4857   0027BC  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4858   0027BE  1D86               	comf	(floorf@m+3)& (0+255),w,b
  4859   0027C0  6F80               	movwf	(??_floorf+3)& (0+255),b
  4860   0027C2  517D               	movf	??_floorf& (0+255),w,b
  4861   0027C4  1789               	andwf	floorf@u& (0+255),f,b
  4862   0027C6  517E               	movf	(??_floorf+1)& (0+255),w,b
  4863   0027C8  178A               	andwf	(floorf@u+1)& (0+255),f,b
  4864   0027CA  517F               	movf	(??_floorf+2)& (0+255),w,b
  4865   0027CC  178B               	andwf	(floorf@u+2)& (0+255),f,b
  4866   0027CE  5180               	movf	(??_floorf+3)& (0+255),w,b
  4867   0027D0  178C               	andwf	(floorf@u+3)& (0+255),f,b
  4868   0027D2  EF2F  F014         	goto	l5681
  4869   0027D6                     l5673:
  4870                           
  4871                           ; BSR set to: 0
  4872   0027D6  C089  F07D         	movff	floorf@u,??_floorf
  4873   0027DA  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  4874   0027DE  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  4875   0027E2  C08C  F080         	movff	floorf@u+3,??_floorf+3
  4876   0027E6  0E20               	movlw	32
  4877   0027E8  EFFB  F013         	goto	u6870
  4878   0027EC                     u6875:
  4879   0027EC  90D8               	bcf	status,0,c
  4880   0027EE  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4881   0027F0  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4882   0027F2  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4883   0027F4  337D               	rrcf	??_floorf& (0+255),f,b
  4884   0027F6                     u6870:
  4885   0027F6  2EE8               	decfsz	wreg,f,c
  4886   0027F8  EFF6  F013         	goto	u6875
  4887   0027FC  517D               	movf	??_floorf& (0+255),w,b
  4888   0027FE  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4889   002800  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4890   002802  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4891   002804  A4D8               	btfss	status,2,c
  4892   002806  EF07  F014         	goto	u6881
  4893   00280A  EF09  F014         	goto	u6880
  4894   00280E                     u6881:
  4895   00280E  EF13  F014         	goto	l5677
  4896   002812                     u6880:
  4897   002812                     
  4898                           ; BSR set to: 0
  4899   002812  0E00               	movlw	0
  4900   002814  6F89               	movwf	floorf@u& (0+255),b
  4901   002816  0E00               	movlw	0
  4902   002818  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4903   00281A  0E00               	movlw	0
  4904   00281C  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4905   00281E  0E00               	movlw	0
  4906   002820  6F8C               	movwf	(floorf@u+3)& (0+255),b
  4907   002822  EF2F  F014         	goto	l5681
  4908   002826                     l5677:
  4909                           
  4910                           ; BSR set to: 0
  4911   002826  90D8               	bcf	status,0,c
  4912   002828  3589               	rlcf	floorf@u& (0+255),w,b
  4913   00282A  6F7D               	movwf	??_floorf& (0+255),b
  4914   00282C  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  4915   00282E  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4916   002830  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  4917   002832  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4918   002834  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  4919   002836  6F80               	movwf	(??_floorf+3)& (0+255),b
  4920   002838  517D               	movf	??_floorf& (0+255),w,b
  4921   00283A  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4922   00283C  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4923   00283E  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4924   002840  B4D8               	btfsc	status,2,c
  4925   002842  EF25  F014         	goto	u6891
  4926   002846  EF27  F014         	goto	u6890
  4927   00284A                     u6891:
  4928   00284A  EF2F  F014         	goto	l5681
  4929   00284E                     u6890:
  4930   00284E                     
  4931                           ; BSR set to: 0
  4932   00284E  0E00               	movlw	0
  4933   002850  6F89               	movwf	floorf@u& (0+255),b
  4934   002852  0E00               	movlw	0
  4935   002854  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4936   002856  0E80               	movlw	128
  4937   002858  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4938   00285A  0EBF               	movlw	191
  4939   00285C  6F8C               	movwf	(floorf@u+3)& (0+255),b
  4940   00285E                     l5681:
  4941                           
  4942                           ; BSR set to: 0
  4943   00285E  C089  F079         	movff	floorf@u,?_floorf
  4944   002862  C08A  F07A         	movff	floorf@u+1,?_floorf+1
  4945   002866  C08B  F07B         	movff	floorf@u+2,?_floorf+2
  4946   00286A  C08C  F07C         	movff	floorf@u+3,?_floorf+3
  4947   00286E                     l1162:
  4948                           
  4949                           ; BSR set to: 0
  4950   00286E  0012               	return		;funcret
  4951   002870                     __end_of_floorf:
  4952                           	callstack 0
  4953                           
  4954 ;; *************** function ___fpclassifyf *****************
  4955 ;; Defined at:
  4956 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/__fpclassifyf.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  x               4    0[BANK0 ] float 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  u               4   10[BANK0 ] struct .
  4961 ;;  e               2    8[BANK0 ] int 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  2    0[BANK0 ] int 
  4964 ;; Registers used:
  4965 ;;		wreg, status,2, status,0
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4971 ;;      Params:         0       4       0       0
  4972 ;;      Locals:         0       6       0       0
  4973 ;;      Temps:          0       4       0       0
  4974 ;;      Totals:         0      14       0       0
  4975 ;;Total ram usage:       14 bytes
  4976 ;; Hardware stack levels used: 1
  4977 ;; Hardware stack levels required when called: 3
  4978 ;; This function calls:
  4979 ;;		Nothing
  4980 ;; This function is called by:
  4981 ;;		_efgtoa
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text14
  4986   00313E                     __ptext14:
  4987                           	callstack 0
  4988   00313E                     ___fpclassifyf:
  4989                           	callstack 23
  4990   00313E  C0E4  F06A         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4991   003142  C0E5  F06B         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4992   003146  C0E6  F06C         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4993   00314A  C0E7  F06D         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4994   00314E  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  4995   003152  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4996   003156  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4997   00315A  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4998   00315E  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  4999   003162  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5000   003166  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5001   00316A  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5002   00316E  0E18               	movlw	24
  5003   003170  EFC0  F018         	goto	u6710
  5004   003174                     u6715:
  5005   003174  0100               	movlb	0	; () banked
  5006   003176  90D8               	bcf	status,0,c
  5007   003178  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5008   00317A  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5009   00317C  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5010   00317E  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  5011   003180                     u6710:
  5012   003180  2EE8               	decfsz	wreg,f,c
  5013   003182  EFBA  F018         	goto	u6715
  5014   003186  5164               	movf	??___fpclassifyf& (0+255),w,b
  5015   003188  6F68               	movwf	___fpclassifyf@e& (0+255),b
  5016   00318A  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5017   00318C  5168               	movf	___fpclassifyf@e& (0+255),w,b
  5018   00318E  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5019   003190  A4D8               	btfss	status,2,c
  5020   003192  EFCD  F018         	goto	u6721
  5021   003196  EFCF  F018         	goto	u6720
  5022   00319A                     u6721:
  5023   00319A  EFEF  F018         	goto	l5635
  5024   00319E                     u6720:
  5025   00319E                     
  5026                           ; BSR set to: 0
  5027   00319E  90D8               	bcf	status,0,c
  5028   0031A0  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5029   0031A2  6F64               	movwf	??___fpclassifyf& (0+255),b
  5030   0031A4  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5031   0031A6  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  5032   0031A8  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5033   0031AA  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  5034   0031AC  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5035   0031AE  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  5036   0031B0  5164               	movf	??___fpclassifyf& (0+255),w,b
  5037   0031B2  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5038   0031B4  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5039   0031B6  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5040   0031B8  A4D8               	btfss	status,2,c
  5041   0031BA  EFE1  F018         	goto	u6731
  5042   0031BE  EFE3  F018         	goto	u6730
  5043   0031C2                     u6731:
  5044   0031C2  EFE9  F018         	goto	l5631
  5045   0031C6                     u6730:
  5046   0031C6                     
  5047                           ; BSR set to: 0
  5048   0031C6  0E00               	movlw	0
  5049   0031C8  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5050   0031CA  0E02               	movlw	2
  5051   0031CC  6F60               	movwf	?___fpclassifyf& (0+255),b
  5052   0031CE  EF1E  F019         	goto	l1155
  5053   0031D2                     l5631:
  5054                           
  5055                           ; BSR set to: 0
  5056   0031D2  0E00               	movlw	0
  5057   0031D4  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5058   0031D6  0E03               	movlw	3
  5059   0031D8  6F60               	movwf	?___fpclassifyf& (0+255),b
  5060   0031DA  EF1E  F019         	goto	l1155
  5061   0031DE                     l5635:
  5062                           
  5063                           ; BSR set to: 0
  5064   0031DE  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5065   0031E0  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5066   0031E2  A4D8               	btfss	status,2,c
  5067   0031E4  EFF6  F018         	goto	u6741
  5068   0031E8  EFF8  F018         	goto	u6740
  5069   0031EC                     u6741:
  5070   0031EC  EF1A  F019         	goto	l5641
  5071   0031F0                     u6740:
  5072   0031F0                     
  5073                           ; BSR set to: 0
  5074   0031F0  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5075   0031F4  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5076   0031F8  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5077   0031FC  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5078   003200  0E09               	movlw	9
  5079   003202                     u6755:
  5080   003202  90D8               	bcf	status,0,c
  5081   003204  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5082   003206  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5083   003208  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5084   00320A  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5085   00320C  2EE8               	decfsz	wreg,f,c
  5086   00320E  EF01  F019         	goto	u6755
  5087   003212  5164               	movf	??___fpclassifyf& (0+255),w,b
  5088   003214  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5089   003216  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5090   003218  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5091   00321A  B4D8               	btfsc	status,2,c
  5092   00321C  EF12  F019         	goto	u6761
  5093   003220  EF15  F019         	goto	u6760
  5094   003224                     u6761:
  5095   003224  0E01               	movlw	1
  5096   003226  EF16  F019         	goto	u6770
  5097   00322A                     u6760:
  5098   00322A  0E00               	movlw	0
  5099   00322C                     u6770:
  5100   00322C  6F60               	movwf	?___fpclassifyf& (0+255),b
  5101   00322E  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5102   003230  EF1E  F019         	goto	l1155
  5103   003234                     l5641:
  5104                           
  5105                           ; BSR set to: 0
  5106   003234  0E00               	movlw	0
  5107   003236  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5108   003238  0E04               	movlw	4
  5109   00323A  6F60               	movwf	?___fpclassifyf& (0+255),b
  5110   00323C                     l1155:
  5111                           
  5112                           ; BSR set to: 0
  5113   00323C  0012               	return		;funcret
  5114   00323E                     __end_of___fpclassifyf:
  5115                           	callstack 0
  5116                           
  5117 ;; *************** function ___flsub *****************
  5118 ;; Defined at:
  5119 ;;		line 245 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcadd.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  b               4   39[BANK0 ] int 
  5122 ;;  a               4   43[BANK0 ] int 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  4   39[BANK0 ] int 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5134 ;;      Params:         0       8       0       0
  5135 ;;      Locals:         0       0       0       0
  5136 ;;      Temps:          0       0       0       0
  5137 ;;      Totals:         0       8       0       0
  5138 ;;Total ram usage:        8 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; Hardware stack levels required when called: 4
  5141 ;; This function calls:
  5142 ;;		___fladd
  5143 ;; This function is called by:
  5144 ;;		_efgtoa
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text15
  5149   003C0A                     __ptext15:
  5150                           	callstack 0
  5151   003C0A                     ___flsub:
  5152                           	callstack 22
  5153   003C0A  0E00               	movlw	0
  5154   003C0C  0100               	movlb	0	; () banked
  5155   003C0E  1B8B               	xorwf	___flsub@a& (0+255),f,b
  5156   003C10  0E00               	movlw	0
  5157   003C12  1B8C               	xorwf	(___flsub@a+1)& (0+255),f,b
  5158   003C14  0E00               	movlw	0
  5159   003C16  1B8D               	xorwf	(___flsub@a+2)& (0+255),f,b
  5160   003C18  0E80               	movlw	128
  5161   003C1A  1B8E               	xorwf	(___flsub@a+3)& (0+255),f,b
  5162   003C1C                     
  5163                           ; BSR set to: 0
  5164   003C1C  C087  F060         	movff	___flsub@b,___fladd@b
  5165   003C20  C088  F061         	movff	___flsub@b+1,___fladd@b+1
  5166   003C24  C089  F062         	movff	___flsub@b+2,___fladd@b+2
  5167   003C28  C08A  F063         	movff	___flsub@b+3,___fladd@b+3
  5168   003C2C  C08B  F064         	movff	___flsub@a,___fladd@a
  5169   003C30  C08C  F065         	movff	___flsub@a+1,___fladd@a+1
  5170   003C34  C08D  F066         	movff	___flsub@a+2,___fladd@a+2
  5171   003C38  C08E  F067         	movff	___flsub@a+3,___fladd@a+3
  5172   003C3C  EC8A  F006         	call	___fladd	;wreg free
  5173   003C40  C060  F087         	movff	?___fladd,?___flsub
  5174   003C44  C061  F088         	movff	?___fladd+1,?___flsub+1
  5175   003C48  C062  F089         	movff	?___fladd+2,?___flsub+2
  5176   003C4C  C063  F08A         	movff	?___fladd+3,?___flsub+3
  5177   003C50  0012               	return		;funcret
  5178   003C52                     __end_of___flsub:
  5179                           	callstack 0
  5180                           
  5181 ;; *************** function ___fladd *****************
  5182 ;; Defined at:
  5183 ;;		line 10 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcadd.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  b               4    0[BANK0 ] int 
  5186 ;;  a               4    4[BANK0 ] int 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  grs             1   15[BANK0 ] unsigned char 
  5189 ;;  bexp            1   14[BANK0 ] unsigned char 
  5190 ;;  aexp            1   13[BANK0 ] unsigned char 
  5191 ;;  signs           1   12[BANK0 ] unsigned char 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  4    0[BANK0 ] unsigned char 
  5194 ;; Registers used:
  5195 ;;		wreg, status,2, status,0
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5201 ;;      Params:         0       8       0       0
  5202 ;;      Locals:         0       4       0       0
  5203 ;;      Temps:          0       4       0       0
  5204 ;;      Totals:         0      16       0       0
  5205 ;;Total ram usage:       16 bytes
  5206 ;; Hardware stack levels used: 1
  5207 ;; Hardware stack levels required when called: 3
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		___flsub
  5212 ;;		_efgtoa
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text16
  5217   000D14                     __ptext16:
  5218                           	callstack 0
  5219   000D14                     ___fladd:
  5220                           	callstack 22
  5221   000D14  0100               	movlb	0	; () banked
  5222   000D16  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5223   000D18  0B80               	andlw	128
  5224   000D1A  6F6C               	movwf	___fladd@signs& (0+255),b
  5225   000D1C  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5226   000D1E  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  5227   000D20  6F6E               	movwf	___fladd@bexp& (0+255),b
  5228   000D22                     
  5229                           ; BSR set to: 0
  5230   000D22  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5231   000D24  EF96  F006         	goto	u5711
  5232   000D28  EF98  F006         	goto	u5710
  5233   000D2C                     u5711:
  5234   000D2C  EF99  F006         	goto	l5055
  5235   000D30                     u5710:
  5236   000D30                     
  5237                           ; BSR set to: 0
  5238   000D30  816E               	bsf	___fladd@bexp& (0+255),0,b
  5239   000D32                     l5055:
  5240                           
  5241                           ; BSR set to: 0
  5242   000D32  516E               	movf	___fladd@bexp& (0+255),w,b
  5243   000D34  B4D8               	btfsc	status,2,c
  5244   000D36  EF9F  F006         	goto	u5721
  5245   000D3A  EFA1  F006         	goto	u5720
  5246   000D3E                     u5721:
  5247   000D3E  EFB5  F006         	goto	l5065
  5248   000D42                     u5720:
  5249   000D42                     
  5250                           ; BSR set to: 0
  5251   000D42  296E               	incf	___fladd@bexp& (0+255),w,b
  5252   000D44  A4D8               	btfss	status,2,c
  5253   000D46  EFA7  F006         	goto	u5731
  5254   000D4A  EFA9  F006         	goto	u5730
  5255   000D4E                     u5731:
  5256   000D4E  EFB1  F006         	goto	l5061
  5257   000D52                     u5730:
  5258   000D52                     
  5259                           ; BSR set to: 0
  5260   000D52  0E00               	movlw	0
  5261   000D54  6F60               	movwf	___fladd@b& (0+255),b
  5262   000D56  0E00               	movlw	0
  5263   000D58  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5264   000D5A  0E00               	movlw	0
  5265   000D5C  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5266   000D5E  0E00               	movlw	0
  5267   000D60  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5268   000D62                     l5061:
  5269                           
  5270                           ; BSR set to: 0
  5271   000D62  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5272   000D64                     
  5273                           ; BSR set to: 0
  5274   000D64  6B63               	clrf	(___fladd@b+3)& (0+255),b
  5275   000D66  EFBD  F006         	goto	l5067
  5276   000D6A                     l5065:
  5277                           
  5278                           ; BSR set to: 0
  5279   000D6A  0E00               	movlw	0
  5280   000D6C  6F60               	movwf	___fladd@b& (0+255),b
  5281   000D6E  0E00               	movlw	0
  5282   000D70  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5283   000D72  0E00               	movlw	0
  5284   000D74  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5285   000D76  0E00               	movlw	0
  5286   000D78  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5287   000D7A                     l5067:
  5288                           
  5289                           ; BSR set to: 0
  5290   000D7A  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5291   000D7C  0B80               	andlw	128
  5292   000D7E  6F6D               	movwf	___fladd@aexp& (0+255),b
  5293   000D80                     
  5294                           ; BSR set to: 0
  5295   000D80  516C               	movf	___fladd@signs& (0+255),w,b
  5296   000D82  196D               	xorwf	___fladd@aexp& (0+255),w,b
  5297   000D84  B4D8               	btfsc	status,2,c
  5298   000D86  EFC7  F006         	goto	u5741
  5299   000D8A  EFC9  F006         	goto	u5740
  5300   000D8E                     u5741:
  5301   000D8E  EFCA  F006         	goto	l5073
  5302   000D92                     u5740:
  5303   000D92                     
  5304                           ; BSR set to: 0
  5305   000D92  8D6C               	bsf	___fladd@signs& (0+255),6,b
  5306   000D94                     l5073:
  5307                           
  5308                           ; BSR set to: 0
  5309   000D94  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5310   000D96  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  5311   000D98  6F6D               	movwf	___fladd@aexp& (0+255),b
  5312   000D9A                     
  5313                           ; BSR set to: 0
  5314   000D9A  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
  5315   000D9C  EFD2  F006         	goto	u5751
  5316   000DA0  EFD4  F006         	goto	u5750
  5317   000DA4                     u5751:
  5318   000DA4  EFD5  F006         	goto	l5079
  5319   000DA8                     u5750:
  5320   000DA8                     
  5321                           ; BSR set to: 0
  5322   000DA8  816D               	bsf	___fladd@aexp& (0+255),0,b
  5323   000DAA                     l5079:
  5324                           
  5325                           ; BSR set to: 0
  5326   000DAA  516D               	movf	___fladd@aexp& (0+255),w,b
  5327   000DAC  B4D8               	btfsc	status,2,c
  5328   000DAE  EFDB  F006         	goto	u5761
  5329   000DB2  EFDD  F006         	goto	u5760
  5330   000DB6                     u5761:
  5331   000DB6  EFF1  F006         	goto	l5089
  5332   000DBA                     u5760:
  5333   000DBA                     
  5334                           ; BSR set to: 0
  5335   000DBA  296D               	incf	___fladd@aexp& (0+255),w,b
  5336   000DBC  A4D8               	btfss	status,2,c
  5337   000DBE  EFE3  F006         	goto	u5771
  5338   000DC2  EFE5  F006         	goto	u5770
  5339   000DC6                     u5771:
  5340   000DC6  EFED  F006         	goto	l5085
  5341   000DCA                     u5770:
  5342   000DCA                     
  5343                           ; BSR set to: 0
  5344   000DCA  0E00               	movlw	0
  5345   000DCC  6F64               	movwf	___fladd@a& (0+255),b
  5346   000DCE  0E00               	movlw	0
  5347   000DD0  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5348   000DD2  0E00               	movlw	0
  5349   000DD4  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5350   000DD6  0E00               	movlw	0
  5351   000DD8  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5352   000DDA                     l5085:
  5353                           
  5354                           ; BSR set to: 0
  5355   000DDA  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  5356   000DDC                     
  5357                           ; BSR set to: 0
  5358   000DDC  6B67               	clrf	(___fladd@a+3)& (0+255),b
  5359   000DDE  EFF9  F006         	goto	l5091
  5360   000DE2                     l5089:
  5361                           
  5362                           ; BSR set to: 0
  5363   000DE2  0E00               	movlw	0
  5364   000DE4  6F64               	movwf	___fladd@a& (0+255),b
  5365   000DE6  0E00               	movlw	0
  5366   000DE8  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5367   000DEA  0E00               	movlw	0
  5368   000DEC  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5369   000DEE  0E00               	movlw	0
  5370   000DF0  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5371   000DF2                     l5091:
  5372                           
  5373                           ; BSR set to: 0
  5374   000DF2  516E               	movf	___fladd@bexp& (0+255),w,b
  5375   000DF4  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  5376   000DF6  B0D8               	btfsc	status,0,c
  5377   000DF8  EF00  F007         	goto	u5781
  5378   000DFC  EF02  F007         	goto	u5780
  5379   000E00                     u5781:
  5380   000E00  EF29  F007         	goto	l5127
  5381   000E04                     u5780:
  5382   000E04                     
  5383                           ; BSR set to: 0
  5384   000E04  AD6C               	btfss	___fladd@signs& (0+255),6,b
  5385   000E06  EF07  F007         	goto	u5791
  5386   000E0A  EF09  F007         	goto	u5790
  5387   000E0E                     u5791:
  5388   000E0E  EF0B  F007         	goto	l5097
  5389   000E12                     u5790:
  5390   000E12                     
  5391                           ; BSR set to: 0
  5392   000E12  0E80               	movlw	128
  5393   000E14  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5394   000E16                     l5097:
  5395                           
  5396                           ; BSR set to: 0
  5397   000E16  C06E  F06F         	movff	___fladd@bexp,___fladd@grs
  5398   000E1A                     
  5399                           ; BSR set to: 0
  5400   000E1A  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5401   000E1E                     
  5402                           ; BSR set to: 0
  5403   000E1E  C06F  F06D         	movff	___fladd@grs,___fladd@aexp
  5404   000E22                     
  5405                           ; BSR set to: 0
  5406   000E22  C060  F06F         	movff	___fladd@b,___fladd@grs
  5407   000E26                     
  5408                           ; BSR set to: 0
  5409   000E26  C064  F060         	movff	___fladd@a,___fladd@b
  5410   000E2A                     
  5411                           ; BSR set to: 0
  5412   000E2A  C06F  F064         	movff	___fladd@grs,___fladd@a
  5413   000E2E                     
  5414                           ; BSR set to: 0
  5415   000E2E  C061  F06F         	movff	___fladd@b+1,___fladd@grs
  5416   000E32                     
  5417                           ; BSR set to: 0
  5418   000E32  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  5419   000E36                     
  5420                           ; BSR set to: 0
  5421   000E36  C06F  F065         	movff	___fladd@grs,___fladd@a+1
  5422   000E3A                     
  5423                           ; BSR set to: 0
  5424   000E3A  C062  F06F         	movff	___fladd@b+2,___fladd@grs
  5425   000E3E                     
  5426                           ; BSR set to: 0
  5427   000E3E  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  5428   000E42                     
  5429                           ; BSR set to: 0
  5430   000E42  C06F  F066         	movff	___fladd@grs,___fladd@a+2
  5431   000E46                     
  5432                           ; BSR set to: 0
  5433   000E46  C063  F06F         	movff	___fladd@b+3,___fladd@grs
  5434   000E4A                     
  5435                           ; BSR set to: 0
  5436   000E4A  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  5437   000E4E                     
  5438                           ; BSR set to: 0
  5439   000E4E  C06F  F067         	movff	___fladd@grs,___fladd@a+3
  5440   000E52                     l5127:
  5441                           
  5442                           ; BSR set to: 0
  5443   000E52  6B6F               	clrf	___fladd@grs& (0+255),b
  5444   000E54  516E               	movf	___fladd@bexp& (0+255),w,b
  5445   000E56  C06D  F068         	movff	___fladd@aexp,??___fladd
  5446   000E5A  6B69               	clrf	(??___fladd+1)& (0+255),b
  5447   000E5C  5F68               	subwf	??___fladd& (0+255),f,b
  5448   000E5E  0E00               	movlw	0
  5449   000E60  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  5450   000E62  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  5451   000E64  EF3D  F007         	goto	u5801
  5452   000E68  5169               	movf	(??___fladd+1)& (0+255),w,b
  5453   000E6A  E109               	bnz	u5800
  5454   000E6C  0E1A               	movlw	26
  5455   000E6E  5D68               	subwf	??___fladd& (0+255),w,b
  5456   000E70  A0D8               	btfss	status,0,c
  5457   000E72  EF3D  F007         	goto	u5801
  5458   000E76  EF3F  F007         	goto	u5800
  5459   000E7A                     u5801:
  5460   000E7A  EF76  F007         	goto	l878
  5461   000E7E                     u5800:
  5462   000E7E                     
  5463                           ; BSR set to: 0
  5464   000E7E  5160               	movf	___fladd@b& (0+255),w,b
  5465   000E80  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5466   000E82  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5467   000E84  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5468   000E86  A4D8               	btfss	status,2,c
  5469   000E88  EF48  F007         	goto	u5811
  5470   000E8C  EF4B  F007         	goto	u5810
  5471   000E90                     u5811:
  5472   000E90  0E01               	movlw	1
  5473   000E92  EF4C  F007         	goto	u5820
  5474   000E96                     u5810:
  5475   000E96  0E00               	movlw	0
  5476   000E98                     u5820:
  5477   000E98  6F6F               	movwf	___fladd@grs& (0+255),b
  5478   000E9A                     
  5479                           ; BSR set to: 0
  5480   000E9A  0E00               	movlw	0
  5481   000E9C  6F60               	movwf	___fladd@b& (0+255),b
  5482   000E9E  0E00               	movlw	0
  5483   000EA0  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5484   000EA2  0E00               	movlw	0
  5485   000EA4  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5486   000EA6  0E00               	movlw	0
  5487   000EA8  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5488   000EAA                     
  5489                           ; BSR set to: 0
  5490   000EAA  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5491   000EAE  EF7F  F007         	goto	l877
  5492   000EB2                     l879:
  5493                           
  5494                           ; BSR set to: 0
  5495   000EB2  A16F               	btfss	___fladd@grs& (0+255),0,b
  5496   000EB4  EF5E  F007         	goto	u5831
  5497   000EB8  EF60  F007         	goto	u5830
  5498   000EBC                     u5831:
  5499   000EBC  EF66  F007         	goto	l5137
  5500   000EC0                     u5830:
  5501   000EC0                     
  5502                           ; BSR set to: 0
  5503   000EC0  90D8               	bcf	status,0,c
  5504   000EC2  316F               	rrcf	___fladd@grs& (0+255),w,b
  5505   000EC4  0901               	iorlw	1
  5506   000EC6  6F6F               	movwf	___fladd@grs& (0+255),b
  5507   000EC8  EF68  F007         	goto	l5139
  5508   000ECC                     l5137:
  5509                           
  5510                           ; BSR set to: 0
  5511   000ECC  90D8               	bcf	status,0,c
  5512   000ECE  336F               	rrcf	___fladd@grs& (0+255),f,b
  5513   000ED0                     l5139:
  5514                           
  5515                           ; BSR set to: 0
  5516   000ED0  A160               	btfss	___fladd@b& (0+255),0,b
  5517   000ED2  EF6D  F007         	goto	u5841
  5518   000ED6  EF6F  F007         	goto	u5840
  5519   000EDA                     u5841:
  5520   000EDA  EF70  F007         	goto	l5143
  5521   000EDE                     u5840:
  5522   000EDE                     
  5523                           ; BSR set to: 0
  5524   000EDE  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5525   000EE0                     l5143:
  5526                           
  5527                           ; BSR set to: 0
  5528   000EE0  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5529   000EE2  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5530   000EE4  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5531   000EE6  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5532   000EE8  3360               	rrcf	___fladd@b& (0+255),f,b
  5533   000EEA                     
  5534                           ; BSR set to: 0
  5535   000EEA  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5536   000EEC                     l878:
  5537                           
  5538                           ; BSR set to: 0
  5539   000EEC  516D               	movf	___fladd@aexp& (0+255),w,b
  5540   000EEE  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  5541   000EF0  A0D8               	btfss	status,0,c
  5542   000EF2  EF7D  F007         	goto	u5851
  5543   000EF6  EF7F  F007         	goto	u5850
  5544   000EFA                     u5851:
  5545   000EFA  EF59  F007         	goto	l879
  5546   000EFE                     u5850:
  5547   000EFE                     l877:
  5548                           
  5549                           ; BSR set to: 0
  5550   000EFE  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  5551   000F00  EF84  F007         	goto	u5861
  5552   000F04  EF86  F007         	goto	u5860
  5553   000F08                     u5861:
  5554   000F08  EFC6  F007         	goto	l5171
  5555   000F0C                     u5860:
  5556   000F0C                     
  5557                           ; BSR set to: 0
  5558   000F0C  516E               	movf	___fladd@bexp& (0+255),w,b
  5559   000F0E  A4D8               	btfss	status,2,c
  5560   000F10  EF8C  F007         	goto	u5871
  5561   000F14  EF8E  F007         	goto	u5870
  5562   000F18                     u5871:
  5563   000F18  EF98  F007         	goto	l5153
  5564   000F1C                     u5870:
  5565   000F1C                     
  5566                           ; BSR set to: 0
  5567   000F1C  0E00               	movlw	0
  5568   000F1E  6F60               	movwf	?___fladd& (0+255),b
  5569   000F20  0E00               	movlw	0
  5570   000F22  6F61               	movwf	(?___fladd+1)& (0+255),b
  5571   000F24  0E00               	movlw	0
  5572   000F26  6F62               	movwf	(?___fladd+2)& (0+255),b
  5573   000F28  0E00               	movlw	0
  5574   000F2A  6F63               	movwf	(?___fladd+3)& (0+255),b
  5575   000F2C  EFE5  F008         	goto	l886
  5576   000F30                     l5153:
  5577                           
  5578                           ; BSR set to: 0
  5579   000F30  5164               	movf	___fladd@a& (0+255),w,b
  5580   000F32  2760               	addwf	___fladd@b& (0+255),f,b
  5581   000F34  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5582   000F36  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5583   000F38  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5584   000F3A  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5585   000F3C  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5586   000F3E  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5587   000F40                     
  5588                           ; BSR set to: 0
  5589   000F40  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5590   000F42  EFA5  F007         	goto	u5881
  5591   000F46  EFA7  F007         	goto	u5880
  5592   000F4A                     u5881:
  5593   000F4A  EF53  F008         	goto	l891
  5594   000F4E                     u5880:
  5595   000F4E                     
  5596                           ; BSR set to: 0
  5597   000F4E  A16F               	btfss	___fladd@grs& (0+255),0,b
  5598   000F50  EFAC  F007         	goto	u5891
  5599   000F54  EFAE  F007         	goto	u5890
  5600   000F58                     u5891:
  5601   000F58  EFB4  F007         	goto	l5161
  5602   000F5C                     u5890:
  5603   000F5C                     
  5604                           ; BSR set to: 0
  5605   000F5C  90D8               	bcf	status,0,c
  5606   000F5E  316F               	rrcf	___fladd@grs& (0+255),w,b
  5607   000F60  0901               	iorlw	1
  5608   000F62  6F6F               	movwf	___fladd@grs& (0+255),b
  5609   000F64  EFB6  F007         	goto	l5163
  5610   000F68                     l5161:
  5611                           
  5612                           ; BSR set to: 0
  5613   000F68  90D8               	bcf	status,0,c
  5614   000F6A  336F               	rrcf	___fladd@grs& (0+255),f,b
  5615   000F6C                     l5163:
  5616                           
  5617                           ; BSR set to: 0
  5618   000F6C  A160               	btfss	___fladd@b& (0+255),0,b
  5619   000F6E  EFBB  F007         	goto	u5901
  5620   000F72  EFBD  F007         	goto	u5900
  5621   000F76                     u5901:
  5622   000F76  EFBE  F007         	goto	l5167
  5623   000F7A                     u5900:
  5624   000F7A                     
  5625                           ; BSR set to: 0
  5626   000F7A  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5627   000F7C                     l5167:
  5628                           
  5629                           ; BSR set to: 0
  5630   000F7C  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5631   000F7E  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5632   000F80  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5633   000F82  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5634   000F84  3360               	rrcf	___fladd@b& (0+255),f,b
  5635   000F86                     
  5636                           ; BSR set to: 0
  5637   000F86  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5638   000F88  EF53  F008         	goto	l891
  5639   000F8C                     l5171:
  5640                           
  5641                           ; BSR set to: 0
  5642   000F8C  5164               	movf	___fladd@a& (0+255),w,b
  5643   000F8E  5D60               	subwf	___fladd@b& (0+255),w,b
  5644   000F90  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5645   000F92  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  5646   000F94  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5647   000F96  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  5648   000F98  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5649   000F9A  0A80               	xorlw	128
  5650   000F9C  6F68               	movwf	??___fladd& (0+255),b
  5651   000F9E  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5652   000FA0  0A80               	xorlw	128
  5653   000FA2  5968               	subwfb	??___fladd& (0+255),w,b
  5654   000FA4  B0D8               	btfsc	status,0,c
  5655   000FA6  EFD7  F007         	goto	u5911
  5656   000FAA  EFD9  F007         	goto	u5910
  5657   000FAE                     u5911:
  5658   000FAE  EF04  F008         	goto	l5181
  5659   000FB2                     u5910:
  5660   000FB2                     
  5661                           ; BSR set to: 0
  5662   000FB2  5160               	movf	___fladd@b& (0+255),w,b
  5663   000FB4  5D64               	subwf	___fladd@a& (0+255),w,b
  5664   000FB6  6F68               	movwf	??___fladd& (0+255),b
  5665   000FB8  5161               	movf	(___fladd@b+1)& (0+255),w,b
  5666   000FBA  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  5667   000FBC  6F69               	movwf	(??___fladd+1)& (0+255),b
  5668   000FBE  5162               	movf	(___fladd@b+2)& (0+255),w,b
  5669   000FC0  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  5670   000FC2  6F6A               	movwf	(??___fladd+2)& (0+255),b
  5671   000FC4  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5672   000FC6  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  5673   000FC8  6F6B               	movwf	(??___fladd+3)& (0+255),b
  5674   000FCA  0EFF               	movlw	255
  5675   000FCC  2568               	addwf	??___fladd& (0+255),w,b
  5676   000FCE  6F60               	movwf	___fladd@b& (0+255),b
  5677   000FD0  0EFF               	movlw	255
  5678   000FD2  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  5679   000FD4  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5680   000FD6  0EFF               	movlw	255
  5681   000FD8  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  5682   000FDA  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5683   000FDC  0EFF               	movlw	255
  5684   000FDE  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  5685   000FE0  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5686   000FE2  0E80               	movlw	128
  5687   000FE4  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5688   000FE6                     
  5689                           ; BSR set to: 0
  5690   000FE6  6D6F               	negf	___fladd@grs& (0+255),b
  5691   000FE8                     
  5692                           ; BSR set to: 0
  5693   000FE8  516F               	movf	___fladd@grs& (0+255),w,b
  5694   000FEA  A4D8               	btfss	status,2,c
  5695   000FEC  EFFA  F007         	goto	u5921
  5696   000FF0  EFFC  F007         	goto	u5920
  5697   000FF4                     u5921:
  5698   000FF4  EF0C  F008         	goto	l894
  5699   000FF8                     u5920:
  5700   000FF8                     
  5701                           ; BSR set to: 0
  5702   000FF8  0E01               	movlw	1
  5703   000FFA  2760               	addwf	___fladd@b& (0+255),f,b
  5704   000FFC  0E00               	movlw	0
  5705   000FFE  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5706   001000  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5707   001002  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5708   001004  EF0C  F008         	goto	l894
  5709   001008                     l5181:
  5710                           
  5711                           ; BSR set to: 0
  5712   001008  5164               	movf	___fladd@a& (0+255),w,b
  5713   00100A  5F60               	subwf	___fladd@b& (0+255),f,b
  5714   00100C  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5715   00100E  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  5716   001010  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5717   001012  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  5718   001014  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5719   001016  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  5720   001018                     l894:
  5721                           
  5722                           ; BSR set to: 0
  5723   001018  5160               	movf	___fladd@b& (0+255),w,b
  5724   00101A  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5725   00101C  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5726   00101E  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5727   001020  A4D8               	btfss	status,2,c
  5728   001022  EF15  F008         	goto	u5931
  5729   001026  EF17  F008         	goto	u5930
  5730   00102A                     u5931:
  5731   00102A  EF4C  F008         	goto	l5205
  5732   00102E                     u5930:
  5733   00102E                     
  5734                           ; BSR set to: 0
  5735   00102E  516F               	movf	___fladd@grs& (0+255),w,b
  5736   001030  A4D8               	btfss	status,2,c
  5737   001032  EF1D  F008         	goto	u5941
  5738   001036  EF1F  F008         	goto	u5940
  5739   00103A                     u5941:
  5740   00103A  EF4C  F008         	goto	l5205
  5741   00103E                     u5940:
  5742   00103E                     
  5743                           ; BSR set to: 0
  5744   00103E  0E00               	movlw	0
  5745   001040  6F60               	movwf	?___fladd& (0+255),b
  5746   001042  0E00               	movlw	0
  5747   001044  6F61               	movwf	(?___fladd+1)& (0+255),b
  5748   001046  0E00               	movlw	0
  5749   001048  6F62               	movwf	(?___fladd+2)& (0+255),b
  5750   00104A  0E00               	movlw	0
  5751   00104C  6F63               	movwf	(?___fladd+3)& (0+255),b
  5752   00104E  EFE5  F008         	goto	l886
  5753   001052                     l5189:
  5754                           
  5755                           ; BSR set to: 0
  5756   001052  90D8               	bcf	status,0,c
  5757   001054  3760               	rlcf	___fladd@b& (0+255),f,b
  5758   001056  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  5759   001058  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  5760   00105A  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  5761   00105C                     
  5762                           ; BSR set to: 0
  5763   00105C  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5764   00105E  EF33  F008         	goto	u5951
  5765   001062  EF35  F008         	goto	u5950
  5766   001066                     u5951:
  5767   001066  EF36  F008         	goto	l5195
  5768   00106A                     u5950:
  5769   00106A                     
  5770                           ; BSR set to: 0
  5771   00106A  8160               	bsf	___fladd@b& (0+255),0,b
  5772   00106C                     l5195:
  5773                           
  5774                           ; BSR set to: 0
  5775   00106C  A16F               	btfss	___fladd@grs& (0+255),0,b
  5776   00106E  EF3B  F008         	goto	u5961
  5777   001072  EF3D  F008         	goto	u5960
  5778   001076                     u5961:
  5779   001076  EF41  F008         	goto	l5199
  5780   00107A                     u5960:
  5781   00107A                     
  5782                           ; BSR set to: 0
  5783   00107A  80D8               	bsf	status,0,c
  5784   00107C  376F               	rlcf	___fladd@grs& (0+255),f,b
  5785   00107E  EF43  F008         	goto	l5201
  5786   001082                     l5199:
  5787                           
  5788                           ; BSR set to: 0
  5789   001082  90D8               	bcf	status,0,c
  5790   001084  376F               	rlcf	___fladd@grs& (0+255),f,b
  5791   001086                     l5201:
  5792                           
  5793                           ; BSR set to: 0
  5794   001086  516E               	movf	___fladd@bexp& (0+255),w,b
  5795   001088  B4D8               	btfsc	status,2,c
  5796   00108A  EF49  F008         	goto	u5971
  5797   00108E  EF4B  F008         	goto	u5970
  5798   001092                     u5971:
  5799   001092  EF4C  F008         	goto	l5205
  5800   001096                     u5970:
  5801   001096                     
  5802                           ; BSR set to: 0
  5803   001096  076E               	decf	___fladd@bexp& (0+255),f,b
  5804   001098                     l5205:
  5805                           
  5806                           ; BSR set to: 0
  5807   001098  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5808   00109A  EF51  F008         	goto	u5981
  5809   00109E  EF53  F008         	goto	u5980
  5810   0010A2                     u5981:
  5811   0010A2  EF29  F008         	goto	l5189
  5812   0010A6                     u5980:
  5813   0010A6                     l891:
  5814                           
  5815                           ; BSR set to: 0
  5816   0010A6  6B6D               	clrf	___fladd@aexp& (0+255),b
  5817   0010A8  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5818   0010AA  EF59  F008         	goto	u5991
  5819   0010AE  EF5B  F008         	goto	u5990
  5820   0010B2                     u5991:
  5821   0010B2  EF73  F008         	goto	l903
  5822   0010B6                     u5990:
  5823   0010B6                     
  5824                           ; BSR set to: 0
  5825   0010B6  C06F  F068         	movff	___fladd@grs,??___fladd
  5826   0010BA  0E7F               	movlw	127
  5827   0010BC  1768               	andwf	??___fladd& (0+255),f,b
  5828   0010BE  B4D8               	btfsc	status,2,c
  5829   0010C0  EF64  F008         	goto	u6001
  5830   0010C4  EF66  F008         	goto	u6000
  5831   0010C8                     u6001:
  5832   0010C8  EF6A  F008         	goto	l904
  5833   0010CC                     u6000:
  5834   0010CC                     l5209:
  5835                           
  5836                           ; BSR set to: 0
  5837   0010CC  0E01               	movlw	1
  5838   0010CE  6F6D               	movwf	___fladd@aexp& (0+255),b
  5839   0010D0  EF73  F008         	goto	l903
  5840   0010D4                     l904:
  5841                           
  5842                           ; BSR set to: 0
  5843   0010D4  A160               	btfss	___fladd@b& (0+255),0,b
  5844   0010D6  EF6F  F008         	goto	u6011
  5845   0010DA  EF71  F008         	goto	u6010
  5846   0010DE                     u6011:
  5847   0010DE  EF73  F008         	goto	l903
  5848   0010E2                     u6010:
  5849   0010E2  EF66  F008         	goto	l5209
  5850   0010E6                     l903:
  5851                           
  5852                           ; BSR set to: 0
  5853   0010E6  516D               	movf	___fladd@aexp& (0+255),w,b
  5854   0010E8  B4D8               	btfsc	status,2,c
  5855   0010EA  EF79  F008         	goto	u6021
  5856   0010EE  EF7B  F008         	goto	u6020
  5857   0010F2                     u6021:
  5858   0010F2  EFA6  F008         	goto	l5221
  5859   0010F6                     u6020:
  5860   0010F6                     
  5861                           ; BSR set to: 0
  5862   0010F6  0E01               	movlw	1
  5863   0010F8  2760               	addwf	___fladd@b& (0+255),f,b
  5864   0010FA  0E00               	movlw	0
  5865   0010FC  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5866   0010FE  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5867   001100  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5868   001102                     
  5869                           ; BSR set to: 0
  5870   001102  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5871   001104  EF86  F008         	goto	u6031
  5872   001108  EF88  F008         	goto	u6030
  5873   00110C                     u6031:
  5874   00110C  EFA6  F008         	goto	l5221
  5875   001110                     u6030:
  5876   001110                     
  5877                           ; BSR set to: 0
  5878   001110  C060  F068         	movff	___fladd@b,??___fladd
  5879   001114  C061  F069         	movff	___fladd@b+1,??___fladd+1
  5880   001118  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  5881   00111C  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  5882   001120  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  5883   001122  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  5884   001124  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  5885   001126  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  5886   001128  3368               	rrcf	??___fladd& (0+255),f,b
  5887   00112A  C068  F060         	movff	??___fladd,___fladd@b
  5888   00112E  C069  F061         	movff	??___fladd+1,___fladd@b+1
  5889   001132  C06A  F062         	movff	??___fladd+2,___fladd@b+2
  5890   001136  C06B  F063         	movff	??___fladd+3,___fladd@b+3
  5891   00113A  296E               	incf	___fladd@bexp& (0+255),w,b
  5892   00113C  B4D8               	btfsc	status,2,c
  5893   00113E  EFA3  F008         	goto	u6041
  5894   001142  EFA5  F008         	goto	u6040
  5895   001146                     u6041:
  5896   001146  EFA6  F008         	goto	l5221
  5897   00114A                     u6040:
  5898   00114A                     
  5899                           ; BSR set to: 0
  5900   00114A  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5901   00114C                     l5221:
  5902                           
  5903                           ; BSR set to: 0
  5904   00114C  296E               	incf	___fladd@bexp& (0+255),w,b
  5905   00114E  B4D8               	btfsc	status,2,c
  5906   001150  EFAC  F008         	goto	u6051
  5907   001154  EFAE  F008         	goto	u6050
  5908   001158                     u6051:
  5909   001158  EFB6  F008         	goto	l5225
  5910   00115C                     u6050:
  5911   00115C                     
  5912                           ; BSR set to: 0
  5913   00115C  516E               	movf	___fladd@bexp& (0+255),w,b
  5914   00115E  A4D8               	btfss	status,2,c
  5915   001160  EFB4  F008         	goto	u6061
  5916   001164  EFB6  F008         	goto	u6060
  5917   001168                     u6061:
  5918   001168  EFC7  F008         	goto	l910
  5919   00116C                     u6060:
  5920   00116C                     l5225:
  5921                           
  5922                           ; BSR set to: 0
  5923   00116C  0E00               	movlw	0
  5924   00116E  6F60               	movwf	___fladd@b& (0+255),b
  5925   001170  0E00               	movlw	0
  5926   001172  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5927   001174  0E00               	movlw	0
  5928   001176  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5929   001178  0E00               	movlw	0
  5930   00117A  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5931   00117C  516E               	movf	___fladd@bexp& (0+255),w,b
  5932   00117E  A4D8               	btfss	status,2,c
  5933   001180  EFC4  F008         	goto	u6071
  5934   001184  EFC6  F008         	goto	u6070
  5935   001188                     u6071:
  5936   001188  EFC7  F008         	goto	l910
  5937   00118C                     u6070:
  5938   00118C                     
  5939                           ; BSR set to: 0
  5940   00118C  6B6C               	clrf	___fladd@signs& (0+255),b
  5941   00118E                     l910:
  5942                           
  5943                           ; BSR set to: 0
  5944   00118E  A16E               	btfss	___fladd@bexp& (0+255),0,b
  5945   001190  EFCC  F008         	goto	u6081
  5946   001194  EFCE  F008         	goto	u6080
  5947   001198                     u6081:
  5948   001198  EFD1  F008         	goto	l5231
  5949   00119C                     u6080:
  5950   00119C                     
  5951                           ; BSR set to: 0
  5952   00119C  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5953   00119E  EFD2  F008         	goto	l5233
  5954   0011A2                     l5231:
  5955                           
  5956                           ; BSR set to: 0
  5957   0011A2  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  5958   0011A4                     l5233:
  5959                           
  5960                           ; BSR set to: 0
  5961   0011A4  90D8               	bcf	status,0,c
  5962   0011A6  316E               	rrcf	___fladd@bexp& (0+255),w,b
  5963   0011A8  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5964   0011AA                     
  5965                           ; BSR set to: 0
  5966   0011AA  AF6C               	btfss	___fladd@signs& (0+255),7,b
  5967   0011AC  EFDA  F008         	goto	u6091
  5968   0011B0  EFDC  F008         	goto	u6090
  5969   0011B4                     u6091:
  5970   0011B4  EFDD  F008         	goto	l5239
  5971   0011B8                     u6090:
  5972   0011B8                     
  5973                           ; BSR set to: 0
  5974   0011B8  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  5975   0011BA                     l5239:
  5976                           
  5977                           ; BSR set to: 0
  5978   0011BA  C060  F060         	movff	___fladd@b,?___fladd
  5979   0011BE  C061  F061         	movff	___fladd@b+1,?___fladd+1
  5980   0011C2  C062  F062         	movff	___fladd@b+2,?___fladd+2
  5981   0011C6  C063  F063         	movff	___fladd@b+3,?___fladd+3
  5982   0011CA                     l886:
  5983                           
  5984                           ; BSR set to: 0
  5985   0011CA  0012               	return		;funcret
  5986   0011CC                     __end_of___fladd:
  5987                           	callstack 0
  5988                           
  5989 ;; *************** function ___flneg *****************
  5990 ;; Defined at:
  5991 ;;		line 15 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/flneg.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  f1              4    0[BANK0 ] unsigned char 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;		None
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  4    0[BANK0 ] unsigned char 
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6005 ;;      Params:         0       4       0       0
  6006 ;;      Locals:         0       0       0       0
  6007 ;;      Temps:          0       0       0       0
  6008 ;;      Totals:         0       4       0       0
  6009 ;;Total ram usage:        4 bytes
  6010 ;; Hardware stack levels used: 1
  6011 ;; Hardware stack levels required when called: 3
  6012 ;; This function calls:
  6013 ;;		Nothing
  6014 ;; This function is called by:
  6015 ;;		_efgtoa
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text17
  6020   003CD2                     __ptext17:
  6021                           	callstack 0
  6022   003CD2                     ___flneg:
  6023                           	callstack 23
  6024   003CD2  0100               	movlb	0	; () banked
  6025   003CD4  5160               	movf	___flneg@f1& (0+255),w,b
  6026   003CD6  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  6027   003CD8  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  6028   003CDA  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  6029   003CDC  B4D8               	btfsc	status,2,c
  6030   003CDE  EF73  F01E         	goto	u6611
  6031   003CE2  EF75  F01E         	goto	u6610
  6032   003CE6                     u6611:
  6033   003CE6  EF7D  F01E         	goto	l5563
  6034   003CEA                     u6610:
  6035   003CEA                     
  6036                           ; BSR set to: 0
  6037   003CEA  0E00               	movlw	0
  6038   003CEC  1B60               	xorwf	___flneg@f1& (0+255),f,b
  6039   003CEE  0E00               	movlw	0
  6040   003CF0  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  6041   003CF2  0E00               	movlw	0
  6042   003CF4  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  6043   003CF6  0E80               	movlw	128
  6044   003CF8  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6045   003CFA                     l5563:
  6046                           
  6047                           ; BSR set to: 0
  6048   003CFA  C060  F060         	movff	___flneg@f1,?___flneg
  6049   003CFE  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  6050   003D02  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  6051   003D06  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  6052   003D0A                     
  6053                           ; BSR set to: 0
  6054   003D0A  0012               	return		;funcret
  6055   003D0C                     __end_of___flneg:
  6056                           	callstack 0
  6057                           
  6058 ;; *************** function ___flge *****************
  6059 ;; Defined at:
  6060 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/flge.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  ff1             4   39[BANK0 ] unsigned char 
  6063 ;;  ff2             4   43[BANK0 ] unsigned char 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;		None
  6066 ;; Return value:  Size  Location     Type
  6067 ;;		None               void
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6075 ;;      Params:         0       8       0       0
  6076 ;;      Locals:         0       0       0       0
  6077 ;;      Temps:          0       4       0       0
  6078 ;;      Totals:         0      12       0       0
  6079 ;;Total ram usage:       12 bytes
  6080 ;; Hardware stack levels used: 1
  6081 ;; Hardware stack levels required when called: 3
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_efgtoa
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text18
  6090   002F32                     __ptext18:
  6091                           	callstack 0
  6092   002F32                     ___flge:
  6093                           	callstack 23
  6094   002F32  0E00               	movlw	0
  6095   002F34  0100               	movlb	0	; () banked
  6096   002F36  1587               	andwf	___flge@ff1& (0+255),w,b
  6097   002F38  6F8F               	movwf	??___flge& (0+255),b
  6098   002F3A  0E00               	movlw	0
  6099   002F3C  1588               	andwf	(___flge@ff1+1)& (0+255),w,b
  6100   002F3E  6F90               	movwf	(??___flge+1)& (0+255),b
  6101   002F40  0E80               	movlw	128
  6102   002F42  1589               	andwf	(___flge@ff1+2)& (0+255),w,b
  6103   002F44  6F91               	movwf	(??___flge+2)& (0+255),b
  6104   002F46  0E7F               	movlw	127
  6105   002F48  158A               	andwf	(___flge@ff1+3)& (0+255),w,b
  6106   002F4A  6F92               	movwf	(??___flge+3)& (0+255),b
  6107   002F4C  518F               	movf	??___flge& (0+255),w,b
  6108   002F4E  1190               	iorwf	(??___flge+1)& (0+255),w,b
  6109   002F50  1191               	iorwf	(??___flge+2)& (0+255),w,b
  6110   002F52  1192               	iorwf	(??___flge+3)& (0+255),w,b
  6111   002F54  A4D8               	btfss	status,2,c
  6112   002F56  EFAF  F017         	goto	u6561
  6113   002F5A  EFB1  F017         	goto	u6560
  6114   002F5E                     u6561:
  6115   002F5E  EFB9  F017         	goto	l5541
  6116   002F62                     u6560:
  6117   002F62                     
  6118                           ; BSR set to: 0
  6119   002F62  0E00               	movlw	0
  6120   002F64  6F87               	movwf	___flge@ff1& (0+255),b
  6121   002F66  0E00               	movlw	0
  6122   002F68  6F88               	movwf	(___flge@ff1+1)& (0+255),b
  6123   002F6A  0E00               	movlw	0
  6124   002F6C  6F89               	movwf	(___flge@ff1+2)& (0+255),b
  6125   002F6E  0E00               	movlw	0
  6126   002F70  6F8A               	movwf	(___flge@ff1+3)& (0+255),b
  6127   002F72                     l5541:
  6128                           
  6129                           ; BSR set to: 0
  6130   002F72  0E00               	movlw	0
  6131   002F74  158B               	andwf	___flge@ff2& (0+255),w,b
  6132   002F76  6F8F               	movwf	??___flge& (0+255),b
  6133   002F78  0E00               	movlw	0
  6134   002F7A  158C               	andwf	(___flge@ff2+1)& (0+255),w,b
  6135   002F7C  6F90               	movwf	(??___flge+1)& (0+255),b
  6136   002F7E  0E80               	movlw	128
  6137   002F80  158D               	andwf	(___flge@ff2+2)& (0+255),w,b
  6138   002F82  6F91               	movwf	(??___flge+2)& (0+255),b
  6139   002F84  0E7F               	movlw	127
  6140   002F86  158E               	andwf	(___flge@ff2+3)& (0+255),w,b
  6141   002F88  6F92               	movwf	(??___flge+3)& (0+255),b
  6142   002F8A  518F               	movf	??___flge& (0+255),w,b
  6143   002F8C  1190               	iorwf	(??___flge+1)& (0+255),w,b
  6144   002F8E  1191               	iorwf	(??___flge+2)& (0+255),w,b
  6145   002F90  1192               	iorwf	(??___flge+3)& (0+255),w,b
  6146   002F92  A4D8               	btfss	status,2,c
  6147   002F94  EFCE  F017         	goto	u6571
  6148   002F98  EFD0  F017         	goto	u6570
  6149   002F9C                     u6571:
  6150   002F9C  EFD8  F017         	goto	l5545
  6151   002FA0                     u6570:
  6152   002FA0                     
  6153                           ; BSR set to: 0
  6154   002FA0  0E00               	movlw	0
  6155   002FA2  6F8B               	movwf	___flge@ff2& (0+255),b
  6156   002FA4  0E00               	movlw	0
  6157   002FA6  6F8C               	movwf	(___flge@ff2+1)& (0+255),b
  6158   002FA8  0E00               	movlw	0
  6159   002FAA  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
  6160   002FAC  0E00               	movlw	0
  6161   002FAE  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
  6162   002FB0                     l5545:
  6163                           
  6164                           ; BSR set to: 0
  6165   002FB0  AF8A               	btfss	(___flge@ff1+3)& (0+255),7,b
  6166   002FB2  EFDD  F017         	goto	u6581
  6167   002FB6  EFDF  F017         	goto	u6580
  6168   002FBA                     u6581:
  6169   002FBA  EFE8  F017         	goto	l5549
  6170   002FBE                     u6580:
  6171   002FBE                     
  6172                           ; BSR set to: 0
  6173   002FBE  6D87               	negf	___flge@ff1& (0+255),b
  6174   002FC0  1F88               	comf	(___flge@ff1+1)& (0+255),f,b
  6175   002FC2  B0D8               	btfsc	status,0,c
  6176   002FC4  2B88               	incf	(___flge@ff1+1)& (0+255),f,b
  6177   002FC6  1F89               	comf	(___flge@ff1+2)& (0+255),f,b
  6178   002FC8  B0D8               	btfsc	status,0,c
  6179   002FCA  2B89               	incf	(___flge@ff1+2)& (0+255),f,b
  6180   002FCC  0E80               	movlw	128
  6181   002FCE  578A               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6182   002FD0                     l5549:
  6183                           
  6184                           ; BSR set to: 0
  6185   002FD0  AF8E               	btfss	(___flge@ff2+3)& (0+255),7,b
  6186   002FD2  EFED  F017         	goto	u6591
  6187   002FD6  EFEF  F017         	goto	u6590
  6188   002FDA                     u6591:
  6189   002FDA  EFF8  F017         	goto	l614
  6190   002FDE                     u6590:
  6191   002FDE                     
  6192                           ; BSR set to: 0
  6193   002FDE  6D8B               	negf	___flge@ff2& (0+255),b
  6194   002FE0  1F8C               	comf	(___flge@ff2+1)& (0+255),f,b
  6195   002FE2  B0D8               	btfsc	status,0,c
  6196   002FE4  2B8C               	incf	(___flge@ff2+1)& (0+255),f,b
  6197   002FE6  1F8D               	comf	(___flge@ff2+2)& (0+255),f,b
  6198   002FE8  B0D8               	btfsc	status,0,c
  6199   002FEA  2B8D               	incf	(___flge@ff2+2)& (0+255),f,b
  6200   002FEC  0E80               	movlw	128
  6201   002FEE  578E               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6202   002FF0                     l614:
  6203                           
  6204                           ; BSR set to: 0
  6205   002FF0  0E00               	movlw	0
  6206   002FF2  1B87               	xorwf	___flge@ff1& (0+255),f,b
  6207   002FF4  0E00               	movlw	0
  6208   002FF6  1B88               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6209   002FF8  0E00               	movlw	0
  6210   002FFA  1B89               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6211   002FFC  0E80               	movlw	128
  6212   002FFE  1B8A               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6213   003000  0E00               	movlw	0
  6214   003002  1B8B               	xorwf	___flge@ff2& (0+255),f,b
  6215   003004  0E00               	movlw	0
  6216   003006  1B8C               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6217   003008  0E00               	movlw	0
  6218   00300A  1B8D               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6219   00300C  0E80               	movlw	128
  6220   00300E  1B8E               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6221   003010  518B               	movf	___flge@ff2& (0+255),w,b
  6222   003012  5D87               	subwf	___flge@ff1& (0+255),w,b
  6223   003014  518C               	movf	(___flge@ff2+1)& (0+255),w,b
  6224   003016  5988               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6225   003018  518D               	movf	(___flge@ff2+2)& (0+255),w,b
  6226   00301A  5989               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6227   00301C  518E               	movf	(___flge@ff2+3)& (0+255),w,b
  6228   00301E  598A               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6229   003020  B0D8               	btfsc	status,0,c
  6230   003022  EF15  F018         	goto	u6601
  6231   003026  EF17  F018         	goto	u6600
  6232   00302A                     u6601:
  6233   00302A  EF1A  F018         	goto	l5555
  6234   00302E                     u6600:
  6235   00302E                     
  6236                           ; BSR set to: 0
  6237   00302E  90D8               	bcf	status,0,c
  6238   003030  EF1B  F018         	goto	l619
  6239   003034                     l5555:
  6240                           
  6241                           ; BSR set to: 0
  6242   003034  80D8               	bsf	status,0,c
  6243   003036                     l619:
  6244                           
  6245                           ; BSR set to: 0
  6246   003036  0012               	return		;funcret
  6247   003038                     __end_of___flge:
  6248                           	callstack 0
  6249                           
  6250 ;; *************** function ___fleq *****************
  6251 ;; Defined at:
  6252 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/fleq.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  ff1             4    0[BANK0 ] unsigned char 
  6255 ;;  ff2             4    4[BANK0 ] unsigned char 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;		None
  6258 ;; Return value:  Size  Location     Type
  6259 ;;		None               void
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6267 ;;      Params:         0       8       0       0
  6268 ;;      Locals:         0       0       0       0
  6269 ;;      Temps:          0       4       0       0
  6270 ;;      Totals:         0      12       0       0
  6271 ;;Total ram usage:       12 bytes
  6272 ;; Hardware stack levels used: 1
  6273 ;; Hardware stack levels required when called: 3
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_efgtoa
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text19
  6282   00349A                     __ptext19:
  6283                           	callstack 0
  6284   00349A                     ___fleq:
  6285                           	callstack 23
  6286   00349A  0E00               	movlw	0
  6287   00349C  0100               	movlb	0	; () banked
  6288   00349E  1560               	andwf	___fleq@ff1& (0+255),w,b
  6289   0034A0  6F68               	movwf	??___fleq& (0+255),b
  6290   0034A2  0E00               	movlw	0
  6291   0034A4  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6292   0034A6  6F69               	movwf	(??___fleq+1)& (0+255),b
  6293   0034A8  0E80               	movlw	128
  6294   0034AA  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6295   0034AC  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6296   0034AE  0E7F               	movlw	127
  6297   0034B0  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6298   0034B2  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6299   0034B4  5168               	movf	??___fleq& (0+255),w,b
  6300   0034B6  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6301   0034B8  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6302   0034BA  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6303   0034BC  A4D8               	btfss	status,2,c
  6304   0034BE  EF63  F01A         	goto	u6531
  6305   0034C2  EF65  F01A         	goto	u6530
  6306   0034C6                     u6531:
  6307   0034C6  EF6D  F01A         	goto	l5525
  6308   0034CA                     u6530:
  6309   0034CA                     
  6310                           ; BSR set to: 0
  6311   0034CA  0E00               	movlw	0
  6312   0034CC  6F60               	movwf	___fleq@ff1& (0+255),b
  6313   0034CE  0E00               	movlw	0
  6314   0034D0  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  6315   0034D2  0E00               	movlw	0
  6316   0034D4  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  6317   0034D6  0E00               	movlw	0
  6318   0034D8  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  6319   0034DA                     l5525:
  6320                           
  6321                           ; BSR set to: 0
  6322   0034DA  0E00               	movlw	0
  6323   0034DC  1564               	andwf	___fleq@ff2& (0+255),w,b
  6324   0034DE  6F68               	movwf	??___fleq& (0+255),b
  6325   0034E0  0E00               	movlw	0
  6326   0034E2  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6327   0034E4  6F69               	movwf	(??___fleq+1)& (0+255),b
  6328   0034E6  0E80               	movlw	128
  6329   0034E8  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6330   0034EA  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6331   0034EC  0E7F               	movlw	127
  6332   0034EE  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6333   0034F0  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6334   0034F2  5168               	movf	??___fleq& (0+255),w,b
  6335   0034F4  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6336   0034F6  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6337   0034F8  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6338   0034FA  A4D8               	btfss	status,2,c
  6339   0034FC  EF82  F01A         	goto	u6541
  6340   003500  EF84  F01A         	goto	u6540
  6341   003504                     u6541:
  6342   003504  EF8C  F01A         	goto	l5529
  6343   003508                     u6540:
  6344   003508                     
  6345                           ; BSR set to: 0
  6346   003508  0E00               	movlw	0
  6347   00350A  6F64               	movwf	___fleq@ff2& (0+255),b
  6348   00350C  0E00               	movlw	0
  6349   00350E  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6350   003510  0E00               	movlw	0
  6351   003512  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6352   003514  0E00               	movlw	0
  6353   003516  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6354   003518                     l5529:
  6355                           
  6356                           ; BSR set to: 0
  6357   003518  5164               	movf	___fleq@ff2& (0+255),w,b
  6358   00351A  1960               	xorwf	___fleq@ff1& (0+255),w,b
  6359   00351C  E10F               	bnz	u6550
  6360   00351E  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  6361   003520  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6362   003522  E10C               	bnz	u6550
  6363   003524  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  6364   003526  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6365   003528  E109               	bnz	u6550
  6366   00352A  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  6367   00352C  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6368   00352E  B4D8               	btfsc	status,2,c
  6369   003530  EF9C  F01A         	goto	u6551
  6370   003534  EF9E  F01A         	goto	u6550
  6371   003538                     u6551:
  6372   003538  EFA1  F01A         	goto	l5533
  6373   00353C                     u6550:
  6374   00353C                     
  6375                           ; BSR set to: 0
  6376   00353C  90D8               	bcf	status,0,c
  6377   00353E  EFA2  F01A         	goto	l608
  6378   003542                     l5533:
  6379                           
  6380                           ; BSR set to: 0
  6381   003542  80D8               	bsf	status,0,c
  6382   003544                     l608:
  6383                           
  6384                           ; BSR set to: 0
  6385   003544  0012               	return		;funcret
  6386   003546                     __end_of___fleq:
  6387                           	callstack 0
  6388                           
  6389 ;; *************** function ___fldiv *****************
  6390 ;; Defined at:
  6391 ;;		line 11 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcdiv.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;  b               4    0[BANK0 ] unsigned char 
  6394 ;;  a               4    4[BANK0 ] unsigned char 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  grs             4   19[BANK0 ] unsigned long 
  6397 ;;  rem             4   12[BANK0 ] unsigned long 
  6398 ;;  new_exp         2   17[BANK0 ] short 
  6399 ;;  aexp            1   24[BANK0 ] unsigned char 
  6400 ;;  bexp            1   23[BANK0 ] unsigned char 
  6401 ;;  sign            1   16[BANK0 ] unsigned char 
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  4    0[BANK0 ] unsigned char 
  6404 ;; Registers used:
  6405 ;;		wreg, status,2, status,0
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6411 ;;      Params:         0       8       0       0
  6412 ;;      Locals:         0      13       0       0
  6413 ;;      Temps:          0       4       0       0
  6414 ;;      Totals:         0      25       0       0
  6415 ;;Total ram usage:       25 bytes
  6416 ;; Hardware stack levels used: 1
  6417 ;; Hardware stack levels required when called: 3
  6418 ;; This function calls:
  6419 ;;		Nothing
  6420 ;; This function is called by:
  6421 ;;		_efgtoa
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           	psect	text20
  6426   001E3E                     __ptext20:
  6427                           	callstack 0
  6428   001E3E                     ___fldiv:
  6429                           	callstack 23
  6430   001E3E  0100               	movlb	0	; () banked
  6431   001E40  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6432   001E42  0B80               	andlw	128
  6433   001E44  6F70               	movwf	___fldiv@sign& (0+255),b
  6434   001E46  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6435   001E48  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  6436   001E4A  6F77               	movwf	___fldiv@bexp& (0+255),b
  6437   001E4C                     
  6438                           ; BSR set to: 0
  6439   001E4C  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6440   001E4E  EF2B  F00F         	goto	u6111
  6441   001E52  EF2D  F00F         	goto	u6110
  6442   001E56                     u6111:
  6443   001E56  EF2E  F00F         	goto	l5257
  6444   001E5A                     u6110:
  6445   001E5A                     
  6446                           ; BSR set to: 0
  6447   001E5A  8177               	bsf	___fldiv@bexp& (0+255),0,b
  6448   001E5C                     l5257:
  6449                           
  6450                           ; BSR set to: 0
  6451   001E5C  5177               	movf	___fldiv@bexp& (0+255),w,b
  6452   001E5E  B4D8               	btfsc	status,2,c
  6453   001E60  EF34  F00F         	goto	u6121
  6454   001E64  EF36  F00F         	goto	u6120
  6455   001E68                     u6121:
  6456   001E68  EF4A  F00F         	goto	l5267
  6457   001E6C                     u6120:
  6458   001E6C                     
  6459                           ; BSR set to: 0
  6460   001E6C  2977               	incf	___fldiv@bexp& (0+255),w,b
  6461   001E6E  A4D8               	btfss	status,2,c
  6462   001E70  EF3C  F00F         	goto	u6131
  6463   001E74  EF3E  F00F         	goto	u6130
  6464   001E78                     u6131:
  6465   001E78  EF46  F00F         	goto	l5263
  6466   001E7C                     u6130:
  6467   001E7C                     
  6468                           ; BSR set to: 0
  6469   001E7C  0E00               	movlw	0
  6470   001E7E  6F60               	movwf	___fldiv@b& (0+255),b
  6471   001E80  0E00               	movlw	0
  6472   001E82  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6473   001E84  0E00               	movlw	0
  6474   001E86  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6475   001E88  0E00               	movlw	0
  6476   001E8A  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6477   001E8C                     l5263:
  6478                           
  6479                           ; BSR set to: 0
  6480   001E8C  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6481   001E8E                     
  6482                           ; BSR set to: 0
  6483   001E8E  6B63               	clrf	(___fldiv@b+3)& (0+255),b
  6484   001E90  EF52  F00F         	goto	l5269
  6485   001E94                     l5267:
  6486                           
  6487                           ; BSR set to: 0
  6488   001E94  0E00               	movlw	0
  6489   001E96  6F60               	movwf	___fldiv@b& (0+255),b
  6490   001E98  0E00               	movlw	0
  6491   001E9A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6492   001E9C  0E00               	movlw	0
  6493   001E9E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6494   001EA0  0E00               	movlw	0
  6495   001EA2  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6496   001EA4                     l5269:
  6497                           
  6498                           ; BSR set to: 0
  6499   001EA4  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6500   001EA6  0B80               	andlw	128
  6501   001EA8  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  6502   001EAA                     
  6503                           ; BSR set to: 0
  6504   001EAA  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6505   001EAC  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  6506   001EAE  6F78               	movwf	___fldiv@aexp& (0+255),b
  6507   001EB0                     
  6508                           ; BSR set to: 0
  6509   001EB0  AF66               	btfss	(___fldiv@a+2)& (0+255),7,b
  6510   001EB2  EF5D  F00F         	goto	u6141
  6511   001EB6  EF5F  F00F         	goto	u6140
  6512   001EBA                     u6141:
  6513   001EBA  EF60  F00F         	goto	l5277
  6514   001EBE                     u6140:
  6515   001EBE                     
  6516                           ; BSR set to: 0
  6517   001EBE  8178               	bsf	___fldiv@aexp& (0+255),0,b
  6518   001EC0                     l5277:
  6519                           
  6520                           ; BSR set to: 0
  6521   001EC0  5178               	movf	___fldiv@aexp& (0+255),w,b
  6522   001EC2  B4D8               	btfsc	status,2,c
  6523   001EC4  EF66  F00F         	goto	u6151
  6524   001EC8  EF68  F00F         	goto	u6150
  6525   001ECC                     u6151:
  6526   001ECC  EF7C  F00F         	goto	l5287
  6527   001ED0                     u6150:
  6528   001ED0                     
  6529                           ; BSR set to: 0
  6530   001ED0  2978               	incf	___fldiv@aexp& (0+255),w,b
  6531   001ED2  A4D8               	btfss	status,2,c
  6532   001ED4  EF6E  F00F         	goto	u6161
  6533   001ED8  EF70  F00F         	goto	u6160
  6534   001EDC                     u6161:
  6535   001EDC  EF78  F00F         	goto	l5283
  6536   001EE0                     u6160:
  6537   001EE0                     
  6538                           ; BSR set to: 0
  6539   001EE0  0E00               	movlw	0
  6540   001EE2  6F64               	movwf	___fldiv@a& (0+255),b
  6541   001EE4  0E00               	movlw	0
  6542   001EE6  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6543   001EE8  0E00               	movlw	0
  6544   001EEA  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6545   001EEC  0E00               	movlw	0
  6546   001EEE  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6547   001EF0                     l5283:
  6548                           
  6549                           ; BSR set to: 0
  6550   001EF0  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  6551   001EF2                     
  6552                           ; BSR set to: 0
  6553   001EF2  6B67               	clrf	(___fldiv@a+3)& (0+255),b
  6554   001EF4  EF84  F00F         	goto	l5289
  6555   001EF8                     l5287:
  6556                           
  6557                           ; BSR set to: 0
  6558   001EF8  0E00               	movlw	0
  6559   001EFA  6F64               	movwf	___fldiv@a& (0+255),b
  6560   001EFC  0E00               	movlw	0
  6561   001EFE  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6562   001F00  0E00               	movlw	0
  6563   001F02  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6564   001F04  0E00               	movlw	0
  6565   001F06  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6566   001F08                     l5289:
  6567                           
  6568                           ; BSR set to: 0
  6569   001F08  5164               	movf	___fldiv@a& (0+255),w,b
  6570   001F0A  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6571   001F0C  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6572   001F0E  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6573   001F10  A4D8               	btfss	status,2,c
  6574   001F12  EF8D  F00F         	goto	u6171
  6575   001F16  EF8F  F00F         	goto	u6170
  6576   001F1A                     u6171:
  6577   001F1A  EFA7  F00F         	goto	l5301
  6578   001F1E                     u6170:
  6579   001F1E                     
  6580                           ; BSR set to: 0
  6581   001F1E  0E00               	movlw	0
  6582   001F20  6F60               	movwf	___fldiv@b& (0+255),b
  6583   001F22  0E00               	movlw	0
  6584   001F24  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6585   001F26  0E00               	movlw	0
  6586   001F28  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6587   001F2A  0E00               	movlw	0
  6588   001F2C  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6589   001F2E                     
  6590                           ; BSR set to: 0
  6591   001F2E  0E80               	movlw	128
  6592   001F30  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6593   001F32  0E7F               	movlw	127
  6594   001F34  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6595   001F36                     l5295:
  6596                           
  6597                           ; BSR set to: 0
  6598   001F36  5170               	movf	___fldiv@sign& (0+255),w,b
  6599   001F38  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6600   001F3A                     
  6601                           ; BSR set to: 0
  6602   001F3A  C060  F060         	movff	___fldiv@b,?___fldiv
  6603   001F3E  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  6604   001F42  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  6605   001F46  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  6606   001F4A  EFE7  F010         	goto	l931
  6607   001F4E                     l5301:
  6608                           
  6609                           ; BSR set to: 0
  6610   001F4E  5177               	movf	___fldiv@bexp& (0+255),w,b
  6611   001F50  A4D8               	btfss	status,2,c
  6612   001F52  EFAD  F00F         	goto	u6181
  6613   001F56  EFAF  F00F         	goto	u6180
  6614   001F5A                     u6181:
  6615   001F5A  EFB9  F00F         	goto	l5309
  6616   001F5E                     u6180:
  6617   001F5E                     
  6618                           ; BSR set to: 0
  6619   001F5E  0E00               	movlw	0
  6620   001F60  6F60               	movwf	?___fldiv& (0+255),b
  6621   001F62  0E00               	movlw	0
  6622   001F64  6F61               	movwf	(?___fldiv+1)& (0+255),b
  6623   001F66  0E00               	movlw	0
  6624   001F68  6F62               	movwf	(?___fldiv+2)& (0+255),b
  6625   001F6A  0E00               	movlw	0
  6626   001F6C  6F63               	movwf	(?___fldiv+3)& (0+255),b
  6627   001F6E  EFE7  F010         	goto	l931
  6628   001F72                     l5309:
  6629                           
  6630                           ; BSR set to: 0
  6631   001F72  5178               	movf	___fldiv@aexp& (0+255),w,b
  6632   001F74  C077  F068         	movff	___fldiv@bexp,??___fldiv
  6633   001F78  6B69               	clrf	(??___fldiv+1)& (0+255),b
  6634   001F7A  5F68               	subwf	??___fldiv& (0+255),f,b
  6635   001F7C  0E00               	movlw	0
  6636   001F7E  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  6637   001F80  0E7F               	movlw	127
  6638   001F82  2568               	addwf	??___fldiv& (0+255),w,b
  6639   001F84  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6640   001F86  0E00               	movlw	0
  6641   001F88  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  6642   001F8A  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6643   001F8C                     
  6644                           ; BSR set to: 0
  6645   001F8C  C060  F06C         	movff	___fldiv@b,___fldiv@rem
  6646   001F90  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
  6647   001F94  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
  6648   001F98  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
  6649   001F9C                     
  6650                           ; BSR set to: 0
  6651   001F9C  0E00               	movlw	0
  6652   001F9E  6F60               	movwf	___fldiv@b& (0+255),b
  6653   001FA0  0E00               	movlw	0
  6654   001FA2  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6655   001FA4  0E00               	movlw	0
  6656   001FA6  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6657   001FA8  0E00               	movlw	0
  6658   001FAA  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6659   001FAC                     
  6660                           ; BSR set to: 0
  6661   001FAC  0E00               	movlw	0
  6662   001FAE  6F73               	movwf	___fldiv@grs& (0+255),b
  6663   001FB0  0E00               	movlw	0
  6664   001FB2  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  6665   001FB4  0E00               	movlw	0
  6666   001FB6  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  6667   001FB8  0E00               	movlw	0
  6668   001FBA  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  6669   001FBC                     
  6670                           ; BSR set to: 0
  6671   001FBC  6B78               	clrf	___fldiv@aexp& (0+255),b
  6672   001FBE  EF19  F010         	goto	l933
  6673   001FC2                     l5319:
  6674                           
  6675                           ; BSR set to: 0
  6676   001FC2  5178               	movf	___fldiv@aexp& (0+255),w,b
  6677   001FC4  B4D8               	btfsc	status,2,c
  6678   001FC6  EFE7  F00F         	goto	u6191
  6679   001FCA  EFE9  F00F         	goto	u6190
  6680   001FCE                     u6191:
  6681   001FCE  EF00  F010         	goto	l5327
  6682   001FD2                     u6190:
  6683   001FD2                     
  6684                           ; BSR set to: 0
  6685   001FD2  90D8               	bcf	status,0,c
  6686   001FD4  376C               	rlcf	___fldiv@rem& (0+255),f,b
  6687   001FD6  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6688   001FD8  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6689   001FDA  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6690   001FDC  90D8               	bcf	status,0,c
  6691   001FDE  3760               	rlcf	___fldiv@b& (0+255),f,b
  6692   001FE0  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6693   001FE2  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6694   001FE4  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6695   001FE6                     
  6696                           ; BSR set to: 0
  6697   001FE6  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6698   001FE8  EFF8  F00F         	goto	u6201
  6699   001FEC  EFFA  F00F         	goto	u6200
  6700   001FF0                     u6201:
  6701   001FF0  EFFB  F00F         	goto	l936
  6702   001FF4                     u6200:
  6703   001FF4                     
  6704                           ; BSR set to: 0
  6705   001FF4  8160               	bsf	___fldiv@b& (0+255),0,b
  6706   001FF6                     l936:
  6707                           
  6708                           ; BSR set to: 0
  6709   001FF6  90D8               	bcf	status,0,c
  6710   001FF8  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6711   001FFA  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6712   001FFC  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6713   001FFE  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6714   002000                     l5327:
  6715                           
  6716                           ; BSR set to: 0
  6717   002000  5164               	movf	___fldiv@a& (0+255),w,b
  6718   002002  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  6719   002004  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6720   002006  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6721   002008  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6722   00200A  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6723   00200C  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6724   00200E  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6725   002010  A0D8               	btfss	status,0,c
  6726   002012  EF0D  F010         	goto	u6211
  6727   002016  EF0F  F010         	goto	u6210
  6728   00201A                     u6211:
  6729   00201A  EF18  F010         	goto	l5333
  6730   00201E                     u6210:
  6731   00201E                     
  6732                           ; BSR set to: 0
  6733   00201E  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6734   002020                     
  6735                           ; BSR set to: 0
  6736   002020  5164               	movf	___fldiv@a& (0+255),w,b
  6737   002022  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  6738   002024  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6739   002026  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6740   002028  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6741   00202A  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6742   00202C  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6743   00202E  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6744   002030                     l5333:
  6745                           
  6746                           ; BSR set to: 0
  6747   002030  2B78               	incf	___fldiv@aexp& (0+255),f,b
  6748   002032                     l933:
  6749                           
  6750                           ; BSR set to: 0
  6751   002032  0E19               	movlw	25
  6752   002034  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  6753   002036  EF1F  F010         	goto	u6221
  6754   00203A  EF21  F010         	goto	u6220
  6755   00203E                     u6221:
  6756   00203E  EFE1  F00F         	goto	l5319
  6757   002042                     u6220:
  6758   002042                     
  6759                           ; BSR set to: 0
  6760   002042  516C               	movf	___fldiv@rem& (0+255),w,b
  6761   002044  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6762   002046  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6763   002048  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6764   00204A  B4D8               	btfsc	status,2,c
  6765   00204C  EF2A  F010         	goto	u6231
  6766   002050  EF2C  F010         	goto	u6230
  6767   002054                     u6231:
  6768   002054  EF44  F010         	goto	l5345
  6769   002058                     u6230:
  6770   002058                     
  6771                           ; BSR set to: 0
  6772   002058  8173               	bsf	___fldiv@grs& (0+255),0,b
  6773   00205A  EF44  F010         	goto	l5345
  6774   00205E                     l5339:
  6775                           
  6776                           ; BSR set to: 0
  6777   00205E  90D8               	bcf	status,0,c
  6778   002060  3760               	rlcf	___fldiv@b& (0+255),f,b
  6779   002062  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6780   002064  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6781   002066  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6782   002068                     
  6783                           ; BSR set to: 0
  6784   002068  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6785   00206A  EF39  F010         	goto	u6241
  6786   00206E  EF3B  F010         	goto	u6240
  6787   002072                     u6241:
  6788   002072  EF3C  F010         	goto	l942
  6789   002076                     u6240:
  6790   002076                     
  6791                           ; BSR set to: 0
  6792   002076  8160               	bsf	___fldiv@b& (0+255),0,b
  6793   002078                     l942:
  6794                           
  6795                           ; BSR set to: 0
  6796   002078  90D8               	bcf	status,0,c
  6797   00207A  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6798   00207C  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6799   00207E  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6800   002080  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6801   002082  0771               	decf	___fldiv@new_exp& (0+255),f,b
  6802   002084  A0D8               	btfss	status,0,c
  6803   002086  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6804   002088                     l5345:
  6805                           
  6806                           ; BSR set to: 0
  6807   002088  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6808   00208A  EF49  F010         	goto	u6251
  6809   00208E  EF4B  F010         	goto	u6250
  6810   002092                     u6251:
  6811   002092  EF2F  F010         	goto	l5339
  6812   002096                     u6250:
  6813   002096                     
  6814                           ; BSR set to: 0
  6815   002096  6B78               	clrf	___fldiv@aexp& (0+255),b
  6816   002098  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6817   00209A  EF51  F010         	goto	u6261
  6818   00209E  EF53  F010         	goto	u6260
  6819   0020A2                     u6261:
  6820   0020A2  EF77  F010         	goto	l944
  6821   0020A6                     u6260:
  6822   0020A6                     
  6823                           ; BSR set to: 0
  6824   0020A6  0EFF               	movlw	255
  6825   0020A8  1573               	andwf	___fldiv@grs& (0+255),w,b
  6826   0020AA  6F68               	movwf	??___fldiv& (0+255),b
  6827   0020AC  0EFF               	movlw	255
  6828   0020AE  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6829   0020B0  6F69               	movwf	(??___fldiv+1)& (0+255),b
  6830   0020B2  0EFF               	movlw	255
  6831   0020B4  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6832   0020B6  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  6833   0020B8  0E7F               	movlw	127
  6834   0020BA  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6835   0020BC  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  6836   0020BE  5168               	movf	??___fldiv& (0+255),w,b
  6837   0020C0  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  6838   0020C2  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  6839   0020C4  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  6840   0020C6  B4D8               	btfsc	status,2,c
  6841   0020C8  EF68  F010         	goto	u6271
  6842   0020CC  EF6A  F010         	goto	u6270
  6843   0020D0                     u6271:
  6844   0020D0  EF6E  F010         	goto	l945
  6845   0020D4                     u6270:
  6846   0020D4                     l5349:
  6847                           
  6848                           ; BSR set to: 0
  6849   0020D4  0E01               	movlw	1
  6850   0020D6  6F78               	movwf	___fldiv@aexp& (0+255),b
  6851   0020D8  EF77  F010         	goto	l944
  6852   0020DC                     l945:
  6853                           
  6854                           ; BSR set to: 0
  6855   0020DC  A160               	btfss	___fldiv@b& (0+255),0,b
  6856   0020DE  EF73  F010         	goto	u6281
  6857   0020E2  EF75  F010         	goto	u6280
  6858   0020E6                     u6281:
  6859   0020E6  EF77  F010         	goto	l944
  6860   0020EA                     u6280:
  6861   0020EA  EF6A  F010         	goto	l5349
  6862   0020EE                     l944:
  6863                           
  6864                           ; BSR set to: 0
  6865   0020EE  5178               	movf	___fldiv@aexp& (0+255),w,b
  6866   0020F0  B4D8               	btfsc	status,2,c
  6867   0020F2  EF7D  F010         	goto	u6291
  6868   0020F6  EF7F  F010         	goto	u6290
  6869   0020FA                     u6291:
  6870   0020FA  EFA3  F010         	goto	l5361
  6871   0020FE                     u6290:
  6872   0020FE                     
  6873                           ; BSR set to: 0
  6874   0020FE  0E01               	movlw	1
  6875   002100  2760               	addwf	___fldiv@b& (0+255),f,b
  6876   002102  0E00               	movlw	0
  6877   002104  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  6878   002106  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  6879   002108  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  6880   00210A                     
  6881                           ; BSR set to: 0
  6882   00210A  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  6883   00210C  EF8A  F010         	goto	u6301
  6884   002110  EF8C  F010         	goto	u6300
  6885   002114                     u6301:
  6886   002114  EFA3  F010         	goto	l5361
  6887   002118                     u6300:
  6888   002118                     
  6889                           ; BSR set to: 0
  6890   002118  C060  F068         	movff	___fldiv@b,??___fldiv
  6891   00211C  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
  6892   002120  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
  6893   002124  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
  6894   002128  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  6895   00212A  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  6896   00212C  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  6897   00212E  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  6898   002130  3368               	rrcf	??___fldiv& (0+255),f,b
  6899   002132  C068  F060         	movff	??___fldiv,___fldiv@b
  6900   002136  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
  6901   00213A  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
  6902   00213E  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
  6903   002142                     
  6904                           ; BSR set to: 0
  6905   002142  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  6906   002144  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6907   002146                     l5361:
  6908                           
  6909                           ; BSR set to: 0
  6910   002146  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6911   002148  EFAE  F010         	goto	u6311
  6912   00214C  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6913   00214E  E108               	bnz	u6310
  6914   002150  2971               	incf	___fldiv@new_exp& (0+255),w,b
  6915   002152  A0D8               	btfss	status,0,c
  6916   002154  EFAE  F010         	goto	u6311
  6917   002158  EFB0  F010         	goto	u6310
  6918   00215C                     u6311:
  6919   00215C  EFBB  F010         	goto	l5365
  6920   002160                     u6310:
  6921   002160                     
  6922                           ; BSR set to: 0
  6923   002160  0E00               	movlw	0
  6924   002162  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6925   002164  6971               	setf	___fldiv@new_exp& (0+255),b
  6926   002166  0E00               	movlw	0
  6927   002168  6F60               	movwf	___fldiv@b& (0+255),b
  6928   00216A  0E00               	movlw	0
  6929   00216C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6930   00216E  0E00               	movlw	0
  6931   002170  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6932   002172  0E00               	movlw	0
  6933   002174  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6934   002176                     l5365:
  6935                           
  6936                           ; BSR set to: 0
  6937   002176  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6938   002178  EFC8  F010         	goto	u6320
  6939   00217C  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6940   00217E  E106               	bnz	u6321
  6941   002180  0571               	decf	___fldiv@new_exp& (0+255),w,b
  6942   002182  B0D8               	btfsc	status,0,c
  6943   002184  EFC6  F010         	goto	u6321
  6944   002188  EFC8  F010         	goto	u6320
  6945   00218C                     u6321:
  6946   00218C  EFD5  F010         	goto	l5371
  6947   002190                     u6320:
  6948   002190                     
  6949                           ; BSR set to: 0
  6950   002190  0E00               	movlw	0
  6951   002192  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6952   002194  0E00               	movlw	0
  6953   002196  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6954   002198  0E00               	movlw	0
  6955   00219A  6F60               	movwf	___fldiv@b& (0+255),b
  6956   00219C  0E00               	movlw	0
  6957   00219E  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6958   0021A0  0E00               	movlw	0
  6959   0021A2  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6960   0021A4  0E00               	movlw	0
  6961   0021A6  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6962   0021A8                     
  6963                           ; BSR set to: 0
  6964   0021A8  6B70               	clrf	___fldiv@sign& (0+255),b
  6965   0021AA                     l5371:
  6966                           
  6967                           ; BSR set to: 0
  6968   0021AA  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
  6969   0021AE                     
  6970                           ; BSR set to: 0
  6971   0021AE  A177               	btfss	___fldiv@bexp& (0+255),0,b
  6972   0021B0  EFDC  F010         	goto	u6331
  6973   0021B4  EFDE  F010         	goto	u6330
  6974   0021B8                     u6331:
  6975   0021B8  EFE1  F010         	goto	l5377
  6976   0021BC                     u6330:
  6977   0021BC                     
  6978                           ; BSR set to: 0
  6979   0021BC  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6980   0021BE  EFE2  F010         	goto	l5379
  6981   0021C2                     l5377:
  6982                           
  6983                           ; BSR set to: 0
  6984   0021C2  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  6985   0021C4                     l5379:
  6986                           
  6987                           ; BSR set to: 0
  6988   0021C4  90D8               	bcf	status,0,c
  6989   0021C6  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  6990   0021C8  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6991   0021CA  EF9B  F00F         	goto	l5295
  6992   0021CE                     l931:
  6993                           
  6994                           ; BSR set to: 0
  6995   0021CE  0012               	return		;funcret
  6996   0021D0                     __end_of___fldiv:
  6997                           	callstack 0
  6998                           
  6999 ;; *************** function _show7Segment *****************
  7000 ;; Defined at:
  7001 ;;		line 746 in file "main.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;		None
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;		None
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  1    wreg      void 
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0, cstack
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7015 ;;      Params:         0       0       0       0
  7016 ;;      Locals:         0       0       0       0
  7017 ;;      Temps:          0       0       0       0
  7018 ;;      Totals:         0       0       0       0
  7019 ;;Total ram usage:        0 bytes
  7020 ;; Hardware stack levels used: 1
  7021 ;; Hardware stack levels required when called: 4
  7022 ;; This function calls:
  7023 ;;		_displayDigits
  7024 ;;		_get7SegmentPattern
  7025 ;; This function is called by:
  7026 ;;		_main
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text21
  7031   003916                     __ptext21:
  7032                           	callstack 0
  7033   003916                     _show7Segment:
  7034                           	callstack 26
  7035   003916                     
  7036                           ;main.c: 748:     segPattern0 = get7SegmentPattern( displayDigit0 );
  7037   003916  503C               	movf	_displayDigit0^0,w,c
  7038   003918  EC05  F016         	call	_get7SegmentPattern
  7039   00391C  6E3F               	movwf	_segPattern0^0,c
  7040   00391E                     
  7041                           ;main.c: 750:     if( displaySample == 1 && ( fsm_state == 1 || fsm_state == 2 ) ){
  7042   00391E  0438               	decf	_displaySample^0,w,c
  7043   003920  A4D8               	btfss	status,2,c
  7044   003922  EF95  F01C         	goto	u7601
  7045   003926  EF97  F01C         	goto	u7600
  7046   00392A                     u7601:
  7047   00392A  EFAC  F01C         	goto	l6201
  7048   00392E                     u7600:
  7049   00392E  0100               	movlb	0	; () banked
  7050   003930  05F9               	decf	_fsm_state& (0+255),w,b
  7051   003932  B4D8               	btfsc	status,2,c
  7052   003934  EF9E  F01C         	goto	u7611
  7053   003938  EFA0  F01C         	goto	u7610
  7054   00393C                     u7611:
  7055   00393C  EFA9  F01C         	goto	l6199
  7056   003940                     u7610:
  7057   003940                     
  7058                           ; BSR set to: 0
  7059   003940  0E02               	movlw	2
  7060   003942  19F9               	xorwf	_fsm_state& (0+255),w,b
  7061   003944  A4D8               	btfss	status,2,c
  7062   003946  EFA7  F01C         	goto	u7621
  7063   00394A  EFA9  F01C         	goto	u7620
  7064   00394E                     u7621:
  7065   00394E  EFAC  F01C         	goto	l6201
  7066   003952                     u7620:
  7067   003952                     l6199:
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;main.c: 751:         segPattern0 = segPattern0 | 0b10000000;
  7071   003952  503F               	movf	_segPattern0^0,w,c
  7072   003954  0980               	iorlw	128
  7073   003956  6E3F               	movwf	_segPattern0^0,c
  7074   003958                     l6201:
  7075                           
  7076                           ;main.c: 754:     segPattern1 = get7SegmentPattern( displayDigit1 );
  7077   003958  503B               	movf	_displayDigit1^0,w,c
  7078   00395A  EC05  F016         	call	_get7SegmentPattern
  7079   00395E  6E3E               	movwf	_segPattern1^0,c
  7080   003960                     
  7081                           ;main.c: 755:     segPattern2 = get7SegmentPattern( displayDigit2 );
  7082   003960  503A               	movf	_displayDigit2^0,w,c
  7083   003962  EC05  F016         	call	_get7SegmentPattern
  7084   003966  6E3D               	movwf	_segPattern2^0,c
  7085   003968                     
  7086                           ;main.c: 757:     displayDigits( segPattern0, segPattern1, segPattern2 );
  7087   003968  C03E  F060         	movff	_segPattern1,displayDigits@digit1
  7088   00396C  C03D  F061         	movff	_segPattern2,displayDigits@digit2
  7089   003970  503F               	movf	_segPattern0^0,w,c
  7090   003972  EC1F  F019         	call	_displayDigits
  7091   003976  0012               	return		;funcret
  7092   003978                     __end_of_show7Segment:
  7093                           	callstack 0
  7094                           
  7095 ;; *************** function _get7SegmentPattern *****************
  7096 ;; Defined at:
  7097 ;;		line 529 in file "main.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;  digit           1    wreg     unsigned char 
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;  digit           1    0[BANK0 ] unsigned char 
  7102 ;;  pattern         1    1[BANK0 ] unsigned char 
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  1    wreg      unsigned char 
  7105 ;; Registers used:
  7106 ;;		wreg, status,2, status,0
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7112 ;;      Params:         0       0       0       0
  7113 ;;      Locals:         0       2       0       0
  7114 ;;      Temps:          0       0       0       0
  7115 ;;      Totals:         0       2       0       0
  7116 ;;Total ram usage:        2 bytes
  7117 ;; Hardware stack levels used: 1
  7118 ;; Hardware stack levels required when called: 3
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		_show7Segment
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           	psect	text22
  7127   002C0A                     __ptext22:
  7128                           	callstack 0
  7129   002C0A                     _get7SegmentPattern:
  7130                           	callstack 26
  7131                           
  7132                           ;incstack = 0
  7133                           ;get7SegmentPattern@digit stored from wreg
  7134   002C0A  0100               	movlb	0	; () banked
  7135   002C0C  6F60               	movwf	get7SegmentPattern@digit& (0+255),b
  7136   002C0E                     
  7137                           ;main.c: 532:     uint8_t pattern;;main.c: 534:     switch (digit) {
  7138   002C0E  EF48  F016         	goto	l6031
  7139   002C12                     l5997:
  7140                           
  7141                           ; BSR set to: 0
  7142   002C12  0E3F               	movlw	63
  7143   002C14  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7144   002C16  EF8C  F016         	goto	l242
  7145   002C1A                     l5999:
  7146                           
  7147                           ; BSR set to: 0
  7148   002C1A  0E06               	movlw	6
  7149   002C1C  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7150   002C1E  EF8C  F016         	goto	l242
  7151   002C22                     l6001:
  7152                           
  7153                           ; BSR set to: 0
  7154   002C22  0E5B               	movlw	91
  7155   002C24  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7156   002C26  EF8C  F016         	goto	l242
  7157   002C2A                     l6003:
  7158                           
  7159                           ; BSR set to: 0
  7160   002C2A  0E4F               	movlw	79
  7161   002C2C  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7162   002C2E  EF8C  F016         	goto	l242
  7163   002C32                     l6005:
  7164                           
  7165                           ; BSR set to: 0
  7166   002C32  0E66               	movlw	102
  7167   002C34  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7168   002C36  EF8C  F016         	goto	l242
  7169   002C3A                     l6007:
  7170                           
  7171                           ; BSR set to: 0
  7172   002C3A  0E6D               	movlw	109
  7173   002C3C  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7174   002C3E  EF8C  F016         	goto	l242
  7175   002C42                     l6009:
  7176                           
  7177                           ; BSR set to: 0
  7178   002C42  0E7D               	movlw	125
  7179   002C44  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7180   002C46  EF8C  F016         	goto	l242
  7181   002C4A                     l6011:
  7182                           
  7183                           ; BSR set to: 0
  7184   002C4A  0E07               	movlw	7
  7185   002C4C  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7186   002C4E  EF8C  F016         	goto	l242
  7187   002C52                     l6013:
  7188                           
  7189                           ; BSR set to: 0
  7190   002C52  0E7F               	movlw	127
  7191   002C54  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7192   002C56  EF8C  F016         	goto	l242
  7193   002C5A                     l6015:
  7194                           
  7195                           ; BSR set to: 0
  7196   002C5A  0E6F               	movlw	111
  7197   002C5C  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7198   002C5E  EF8C  F016         	goto	l242
  7199   002C62                     l6017:
  7200                           
  7201                           ; BSR set to: 0
  7202   002C62  0E79               	movlw	121
  7203   002C64  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7204   002C66  EF8C  F016         	goto	l242
  7205   002C6A                     l6019:
  7206                           
  7207                           ; BSR set to: 0
  7208   002C6A  0E77               	movlw	119
  7209   002C6C  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7210   002C6E  EF8C  F016         	goto	l242
  7211   002C72                     l6021:
  7212                           
  7213                           ; BSR set to: 0
  7214   002C72  0E39               	movlw	57
  7215   002C74  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7216   002C76  EF8C  F016         	goto	l242
  7217   002C7A                     l6025:
  7218                           
  7219                           ; BSR set to: 0
  7220   002C7A  0E38               	movlw	56
  7221   002C7C  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7222   002C7E  EF8C  F016         	goto	l242
  7223   002C82                     l6027:
  7224                           
  7225                           ; BSR set to: 0
  7226   002C82  0E31               	movlw	49
  7227   002C84  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7228   002C86  EF8C  F016         	goto	l242
  7229   002C8A                     l258:
  7230                           
  7231                           ; BSR set to: 0
  7232   002C8A  6B61               	clrf	get7SegmentPattern@pattern& (0+255),b
  7233   002C8C  EF8C  F016         	goto	l242
  7234   002C90                     l6031:
  7235   002C90  0100               	movlb	0	; () banked
  7236   002C92  5160               	movf	get7SegmentPattern@digit& (0+255),w,b
  7237                           
  7238                           ; Switch size 1, requested type "simple"
  7239                           ; Number of cases is 16, Range of values is 0 to 114
  7240                           ; switch strategies available:
  7241                           ; Name         Instructions Cycles
  7242                           ; simple_byte           49    25 (average)
  7243                           ;	Chosen strategy is simple_byte
  7244   002C94  0A00               	xorlw	0	; case 0
  7245   002C96  B4D8               	btfsc	status,2,c
  7246   002C98  EF09  F016         	goto	l5997
  7247   002C9C  0A01               	xorlw	1	; case 1
  7248   002C9E  B4D8               	btfsc	status,2,c
  7249   002CA0  EF0D  F016         	goto	l5999
  7250   002CA4  0A03               	xorlw	3	; case 2
  7251   002CA6  B4D8               	btfsc	status,2,c
  7252   002CA8  EF11  F016         	goto	l6001
  7253   002CAC  0A01               	xorlw	1	; case 3
  7254   002CAE  B4D8               	btfsc	status,2,c
  7255   002CB0  EF15  F016         	goto	l6003
  7256   002CB4  0A07               	xorlw	7	; case 4
  7257   002CB6  B4D8               	btfsc	status,2,c
  7258   002CB8  EF19  F016         	goto	l6005
  7259   002CBC  0A01               	xorlw	1	; case 5
  7260   002CBE  B4D8               	btfsc	status,2,c
  7261   002CC0  EF1D  F016         	goto	l6007
  7262   002CC4  0A03               	xorlw	3	; case 6
  7263   002CC6  B4D8               	btfsc	status,2,c
  7264   002CC8  EF21  F016         	goto	l6009
  7265   002CCC  0A01               	xorlw	1	; case 7
  7266   002CCE  B4D8               	btfsc	status,2,c
  7267   002CD0  EF25  F016         	goto	l6011
  7268   002CD4  0A0F               	xorlw	15	; case 8
  7269   002CD6  B4D8               	btfsc	status,2,c
  7270   002CD8  EF29  F016         	goto	l6013
  7271   002CDC  0A01               	xorlw	1	; case 9
  7272   002CDE  B4D8               	btfsc	status,2,c
  7273   002CE0  EF2D  F016         	goto	l6015
  7274   002CE4  0A48               	xorlw	72	; case 65
  7275   002CE6  B4D8               	btfsc	status,2,c
  7276   002CE8  EF35  F016         	goto	l6019
  7277   002CEC  0A02               	xorlw	2	; case 67
  7278   002CEE  B4D8               	btfsc	status,2,c
  7279   002CF0  EF39  F016         	goto	l6021
  7280   002CF4  0A0F               	xorlw	15	; case 76
  7281   002CF6  B4D8               	btfsc	status,2,c
  7282   002CF8  EF3D  F016         	goto	l6025
  7283   002CFC  0A1F               	xorlw	31	; case 83
  7284   002CFE  B4D8               	btfsc	status,2,c
  7285   002D00  EF1D  F016         	goto	l6007
  7286   002D04  0A0A               	xorlw	10	; case 89
  7287   002D06  B4D8               	btfsc	status,2,c
  7288   002D08  EF31  F016         	goto	l6017
  7289   002D0C  0A2B               	xorlw	43	; case 114
  7290   002D0E  B4D8               	btfsc	status,2,c
  7291   002D10  EF41  F016         	goto	l6027
  7292   002D14  EF45  F016         	goto	l258
  7293   002D18                     l242:
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;main.c: 554:     return pattern;
  7297   002D18  5161               	movf	get7SegmentPattern@pattern& (0+255),w,b
  7298   002D1A                     
  7299                           ; BSR set to: 0
  7300   002D1A  0012               	return		;funcret
  7301   002D1C                     __end_of_get7SegmentPattern:
  7302                           	callstack 0
  7303                           
  7304 ;; *************** function _displayDigits *****************
  7305 ;; Defined at:
  7306 ;;		line 557 in file "main.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;  digit0          1    wreg     unsigned char 
  7309 ;;  digit1          1    0[BANK0 ] unsigned char 
  7310 ;;  digit2          1    1[BANK0 ] unsigned char 
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;  digit0          1    4[BANK0 ] unsigned char 
  7313 ;;  i               2    5[BANK0 ] int 
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  1    wreg      void 
  7316 ;; Registers used:
  7317 ;;		wreg, status,2, status,0
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7323 ;;      Params:         0       2       0       0
  7324 ;;      Locals:         0       3       0       0
  7325 ;;      Temps:          0       2       0       0
  7326 ;;      Totals:         0       7       0       0
  7327 ;;Total ram usage:        7 bytes
  7328 ;; Hardware stack levels used: 1
  7329 ;; Hardware stack levels required when called: 3
  7330 ;; This function calls:
  7331 ;;		Nothing
  7332 ;; This function is called by:
  7333 ;;		_show7Segment
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           	psect	text23
  7338   00323E                     __ptext23:
  7339                           	callstack 0
  7340   00323E                     _displayDigits:
  7341                           	callstack 26
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;incstack = 0
  7345                           ;displayDigits@digit0 stored from wreg
  7346   00323E  0100               	movlb	0	; () banked
  7347   003240  6F64               	movwf	displayDigits@digit0& (0+255),b
  7348   003242                     
  7349                           ;main.c: 558:     int i;;main.c: 559:     for ( i = 0 ; i < 8 ; i++ ){
  7350   003242  0E00               	movlw	0
  7351   003244  0100               	movlb	0	; () banked
  7352   003246  6F66               	movwf	(displayDigits@i+1)& (0+255),b
  7353   003248  0E00               	movlw	0
  7354   00324A  6F65               	movwf	displayDigits@i& (0+255),b
  7355   00324C                     l6039:
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;main.c: 561:         PORTCbits.RC5 = (digit0 >> i) & (0x01);
  7359   00324C  C065  F062         	movff	displayDigits@i,??_displayDigits
  7360   003250  C064  F063         	movff	displayDigits@digit0,??_displayDigits+1
  7361   003254  2B62               	incf	??_displayDigits& (0+255),f,b
  7362   003256  EF2F  F019         	goto	u7284
  7363   00325A                     u7285:
  7364   00325A  90D8               	bcf	status,0,c
  7365   00325C  3363               	rrcf	(??_displayDigits+1)& (0+255),f,b
  7366   00325E                     u7284:
  7367   00325E  2F62               	decfsz	??_displayDigits& (0+255),f,b
  7368   003260  EF2D  F019         	goto	u7285
  7369   003264  0E01               	movlw	1
  7370   003266  0100               	movlb	0	; () banked
  7371   003268  1763               	andwf	(??_displayDigits+1)& (0+255),f,b
  7372   00326A  3B63               	swapf	(??_displayDigits+1)& (0+255),f,b
  7373   00326C  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  7374   00326E  5082               	movf	130,w,c	;volatile
  7375   003270  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  7376   003272  0BDF               	andlw	-33
  7377   003274  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  7378   003276  6E82               	movwf	130,c	;volatile
  7379                           
  7380                           ;main.c: 562:         PORTCbits.RC4 = (digit1 >> i) & (0x01);
  7381   003278  C065  F062         	movff	displayDigits@i,??_displayDigits
  7382   00327C  C060  F063         	movff	displayDigits@digit1,??_displayDigits+1
  7383   003280  2B62               	incf	??_displayDigits& (0+255),f,b
  7384   003282  EF45  F019         	goto	u7294
  7385   003286                     u7295:
  7386   003286  90D8               	bcf	status,0,c
  7387   003288  3363               	rrcf	(??_displayDigits+1)& (0+255),f,b
  7388   00328A                     u7294:
  7389   00328A  2F62               	decfsz	??_displayDigits& (0+255),f,b
  7390   00328C  EF43  F019         	goto	u7295
  7391   003290  0E01               	movlw	1
  7392   003292  0100               	movlb	0	; () banked
  7393   003294  1763               	andwf	(??_displayDigits+1)& (0+255),f,b
  7394   003296  3B63               	swapf	(??_displayDigits+1)& (0+255),f,b
  7395   003298  5082               	movf	130,w,c	;volatile
  7396   00329A  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  7397   00329C  0BEF               	andlw	-17
  7398   00329E  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  7399   0032A0  6E82               	movwf	130,c	;volatile
  7400                           
  7401                           ;main.c: 563:         PORTCbits.RC3 = (digit2 >> i) & (0x01);
  7402   0032A2  C065  F062         	movff	displayDigits@i,??_displayDigits
  7403   0032A6  C061  F063         	movff	displayDigits@digit2,??_displayDigits+1
  7404   0032AA  2B62               	incf	??_displayDigits& (0+255),f,b
  7405   0032AC  EF5A  F019         	goto	u7304
  7406   0032B0                     u7305:
  7407   0032B0  90D8               	bcf	status,0,c
  7408   0032B2  3363               	rrcf	(??_displayDigits+1)& (0+255),f,b
  7409   0032B4                     u7304:
  7410   0032B4  2F62               	decfsz	??_displayDigits& (0+255),f,b
  7411   0032B6  EF58  F019         	goto	u7305
  7412   0032BA  0E01               	movlw	1
  7413   0032BC  0100               	movlb	0	; () banked
  7414   0032BE  1763               	andwf	(??_displayDigits+1)& (0+255),f,b
  7415   0032C0  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  7416   0032C2  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  7417   0032C4  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  7418   0032C6  5082               	movf	130,w,c	;volatile
  7419   0032C8  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  7420   0032CA  0BF7               	andlw	-9
  7421   0032CC  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  7422   0032CE  6E82               	movwf	130,c	;volatile
  7423   0032D0                     
  7424                           ; BSR set to: 0
  7425                           ;main.c: 566:         PORTCbits.RC6 = 1;
  7426   0032D0  8C82               	bsf	130,6,c	;volatile
  7427   0032D2                     
  7428                           ; BSR set to: 0
  7429                           ;main.c: 567:         _delay((unsigned long)((500)*(2000000/4000000.0)));
  7430   0032D2  0E53               	movlw	83
  7431   0032D4                     u7907:
  7432   0032D4  2EE8               	decfsz	wreg,f,c
  7433   0032D6  D7FE               	bra	u7907
  7434   0032D8  0000               	nop	
  7435   0032DA                     
  7436                           ;main.c: 568:         PORTCbits.RC6 = 0;
  7437   0032DA  9C82               	bcf	130,6,c	;volatile
  7438   0032DC                     
  7439                           ;main.c: 569:         _delay((unsigned long)((500)*(2000000/4000000.0)));
  7440   0032DC  0E53               	movlw	83
  7441   0032DE                     u7917:
  7442   0032DE  2EE8               	decfsz	wreg,f,c
  7443   0032E0  D7FE               	bra	u7917
  7444   0032E2  0000               	nop	
  7445   0032E4                     
  7446                           ;main.c: 570:     }
  7447   0032E4  0100               	movlb	0	; () banked
  7448   0032E6  4B65               	infsnz	displayDigits@i& (0+255),f,b
  7449   0032E8  2B66               	incf	(displayDigits@i+1)& (0+255),f,b
  7450   0032EA                     
  7451                           ; BSR set to: 0
  7452   0032EA  BF66               	btfsc	(displayDigits@i+1)& (0+255),7,b
  7453   0032EC  EF81  F019         	goto	u7311
  7454   0032F0  5166               	movf	(displayDigits@i+1)& (0+255),w,b
  7455   0032F2  E109               	bnz	u7310
  7456   0032F4  0E08               	movlw	8
  7457   0032F6  5D65               	subwf	displayDigits@i& (0+255),w,b
  7458   0032F8  A0D8               	btfss	status,0,c
  7459   0032FA  EF81  F019         	goto	u7311
  7460   0032FE  EF83  F019         	goto	u7310
  7461   003302                     u7311:
  7462   003302  EF26  F019         	goto	l6039
  7463   003306                     u7310:
  7464   003306                     
  7465                           ; BSR set to: 0
  7466                           ;main.c: 573:     PORTCbits.RC7 = 1;
  7467   003306  8E82               	bsf	130,7,c	;volatile
  7468   003308                     
  7469                           ; BSR set to: 0
  7470                           ;main.c: 574:     _delay((unsigned long)((500)*(2000000/4000000.0)));
  7471   003308  0E53               	movlw	83
  7472   00330A                     u7927:
  7473   00330A  2EE8               	decfsz	wreg,f,c
  7474   00330C  D7FE               	bra	u7927
  7475   00330E  0000               	nop	
  7476   003310                     
  7477                           ;main.c: 575:     PORTCbits.RC7 = 0;
  7478   003310  9E82               	bcf	130,7,c	;volatile
  7479   003312  0012               	return		;funcret
  7480   003314                     __end_of_displayDigits:
  7481                           	callstack 0
  7482                           
  7483 ;; *************** function _setupTimer1 *****************
  7484 ;; Defined at:
  7485 ;;		line 486 in file "main.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;		None
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;		None
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1    wreg      void 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7499 ;;      Params:         0       0       0       0
  7500 ;;      Locals:         0       0       0       0
  7501 ;;      Temps:          0       0       0       0
  7502 ;;      Totals:         0       0       0       0
  7503 ;;Total ram usage:        0 bytes
  7504 ;; Hardware stack levels used: 1
  7505 ;; Hardware stack levels required when called: 3
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_main
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           	psect	text24
  7514   003DD6                     __ptext24:
  7515                           	callstack 0
  7516   003DD6                     _setupTimer1:
  7517                           	callstack 27
  7518   003DD6                     
  7519                           ;main.c: 487:     T1CON = 0b00110101;
  7520   003DD6  0E35               	movlw	53
  7521   003DD8  6ECD               	movwf	205,c	;volatile
  7522                           
  7523                           ;main.c: 488:     TMR1 = 0;
  7524   003DDA  0E00               	movlw	0
  7525   003DDC  6ECF               	movwf	207,c	;volatile
  7526   003DDE  0E00               	movlw	0
  7527   003DE0  6ECE               	movwf	206,c	;volatile
  7528   003DE2                     
  7529                           ;main.c: 491:     PIR1bits.TMR1IF = 0;
  7530   003DE2  909E               	bcf	158,0,c	;volatile
  7531   003DE4                     
  7532                           ;main.c: 492:     PIE1bits.TMR1IE = 1;
  7533   003DE4  809D               	bsf	157,0,c	;volatile
  7534                           
  7535                           ;main.c: 498:     TMR1 = 0;
  7536   003DE6  0E00               	movlw	0
  7537   003DE8  6ECF               	movwf	207,c	;volatile
  7538   003DEA  0E00               	movlw	0
  7539   003DEC  6ECE               	movwf	206,c	;volatile
  7540   003DEE  0012               	return		;funcret
  7541   003DF0                     __end_of_setupTimer1:
  7542                           	callstack 0
  7543                           
  7544 ;; *************** function _setupI2C *****************
  7545 ;; Defined at:
  7546 ;;		line 501 in file "main.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;		None
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;		None
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  1    wreg      void 
  7553 ;; Registers used:
  7554 ;;		wreg, status,2
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7560 ;;      Params:         0       0       0       0
  7561 ;;      Locals:         0       0       0       0
  7562 ;;      Temps:          0       0       0       0
  7563 ;;      Totals:         0       0       0       0
  7564 ;;Total ram usage:        0 bytes
  7565 ;; Hardware stack levels used: 1
  7566 ;; Hardware stack levels required when called: 3
  7567 ;; This function calls:
  7568 ;;		Nothing
  7569 ;; This function is called by:
  7570 ;;		_main
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           	psect	text25
  7575   003E1E                     __ptext25:
  7576                           	callstack 0
  7577   003E1E                     _setupI2C:
  7578                           	callstack 27
  7579   003E1E                     
  7580                           ;main.c: 502:     TRISBbits.RB4 = 1;
  7581   003E1E  8893               	bsf	147,4,c	;volatile
  7582                           
  7583                           ;main.c: 503:     TRISBbits.RB6 = 1;
  7584   003E20  8C93               	bsf	147,6,c	;volatile
  7585   003E22                     
  7586                           ;main.c: 504:     SSPCON1 = 0b00101000;
  7587   003E22  0E28               	movlw	40
  7588   003E24  6EC6               	movwf	198,c	;volatile
  7589                           
  7590                           ;main.c: 505:     SSPADD = ((2000000 / 4) / 100000) - 1;
  7591   003E26  0E04               	movlw	4
  7592   003E28  6EC8               	movwf	200,c	;volatile
  7593   003E2A                     
  7594                           ;main.c: 506:     SSPSTAT = 0x00;
  7595   003E2A  6AC7               	clrf	199,c	;volatile
  7596   003E2C                     
  7597                           ;main.c: 508:     SSPCON2 = 0b00000000;
  7598   003E2C  6AC5               	clrf	197,c	;volatile
  7599   003E2E  0012               	return		;funcret
  7600   003E30                     __end_of_setupI2C:
  7601                           	callstack 0
  7602                           
  7603 ;; *************** function _setupEUSART *****************
  7604 ;; Defined at:
  7605 ;;		line 643 in file "main.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;		None
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;		None
  7610 ;; Return value:  Size  Location     Type
  7611 ;;                  1    wreg      void 
  7612 ;; Registers used:
  7613 ;;		wreg, status,2
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7619 ;;      Params:         0       0       0       0
  7620 ;;      Locals:         0       0       0       0
  7621 ;;      Temps:          0       0       0       0
  7622 ;;      Totals:         0       0       0       0
  7623 ;;Total ram usage:        0 bytes
  7624 ;; Hardware stack levels used: 1
  7625 ;; Hardware stack levels required when called: 3
  7626 ;; This function calls:
  7627 ;;		Nothing
  7628 ;; This function is called by:
  7629 ;;		_main
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           	psect	text26
  7634   003DB6                     __ptext26:
  7635                           	callstack 0
  7636   003DB6                     _setupEUSART:
  7637                           	callstack 27
  7638   003DB6                     
  7639                           ;main.c: 647:     BAUDCONbits.BRG16 = 0;
  7640   003DB6  96B8               	bcf	184,3,c	;volatile
  7641                           
  7642                           ;main.c: 648:     BAUDCONbits.ABDEN = 0;
  7643   003DB8  90B8               	bcf	184,0,c	;volatile
  7644                           
  7645                           ;main.c: 649:     BAUDCONbits.CKTXP = 0;
  7646   003DBA  98B8               	bcf	184,4,c	;volatile
  7647                           
  7648                           ;main.c: 650:     BAUDCONbits.ABDOVF = 0;
  7649   003DBC  9EB8               	bcf	184,7,c	;volatile
  7650   003DBE                     
  7651                           ;main.c: 653:     SPBRG = 12;
  7652   003DBE  0E0C               	movlw	12
  7653   003DC0  6EAF               	movwf	175,c	;volatile
  7654   003DC2                     
  7655                           ;main.c: 655:     TXSTAbits.BRGH = 0;
  7656   003DC2  94AC               	bcf	172,2,c	;volatile
  7657   003DC4                     
  7658                           ;main.c: 657:     TXSTAbits.SYNC = 0;
  7659   003DC4  98AC               	bcf	172,4,c	;volatile
  7660   003DC6                     
  7661                           ;main.c: 658:     TXSTAbits.TX9 = 0;
  7662   003DC6  9CAC               	bcf	172,6,c	;volatile
  7663   003DC8                     
  7664                           ;main.c: 659:     RCSTAbits.SPEN = 1;
  7665   003DC8  8EAB               	bsf	171,7,c	;volatile
  7666   003DCA                     
  7667                           ;main.c: 660:     TXSTAbits.TXEN = 1;
  7668   003DCA  8AAC               	bsf	172,5,c	;volatile
  7669   003DCC                     
  7670                           ;main.c: 661:     RCSTAbits.CREN = 0;
  7671   003DCC  98AB               	bcf	171,4,c	;volatile
  7672   003DCE                     
  7673                           ;main.c: 663:     TXSTAbits.SENDB = 0;
  7674   003DCE  96AC               	bcf	172,3,c	;volatile
  7675   003DD0                     
  7676                           ;main.c: 666:     TRISBbits.TRISB7 = 1;
  7677   003DD0  8E93               	bsf	147,7,c	;volatile
  7678   003DD2                     
  7679                           ;main.c: 667:     TRISBbits.TRISB5 = 1;
  7680   003DD2  8A93               	bsf	147,5,c	;volatile
  7681   003DD4  0012               	return		;funcret
  7682   003DD6                     __end_of_setupEUSART:
  7683                           	callstack 0
  7684                           
  7685 ;; *************** function _setupADC *****************
  7686 ;; Defined at:
  7687 ;;		line 480 in file "main.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;		None
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg, status,2
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7701 ;;      Params:         0       0       0       0
  7702 ;;      Locals:         0       0       0       0
  7703 ;;      Temps:          0       0       0       0
  7704 ;;      Totals:         0       0       0       0
  7705 ;;Total ram usage:        0 bytes
  7706 ;; Hardware stack levels used: 1
  7707 ;; Hardware stack levels required when called: 3
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_main
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           	psect	text27
  7716   003E78                     __ptext27:
  7717                           	callstack 0
  7718   003E78                     _setupADC:
  7719                           	callstack 27
  7720   003E78                     
  7721                           ;main.c: 481:     ADCON1 = 0b00000000;
  7722   003E78  6AC1               	clrf	193,c	;volatile
  7723   003E7A                     
  7724                           ;main.c: 482:     ADCON0 = 0b00001101;
  7725   003E7A  0E0D               	movlw	13
  7726   003E7C  6EC2               	movwf	194,c	;volatile
  7727                           
  7728                           ;main.c: 483:     ADCON2 = 0b10101111;
  7729   003E7E  0EAF               	movlw	175
  7730   003E80  6EC0               	movwf	192,c	;volatile
  7731   003E82  0012               	return		;funcret
  7732   003E84                     __end_of_setupADC:
  7733                           	callstack 0
  7734                           
  7735 ;; *************** function _setDisplayDigits *****************
  7736 ;; Defined at:
  7737 ;;		line 683 in file "main.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      void 
  7744 ;; Registers used:
  7745 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7751 ;;      Params:         0       0       0       0
  7752 ;;      Locals:         0       0       0       0
  7753 ;;      Temps:          0       0       0       0
  7754 ;;      Totals:         0       0       0       0
  7755 ;;Total ram usage:        0 bytes
  7756 ;; Hardware stack levels used: 1
  7757 ;; Hardware stack levels required when called: 4
  7758 ;; This function calls:
  7759 ;;		___flmul
  7760 ;;		___fltol
  7761 ;;		___lwdiv
  7762 ;;		___lwmod
  7763 ;; This function is called by:
  7764 ;;		_main
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text28
  7769   0021D0                     __ptext28:
  7770                           	callstack 0
  7771   0021D0                     _setDisplayDigits:
  7772                           	callstack 26
  7773   0021D0                     
  7774                           ;main.c: 684:     if (fsm_state == 0) {
  7775   0021D0  0100               	movlb	0	; () banked
  7776   0021D2  51F9               	movf	_fsm_state& (0+255),w,b
  7777   0021D4  A4D8               	btfss	status,2,c
  7778   0021D6  EFEF  F010         	goto	u7521
  7779   0021DA  EFF1  F010         	goto	u7520
  7780   0021DE                     u7521:
  7781   0021DE  EFF9  F010         	goto	l6141
  7782   0021E2                     u7520:
  7783   0021E2                     
  7784                           ; BSR set to: 0
  7785                           ;main.c: 686:         displayDigit0 = 11;
  7786   0021E2  0E0B               	movlw	11
  7787   0021E4  6E3C               	movwf	_displayDigit0^0,c
  7788                           
  7789                           ;main.c: 687:         displayDigit1 = 'A';
  7790   0021E6  0E41               	movlw	65
  7791   0021E8  6E3B               	movwf	_displayDigit1^0,c
  7792                           
  7793                           ;main.c: 688:         displayDigit2 = 11;
  7794   0021EA  0E0B               	movlw	11
  7795   0021EC  6E3A               	movwf	_displayDigit2^0,c
  7796                           
  7797                           ;main.c: 690:     } else if (fsm_state == 1) {
  7798   0021EE  EF0E  F012         	goto	l340
  7799   0021F2                     l6141:
  7800                           
  7801                           ; BSR set to: 0
  7802   0021F2  05F9               	decf	_fsm_state& (0+255),w,b
  7803   0021F4  A4D8               	btfss	status,2,c
  7804   0021F6  EFFF  F010         	goto	u7531
  7805   0021FA  EF01  F011         	goto	u7530
  7806   0021FE                     u7531:
  7807   0021FE  EF5E  F011         	goto	l6155
  7808   002202                     u7530:
  7809   002202                     
  7810                           ; BSR set to: 0
  7811                           ;main.c: 692:         c_target = (unsigned int) (adc_voltage * 100);
  7812   002202  0E00               	movlw	0
  7813   002204  6F72               	movwf	___flmul@a& (0+255),b
  7814   002206  0E00               	movlw	0
  7815   002208  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7816   00220A  0EC8               	movlw	200
  7817   00220C  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7818   00220E  0E42               	movlw	66
  7819   002210  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7820   002212  C0E8  F06E         	movff	_adc_voltage,___flmul@b
  7821   002216  C0E9  F06F         	movff	_adc_voltage+1,___flmul@b+1
  7822   00221A  C0EA  F070         	movff	_adc_voltage+2,___flmul@b+2
  7823   00221E  C0EB  F071         	movff	_adc_voltage+3,___flmul@b+3
  7824   002222  ECE6  F008         	call	___flmul	;wreg free
  7825   002226  C06E  F087         	movff	?___flmul,___fltol@f1
  7826   00222A  C06F  F088         	movff	?___flmul+1,___fltol@f1+1
  7827   00222E  C070  F089         	movff	?___flmul+2,___fltol@f1+2
  7828   002232  C071  F08A         	movff	?___flmul+3,___fltol@f1+3
  7829   002236  EC15  F017         	call	___fltol	;wreg free
  7830   00223A  C087  F036         	movff	?___fltol,_c_target
  7831   00223E  C088  F037         	movff	?___fltol+1,_c_target+1
  7832   002242                     
  7833                           ;main.c: 693:         c_remainder = c_target % 100;
  7834   002242  C036  F060         	movff	_c_target,___lwmod@dividend
  7835   002246  C037  F061         	movff	_c_target+1,___lwmod@dividend+1
  7836   00224A  0E00               	movlw	0
  7837   00224C  0100               	movlb	0	; () banked
  7838   00224E  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  7839   002250  0E64               	movlw	100
  7840   002252  6F62               	movwf	___lwmod@divisor& (0+255),b
  7841   002254  EC26  F01C         	call	___lwmod	;wreg free
  7842   002258  C060  F034         	movff	?___lwmod,_c_remainder
  7843   00225C  C061  F035         	movff	?___lwmod+1,_c_remainder+1
  7844   002260                     
  7845                           ;main.c: 694:         c_number = c_target / 100;
  7846   002260  C036  F060         	movff	_c_target,___lwdiv@dividend
  7847   002264  C037  F061         	movff	_c_target+1,___lwdiv@dividend+1
  7848   002268  0E00               	movlw	0
  7849   00226A  0100               	movlb	0	; () banked
  7850   00226C  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7851   00226E  0E64               	movlw	100
  7852   002270  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7853   002272  EC78  F01B         	call	___lwdiv	;wreg free
  7854   002276  C060  F032         	movff	?___lwdiv,_c_number
  7855   00227A  C061  F033         	movff	?___lwdiv+1,_c_number+1
  7856   00227E                     
  7857                           ;main.c: 696:         displayDigit0 = (uint8_t) c_number;
  7858   00227E  C032  F03C         	movff	_c_number,_displayDigit0
  7859   002282                     
  7860                           ;main.c: 697:         displayDigit1 = (uint8_t) (c_remainder / 10);
  7861   002282  C034  F060         	movff	_c_remainder,___lwdiv@dividend
  7862   002286  C035  F061         	movff	_c_remainder+1,___lwdiv@dividend+1
  7863   00228A  0E00               	movlw	0
  7864   00228C  0100               	movlb	0	; () banked
  7865   00228E  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7866   002290  0E0A               	movlw	10
  7867   002292  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7868   002294  EC78  F01B         	call	___lwdiv	;wreg free
  7869   002298  0100               	movlb	0	; () banked
  7870   00229A  5160               	movf	?___lwdiv& (0+255),w,b
  7871   00229C  6E3B               	movwf	_displayDigit1^0,c
  7872   00229E                     
  7873                           ; BSR set to: 0
  7874                           ;main.c: 698:         displayDigit2 = c_remainder % 10;
  7875   00229E  C034  F060         	movff	_c_remainder,___lwmod@dividend
  7876   0022A2  C035  F061         	movff	_c_remainder+1,___lwmod@dividend+1
  7877   0022A6  0E00               	movlw	0
  7878   0022A8  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  7879   0022AA  0E0A               	movlw	10
  7880   0022AC  6F62               	movwf	___lwmod@divisor& (0+255),b
  7881   0022AE  EC26  F01C         	call	___lwmod	;wreg free
  7882   0022B2  0100               	movlb	0	; () banked
  7883   0022B4  5160               	movf	?___lwmod& (0+255),w,b
  7884   0022B6  6E3A               	movwf	_displayDigit2^0,c
  7885                           
  7886                           ;main.c: 700:     } else if (fsm_state == 2) {
  7887   0022B8  EF0E  F012         	goto	l340
  7888   0022BC                     l6155:
  7889                           
  7890                           ; BSR set to: 0
  7891   0022BC  0E02               	movlw	2
  7892   0022BE  19F9               	xorwf	_fsm_state& (0+255),w,b
  7893   0022C0  A4D8               	btfss	status,2,c
  7894   0022C2  EF65  F011         	goto	u7541
  7895   0022C6  EF67  F011         	goto	u7540
  7896   0022CA                     u7541:
  7897   0022CA  EFB9  F011         	goto	l6169
  7898   0022CE                     u7540:
  7899   0022CE                     
  7900                           ; BSR set to: 0
  7901                           ;main.c: 702:         c_target = (unsigned int) (adc_voltage * 100);
  7902   0022CE  0E00               	movlw	0
  7903   0022D0  6F72               	movwf	___flmul@a& (0+255),b
  7904   0022D2  0E00               	movlw	0
  7905   0022D4  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7906   0022D6  0EC8               	movlw	200
  7907   0022D8  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7908   0022DA  0E42               	movlw	66
  7909   0022DC  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7910   0022DE  C0E8  F06E         	movff	_adc_voltage,___flmul@b
  7911   0022E2  C0E9  F06F         	movff	_adc_voltage+1,___flmul@b+1
  7912   0022E6  C0EA  F070         	movff	_adc_voltage+2,___flmul@b+2
  7913   0022EA  C0EB  F071         	movff	_adc_voltage+3,___flmul@b+3
  7914   0022EE  ECE6  F008         	call	___flmul	;wreg free
  7915   0022F2  C06E  F087         	movff	?___flmul,___fltol@f1
  7916   0022F6  C06F  F088         	movff	?___flmul+1,___fltol@f1+1
  7917   0022FA  C070  F089         	movff	?___flmul+2,___fltol@f1+2
  7918   0022FE  C071  F08A         	movff	?___flmul+3,___fltol@f1+3
  7919   002302  EC15  F017         	call	___fltol	;wreg free
  7920   002306  C087  F036         	movff	?___fltol,_c_target
  7921   00230A  C088  F037         	movff	?___fltol+1,_c_target+1
  7922   00230E                     
  7923                           ;main.c: 703:         c_remainder = c_target % 100;
  7924   00230E  C036  F060         	movff	_c_target,___lwmod@dividend
  7925   002312  C037  F061         	movff	_c_target+1,___lwmod@dividend+1
  7926   002316  0E00               	movlw	0
  7927   002318  0100               	movlb	0	; () banked
  7928   00231A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  7929   00231C  0E64               	movlw	100
  7930   00231E  6F62               	movwf	___lwmod@divisor& (0+255),b
  7931   002320  EC26  F01C         	call	___lwmod	;wreg free
  7932   002324  C060  F034         	movff	?___lwmod,_c_remainder
  7933   002328  C061  F035         	movff	?___lwmod+1,_c_remainder+1
  7934   00232C                     
  7935                           ;main.c: 704:         c_number = c_target / 100;
  7936   00232C  C036  F060         	movff	_c_target,___lwdiv@dividend
  7937   002330  C037  F061         	movff	_c_target+1,___lwdiv@dividend+1
  7938   002334  0E00               	movlw	0
  7939   002336  0100               	movlb	0	; () banked
  7940   002338  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7941   00233A  0E64               	movlw	100
  7942   00233C  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7943   00233E  EC78  F01B         	call	___lwdiv	;wreg free
  7944   002342  C060  F032         	movff	?___lwdiv,_c_number
  7945   002346  C061  F033         	movff	?___lwdiv+1,_c_number+1
  7946   00234A                     
  7947                           ;main.c: 706:         displayDigit0 = (uint8_t) c_number;
  7948   00234A  C032  F03C         	movff	_c_number,_displayDigit0
  7949   00234E                     
  7950                           ;main.c: 707:         displayDigit1 = (uint8_t) (c_remainder / 10);
  7951   00234E  C034  F060         	movff	_c_remainder,___lwdiv@dividend
  7952   002352  C035  F061         	movff	_c_remainder+1,___lwdiv@dividend+1
  7953   002356  0E00               	movlw	0
  7954   002358  0100               	movlb	0	; () banked
  7955   00235A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7956   00235C  0E0A               	movlw	10
  7957   00235E  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7958   002360  EC78  F01B         	call	___lwdiv	;wreg free
  7959   002364  0100               	movlb	0	; () banked
  7960   002366  5160               	movf	?___lwdiv& (0+255),w,b
  7961   002368  6E3B               	movwf	_displayDigit1^0,c
  7962   00236A                     
  7963                           ; BSR set to: 0
  7964                           ;main.c: 708:         displayDigit2 = 'C';
  7965   00236A  0E43               	movlw	67
  7966   00236C  6E3A               	movwf	_displayDigit2^0,c
  7967                           
  7968                           ;main.c: 710:     } else if (fsm_state == 3) {
  7969   00236E  EF0E  F012         	goto	l340
  7970   002372                     l6169:
  7971                           
  7972                           ; BSR set to: 0
  7973   002372  0E03               	movlw	3
  7974   002374  19F9               	xorwf	_fsm_state& (0+255),w,b
  7975   002376  A4D8               	btfss	status,2,c
  7976   002378  EFC0  F011         	goto	u7551
  7977   00237C  EFC2  F011         	goto	u7550
  7978   002380                     u7551:
  7979   002380  EFCA  F011         	goto	l6173
  7980   002384                     u7550:
  7981   002384                     
  7982                           ; BSR set to: 0
  7983                           ;main.c: 712:         displayDigit0 = 11;
  7984   002384  0E0B               	movlw	11
  7985   002386  6E3C               	movwf	_displayDigit0^0,c
  7986                           
  7987                           ;main.c: 713:         displayDigit1 = 'C';
  7988   002388  0E43               	movlw	67
  7989   00238A  6E3B               	movwf	_displayDigit1^0,c
  7990                           
  7991                           ;main.c: 714:         displayDigit2 = 11;
  7992   00238C  0E0B               	movlw	11
  7993   00238E  6E3A               	movwf	_displayDigit2^0,c
  7994                           
  7995                           ;main.c: 716:     } else if (fsm_state == 4) {
  7996   002390  EF0E  F012         	goto	l340
  7997   002394                     l6173:
  7998                           
  7999                           ; BSR set to: 0
  8000   002394  0E04               	movlw	4
  8001   002396  19F9               	xorwf	_fsm_state& (0+255),w,b
  8002   002398  A4D8               	btfss	status,2,c
  8003   00239A  EFD1  F011         	goto	u7561
  8004   00239E  EFD3  F011         	goto	u7560
  8005   0023A2                     u7561:
  8006   0023A2  EFDA  F011         	goto	l6179
  8007   0023A6                     u7560:
  8008   0023A6                     
  8009                           ; BSR set to: 0
  8010                           ;main.c: 718:         displayDigit0 = 'S';
  8011   0023A6  0E53               	movlw	83
  8012   0023A8  6E3C               	movwf	_displayDigit0^0,c
  8013   0023AA                     
  8014                           ; BSR set to: 0
  8015                           ;main.c: 719:         displayDigit1 = 0;
  8016   0023AA  6A3B               	clrf	_displayDigit1^0,c
  8017                           
  8018                           ;main.c: 720:         displayDigit2 = 11;
  8019   0023AC  0E0B               	movlw	11
  8020   0023AE  6E3A               	movwf	_displayDigit2^0,c
  8021                           
  8022                           ;main.c: 722:     } else if (fsm_state == 5) {
  8023   0023B0  EF0E  F012         	goto	l340
  8024   0023B4                     l6179:
  8025                           
  8026                           ; BSR set to: 0
  8027   0023B4  0E05               	movlw	5
  8028   0023B6  19F9               	xorwf	_fsm_state& (0+255),w,b
  8029   0023B8  A4D8               	btfss	status,2,c
  8030   0023BA  EFE1  F011         	goto	u7571
  8031   0023BE  EFE3  F011         	goto	u7570
  8032   0023C2                     u7571:
  8033   0023C2  EFEB  F011         	goto	l6183
  8034   0023C6                     u7570:
  8035   0023C6                     
  8036                           ; BSR set to: 0
  8037                           ;main.c: 724:         displayDigit0 = 'S';
  8038   0023C6  0E53               	movlw	83
  8039   0023C8  6E3C               	movwf	_displayDigit0^0,c
  8040                           
  8041                           ;main.c: 725:         displayDigit1 = 1;
  8042   0023CA  0E01               	movlw	1
  8043   0023CC  6E3B               	movwf	_displayDigit1^0,c
  8044                           
  8045                           ;main.c: 726:         displayDigit2 = 11;
  8046   0023CE  0E0B               	movlw	11
  8047   0023D0  6E3A               	movwf	_displayDigit2^0,c
  8048                           
  8049                           ;main.c: 728:     } else if (fsm_state == 6) {
  8050   0023D2  EF0E  F012         	goto	l340
  8051   0023D6                     l6183:
  8052                           
  8053                           ; BSR set to: 0
  8054   0023D6  0E06               	movlw	6
  8055   0023D8  19F9               	xorwf	_fsm_state& (0+255),w,b
  8056   0023DA  A4D8               	btfss	status,2,c
  8057   0023DC  EFF2  F011         	goto	u7581
  8058   0023E0  EFF4  F011         	goto	u7580
  8059   0023E4                     u7581:
  8060   0023E4  EFFC  F011         	goto	l6187
  8061   0023E8                     u7580:
  8062   0023E8                     
  8063                           ; BSR set to: 0
  8064                           ;main.c: 730:         displayDigit0 = 'S';
  8065   0023E8  0E53               	movlw	83
  8066   0023EA  6E3C               	movwf	_displayDigit0^0,c
  8067                           
  8068                           ;main.c: 731:         displayDigit1 = 2;
  8069   0023EC  0E02               	movlw	2
  8070   0023EE  6E3B               	movwf	_displayDigit1^0,c
  8071                           
  8072                           ;main.c: 732:         displayDigit2 = 11;
  8073   0023F0  0E0B               	movlw	11
  8074   0023F2  6E3A               	movwf	_displayDigit2^0,c
  8075                           
  8076                           ;main.c: 734:     } else if (fsm_state == 7) {
  8077   0023F4  EF0E  F012         	goto	l340
  8078   0023F8                     l6187:
  8079                           
  8080                           ; BSR set to: 0
  8081   0023F8  0E07               	movlw	7
  8082   0023FA  19F9               	xorwf	_fsm_state& (0+255),w,b
  8083   0023FC  A4D8               	btfss	status,2,c
  8084   0023FE  EF03  F012         	goto	u7591
  8085   002402  EF05  F012         	goto	u7590
  8086   002406                     u7591:
  8087   002406  EF0D  F012         	goto	l338
  8088   00240A                     u7590:
  8089   00240A                     
  8090                           ; BSR set to: 0
  8091                           ;main.c: 736:         displayDigit0 = 'C';
  8092   00240A  0E43               	movlw	67
  8093   00240C  6E3C               	movwf	_displayDigit0^0,c
  8094                           
  8095                           ;main.c: 737:         displayDigit1 = 'L';
  8096   00240E  0E4C               	movlw	76
  8097   002410  6E3B               	movwf	_displayDigit1^0,c
  8098                           
  8099                           ;main.c: 738:         displayDigit2 = 'r';
  8100   002412  0E72               	movlw	114
  8101   002414  6E3A               	movwf	_displayDigit2^0,c
  8102                           
  8103                           ;main.c: 740:     }
  8104   002416  EF0E  F012         	goto	l340
  8105   00241A                     l338:
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;main.c: 742:         __nop();
  8109   00241A  0000               	nop	
  8110   00241C                     l340:
  8111   00241C  0012               	return		;funcret
  8112   00241E                     __end_of_setDisplayDigits:
  8113                           	callstack 0
  8114                           
  8115 ;; *************** function ___lwmod *****************
  8116 ;; Defined at:
  8117 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwmod.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;  dividend        2    0[BANK0 ] unsigned int 
  8120 ;;  divisor         2    2[BANK0 ] unsigned int 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  counter         1    4[BANK0 ] unsigned char 
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  2    0[BANK0 ] unsigned int 
  8125 ;; Registers used:
  8126 ;;		wreg, status,2, status,0
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8132 ;;      Params:         0       4       0       0
  8133 ;;      Locals:         0       1       0       0
  8134 ;;      Temps:          0       0       0       0
  8135 ;;      Totals:         0       5       0       0
  8136 ;;Total ram usage:        5 bytes
  8137 ;; Hardware stack levels used: 1
  8138 ;; Hardware stack levels required when called: 3
  8139 ;; This function calls:
  8140 ;;		Nothing
  8141 ;; This function is called by:
  8142 ;;		_setDisplayDigits
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text29
  8147   00384C                     __ptext29:
  8148                           	callstack 0
  8149   00384C                     ___lwmod:
  8150                           	callstack 26
  8151   00384C  0100               	movlb	0	; () banked
  8152   00384E  5162               	movf	___lwmod@divisor& (0+255),w,b
  8153   003850  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  8154   003852  B4D8               	btfsc	status,2,c
  8155   003854  EF2E  F01C         	goto	u7441
  8156   003858  EF30  F01C         	goto	u7440
  8157   00385C                     u7441:
  8158   00385C  EF54  F01C         	goto	l850
  8159   003860                     u7440:
  8160   003860                     
  8161                           ; BSR set to: 0
  8162   003860  0E01               	movlw	1
  8163   003862  6F64               	movwf	___lwmod@counter& (0+255),b
  8164   003864  EF38  F01C         	goto	l6103
  8165   003868                     l6101:
  8166                           
  8167                           ; BSR set to: 0
  8168   003868  90D8               	bcf	status,0,c
  8169   00386A  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  8170   00386C  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  8171   00386E  2B64               	incf	___lwmod@counter& (0+255),f,b
  8172   003870                     l6103:
  8173                           
  8174                           ; BSR set to: 0
  8175   003870  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  8176   003872  EF3D  F01C         	goto	u7451
  8177   003876  EF3F  F01C         	goto	u7450
  8178   00387A                     u7451:
  8179   00387A  EF34  F01C         	goto	l6101
  8180   00387E                     u7450:
  8181   00387E                     l6105:
  8182                           
  8183                           ; BSR set to: 0
  8184   00387E  5162               	movf	___lwmod@divisor& (0+255),w,b
  8185   003880  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  8186   003882  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  8187   003884  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  8188   003886  A0D8               	btfss	status,0,c
  8189   003888  EF48  F01C         	goto	u7461
  8190   00388C  EF4A  F01C         	goto	u7460
  8191   003890                     u7461:
  8192   003890  EF4E  F01C         	goto	l6109
  8193   003894                     u7460:
  8194   003894                     
  8195                           ; BSR set to: 0
  8196   003894  5162               	movf	___lwmod@divisor& (0+255),w,b
  8197   003896  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  8198   003898  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  8199   00389A  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  8200   00389C                     l6109:
  8201                           
  8202                           ; BSR set to: 0
  8203   00389C  90D8               	bcf	status,0,c
  8204   00389E  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  8205   0038A0  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  8206   0038A2                     
  8207                           ; BSR set to: 0
  8208   0038A2  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  8209   0038A4  EF3F  F01C         	goto	l6105
  8210   0038A8                     l850:
  8211                           
  8212                           ; BSR set to: 0
  8213   0038A8  C060  F060         	movff	___lwmod@dividend,?___lwmod
  8214   0038AC  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  8215   0038B0                     
  8216                           ; BSR set to: 0
  8217   0038B0  0012               	return		;funcret
  8218   0038B2                     __end_of___lwmod:
  8219                           	callstack 0
  8220                           
  8221 ;; *************** function ___lwdiv *****************
  8222 ;; Defined at:
  8223 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwdiv.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;  dividend        2    0[BANK0 ] unsigned int 
  8226 ;;  divisor         2    2[BANK0 ] unsigned int 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;  quotient        2    5[BANK0 ] unsigned int 
  8229 ;;  counter         1    4[BANK0 ] unsigned char 
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  2    0[BANK0 ] unsigned int 
  8232 ;; Registers used:
  8233 ;;		wreg, status,2, status,0
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8239 ;;      Params:         0       4       0       0
  8240 ;;      Locals:         0       3       0       0
  8241 ;;      Temps:          0       0       0       0
  8242 ;;      Totals:         0       7       0       0
  8243 ;;Total ram usage:        7 bytes
  8244 ;; Hardware stack levels used: 1
  8245 ;; Hardware stack levels required when called: 3
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_setDisplayDigits
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text30
  8254   0036F0                     __ptext30:
  8255                           	callstack 0
  8256   0036F0                     ___lwdiv:
  8257                           	callstack 26
  8258   0036F0  0E00               	movlw	0
  8259   0036F2  0100               	movlb	0	; () banked
  8260   0036F4  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  8261   0036F6  0E00               	movlw	0
  8262   0036F8  6F65               	movwf	___lwdiv@quotient& (0+255),b
  8263   0036FA                     
  8264                           ; BSR set to: 0
  8265   0036FA  5162               	movf	___lwdiv@divisor& (0+255),w,b
  8266   0036FC  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  8267   0036FE  B4D8               	btfsc	status,2,c
  8268   003700  EF84  F01B         	goto	u7411
  8269   003704  EF86  F01B         	goto	u7410
  8270   003708                     u7411:
  8271   003708  EFAE  F01B         	goto	l840
  8272   00370C                     u7410:
  8273   00370C                     
  8274                           ; BSR set to: 0
  8275   00370C  0E01               	movlw	1
  8276   00370E  6F64               	movwf	___lwdiv@counter& (0+255),b
  8277   003710  EF8E  F01B         	goto	l6083
  8278   003714                     l6081:
  8279                           
  8280                           ; BSR set to: 0
  8281   003714  90D8               	bcf	status,0,c
  8282   003716  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  8283   003718  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  8284   00371A  2B64               	incf	___lwdiv@counter& (0+255),f,b
  8285   00371C                     l6083:
  8286                           
  8287                           ; BSR set to: 0
  8288   00371C  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  8289   00371E  EF93  F01B         	goto	u7421
  8290   003722  EF95  F01B         	goto	u7420
  8291   003726                     u7421:
  8292   003726  EF8A  F01B         	goto	l6081
  8293   00372A                     u7420:
  8294   00372A                     l6085:
  8295                           
  8296                           ; BSR set to: 0
  8297   00372A  90D8               	bcf	status,0,c
  8298   00372C  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  8299   00372E  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  8300   003730                     
  8301                           ; BSR set to: 0
  8302   003730  5162               	movf	___lwdiv@divisor& (0+255),w,b
  8303   003732  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  8304   003734  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8305   003736  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  8306   003738  A0D8               	btfss	status,0,c
  8307   00373A  EFA1  F01B         	goto	u7431
  8308   00373E  EFA3  F01B         	goto	u7430
  8309   003742                     u7431:
  8310   003742  EFA8  F01B         	goto	l6093
  8311   003746                     u7430:
  8312   003746                     
  8313                           ; BSR set to: 0
  8314   003746  5162               	movf	___lwdiv@divisor& (0+255),w,b
  8315   003748  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  8316   00374A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8317   00374C  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  8318   00374E                     
  8319                           ; BSR set to: 0
  8320   00374E  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  8321   003750                     l6093:
  8322                           
  8323                           ; BSR set to: 0
  8324   003750  90D8               	bcf	status,0,c
  8325   003752  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  8326   003754  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  8327   003756                     
  8328                           ; BSR set to: 0
  8329   003756  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  8330   003758  EF95  F01B         	goto	l6085
  8331   00375C                     l840:
  8332                           
  8333                           ; BSR set to: 0
  8334   00375C  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  8335   003760  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8336   003764                     
  8337                           ; BSR set to: 0
  8338   003764  0012               	return		;funcret
  8339   003766                     __end_of___lwdiv:
  8340                           	callstack 0
  8341                           
  8342 ;; *************** function ___fltol *****************
  8343 ;; Defined at:
  8344 ;;		line 43 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/fltol.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;  f1              4   39[BANK0 ] unsigned int 
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;  exp1            1   48[BANK0 ] unsigned char 
  8349 ;;  sign1           1   47[BANK0 ] unsigned char 
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  4   39[BANK0 ] long 
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8359 ;;      Params:         0       4       0       0
  8360 ;;      Locals:         0       2       0       0
  8361 ;;      Temps:          0       4       0       0
  8362 ;;      Totals:         0      10       0       0
  8363 ;;Total ram usage:       10 bytes
  8364 ;; Hardware stack levels used: 1
  8365 ;; Hardware stack levels required when called: 3
  8366 ;; This function calls:
  8367 ;;		Nothing
  8368 ;; This function is called by:
  8369 ;;		_setDisplayDigits
  8370 ;;		_efgtoa
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text31
  8375   002E2A                     __ptext31:
  8376                           	callstack 0
  8377   002E2A                     ___fltol:
  8378                           	callstack 23
  8379   002E2A  0100               	movlb	0	; () banked
  8380   002E2C  3589               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8381   002E2E  358A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8382   002E30  6F90               	movwf	___fltol@exp1& (0+255),b
  8383   002E32  5190               	movf	___fltol@exp1& (0+255),w,b
  8384   002E34  A4D8               	btfss	status,2,c
  8385   002E36  EF1F  F017         	goto	u6621
  8386   002E3A  EF21  F017         	goto	u6620
  8387   002E3E                     u6621:
  8388   002E3E  EF2B  F017         	goto	l5573
  8389   002E42                     u6620:
  8390   002E42                     l5569:
  8391                           
  8392                           ; BSR set to: 0
  8393   002E42  0E00               	movlw	0
  8394   002E44  6F87               	movwf	?___fltol& (0+255),b
  8395   002E46  0E00               	movlw	0
  8396   002E48  6F88               	movwf	(?___fltol+1)& (0+255),b
  8397   002E4A  0E00               	movlw	0
  8398   002E4C  6F89               	movwf	(?___fltol+2)& (0+255),b
  8399   002E4E  0E00               	movlw	0
  8400   002E50  6F8A               	movwf	(?___fltol+3)& (0+255),b
  8401   002E52  EF98  F017         	goto	l646
  8402   002E56                     l5573:
  8403                           
  8404                           ; BSR set to: 0
  8405   002E56  C087  F08B         	movff	___fltol@f1,??___fltol
  8406   002E5A  C088  F08C         	movff	___fltol@f1+1,??___fltol+1
  8407   002E5E  C089  F08D         	movff	___fltol@f1+2,??___fltol+2
  8408   002E62  C08A  F08E         	movff	___fltol@f1+3,??___fltol+3
  8409   002E66  0E20               	movlw	32
  8410   002E68  EF3B  F017         	goto	u6630
  8411   002E6C                     u6635:
  8412   002E6C  90D8               	bcf	status,0,c
  8413   002E6E  338E               	rrcf	(??___fltol+3)& (0+255),f,b
  8414   002E70  338D               	rrcf	(??___fltol+2)& (0+255),f,b
  8415   002E72  338C               	rrcf	(??___fltol+1)& (0+255),f,b
  8416   002E74  338B               	rrcf	??___fltol& (0+255),f,b
  8417   002E76                     u6630:
  8418   002E76  2EE8               	decfsz	wreg,f,c
  8419   002E78  EF36  F017         	goto	u6635
  8420   002E7C  518B               	movf	??___fltol& (0+255),w,b
  8421   002E7E  6F8F               	movwf	___fltol@sign1& (0+255),b
  8422   002E80                     
  8423                           ; BSR set to: 0
  8424   002E80  8F89               	bsf	(___fltol@f1+2)& (0+255),7,b
  8425   002E82                     
  8426                           ; BSR set to: 0
  8427   002E82  0EFF               	movlw	255
  8428   002E84  1787               	andwf	___fltol@f1& (0+255),f,b
  8429   002E86  0EFF               	movlw	255
  8430   002E88  1788               	andwf	(___fltol@f1+1)& (0+255),f,b
  8431   002E8A  0EFF               	movlw	255
  8432   002E8C  1789               	andwf	(___fltol@f1+2)& (0+255),f,b
  8433   002E8E  0E00               	movlw	0
  8434   002E90  178A               	andwf	(___fltol@f1+3)& (0+255),f,b
  8435   002E92                     
  8436                           ; BSR set to: 0
  8437   002E92  0E96               	movlw	150
  8438   002E94  5F90               	subwf	___fltol@exp1& (0+255),f,b
  8439   002E96                     
  8440                           ; BSR set to: 0
  8441   002E96  BF90               	btfsc	___fltol@exp1& (0+255),7,b
  8442   002E98  EF52  F017         	goto	u6640
  8443   002E9C  EF50  F017         	goto	u6641
  8444   002EA0                     u6641:
  8445   002EA0  EF68  F017         	goto	l5593
  8446   002EA4                     u6640:
  8447   002EA4                     
  8448                           ; BSR set to: 0
  8449   002EA4  5190               	movf	___fltol@exp1& (0+255),w,b
  8450   002EA6  0A80               	xorlw	128
  8451   002EA8  0F97               	addlw	151
  8452   002EAA  B0D8               	btfsc	status,0,c
  8453   002EAC  EF5A  F017         	goto	u6651
  8454   002EB0  EF5C  F017         	goto	u6650
  8455   002EB4                     u6651:
  8456   002EB4  EF5E  F017         	goto	l5589
  8457   002EB8                     u6650:
  8458   002EB8  EF21  F017         	goto	l5569
  8459   002EBC                     l5589:
  8460                           
  8461                           ; BSR set to: 0
  8462   002EBC  90D8               	bcf	status,0,c
  8463   002EBE  338A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8464   002EC0  3389               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8465   002EC2  3388               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8466   002EC4  3387               	rrcf	___fltol@f1& (0+255),f,b
  8467   002EC6                     
  8468                           ; BSR set to: 0
  8469   002EC6  3F90               	incfsz	___fltol@exp1& (0+255),f,b
  8470   002EC8  EF5E  F017         	goto	l5589
  8471   002ECC  EF80  F017         	goto	l5603
  8472   002ED0                     l5593:
  8473                           
  8474                           ; BSR set to: 0
  8475   002ED0  0E1F               	movlw	31
  8476   002ED2  6590               	cpfsgt	___fltol@exp1& (0+255),b
  8477   002ED4  EF6E  F017         	goto	u6661
  8478   002ED8  EF70  F017         	goto	u6660
  8479   002EDC                     u6661:
  8480   002EDC  EF78  F017         	goto	l5601
  8481   002EE0                     u6660:
  8482   002EE0  EF21  F017         	goto	l5569
  8483   002EE4                     l5599:
  8484                           
  8485                           ; BSR set to: 0
  8486   002EE4  90D8               	bcf	status,0,c
  8487   002EE6  3787               	rlcf	___fltol@f1& (0+255),f,b
  8488   002EE8  3788               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8489   002EEA  3789               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8490   002EEC  378A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8491   002EEE  0790               	decf	___fltol@exp1& (0+255),f,b
  8492   002EF0                     l5601:
  8493                           
  8494                           ; BSR set to: 0
  8495   002EF0  5190               	movf	___fltol@exp1& (0+255),w,b
  8496   002EF2  A4D8               	btfss	status,2,c
  8497   002EF4  EF7E  F017         	goto	u6671
  8498   002EF8  EF80  F017         	goto	u6670
  8499   002EFC                     u6671:
  8500   002EFC  EF72  F017         	goto	l5599
  8501   002F00                     u6670:
  8502   002F00                     l5603:
  8503                           
  8504                           ; BSR set to: 0
  8505   002F00  518F               	movf	___fltol@sign1& (0+255),w,b
  8506   002F02  B4D8               	btfsc	status,2,c
  8507   002F04  EF86  F017         	goto	u6681
  8508   002F08  EF88  F017         	goto	u6680
  8509   002F0C                     u6681:
  8510   002F0C  EF90  F017         	goto	l5607
  8511   002F10                     u6680:
  8512   002F10                     
  8513                           ; BSR set to: 0
  8514   002F10  1F8A               	comf	(___fltol@f1+3)& (0+255),f,b
  8515   002F12  1F89               	comf	(___fltol@f1+2)& (0+255),f,b
  8516   002F14  1F88               	comf	(___fltol@f1+1)& (0+255),f,b
  8517   002F16  6D87               	negf	___fltol@f1& (0+255),b
  8518   002F18  0E00               	movlw	0
  8519   002F1A  2388               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8520   002F1C  2389               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8521   002F1E  238A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8522   002F20                     l5607:
  8523                           
  8524                           ; BSR set to: 0
  8525   002F20  C087  F087         	movff	___fltol@f1,?___fltol
  8526   002F24  C088  F088         	movff	___fltol@f1+1,?___fltol+1
  8527   002F28  C089  F089         	movff	___fltol@f1+2,?___fltol+2
  8528   002F2C  C08A  F08A         	movff	___fltol@f1+3,?___fltol+3
  8529   002F30                     l646:
  8530                           
  8531                           ; BSR set to: 0
  8532   002F30  0012               	return		;funcret
  8533   002F32                     __end_of___fltol:
  8534                           	callstack 0
  8535                           
  8536 ;; *************** function ___flmul *****************
  8537 ;; Defined at:
  8538 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcmul.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;  b               4   14[BANK0 ] long 
  8541 ;;  a               4   18[BANK0 ] long 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;  prod            4   33[BANK0 ] struct .
  8544 ;;  grs             4   28[BANK0 ] unsigned long 
  8545 ;;  temp            2   37[BANK0 ] struct .
  8546 ;;  bexp            1   32[BANK0 ] unsigned char 
  8547 ;;  aexp            1   27[BANK0 ] unsigned char 
  8548 ;;  sign            1   26[BANK0 ] unsigned char 
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  4   14[BANK0 ] unsigned char 
  8551 ;; Registers used:
  8552 ;;		wreg, status,2, status,0, prodl, prodh
  8553 ;; Tracked objects:
  8554 ;;		On entry : 0/0
  8555 ;;		On exit  : 0/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8558 ;;      Params:         0       8       0       0
  8559 ;;      Locals:         0      13       0       0
  8560 ;;      Temps:          0       4       0       0
  8561 ;;      Totals:         0      25       0       0
  8562 ;;Total ram usage:       25 bytes
  8563 ;; Hardware stack levels used: 1
  8564 ;; Hardware stack levels required when called: 3
  8565 ;; This function calls:
  8566 ;;		Nothing
  8567 ;; This function is called by:
  8568 ;;		_main
  8569 ;;		_setDisplayDigits
  8570 ;;		_efgtoa
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           
  8574                           	psect	text32
  8575   0011CC                     __ptext32:
  8576                           	callstack 0
  8577   0011CC                     ___flmul:
  8578                           	callstack 23
  8579   0011CC  0100               	movlb	0	; () banked
  8580   0011CE  5171               	movf	(___flmul@b+3)& (0+255),w,b
  8581   0011D0  0B80               	andlw	128
  8582   0011D2  6F7A               	movwf	___flmul@sign& (0+255),b
  8583   0011D4  5171               	movf	(___flmul@b+3)& (0+255),w,b
  8584   0011D6  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  8585   0011D8  6F80               	movwf	___flmul@bexp& (0+255),b
  8586   0011DA                     
  8587                           ; BSR set to: 0
  8588   0011DA  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
  8589   0011DC  EFF2  F008         	goto	u6341
  8590   0011E0  EFF4  F008         	goto	u6340
  8591   0011E4                     u6341:
  8592   0011E4  EFF5  F008         	goto	l5393
  8593   0011E8                     u6340:
  8594   0011E8                     
  8595                           ; BSR set to: 0
  8596   0011E8  8180               	bsf	___flmul@bexp& (0+255),0,b
  8597   0011EA                     l5393:
  8598                           
  8599                           ; BSR set to: 0
  8600   0011EA  5180               	movf	___flmul@bexp& (0+255),w,b
  8601   0011EC  B4D8               	btfsc	status,2,c
  8602   0011EE  EFFB  F008         	goto	u6351
  8603   0011F2  EFFD  F008         	goto	u6350
  8604   0011F6                     u6351:
  8605   0011F6  EF10  F009         	goto	l5401
  8606   0011FA                     u6350:
  8607   0011FA                     
  8608                           ; BSR set to: 0
  8609   0011FA  2980               	incf	___flmul@bexp& (0+255),w,b
  8610   0011FC  A4D8               	btfss	status,2,c
  8611   0011FE  EF03  F009         	goto	u6361
  8612   001202  EF05  F009         	goto	u6360
  8613   001206                     u6361:
  8614   001206  EF0D  F009         	goto	l5399
  8615   00120A                     u6360:
  8616   00120A                     
  8617                           ; BSR set to: 0
  8618   00120A  0E00               	movlw	0
  8619   00120C  6F6E               	movwf	___flmul@b& (0+255),b
  8620   00120E  0E00               	movlw	0
  8621   001210  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  8622   001212  0E00               	movlw	0
  8623   001214  6F70               	movwf	(___flmul@b+2)& (0+255),b
  8624   001216  0E00               	movlw	0
  8625   001218  6F71               	movwf	(___flmul@b+3)& (0+255),b
  8626   00121A                     l5399:
  8627                           
  8628                           ; BSR set to: 0
  8629   00121A  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  8630   00121C  EF18  F009         	goto	l5403
  8631   001220                     l5401:
  8632                           
  8633                           ; BSR set to: 0
  8634   001220  0E00               	movlw	0
  8635   001222  6F6E               	movwf	___flmul@b& (0+255),b
  8636   001224  0E00               	movlw	0
  8637   001226  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  8638   001228  0E00               	movlw	0
  8639   00122A  6F70               	movwf	(___flmul@b+2)& (0+255),b
  8640   00122C  0E00               	movlw	0
  8641   00122E  6F71               	movwf	(___flmul@b+3)& (0+255),b
  8642   001230                     l5403:
  8643                           
  8644                           ; BSR set to: 0
  8645   001230  5175               	movf	(___flmul@a+3)& (0+255),w,b
  8646   001232  0B80               	andlw	128
  8647   001234  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  8648   001236                     
  8649                           ; BSR set to: 0
  8650   001236  5175               	movf	(___flmul@a+3)& (0+255),w,b
  8651   001238  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  8652   00123A  6F7B               	movwf	___flmul@aexp& (0+255),b
  8653   00123C                     
  8654                           ; BSR set to: 0
  8655   00123C  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
  8656   00123E  EF23  F009         	goto	u6371
  8657   001242  EF25  F009         	goto	u6370
  8658   001246                     u6371:
  8659   001246  EF26  F009         	goto	l5411
  8660   00124A                     u6370:
  8661   00124A                     
  8662                           ; BSR set to: 0
  8663   00124A  817B               	bsf	___flmul@aexp& (0+255),0,b
  8664   00124C                     l5411:
  8665                           
  8666                           ; BSR set to: 0
  8667   00124C  517B               	movf	___flmul@aexp& (0+255),w,b
  8668   00124E  B4D8               	btfsc	status,2,c
  8669   001250  EF2C  F009         	goto	u6381
  8670   001254  EF2E  F009         	goto	u6380
  8671   001258                     u6381:
  8672   001258  EF41  F009         	goto	l5419
  8673   00125C                     u6380:
  8674   00125C                     
  8675                           ; BSR set to: 0
  8676   00125C  297B               	incf	___flmul@aexp& (0+255),w,b
  8677   00125E  A4D8               	btfss	status,2,c
  8678   001260  EF34  F009         	goto	u6391
  8679   001264  EF36  F009         	goto	u6390
  8680   001268                     u6391:
  8681   001268  EF3E  F009         	goto	l5417
  8682   00126C                     u6390:
  8683   00126C                     
  8684                           ; BSR set to: 0
  8685   00126C  0E00               	movlw	0
  8686   00126E  6F72               	movwf	___flmul@a& (0+255),b
  8687   001270  0E00               	movlw	0
  8688   001272  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8689   001274  0E00               	movlw	0
  8690   001276  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8691   001278  0E00               	movlw	0
  8692   00127A  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8693   00127C                     l5417:
  8694                           
  8695                           ; BSR set to: 0
  8696   00127C  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  8697   00127E  EF49  F009         	goto	l963
  8698   001282                     l5419:
  8699                           
  8700                           ; BSR set to: 0
  8701   001282  0E00               	movlw	0
  8702   001284  6F72               	movwf	___flmul@a& (0+255),b
  8703   001286  0E00               	movlw	0
  8704   001288  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8705   00128A  0E00               	movlw	0
  8706   00128C  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8707   00128E  0E00               	movlw	0
  8708   001290  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8709   001292                     l963:
  8710                           
  8711                           ; BSR set to: 0
  8712   001292  517B               	movf	___flmul@aexp& (0+255),w,b
  8713   001294  B4D8               	btfsc	status,2,c
  8714   001296  EF4F  F009         	goto	u6401
  8715   00129A  EF51  F009         	goto	u6400
  8716   00129E                     u6401:
  8717   00129E  EF59  F009         	goto	l5423
  8718   0012A2                     u6400:
  8719   0012A2                     
  8720                           ; BSR set to: 0
  8721   0012A2  5180               	movf	___flmul@bexp& (0+255),w,b
  8722   0012A4  A4D8               	btfss	status,2,c
  8723   0012A6  EF57  F009         	goto	u6411
  8724   0012AA  EF59  F009         	goto	u6410
  8725   0012AE                     u6411:
  8726   0012AE  EF63  F009         	goto	l5427
  8727   0012B2                     u6410:
  8728   0012B2                     l5423:
  8729                           
  8730                           ; BSR set to: 0
  8731   0012B2  0E00               	movlw	0
  8732   0012B4  6F6E               	movwf	?___flmul& (0+255),b
  8733   0012B6  0E00               	movlw	0
  8734   0012B8  6F6F               	movwf	(?___flmul+1)& (0+255),b
  8735   0012BA  0E00               	movlw	0
  8736   0012BC  6F70               	movwf	(?___flmul+2)& (0+255),b
  8737   0012BE  0E00               	movlw	0
  8738   0012C0  6F71               	movwf	(?___flmul+3)& (0+255),b
  8739   0012C2  EFF9  F00A         	goto	l967
  8740   0012C6                     l5427:
  8741                           
  8742                           ; BSR set to: 0
  8743   0012C6  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8744   0012C8  036E               	mulwf	___flmul@b& (0+255),b
  8745   0012CA  CFF3 F085          	movff	prodl,___flmul@temp
  8746   0012CE  CFF4 F086          	movff	prodh,___flmul@temp+1
  8747   0012D2                     
  8748                           ; BSR set to: 0
  8749   0012D2  5185               	movf	___flmul@temp& (0+255),w,b
  8750   0012D4  6F7C               	movwf	___flmul@grs& (0+255),b
  8751   0012D6  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
  8752   0012D8  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
  8753   0012DA  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
  8754   0012DC                     
  8755                           ; BSR set to: 0
  8756   0012DC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8757   0012DE  6F81               	movwf	___flmul@prod& (0+255),b
  8758   0012E0  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  8759   0012E2  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  8760   0012E4  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  8761   0012E6  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8762   0012E8  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8763   0012EA  CFF3 F085          	movff	prodl,___flmul@temp
  8764   0012EE  CFF4 F086          	movff	prodh,___flmul@temp+1
  8765   0012F2                     
  8766                           ; BSR set to: 0
  8767   0012F2  5185               	movf	___flmul@temp& (0+255),w,b
  8768   0012F4  277C               	addwf	___flmul@grs& (0+255),f,b
  8769   0012F6  0E00               	movlw	0
  8770   0012F8  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8771   0012FA  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8772   0012FC  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8773   0012FE                     
  8774                           ; BSR set to: 0
  8775   0012FE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8776   001300  2781               	addwf	___flmul@prod& (0+255),f,b
  8777   001302  0E00               	movlw	0
  8778   001304  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8779   001306  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8780   001308  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8781   00130A  5172               	movf	___flmul@a& (0+255),w,b
  8782   00130C  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8783   00130E  CFF3 F085          	movff	prodl,___flmul@temp
  8784   001312  CFF4 F086          	movff	prodh,___flmul@temp+1
  8785   001316                     
  8786                           ; BSR set to: 0
  8787   001316  5185               	movf	___flmul@temp& (0+255),w,b
  8788   001318  277C               	addwf	___flmul@grs& (0+255),f,b
  8789   00131A  0E00               	movlw	0
  8790   00131C  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8791   00131E  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8792   001320  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8793   001322                     
  8794                           ; BSR set to: 0
  8795   001322  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8796   001324  2781               	addwf	___flmul@prod& (0+255),f,b
  8797   001326  0E00               	movlw	0
  8798   001328  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8799   00132A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8800   00132C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8801   00132E                     
  8802                           ; BSR set to: 0
  8803   00132E  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  8804   001332  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  8805   001336  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  8806   00133A  6B7C               	clrf	___flmul@grs& (0+255),b
  8807   00133C                     
  8808                           ; BSR set to: 0
  8809   00133C  5172               	movf	___flmul@a& (0+255),w,b
  8810   00133E  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8811   001340  CFF3 F085          	movff	prodl,___flmul@temp
  8812   001344  CFF4 F086          	movff	prodh,___flmul@temp+1
  8813   001348                     
  8814                           ; BSR set to: 0
  8815   001348  5185               	movf	___flmul@temp& (0+255),w,b
  8816   00134A  277C               	addwf	___flmul@grs& (0+255),f,b
  8817   00134C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8818   00134E  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8819   001350  0E00               	movlw	0
  8820   001352  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8821   001354  0E00               	movlw	0
  8822   001356  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8823   001358                     
  8824                           ; BSR set to: 0
  8825   001358  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8826   00135A  036E               	mulwf	___flmul@b& (0+255),b
  8827   00135C  CFF3 F085          	movff	prodl,___flmul@temp
  8828   001360  CFF4 F086          	movff	prodh,___flmul@temp+1
  8829   001364                     
  8830                           ; BSR set to: 0
  8831   001364  5185               	movf	___flmul@temp& (0+255),w,b
  8832   001366  277C               	addwf	___flmul@grs& (0+255),f,b
  8833   001368  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8834   00136A  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8835   00136C  0E00               	movlw	0
  8836   00136E  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8837   001370  0E00               	movlw	0
  8838   001372  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8839   001374                     
  8840                           ; BSR set to: 0
  8841   001374  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  8842   001378  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  8843   00137C  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  8844   001380  6B7C               	clrf	___flmul@grs& (0+255),b
  8845   001382  5172               	movf	___flmul@a& (0+255),w,b
  8846   001384  036E               	mulwf	___flmul@b& (0+255),b
  8847   001386  CFF3 F085          	movff	prodl,___flmul@temp
  8848   00138A  CFF4 F086          	movff	prodh,___flmul@temp+1
  8849   00138E                     
  8850                           ; BSR set to: 0
  8851   00138E  5185               	movf	___flmul@temp& (0+255),w,b
  8852   001390  277C               	addwf	___flmul@grs& (0+255),f,b
  8853   001392  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8854   001394  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8855   001396  0E00               	movlw	0
  8856   001398  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8857   00139A  0E00               	movlw	0
  8858   00139C  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8859   00139E                     
  8860                           ; BSR set to: 0
  8861   00139E  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8862   0013A0  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8863   0013A2  CFF3 F085          	movff	prodl,___flmul@temp
  8864   0013A6  CFF4 F086          	movff	prodh,___flmul@temp+1
  8865   0013AA  5185               	movf	___flmul@temp& (0+255),w,b
  8866   0013AC  2781               	addwf	___flmul@prod& (0+255),f,b
  8867   0013AE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8868   0013B0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8869   0013B2  0E00               	movlw	0
  8870   0013B4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8871   0013B6  0E00               	movlw	0
  8872   0013B8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8873   0013BA                     
  8874                           ; BSR set to: 0
  8875   0013BA  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8876   0013BC  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8877   0013BE  CFF3 F085          	movff	prodl,___flmul@temp
  8878   0013C2  CFF4 F086          	movff	prodh,___flmul@temp+1
  8879   0013C6                     
  8880                           ; BSR set to: 0
  8881   0013C6  5185               	movf	___flmul@temp& (0+255),w,b
  8882   0013C8  2781               	addwf	___flmul@prod& (0+255),f,b
  8883   0013CA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8884   0013CC  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8885   0013CE  0E00               	movlw	0
  8886   0013D0  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8887   0013D2  0E00               	movlw	0
  8888   0013D4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8889   0013D6  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8890   0013D8  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8891   0013DA  CFF3 F085          	movff	prodl,___flmul@temp
  8892   0013DE  CFF4 F086          	movff	prodh,___flmul@temp+1
  8893   0013E2                     
  8894                           ; BSR set to: 0
  8895   0013E2  5185               	movf	___flmul@temp& (0+255),w,b
  8896   0013E4  6F76               	movwf	??___flmul& (0+255),b
  8897   0013E6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8898   0013E8  6F77               	movwf	(??___flmul+1)& (0+255),b
  8899   0013EA  6B78               	clrf	(??___flmul+2)& (0+255),b
  8900   0013EC  6B79               	clrf	(??___flmul+3)& (0+255),b
  8901   0013EE  C078  F079         	movff	??___flmul+2,??___flmul+3
  8902   0013F2  C077  F078         	movff	??___flmul+1,??___flmul+2
  8903   0013F6  C076  F077         	movff	??___flmul,??___flmul+1
  8904   0013FA  6B76               	clrf	??___flmul& (0+255),b
  8905   0013FC  5176               	movf	??___flmul& (0+255),w,b
  8906   0013FE  2781               	addwf	___flmul@prod& (0+255),f,b
  8907   001400  5177               	movf	(??___flmul+1)& (0+255),w,b
  8908   001402  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8909   001404  5178               	movf	(??___flmul+2)& (0+255),w,b
  8910   001406  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8911   001408  5179               	movf	(??___flmul+3)& (0+255),w,b
  8912   00140A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8913   00140C                     
  8914                           ; BSR set to: 0
  8915   00140C  C07C  F076         	movff	___flmul@grs,??___flmul
  8916   001410  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
  8917   001414  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
  8918   001418  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
  8919   00141C  0E19               	movlw	25
  8920   00141E  EF16  F00A         	goto	u6420
  8921   001422                     u6425:
  8922   001422  90D8               	bcf	status,0,c
  8923   001424  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  8924   001426  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  8925   001428  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  8926   00142A  3376               	rrcf	??___flmul& (0+255),f,b
  8927   00142C                     u6420:
  8928   00142C  2EE8               	decfsz	wreg,f,c
  8929   00142E  EF11  F00A         	goto	u6425
  8930   001432  5176               	movf	??___flmul& (0+255),w,b
  8931   001434  2781               	addwf	___flmul@prod& (0+255),f,b
  8932   001436  5177               	movf	(??___flmul+1)& (0+255),w,b
  8933   001438  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8934   00143A  5178               	movf	(??___flmul+2)& (0+255),w,b
  8935   00143C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8936   00143E  5179               	movf	(??___flmul+3)& (0+255),w,b
  8937   001440  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8938   001442                     
  8939                           ; BSR set to: 0
  8940   001442  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  8941   001446  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  8942   00144A  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  8943   00144E  6B7C               	clrf	___flmul@grs& (0+255),b
  8944   001450                     
  8945                           ; BSR set to: 0
  8946   001450  517B               	movf	___flmul@aexp& (0+255),w,b
  8947   001452  C080  F076         	movff	___flmul@bexp,??___flmul
  8948   001456  6B77               	clrf	(??___flmul+1)& (0+255),b
  8949   001458  2776               	addwf	??___flmul& (0+255),f,b
  8950   00145A  0E00               	movlw	0
  8951   00145C  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  8952   00145E  0E82               	movlw	130
  8953   001460  2576               	addwf	??___flmul& (0+255),w,b
  8954   001462  6F85               	movwf	___flmul@temp& (0+255),b
  8955   001464  0EFF               	movlw	255
  8956   001466  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  8957   001468  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  8958   00146A  EF4C  F00A         	goto	l5475
  8959   00146E                     l5469:
  8960                           
  8961                           ; BSR set to: 0
  8962   00146E  90D8               	bcf	status,0,c
  8963   001470  3781               	rlcf	___flmul@prod& (0+255),f,b
  8964   001472  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8965   001474  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8966   001476  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8967   001478                     
  8968                           ; BSR set to: 0
  8969   001478  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  8970   00147A  EF41  F00A         	goto	u6431
  8971   00147E  EF43  F00A         	goto	u6430
  8972   001482                     u6431:
  8973   001482  EF44  F00A         	goto	l970
  8974   001486                     u6430:
  8975   001486                     
  8976                           ; BSR set to: 0
  8977   001486  8181               	bsf	___flmul@prod& (0+255),0,b
  8978   001488                     l970:
  8979                           
  8980                           ; BSR set to: 0
  8981   001488  90D8               	bcf	status,0,c
  8982   00148A  377C               	rlcf	___flmul@grs& (0+255),f,b
  8983   00148C  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8984   00148E  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8985   001490  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8986   001492  0785               	decf	___flmul@temp& (0+255),f,b
  8987   001494  A0D8               	btfss	status,0,c
  8988   001496  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  8989   001498                     l5475:
  8990                           
  8991                           ; BSR set to: 0
  8992   001498  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  8993   00149A  EF51  F00A         	goto	u6441
  8994   00149E  EF53  F00A         	goto	u6440
  8995   0014A2                     u6441:
  8996   0014A2  EF37  F00A         	goto	l5469
  8997   0014A6                     u6440:
  8998   0014A6                     
  8999                           ; BSR set to: 0
  9000   0014A6  6B7B               	clrf	___flmul@aexp& (0+255),b
  9001   0014A8  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  9002   0014AA  EF59  F00A         	goto	u6451
  9003   0014AE  EF5B  F00A         	goto	u6450
  9004   0014B2                     u6451:
  9005   0014B2  EF7F  F00A         	goto	l972
  9006   0014B6                     u6450:
  9007   0014B6                     
  9008                           ; BSR set to: 0
  9009   0014B6  0EFF               	movlw	255
  9010   0014B8  157C               	andwf	___flmul@grs& (0+255),w,b
  9011   0014BA  6F76               	movwf	??___flmul& (0+255),b
  9012   0014BC  0EFF               	movlw	255
  9013   0014BE  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
  9014   0014C0  6F77               	movwf	(??___flmul+1)& (0+255),b
  9015   0014C2  0EFF               	movlw	255
  9016   0014C4  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
  9017   0014C6  6F78               	movwf	(??___flmul+2)& (0+255),b
  9018   0014C8  0E7F               	movlw	127
  9019   0014CA  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
  9020   0014CC  6F79               	movwf	(??___flmul+3)& (0+255),b
  9021   0014CE  5176               	movf	??___flmul& (0+255),w,b
  9022   0014D0  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  9023   0014D2  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  9024   0014D4  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  9025   0014D6  B4D8               	btfsc	status,2,c
  9026   0014D8  EF70  F00A         	goto	u6461
  9027   0014DC  EF72  F00A         	goto	u6460
  9028   0014E0                     u6461:
  9029   0014E0  EF76  F00A         	goto	l973
  9030   0014E4                     u6460:
  9031   0014E4                     l5479:
  9032                           
  9033                           ; BSR set to: 0
  9034   0014E4  0E01               	movlw	1
  9035   0014E6  6F7B               	movwf	___flmul@aexp& (0+255),b
  9036   0014E8  EF7F  F00A         	goto	l972
  9037   0014EC                     l973:
  9038                           
  9039                           ; BSR set to: 0
  9040   0014EC  A181               	btfss	___flmul@prod& (0+255),0,b
  9041   0014EE  EF7B  F00A         	goto	u6471
  9042   0014F2  EF7D  F00A         	goto	u6470
  9043   0014F6                     u6471:
  9044   0014F6  EF7F  F00A         	goto	l972
  9045   0014FA                     u6470:
  9046   0014FA  EF72  F00A         	goto	l5479
  9047   0014FE                     l972:
  9048                           
  9049                           ; BSR set to: 0
  9050   0014FE  517B               	movf	___flmul@aexp& (0+255),w,b
  9051   001500  B4D8               	btfsc	status,2,c
  9052   001502  EF85  F00A         	goto	u6481
  9053   001506  EF87  F00A         	goto	u6480
  9054   00150A                     u6481:
  9055   00150A  EFAB  F00A         	goto	l5491
  9056   00150E                     u6480:
  9057   00150E                     
  9058                           ; BSR set to: 0
  9059   00150E  0E01               	movlw	1
  9060   001510  2781               	addwf	___flmul@prod& (0+255),f,b
  9061   001512  0E00               	movlw	0
  9062   001514  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9063   001516  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9064   001518  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9065   00151A                     
  9066                           ; BSR set to: 0
  9067   00151A  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  9068   00151C  EF92  F00A         	goto	u6491
  9069   001520  EF94  F00A         	goto	u6490
  9070   001524                     u6491:
  9071   001524  EFAB  F00A         	goto	l5491
  9072   001528                     u6490:
  9073   001528                     
  9074                           ; BSR set to: 0
  9075   001528  C081  F076         	movff	___flmul@prod,??___flmul
  9076   00152C  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  9077   001530  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  9078   001534  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  9079   001538  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  9080   00153A  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  9081   00153C  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  9082   00153E  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  9083   001540  3376               	rrcf	??___flmul& (0+255),f,b
  9084   001542  C076  F081         	movff	??___flmul,___flmul@prod
  9085   001546  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  9086   00154A  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  9087   00154E  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  9088   001552                     
  9089                           ; BSR set to: 0
  9090   001552  4B85               	infsnz	___flmul@temp& (0+255),f,b
  9091   001554  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  9092   001556                     l5491:
  9093                           
  9094                           ; BSR set to: 0
  9095   001556  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9096   001558  EFB6  F00A         	goto	u6501
  9097   00155C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9098   00155E  E108               	bnz	u6500
  9099   001560  2985               	incf	___flmul@temp& (0+255),w,b
  9100   001562  A0D8               	btfss	status,0,c
  9101   001564  EFB6  F00A         	goto	u6501
  9102   001568  EFB8  F00A         	goto	u6500
  9103   00156C                     u6501:
  9104   00156C  EFC2  F00A         	goto	l5495
  9105   001570                     u6500:
  9106   001570                     
  9107                           ; BSR set to: 0
  9108   001570  0E00               	movlw	0
  9109   001572  6F81               	movwf	___flmul@prod& (0+255),b
  9110   001574  0E00               	movlw	0
  9111   001576  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  9112   001578  0E80               	movlw	128
  9113   00157A  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  9114   00157C  0E7F               	movlw	127
  9115   00157E  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9116   001580  EFEF  F00A         	goto	l5509
  9117   001584                     l5495:
  9118                           
  9119                           ; BSR set to: 0
  9120   001584  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9121   001586  EFCF  F00A         	goto	u6510
  9122   00158A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9123   00158C  E106               	bnz	u6511
  9124   00158E  0585               	decf	___flmul@temp& (0+255),w,b
  9125   001590  B0D8               	btfsc	status,0,c
  9126   001592  EFCD  F00A         	goto	u6511
  9127   001596  EFCF  F00A         	goto	u6510
  9128   00159A                     u6511:
  9129   00159A  EFDA  F00A         	goto	l980
  9130   00159E                     u6510:
  9131   00159E                     
  9132                           ; BSR set to: 0
  9133   00159E  0E00               	movlw	0
  9134   0015A0  6F81               	movwf	___flmul@prod& (0+255),b
  9135   0015A2  0E00               	movlw	0
  9136   0015A4  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  9137   0015A6  0E00               	movlw	0
  9138   0015A8  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  9139   0015AA  0E00               	movlw	0
  9140   0015AC  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9141   0015AE                     
  9142                           ; BSR set to: 0
  9143   0015AE  6B7A               	clrf	___flmul@sign& (0+255),b
  9144   0015B0  EFEF  F00A         	goto	l5509
  9145   0015B4                     l980:
  9146                           
  9147                           ; BSR set to: 0
  9148   0015B4  C085  F080         	movff	___flmul@temp,___flmul@bexp
  9149   0015B8                     
  9150                           ; BSR set to: 0
  9151   0015B8  0EFF               	movlw	255
  9152   0015BA  1781               	andwf	___flmul@prod& (0+255),f,b
  9153   0015BC  0EFF               	movlw	255
  9154   0015BE  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  9155   0015C0  0E7F               	movlw	127
  9156   0015C2  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  9157   0015C4  0E00               	movlw	0
  9158   0015C6  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  9159   0015C8                     
  9160                           ; BSR set to: 0
  9161   0015C8  A180               	btfss	___flmul@bexp& (0+255),0,b
  9162   0015CA  EFE9  F00A         	goto	u6521
  9163   0015CE  EFEB  F00A         	goto	u6520
  9164   0015D2                     u6521:
  9165   0015D2  EFEC  F00A         	goto	l5507
  9166   0015D6                     u6520:
  9167   0015D6                     
  9168                           ; BSR set to: 0
  9169   0015D6  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  9170   0015D8                     l5507:
  9171                           
  9172                           ; BSR set to: 0
  9173   0015D8  90D8               	bcf	status,0,c
  9174   0015DA  3180               	rrcf	___flmul@bexp& (0+255),w,b
  9175   0015DC  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9176   0015DE                     l5509:
  9177                           
  9178                           ; BSR set to: 0
  9179   0015DE  517A               	movf	___flmul@sign& (0+255),w,b
  9180   0015E0  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9181   0015E2                     
  9182                           ; BSR set to: 0
  9183   0015E2  C081  F06E         	movff	___flmul@prod,?___flmul
  9184   0015E6  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  9185   0015EA  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  9186   0015EE  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  9187   0015F2                     l967:
  9188                           
  9189                           ; BSR set to: 0
  9190   0015F2  0012               	return		;funcret
  9191   0015F4                     __end_of___flmul:
  9192                           	callstack 0
  9193                           
  9194 ;; *************** function _setButtonInterrupt *****************
  9195 ;; Defined at:
  9196 ;;		line 512 in file "main.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;		None
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;		None
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      void 
  9203 ;; Registers used:
  9204 ;;		None
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 0/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9210 ;;      Params:         0       0       0       0
  9211 ;;      Locals:         0       0       0       0
  9212 ;;      Temps:          0       0       0       0
  9213 ;;      Totals:         0       0       0       0
  9214 ;;Total ram usage:        0 bytes
  9215 ;; Hardware stack levels used: 1
  9216 ;; Hardware stack levels required when called: 3
  9217 ;; This function calls:
  9218 ;;		Nothing
  9219 ;; This function is called by:
  9220 ;;		_main
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text33
  9225   003E30                     __ptext33:
  9226                           	callstack 0
  9227   003E30                     _setButtonInterrupt:
  9228                           	callstack 27
  9229   003E30                     
  9230                           ;main.c: 514:     INTCON2bits.INTEDG1 = 1;
  9231   003E30  8AF1               	bsf	241,5,c	;volatile
  9232                           
  9233                           ;main.c: 515:     INTCON2bits.INTEDG2 = 1;
  9234   003E32  88F1               	bsf	241,4,c	;volatile
  9235                           
  9236                           ;main.c: 517:     INTCON3bits.INT1IE = 1;
  9237   003E34  86F0               	bsf	240,3,c	;volatile
  9238                           
  9239                           ;main.c: 518:     INTCON3bits.INT2IE = 1;
  9240   003E36  88F0               	bsf	240,4,c	;volatile
  9241                           
  9242                           ;main.c: 520:     INTCON3bits.INT1IP = 0;
  9243   003E38  9CF0               	bcf	240,6,c	;volatile
  9244                           
  9245                           ;main.c: 521:     INTCON3bits.INT2IP = 0;
  9246   003E3A  9EF0               	bcf	240,7,c	;volatile
  9247                           
  9248                           ;main.c: 524:     INTCON3bits.INT1IF = 0;
  9249   003E3C  90F0               	bcf	240,0,c	;volatile
  9250                           
  9251                           ;main.c: 525:     INTCON3bits.INT2IF = 0;
  9252   003E3E  92F0               	bcf	240,1,c	;volatile
  9253   003E40  0012               	return		;funcret
  9254   003E42                     __end_of_setButtonInterrupt:
  9255                           	callstack 0
  9256                           
  9257 ;; *************** function _adcSampling *****************
  9258 ;; Defined at:
  9259 ;;		line 140 in file "main.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;		None
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;		None
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      void 
  9266 ;; Registers used:
  9267 ;;		wreg, status,2
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9273 ;;      Params:         0       0       0       0
  9274 ;;      Locals:         0       0       0       0
  9275 ;;      Temps:          0       2       0       0
  9276 ;;      Totals:         0       2       0       0
  9277 ;;Total ram usage:        2 bytes
  9278 ;; Hardware stack levels used: 1
  9279 ;; Hardware stack levels required when called: 3
  9280 ;; This function calls:
  9281 ;;		Nothing
  9282 ;; This function is called by:
  9283 ;;		_main
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           	psect	text34
  9288   003D44                     __ptext34:
  9289                           	callstack 0
  9290   003D44                     _adcSampling:
  9291                           	callstack 27
  9292   003D44                     
  9293                           ;main.c: 142:     sampling = 1;
  9294   003D44  0E01               	movlw	1
  9295   003D46  0100               	movlb	0	; () banked
  9296   003D48  6FFE               	movwf	_sampling& (0+255),b
  9297   003D4A                     
  9298                           ; BSR set to: 0
  9299                           ;main.c: 145:     ADCON0bits.GO = 1;
  9300   003D4A  82C2               	bsf	194,1,c	;volatile
  9301   003D4C                     l161:
  9302   003D4C  B2C2               	btfsc	194,1,c	;volatile
  9303   003D4E  EFAB  F01E         	goto	u7481
  9304   003D52  EFAD  F01E         	goto	u7480
  9305   003D56                     u7481:
  9306   003D56  EFA6  F01E         	goto	l161
  9307   003D5A                     u7480:
  9308   003D5A                     
  9309                           ;main.c: 149:     adcResult = ((uint16_t)ADRESH << 8) | ADRESL;
  9310   003D5A  50C4               	movf	196,w,c	;volatile
  9311   003D5C  0100               	movlb	0	; () banked
  9312   003D5E  6F60               	movwf	??_adcSampling& (0+255),b
  9313   003D60  50C3               	movf	195,w,c	;volatile
  9314   003D62  6FF6               	movwf	_adcResult& (0+255),b
  9315   003D64  C060  F0F7         	movff	??_adcSampling,_adcResult+1
  9316   003D68                     
  9317                           ; BSR set to: 0
  9318   003D68  0012               	return		;funcret
  9319   003D6A                     __end_of_adcSampling:
  9320                           	callstack 0
  9321                           
  9322 ;; *************** function ___xxtofl *****************
  9323 ;; Defined at:
  9324 ;;		line 10 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/xxtofl.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  sign            1    wreg     unsigned char 
  9327 ;;  val             4    0[BANK0 ] long 
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;  sign            1    8[BANK0 ] unsigned char 
  9330 ;;  arg             4   10[BANK0 ] unsigned long 
  9331 ;;  exp             1    9[BANK0 ] unsigned char 
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  4    0[BANK0 ] unsigned char 
  9334 ;; Registers used:
  9335 ;;		wreg, status,2, status,0
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9341 ;;      Params:         0       4       0       0
  9342 ;;      Locals:         0       6       0       0
  9343 ;;      Temps:          0       4       0       0
  9344 ;;      Totals:         0      14       0       0
  9345 ;;Total ram usage:       14 bytes
  9346 ;; Hardware stack levels used: 1
  9347 ;; Hardware stack levels required when called: 3
  9348 ;; This function calls:
  9349 ;;		Nothing
  9350 ;; This function is called by:
  9351 ;;		_main
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text35
  9356   002A52                     __ptext35:
  9357                           	callstack 0
  9358   002A52                     ___xxtofl:
  9359                           	callstack 27
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;incstack = 0
  9363                           ;___xxtofl@sign stored from wreg
  9364   002A52  0100               	movlb	0	; () banked
  9365   002A54  6F68               	movwf	___xxtofl@sign& (0+255),b
  9366   002A56  0100               	movlb	0	; () banked
  9367   002A58  5168               	movf	___xxtofl@sign& (0+255),w,b
  9368   002A5A  B4D8               	btfsc	status,2,c
  9369   002A5C  EF32  F015         	goto	u7631
  9370   002A60  EF34  F015         	goto	u7630
  9371   002A64                     u7631:
  9372   002A64  EF56  F015         	goto	l1004
  9373   002A68                     u7630:
  9374   002A68                     
  9375                           ; BSR set to: 0
  9376   002A68  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  9377   002A6A  EF3B  F015         	goto	u7640
  9378   002A6E  EF39  F015         	goto	u7641
  9379   002A72                     u7641:
  9380   002A72  EF56  F015         	goto	l1004
  9381   002A76                     u7640:
  9382   002A76                     
  9383                           ; BSR set to: 0
  9384   002A76  C060  F064         	movff	___xxtofl@val,??___xxtofl
  9385   002A7A  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  9386   002A7E  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  9387   002A82  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  9388   002A86  1F64               	comf	??___xxtofl& (0+255),f,b
  9389   002A88  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  9390   002A8A  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  9391   002A8C  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  9392   002A8E  2B64               	incf	??___xxtofl& (0+255),f,b
  9393   002A90  0E00               	movlw	0
  9394   002A92  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  9395   002A94  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  9396   002A96  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  9397   002A98  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  9398   002A9C  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  9399   002AA0  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  9400   002AA4  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  9401   002AA8  EF5E  F015         	goto	l6303
  9402   002AAC                     l1004:
  9403                           
  9404                           ; BSR set to: 0
  9405   002AAC  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  9406   002AB0  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9407   002AB4  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9408   002AB8  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9409   002ABC                     l6303:
  9410                           
  9411                           ; BSR set to: 0
  9412   002ABC  5160               	movf	___xxtofl@val& (0+255),w,b
  9413   002ABE  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  9414   002AC0  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  9415   002AC2  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  9416   002AC4  A4D8               	btfss	status,2,c
  9417   002AC6  EF67  F015         	goto	u7651
  9418   002ACA  EF69  F015         	goto	u7650
  9419   002ACE                     u7651:
  9420   002ACE  EF73  F015         	goto	l6309
  9421   002AD2                     u7650:
  9422   002AD2                     
  9423                           ; BSR set to: 0
  9424   002AD2  0E00               	movlw	0
  9425   002AD4  6F60               	movwf	?___xxtofl& (0+255),b
  9426   002AD6  0E00               	movlw	0
  9427   002AD8  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  9428   002ADA  0E00               	movlw	0
  9429   002ADC  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  9430   002ADE  0E00               	movlw	0
  9431   002AE0  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  9432   002AE2  EF04  F016         	goto	l1007
  9433   002AE6                     l6309:
  9434                           
  9435                           ; BSR set to: 0
  9436   002AE6  0E96               	movlw	150
  9437   002AE8  6F69               	movwf	___xxtofl@exp& (0+255),b
  9438   002AEA  EF7D  F015         	goto	l6313
  9439   002AEE                     l6311:
  9440                           
  9441                           ; BSR set to: 0
  9442   002AEE  2B69               	incf	___xxtofl@exp& (0+255),f,b
  9443   002AF0  90D8               	bcf	status,0,c
  9444   002AF2  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9445   002AF4  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9446   002AF6  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9447   002AF8  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  9448   002AFA                     l6313:
  9449                           
  9450                           ; BSR set to: 0
  9451   002AFA  0E00               	movlw	0
  9452   002AFC  156A               	andwf	___xxtofl@arg& (0+255),w,b
  9453   002AFE  6F64               	movwf	??___xxtofl& (0+255),b
  9454   002B00  0E00               	movlw	0
  9455   002B02  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9456   002B04  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  9457   002B06  0E00               	movlw	0
  9458   002B08  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9459   002B0A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  9460   002B0C  0EFE               	movlw	254
  9461   002B0E  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9462   002B10  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  9463   002B12  5164               	movf	??___xxtofl& (0+255),w,b
  9464   002B14  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9465   002B16  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9466   002B18  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9467   002B1A  A4D8               	btfss	status,2,c
  9468   002B1C  EF92  F015         	goto	u7661
  9469   002B20  EF94  F015         	goto	u7660
  9470   002B24                     u7661:
  9471   002B24  EF77  F015         	goto	l6311
  9472   002B28                     u7660:
  9473   002B28  EFA2  F015         	goto	l1011
  9474   002B2C                     l6315:
  9475                           
  9476                           ; BSR set to: 0
  9477   002B2C  2B69               	incf	___xxtofl@exp& (0+255),f,b
  9478   002B2E                     
  9479                           ; BSR set to: 0
  9480   002B2E  0E01               	movlw	1
  9481   002B30  276A               	addwf	___xxtofl@arg& (0+255),f,b
  9482   002B32  0E00               	movlw	0
  9483   002B34  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  9484   002B36  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  9485   002B38  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  9486   002B3A                     
  9487                           ; BSR set to: 0
  9488   002B3A  90D8               	bcf	status,0,c
  9489   002B3C  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9490   002B3E  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9491   002B40  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9492   002B42  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  9493   002B44                     l1011:
  9494                           
  9495                           ; BSR set to: 0
  9496   002B44  0E00               	movlw	0
  9497   002B46  156A               	andwf	___xxtofl@arg& (0+255),w,b
  9498   002B48  6F64               	movwf	??___xxtofl& (0+255),b
  9499   002B4A  0E00               	movlw	0
  9500   002B4C  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9501   002B4E  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  9502   002B50  0E00               	movlw	0
  9503   002B52  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9504   002B54  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  9505   002B56  0EFF               	movlw	255
  9506   002B58  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9507   002B5A  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  9508   002B5C  5164               	movf	??___xxtofl& (0+255),w,b
  9509   002B5E  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9510   002B60  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9511   002B62  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9512   002B64  A4D8               	btfss	status,2,c
  9513   002B66  EFB7  F015         	goto	u7671
  9514   002B6A  EFB9  F015         	goto	u7670
  9515   002B6E                     u7671:
  9516   002B6E  EF96  F015         	goto	l6315
  9517   002B72                     u7670:
  9518   002B72  EFC1  F015         	goto	l6323
  9519   002B76                     l6321:
  9520                           
  9521                           ; BSR set to: 0
  9522   002B76  0769               	decf	___xxtofl@exp& (0+255),f,b
  9523   002B78  90D8               	bcf	status,0,c
  9524   002B7A  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  9525   002B7C  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  9526   002B7E  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  9527   002B80  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  9528   002B82                     l6323:
  9529                           
  9530                           ; BSR set to: 0
  9531   002B82  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  9532   002B84  EFC6  F015         	goto	u7681
  9533   002B88  EFC8  F015         	goto	u7680
  9534   002B8C                     u7681:
  9535   002B8C  EFD0  F015         	goto	l1018
  9536   002B90                     u7680:
  9537   002B90                     
  9538                           ; BSR set to: 0
  9539   002B90  0E02               	movlw	2
  9540   002B92  6169               	cpfslt	___xxtofl@exp& (0+255),b
  9541   002B94  EFCE  F015         	goto	u7691
  9542   002B98  EFD0  F015         	goto	u7690
  9543   002B9C                     u7691:
  9544   002B9C  EFBB  F015         	goto	l6321
  9545   002BA0                     u7690:
  9546   002BA0                     l1018:
  9547                           
  9548                           ; BSR set to: 0
  9549   002BA0  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  9550   002BA2  EFD5  F015         	goto	u7701
  9551   002BA6  EFD7  F015         	goto	u7700
  9552   002BAA                     u7701:
  9553   002BAA  EFD8  F015         	goto	l6329
  9554   002BAE                     u7700:
  9555   002BAE                     
  9556                           ; BSR set to: 0
  9557   002BAE  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  9558   002BB0                     l6329:
  9559                           
  9560                           ; BSR set to: 0
  9561   002BB0  90D8               	bcf	status,0,c
  9562   002BB2  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  9563   002BB4                     
  9564                           ; BSR set to: 0
  9565   002BB4  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  9566   002BB8  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  9567   002BBA  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  9568   002BBC  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  9569   002BBE  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  9570   002BC2  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  9571   002BC4  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  9572   002BC6  6B64               	clrf	??___xxtofl& (0+255),b
  9573   002BC8  5164               	movf	??___xxtofl& (0+255),w,b
  9574   002BCA  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  9575   002BCC  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  9576   002BCE  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  9577   002BD0  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  9578   002BD2  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  9579   002BD4  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  9580   002BD6  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  9581   002BD8                     
  9582                           ; BSR set to: 0
  9583   002BD8  5168               	movf	___xxtofl@sign& (0+255),w,b
  9584   002BDA  B4D8               	btfsc	status,2,c
  9585   002BDC  EFF2  F015         	goto	u7711
  9586   002BE0  EFF4  F015         	goto	u7710
  9587   002BE4                     u7711:
  9588   002BE4  EFFC  F015         	goto	l6339
  9589   002BE8                     u7710:
  9590   002BE8                     
  9591                           ; BSR set to: 0
  9592   002BE8  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  9593   002BEA  EFFB  F015         	goto	u7720
  9594   002BEE  EFF9  F015         	goto	u7721
  9595   002BF2                     u7721:
  9596   002BF2  EFFC  F015         	goto	l6339
  9597   002BF6                     u7720:
  9598   002BF6                     
  9599                           ; BSR set to: 0
  9600   002BF6  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  9601   002BF8                     l6339:
  9602                           
  9603                           ; BSR set to: 0
  9604   002BF8  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  9605   002BFC  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  9606   002C00  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  9607   002C04  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  9608   002C08                     l1007:
  9609                           
  9610                           ; BSR set to: 0
  9611   002C08  0012               	return		;funcret
  9612   002C0A                     __end_of___xxtofl:
  9613                           	callstack 0
  9614                           
  9615 ;; *************** function _EUSART_TransmitString *****************
  9616 ;; Defined at:
  9617 ;;		line 676 in file "main.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  a               2    1[BANK0 ] PTR unsigned char 
  9620 ;;		 -> STR_7(3), STR_5(7), STR_4(9), STR_3(3), 
  9621 ;;		 -> uart_buffer(10), STR_1(9), 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  i               2    5[BANK0 ] int 
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      void 
  9626 ;; Registers used:
  9627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9633 ;;      Params:         0       2       0       0
  9634 ;;      Locals:         0       2       0       0
  9635 ;;      Temps:          0       2       0       0
  9636 ;;      Totals:         0       6       0       0
  9637 ;;Total ram usage:        6 bytes
  9638 ;; Hardware stack levels used: 1
  9639 ;; Hardware stack levels required when called: 4
  9640 ;; This function calls:
  9641 ;;		_EUSART_TransmitChar
  9642 ;; This function is called by:
  9643 ;;		_main
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           	psect	text36
  9648   0035EE                     __ptext36:
  9649                           	callstack 0
  9650   0035EE                     _EUSART_TransmitString:
  9651                           	callstack 26
  9652   0035EE                     
  9653                           ;main.c: 677:     int i;;main.c: 678:     for( i= 0; a[i] !='\0'; i++ ){
  9654   0035EE  0E00               	movlw	0
  9655   0035F0  0100               	movlb	0	; () banked
  9656   0035F2  6F66               	movwf	(EUSART_TransmitString@i+1)& (0+255),b
  9657   0035F4  0E00               	movlw	0
  9658   0035F6  6F65               	movwf	EUSART_TransmitString@i& (0+255),b
  9659   0035F8  EF1A  F01B         	goto	l6135
  9660   0035FC                     l6131:
  9661                           
  9662                           ;main.c: 679:        EUSART_TransmitChar(a[i]);
  9663   0035FC  0100               	movlb	0	; () banked
  9664   0035FE  5165               	movf	EUSART_TransmitString@i& (0+255),w,b
  9665   003600  2561               	addwf	EUSART_TransmitString@a& (0+255),w,b
  9666   003602  6F63               	movwf	??_EUSART_TransmitString& (0+255),b
  9667   003604  5166               	movf	(EUSART_TransmitString@i+1)& (0+255),w,b
  9668   003606  2162               	addwfc	(EUSART_TransmitString@a+1)& (0+255),w,b
  9669   003608  6F64               	movwf	(??_EUSART_TransmitString+1)& (0+255),b
  9670   00360A  C063  FFF6         	movff	??_EUSART_TransmitString,tblptrl
  9671   00360E  C064  FFF7         	movff	??_EUSART_TransmitString+1,tblptrh
  9672   003612  6AF8               	clrf	tblptru,c
  9673   003614  0E02               	movlw	(high __ramtop+-1)
  9674   003616  64F7               	cpfsgt	tblptrh,c
  9675   003618  D003               	bra	u7497
  9676   00361A  0008               	tblrd		*
  9677   00361C  50F5               	movf	tablat,w,c
  9678   00361E  D005               	bra	u7490
  9679   003620                     u7497:
  9680   003620  CFF6 FFE1          	movff	tblptrl,fsr1l
  9681   003624  CFF7 FFE2          	movff	tblptrh,fsr1h
  9682   003628  50E7               	movf	indf1,w,c
  9683   00362A                     u7490:
  9684   00362A  ECF8  F01E         	call	_EUSART_TransmitChar
  9685   00362E                     
  9686                           ;main.c: 680:     }
  9687   00362E  0100               	movlb	0	; () banked
  9688   003630  4B65               	infsnz	EUSART_TransmitString@i& (0+255),f,b
  9689   003632  2B66               	incf	(EUSART_TransmitString@i+1)& (0+255),f,b
  9690   003634                     l6135:
  9691                           
  9692                           ; BSR set to: 0
  9693   003634  5165               	movf	EUSART_TransmitString@i& (0+255),w,b
  9694   003636  2561               	addwf	EUSART_TransmitString@a& (0+255),w,b
  9695   003638  6F63               	movwf	??_EUSART_TransmitString& (0+255),b
  9696   00363A  5166               	movf	(EUSART_TransmitString@i+1)& (0+255),w,b
  9697   00363C  2162               	addwfc	(EUSART_TransmitString@a+1)& (0+255),w,b
  9698   00363E  6F64               	movwf	(??_EUSART_TransmitString+1)& (0+255),b
  9699   003640  C063  FFF6         	movff	??_EUSART_TransmitString,tblptrl
  9700   003644  C064  FFF7         	movff	??_EUSART_TransmitString+1,tblptrh
  9701   003648  6AF8               	clrf	tblptru,c
  9702   00364A  0E02               	movlw	(high __ramtop+-1)
  9703   00364C  64F7               	cpfsgt	tblptrh,c
  9704   00364E  D003               	bra	u7507
  9705   003650  0008               	tblrd		*
  9706   003652  50F5               	movf	tablat,w,c
  9707   003654  D005               	bra	u7500
  9708   003656                     u7507:
  9709   003656  CFF6 FFE1          	movff	tblptrl,fsr1l
  9710   00365A  CFF7 FFE2          	movff	tblptrh,fsr1h
  9711   00365E  50E7               	movf	indf1,w,c
  9712   003660                     u7500:
  9713   003660  0900               	iorlw	0
  9714   003662  A4D8               	btfss	status,2,c
  9715   003664  EF36  F01B         	goto	u7511
  9716   003668  EF38  F01B         	goto	u7510
  9717   00366C                     u7511:
  9718   00366C  EFFE  F01A         	goto	l6131
  9719   003670                     u7510:
  9720   003670  0012               	return		;funcret
  9721   003672                     __end_of_EUSART_TransmitString:
  9722                           	callstack 0
  9723                           
  9724 ;; *************** function _EUSART_TransmitChar *****************
  9725 ;; Defined at:
  9726 ;;		line 671 in file "main.c"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;  data            1    wreg     unsigned char 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;  data            1    0[BANK0 ] unsigned char 
  9731 ;; Return value:  Size  Location     Type
  9732 ;;                  1    wreg      void 
  9733 ;; Registers used:
  9734 ;;		wreg
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9740 ;;      Params:         0       0       0       0
  9741 ;;      Locals:         0       1       0       0
  9742 ;;      Temps:          0       0       0       0
  9743 ;;      Totals:         0       1       0       0
  9744 ;;Total ram usage:        1 bytes
  9745 ;; Hardware stack levels used: 1
  9746 ;; Hardware stack levels required when called: 3
  9747 ;; This function calls:
  9748 ;;		Nothing
  9749 ;; This function is called by:
  9750 ;;		_EUSART_TransmitString
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           	psect	text37
  9755   003DF0                     __ptext37:
  9756                           	callstack 0
  9757   003DF0                     _EUSART_TransmitChar:
  9758                           	callstack 26
  9759                           
  9760                           ;incstack = 0
  9761                           ;EUSART_TransmitChar@data stored from wreg
  9762   003DF0  0100               	movlb	0	; () banked
  9763   003DF2  6F60               	movwf	EUSART_TransmitChar@data& (0+255),b
  9764   003DF4                     l312:
  9765   003DF4  A2AC               	btfss	172,1,c	;volatile
  9766   003DF6  EFFF  F01E         	goto	u7401
  9767   003DFA  EF01  F01F         	goto	u7400
  9768   003DFE                     u7401:
  9769   003DFE  EFFA  F01E         	goto	l312
  9770   003E02                     u7400:
  9771   003E02                     
  9772                           ;main.c: 673:     TXREG = data;
  9773   003E02  C060  FFAD         	movff	EUSART_TransmitChar@data,4013	;volatile
  9774   003E06  0012               	return		;funcret
  9775   003E08                     __end_of_EUSART_TransmitChar:
  9776                           	callstack 0
  9777                           
  9778 ;; *************** function _EEPROMWrite *****************
  9779 ;; Defined at:
  9780 ;;		line 611 in file "main.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;  address         2    2[BANK0 ] unsigned short 
  9783 ;;  data            1    4[BANK0 ] unsigned char 
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;		None
  9786 ;; Return value:  Size  Location     Type
  9787 ;;                  1    wreg      void 
  9788 ;; Registers used:
  9789 ;;		wreg, status,2, cstack
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9795 ;;      Params:         0       3       0       0
  9796 ;;      Locals:         0       0       0       0
  9797 ;;      Temps:          0       1       0       0
  9798 ;;      Totals:         0       4       0       0
  9799 ;;Total ram usage:        4 bytes
  9800 ;; Hardware stack levels used: 1
  9801 ;; Hardware stack levels required when called: 4
  9802 ;; This function calls:
  9803 ;;		_I2CStart
  9804 ;;		_I2CStop
  9805 ;;		_I2CWrite
  9806 ;;		_getHighByte
  9807 ;;		_getLowByte
  9808 ;; This function is called by:
  9809 ;;		_main
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           	psect	text38
  9814   003AD6                     __ptext38:
  9815                           	callstack 0
  9816   003AD6                     _EEPROMWrite:
  9817                           	callstack 26
  9818   003AD6                     
  9819                           ;main.c: 612:     I2CStart();
  9820   003AD6  EC2A  F01F         	call	_I2CStart	;wreg free
  9821   003ADA                     
  9822                           ;main.c: 613:     I2CWrite(0b10100000);
  9823   003ADA  0EA0               	movlw	160
  9824   003ADC  ECB5  F01E         	call	_I2CWrite
  9825   003AE0                     
  9826                           ;main.c: 615:     address_low_byte = getLowByte(address);
  9827   003AE0  C062  F060         	movff	EEPROMWrite@address,getLowByte@number
  9828   003AE4  C063  F061         	movff	EEPROMWrite@address+1,getLowByte@number+1
  9829   003AE8  EC42  F01F         	call	_getLowByte	;wreg free
  9830   003AEC  6E41               	movwf	_address_low_byte^0,c
  9831   003AEE                     
  9832                           ;main.c: 616:     address_high_byte = getHighByte(address);
  9833   003AEE  C062  F060         	movff	EEPROMWrite@address,getHighByte@number
  9834   003AF2  C063  F061         	movff	EEPROMWrite@address+1,getHighByte@number+1
  9835   003AF6  EC45  F01F         	call	_getHighByte	;wreg free
  9836   003AFA  6E40               	movwf	_address_high_byte^0,c
  9837   003AFC                     
  9838                           ;main.c: 618:     I2CWrite(address_low_byte);
  9839   003AFC  5041               	movf	_address_low_byte^0,w,c
  9840   003AFE  ECB5  F01E         	call	_I2CWrite
  9841   003B02                     
  9842                           ;main.c: 619:     I2CWrite(address_high_byte);
  9843   003B02  5040               	movf	_address_high_byte^0,w,c
  9844   003B04  ECB5  F01E         	call	_I2CWrite
  9845   003B08                     
  9846                           ;main.c: 620:     I2CWrite(data);
  9847   003B08  0100               	movlb	0	; () banked
  9848   003B0A  5164               	movf	EEPROMWrite@data& (0+255),w,b
  9849   003B0C  ECB5  F01E         	call	_I2CWrite
  9850   003B10                     
  9851                           ;main.c: 621:     I2CStop();
  9852   003B10  EC21  F01F         	call	_I2CStop	;wreg free
  9853   003B14                     
  9854                           ;main.c: 623:     _delay((unsigned long)((5)*(2000000/4000.0)));
  9855   003B14  0E04               	movlw	4
  9856   003B16  0100               	movlb	0	; () banked
  9857   003B18  6F65               	movwf	??_EEPROMWrite& (0+255),b
  9858   003B1A  0E3D               	movlw	61
  9859   003B1C                     u7937:
  9860   003B1C  2EE8               	decfsz	wreg,f,c
  9861   003B1E  D7FE               	bra	u7937
  9862   003B20  2F65               	decfsz	??_EEPROMWrite& (0+255),f,b
  9863   003B22  D7FC               	bra	u7937
  9864   003B24  D000               	nop2	
  9865   003B26  0012               	return		;funcret
  9866   003B28                     __end_of_EEPROMWrite:
  9867                           	callstack 0
  9868                           
  9869 ;; *************** function _EEPROMRead *****************
  9870 ;; Defined at:
  9871 ;;		line 626 in file "main.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  address         2    2[BANK0 ] unsigned short 
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;  data            1    4[BANK0 ] unsigned char 
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  1    wreg      unsigned char 
  9878 ;; Registers used:
  9879 ;;		wreg, status,2, cstack
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9885 ;;      Params:         0       2       0       0
  9886 ;;      Locals:         0       1       0       0
  9887 ;;      Temps:          0       0       0       0
  9888 ;;      Totals:         0       3       0       0
  9889 ;;Total ram usage:        3 bytes
  9890 ;; Hardware stack levels used: 1
  9891 ;; Hardware stack levels required when called: 4
  9892 ;; This function calls:
  9893 ;;		_I2CRead
  9894 ;;		_I2CRestart
  9895 ;;		_I2CStart
  9896 ;;		_I2CStop
  9897 ;;		_I2CWrite
  9898 ;;		_getHighByte
  9899 ;;		_getLowByte
  9900 ;; This function is called by:
  9901 ;;		_main
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           	psect	text39
  9906   003B28                     __ptext39:
  9907                           	callstack 0
  9908   003B28                     _EEPROMRead:
  9909                           	callstack 26
  9910   003B28                     
  9911                           ;main.c: 627:     uint8_t data;;main.c: 629:     address_low_byte = getLowByte(address);
  9912   003B28  C062  F060         	movff	EEPROMRead@address,getLowByte@number
  9913   003B2C  C063  F061         	movff	EEPROMRead@address+1,getLowByte@number+1
  9914   003B30  EC42  F01F         	call	_getLowByte	;wreg free
  9915   003B34  6E41               	movwf	_address_low_byte^0,c
  9916                           
  9917                           ;main.c: 630:     address_high_byte = getHighByte(address);
  9918   003B36  C062  F060         	movff	EEPROMRead@address,getHighByte@number
  9919   003B3A  C063  F061         	movff	EEPROMRead@address+1,getHighByte@number+1
  9920   003B3E  EC45  F01F         	call	_getHighByte	;wreg free
  9921   003B42  6E40               	movwf	_address_high_byte^0,c
  9922   003B44                     
  9923                           ;main.c: 632:     I2CStart();
  9924   003B44  EC2A  F01F         	call	_I2CStart	;wreg free
  9925   003B48                     
  9926                           ;main.c: 633:     I2CWrite(0b10100000);
  9927   003B48  0EA0               	movlw	160
  9928   003B4A  ECB5  F01E         	call	_I2CWrite
  9929   003B4E                     
  9930                           ;main.c: 634:     I2CWrite(address_low_byte);
  9931   003B4E  5041               	movf	_address_low_byte^0,w,c
  9932   003B50  ECB5  F01E         	call	_I2CWrite
  9933   003B54                     
  9934                           ;main.c: 635:     I2CWrite(address_high_byte);
  9935   003B54  5040               	movf	_address_high_byte^0,w,c
  9936   003B56  ECB5  F01E         	call	_I2CWrite
  9937   003B5A                     
  9938                           ;main.c: 636:     I2CRestart();
  9939   003B5A  EC33  F01F         	call	_I2CRestart	;wreg free
  9940   003B5E                     
  9941                           ;main.c: 637:     I2CWrite(0b10100000 | 1);
  9942   003B5E  0EA1               	movlw	161
  9943   003B60  ECB5  F01E         	call	_I2CWrite
  9944                           
  9945                           ;main.c: 638:     data = I2CRead(1);
  9946   003B64  0E01               	movlw	1
  9947   003B66  EC86  F01E         	call	_I2CRead
  9948   003B6A  0100               	movlb	0	; () banked
  9949   003B6C  6F64               	movwf	EEPROMRead@data& (0+255),b
  9950   003B6E                     
  9951                           ; BSR set to: 0
  9952                           ;main.c: 639:     I2CStop();
  9953   003B6E  EC21  F01F         	call	_I2CStop	;wreg free
  9954                           
  9955                           ;main.c: 640:     return data;
  9956   003B72  0100               	movlb	0	; () banked
  9957   003B74  5164               	movf	EEPROMRead@data& (0+255),w,b
  9958   003B76                     
  9959                           ; BSR set to: 0
  9960   003B76  0012               	return		;funcret
  9961   003B78                     __end_of_EEPROMRead:
  9962                           	callstack 0
  9963                           
  9964 ;; *************** function _getLowByte *****************
  9965 ;; Defined at:
  9966 ;;		line 132 in file "main.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;  number          2    0[BANK0 ] unsigned short 
  9969 ;; Auto vars:     Size  Location     Type
  9970 ;;		None
  9971 ;; Return value:  Size  Location     Type
  9972 ;;                  1    wreg      unsigned char 
  9973 ;; Registers used:
  9974 ;;		wreg, status,2
  9975 ;; Tracked objects:
  9976 ;;		On entry : 0/0
  9977 ;;		On exit  : 0/0
  9978 ;;		Unchanged: 0/0
  9979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9980 ;;      Params:         0       2       0       0
  9981 ;;      Locals:         0       0       0       0
  9982 ;;      Temps:          0       0       0       0
  9983 ;;      Totals:         0       2       0       0
  9984 ;;Total ram usage:        2 bytes
  9985 ;; Hardware stack levels used: 1
  9986 ;; Hardware stack levels required when called: 3
  9987 ;; This function calls:
  9988 ;;		Nothing
  9989 ;; This function is called by:
  9990 ;;		_main
  9991 ;;		_EEPROMWrite
  9992 ;;		_EEPROMRead
  9993 ;; This function uses a non-reentrant model
  9994 ;;
  9995                           
  9996                           	psect	text40
  9997   003E84                     __ptext40:
  9998                           	callstack 0
  9999   003E84                     _getLowByte:
 10000                           	callstack 27
 10001   003E84                     
 10002                           ;main.c: 133:     return ( number & 0xFF);
 10003   003E84  0100               	movlb	0	; () banked
 10004   003E86  5160               	movf	getLowByte@number& (0+255),w,b
 10005   003E88                     
 10006                           ; BSR set to: 0
 10007   003E88  0012               	return		;funcret
 10008   003E8A                     __end_of_getLowByte:
 10009                           	callstack 0
 10010                           
 10011 ;; *************** function _getHighByte *****************
 10012 ;; Defined at:
 10013 ;;		line 136 in file "main.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;  number          2    0[BANK0 ] unsigned short 
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;		None
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  1    wreg      unsigned char 
 10020 ;; Registers used:
 10021 ;;		wreg, status,2
 10022 ;; Tracked objects:
 10023 ;;		On entry : 0/0
 10024 ;;		On exit  : 0/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10027 ;;      Params:         0       2       0       0
 10028 ;;      Locals:         0       0       0       0
 10029 ;;      Temps:          0       0       0       0
 10030 ;;      Totals:         0       2       0       0
 10031 ;;Total ram usage:        2 bytes
 10032 ;; Hardware stack levels used: 1
 10033 ;; Hardware stack levels required when called: 3
 10034 ;; This function calls:
 10035 ;;		Nothing
 10036 ;; This function is called by:
 10037 ;;		_main
 10038 ;;		_EEPROMWrite
 10039 ;;		_EEPROMRead
 10040 ;; This function uses a non-reentrant model
 10041 ;;
 10042                           
 10043                           	psect	text41
 10044   003E8A                     __ptext41:
 10045                           	callstack 0
 10046   003E8A                     _getHighByte:
 10047                           	callstack 27
 10048   003E8A                     
 10049                           ;main.c: 137:     return ((number >> 8) & 0xFF);
 10050   003E8A  0100               	movlb	0	; () banked
 10051   003E8C  5161               	movf	(getHighByte@number+1)& (0+255),w,b
 10052   003E8E                     
 10053                           ; BSR set to: 0
 10054   003E8E  0012               	return		;funcret
 10055   003E90                     __end_of_getHighByte:
 10056                           	callstack 0
 10057                           
 10058 ;; *************** function _I2CWrite *****************
 10059 ;; Defined at:
 10060 ;;		line 594 in file "main.c"
 10061 ;; Parameters:    Size  Location     Type
 10062 ;;  data            1    wreg     unsigned char 
 10063 ;; Auto vars:     Size  Location     Type
 10064 ;;  data            1    0[BANK0 ] unsigned char 
 10065 ;; Return value:  Size  Location     Type
 10066 ;;                  1    wreg      void 
 10067 ;; Registers used:
 10068 ;;		wreg
 10069 ;; Tracked objects:
 10070 ;;		On entry : 0/0
 10071 ;;		On exit  : 0/0
 10072 ;;		Unchanged: 0/0
 10073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10074 ;;      Params:         0       0       0       0
 10075 ;;      Locals:         0       1       0       0
 10076 ;;      Temps:          0       0       0       0
 10077 ;;      Totals:         0       1       0       0
 10078 ;;Total ram usage:        1 bytes
 10079 ;; Hardware stack levels used: 1
 10080 ;; Hardware stack levels required when called: 3
 10081 ;; This function calls:
 10082 ;;		Nothing
 10083 ;; This function is called by:
 10084 ;;		_EEPROMWrite
 10085 ;;		_EEPROMRead
 10086 ;; This function uses a non-reentrant model
 10087 ;;
 10088                           
 10089                           	psect	text42
 10090   003D6A                     __ptext42:
 10091                           	callstack 0
 10092   003D6A                     _I2CWrite:
 10093                           	callstack 26
 10094                           
 10095                           ; BSR set to: 0
 10096                           ;incstack = 0
 10097                           ;I2CWrite@data stored from wreg
 10098   003D6A  0100               	movlb	0	; () banked
 10099   003D6C  6F60               	movwf	I2CWrite@data& (0+255),b
 10100   003D6E                     
 10101                           ;main.c: 595:     SSPBUF = data;
 10102   003D6E  C060  FFC9         	movff	I2CWrite@data,4041	;volatile
 10103   003D72                     l285:
 10104   003D72  B0C7               	btfsc	199,0,c	;volatile
 10105   003D74  EFBE  F01E         	goto	u7351
 10106   003D78  EFC0  F01E         	goto	u7350
 10107   003D7C                     u7351:
 10108   003D7C  EFB9  F01E         	goto	l285
 10109   003D80                     u7350:
 10110   003D80                     l288:
 10111   003D80  BCC5               	btfsc	197,6,c	;volatile
 10112   003D82  EFC5  F01E         	goto	u7361
 10113   003D86  EFC7  F01E         	goto	u7360
 10114   003D8A                     u7361:
 10115   003D8A  EFC0  F01E         	goto	l288
 10116   003D8E                     u7360:
 10117   003D8E  0012               	return		;funcret
 10118   003D90                     __end_of_I2CWrite:
 10119                           	callstack 0
 10120                           
 10121 ;; *************** function _I2CStop *****************
 10122 ;; Defined at:
 10123 ;;		line 584 in file "main.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;		None
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;		None
 10128 ;; Return value:  Size  Location     Type
 10129 ;;                  1    wreg      void 
 10130 ;; Registers used:
 10131 ;;		None
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10137 ;;      Params:         0       0       0       0
 10138 ;;      Locals:         0       0       0       0
 10139 ;;      Temps:          0       0       0       0
 10140 ;;      Totals:         0       0       0       0
 10141 ;;Total ram usage:        0 bytes
 10142 ;; Hardware stack levels used: 1
 10143 ;; Hardware stack levels required when called: 3
 10144 ;; This function calls:
 10145 ;;		Nothing
 10146 ;; This function is called by:
 10147 ;;		_EEPROMWrite
 10148 ;;		_EEPROMRead
 10149 ;; This function uses a non-reentrant model
 10150 ;;
 10151                           
 10152                           	psect	text43
 10153   003E42                     __ptext43:
 10154                           	callstack 0
 10155   003E42                     _I2CStop:
 10156                           	callstack 26
 10157   003E42                     
 10158                           ;main.c: 585:     SSPCON2bits.PEN = 1;
 10159   003E42  84C5               	bsf	197,2,c	;volatile
 10160   003E44                     l273:
 10161   003E44  B4C5               	btfsc	197,2,c	;volatile
 10162   003E46  EF27  F01F         	goto	u7331
 10163   003E4A  EF29  F01F         	goto	u7330
 10164   003E4E                     u7331:
 10165   003E4E  EF22  F01F         	goto	l273
 10166   003E52                     u7330:
 10167   003E52  0012               	return		;funcret
 10168   003E54                     __end_of_I2CStop:
 10169                           	callstack 0
 10170                           
 10171 ;; *************** function _I2CStart *****************
 10172 ;; Defined at:
 10173 ;;		line 579 in file "main.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;		None
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;		None
 10178 ;; Return value:  Size  Location     Type
 10179 ;;                  1    wreg      void 
 10180 ;; Registers used:
 10181 ;;		None
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10187 ;;      Params:         0       0       0       0
 10188 ;;      Locals:         0       0       0       0
 10189 ;;      Temps:          0       0       0       0
 10190 ;;      Totals:         0       0       0       0
 10191 ;;Total ram usage:        0 bytes
 10192 ;; Hardware stack levels used: 1
 10193 ;; Hardware stack levels required when called: 3
 10194 ;; This function calls:
 10195 ;;		Nothing
 10196 ;; This function is called by:
 10197 ;;		_EEPROMWrite
 10198 ;;		_EEPROMRead
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           	psect	text44
 10203   003E54                     __ptext44:
 10204                           	callstack 0
 10205   003E54                     _I2CStart:
 10206                           	callstack 26
 10207   003E54                     
 10208                           ;main.c: 580:     SSPCON2bits.SEN = 1;
 10209   003E54  80C5               	bsf	197,0,c	;volatile
 10210   003E56                     l267:
 10211   003E56  B0C5               	btfsc	197,0,c	;volatile
 10212   003E58  EF30  F01F         	goto	u7321
 10213   003E5C  EF32  F01F         	goto	u7320
 10214   003E60                     u7321:
 10215   003E60  EF2B  F01F         	goto	l267
 10216   003E64                     u7320:
 10217   003E64  0012               	return		;funcret
 10218   003E66                     __end_of_I2CStart:
 10219                           	callstack 0
 10220                           
 10221 ;; *************** function _I2CRestart *****************
 10222 ;; Defined at:
 10223 ;;		line 589 in file "main.c"
 10224 ;; Parameters:    Size  Location     Type
 10225 ;;		None
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;		None
 10228 ;; Return value:  Size  Location     Type
 10229 ;;                  1    wreg      void 
 10230 ;; Registers used:
 10231 ;;		None
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10237 ;;      Params:         0       0       0       0
 10238 ;;      Locals:         0       0       0       0
 10239 ;;      Temps:          0       0       0       0
 10240 ;;      Totals:         0       0       0       0
 10241 ;;Total ram usage:        0 bytes
 10242 ;; Hardware stack levels used: 1
 10243 ;; Hardware stack levels required when called: 3
 10244 ;; This function calls:
 10245 ;;		Nothing
 10246 ;; This function is called by:
 10247 ;;		_EEPROMRead
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251                           	psect	text45
 10252   003E66                     __ptext45:
 10253                           	callstack 0
 10254   003E66                     _I2CRestart:
 10255                           	callstack 26
 10256   003E66                     
 10257                           ;main.c: 590:     SSPCON2bits.RSEN = 1;
 10258   003E66  82C5               	bsf	197,1,c	;volatile
 10259   003E68                     l279:
 10260   003E68  B2C5               	btfsc	197,1,c	;volatile
 10261   003E6A  EF39  F01F         	goto	u7341
 10262   003E6E  EF3B  F01F         	goto	u7340
 10263   003E72                     u7341:
 10264   003E72  EF34  F01F         	goto	l279
 10265   003E76                     u7340:
 10266   003E76  0012               	return		;funcret
 10267   003E78                     __end_of_I2CRestart:
 10268                           	callstack 0
 10269                           
 10270 ;; *************** function _I2CRead *****************
 10271 ;; Defined at:
 10272 ;;		line 600 in file "main.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;  ack             1    wreg     unsigned char 
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;  ack             1    0[BANK0 ] unsigned char 
 10277 ;; Return value:  Size  Location     Type
 10278 ;;                  1    wreg      unsigned char 
 10279 ;; Registers used:
 10280 ;;		wreg, status,2
 10281 ;; Tracked objects:
 10282 ;;		On entry : 0/0
 10283 ;;		On exit  : 0/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10286 ;;      Params:         0       0       0       0
 10287 ;;      Locals:         0       1       0       0
 10288 ;;      Temps:          0       0       0       0
 10289 ;;      Totals:         0       1       0       0
 10290 ;;Total ram usage:        1 bytes
 10291 ;; Hardware stack levels used: 1
 10292 ;; Hardware stack levels required when called: 3
 10293 ;; This function calls:
 10294 ;;		Nothing
 10295 ;; This function is called by:
 10296 ;;		_EEPROMRead
 10297 ;; This function uses a non-reentrant model
 10298 ;;
 10299                           
 10300                           	psect	text46
 10301   003D0C                     __ptext46:
 10302                           	callstack 0
 10303   003D0C                     _I2CRead:
 10304                           	callstack 26
 10305                           
 10306                           ;incstack = 0
 10307                           ;I2CRead@ack stored from wreg
 10308   003D0C  0100               	movlb	0	; () banked
 10309   003D0E  6F60               	movwf	I2CRead@ack& (0+255),b
 10310   003D10                     
 10311                           ;main.c: 601:     SSPCON2bits.RCEN = 1;
 10312   003D10  86C5               	bsf	197,3,c	;volatile
 10313   003D12                     l294:
 10314   003D12  A0C7               	btfss	199,0,c	;volatile
 10315   003D14  EF8E  F01E         	goto	u7371
 10316   003D18  EF90  F01E         	goto	u7370
 10317   003D1C                     u7371:
 10318   003D1C  EF89  F01E         	goto	l294
 10319   003D20                     u7370:
 10320   003D20                     
 10321                           ;main.c: 603:     received_data = SSPBUF;
 10322   003D20  CFC9 F042          	movff	4041,_received_data	;volatile
 10323   003D24                     
 10324                           ;main.c: 605:     SSPCON2bits.ACKDT = ack;
 10325   003D24  0100               	movlb	0	; () banked
 10326   003D26  B160               	btfsc	I2CRead@ack& (0+255),0,b
 10327   003D28  D002               	bra	u7385
 10328   003D2A  9AC5               	bcf	197,5,c	;volatile
 10329   003D2C  D001               	bra	u7386
 10330   003D2E                     u7385:
 10331   003D2E  8AC5               	bsf	197,5,c	;volatile
 10332   003D30                     u7386:
 10333   003D30                     
 10334                           ;main.c: 606:     SSPCON2bits.ACKEN = 1;
 10335   003D30  88C5               	bsf	197,4,c	;volatile
 10336   003D32                     l297:
 10337   003D32  B8C5               	btfsc	197,4,c	;volatile
 10338   003D34  EF9E  F01E         	goto	u7391
 10339   003D38  EFA0  F01E         	goto	u7390
 10340   003D3C                     u7391:
 10341   003D3C  EF99  F01E         	goto	l297
 10342   003D40                     u7390:
 10343   003D40                     
 10344                           ;main.c: 608:     return received_data;
 10345   003D40  5042               	movf	_received_data^0,w,c
 10346   003D42  0012               	return		;funcret
 10347   003D44                     __end_of_I2CRead:
 10348                           	callstack 0
 10349                           
 10350 ;; *************** function _ISR *****************
 10351 ;; Defined at:
 10352 ;;		line 178 in file "main.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;		None
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;		None
 10357 ;; Return value:  Size  Location     Type
 10358 ;;                  1    wreg      void 
 10359 ;; Registers used:
 10360 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10361 ;; Tracked objects:
 10362 ;;		On entry : 0/0
 10363 ;;		On exit  : 0/0
 10364 ;;		Unchanged: 0/0
 10365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10366 ;;      Params:         0       0       0       0
 10367 ;;      Locals:         0       0       0       0
 10368 ;;      Temps:          8       0       0       0
 10369 ;;      Totals:         8       0       0       0
 10370 ;;Total ram usage:        8 bytes
 10371 ;; Hardware stack levels used: 1
 10372 ;; Hardware stack levels required when called: 2
 10373 ;; This function calls:
 10374 ;;		i2_EUSART_TransmitString
 10375 ;;		i2_adcSampling
 10376 ;;		i2_setDisplayDigits
 10377 ;;		i2_show7Segment
 10378 ;; This function is called by:
 10379 ;;		Interrupt level 2
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           
 10383                           	psect	intcode
 10384   000008                     __pintcode:
 10385                           	callstack 0
 10386   000008                     _ISR:
 10387                           	callstack 20
 10388                           
 10389                           ;incstack = 0
 10390   000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10391   00000A  CFE1 F024          	movff	fsr1l,??_ISR
 10392   00000E  CFE2 F025          	movff	fsr1h,??_ISR+1
 10393   000012  CFF3 F026          	movff	prodl,??_ISR+2
 10394   000016  CFF4 F027          	movff	prodh,??_ISR+3
 10395   00001A  CFF6 F028          	movff	tblptrl,??_ISR+4
 10396   00001E  CFF7 F029          	movff	tblptrh,??_ISR+5
 10397   000022  CFF8 F02A          	movff	tblptru,??_ISR+6
 10398   000026  CFF5 F02B          	movff	tablat,??_ISR+7
 10399   00002A                     
 10400                           ;main.c: 180:     if ( PIR1bits.TMR1IF) {
 10401   00002A  A09E               	btfss	158,0,c	;volatile
 10402   00002C  EF1A  F000         	goto	i2u542_41
 10403   000030  EF1C  F000         	goto	i2u542_40
 10404   000034                     i2u542_41:
 10405   000034  EF4B  F000         	goto	i2l4813
 10406   000038                     i2u542_40:
 10407   000038                     
 10408                           ;main.c: 181:         PIR1bits.TMR1IF = 0;
 10409   000038  909E               	bcf	158,0,c	;volatile
 10410   00003A                     
 10411                           ;main.c: 183:         TMR1 = 0;
 10412   00003A  0E00               	movlw	0
 10413   00003C  6ECF               	movwf	207,c	;volatile
 10414   00003E  0E00               	movlw	0
 10415   000040  6ECE               	movwf	206,c	;volatile
 10416   000042                     
 10417                           ;main.c: 185:         if (fsm_state == 1 || fsm_state == 2 ) {
 10418   000042  0100               	movlb	0	; () banked
 10419   000044  05F9               	decf	_fsm_state& (0+255),w,b
 10420   000046  B4D8               	btfsc	status,2,c
 10421   000048  EF28  F000         	goto	i2u543_41
 10422   00004C  EF2A  F000         	goto	i2u543_40
 10423   000050                     i2u543_41:
 10424   000050  EF33  F000         	goto	i2l4801
 10425   000054                     i2u543_40:
 10426   000054                     
 10427                           ; BSR set to: 0
 10428   000054  0E02               	movlw	2
 10429   000056  19F9               	xorwf	_fsm_state& (0+255),w,b
 10430   000058  A4D8               	btfss	status,2,c
 10431   00005A  EF31  F000         	goto	i2u544_41
 10432   00005E  EF33  F000         	goto	i2u544_40
 10433   000062                     i2u544_41:
 10434   000062  EF41  F000         	goto	i2l4809
 10435   000066                     i2u544_40:
 10436   000066                     i2l4801:
 10437                           
 10438                           ; BSR set to: 0
 10439                           ;main.c: 187:             overflowCount++;
 10440   000066  2A43               	incf	_overflowCount^0,f,c
 10441   000068                     
 10442                           ; BSR set to: 0
 10443                           ;main.c: 189:             if (overflowCount >= 57) {
 10444   000068  0E38               	movlw	56
 10445   00006A  6443               	cpfsgt	_overflowCount^0,c
 10446   00006C  EF3A  F000         	goto	i2u545_41
 10447   000070  EF3C  F000         	goto	i2u545_40
 10448   000074                     i2u545_41:
 10449   000074  EF4B  F000         	goto	i2l4813
 10450   000078                     i2u545_40:
 10451   000078                     
 10452                           ; BSR set to: 0
 10453                           ;main.c: 190:                 overflowCount = 0;
 10454   000078  6A43               	clrf	_overflowCount^0,c
 10455   00007A                     
 10456                           ; BSR set to: 0
 10457                           ;main.c: 193:                 adcSampling();
 10458   00007A  ECC8  F01E         	call	i2_adcSampling	;wreg free
 10459   00007E  EF4B  F000         	goto	i2l4813
 10460   000082                     i2l4809:
 10461                           
 10462                           ; BSR set to: 0
 10463   000082  0E07               	movlw	7
 10464   000084  19F9               	xorwf	_fsm_state& (0+255),w,b
 10465   000086  A4D8               	btfss	status,2,c
 10466   000088  EF48  F000         	goto	i2u546_41
 10467   00008C  EF4A  F000         	goto	i2u546_40
 10468   000090                     i2u546_41:
 10469   000090  EF4B  F000         	goto	i2l4813
 10470   000094                     i2u546_40:
 10471   000094                     
 10472                           ; BSR set to: 0
 10473                           ;main.c: 198:             LATAbits.LA5 ^= 1;
 10474   000094  7A89               	btg	137,5,c	;volatile
 10475   000096                     i2l4813:
 10476                           
 10477                           ;main.c: 203:     if ( INTCON3bits.INT1IF || INTCON3bits.INT2IF ) {
 10478   000096  B0F0               	btfsc	240,0,c	;volatile
 10479   000098  EF50  F000         	goto	i2u547_41
 10480   00009C  EF52  F000         	goto	i2u547_40
 10481   0000A0                     i2u547_41:
 10482   0000A0  EF59  F000         	goto	i2l4817
 10483   0000A4                     i2u547_40:
 10484   0000A4  A2F0               	btfss	240,1,c	;volatile
 10485   0000A6  EF57  F000         	goto	i2u548_41
 10486   0000AA  EF59  F000         	goto	i2u548_40
 10487   0000AE                     i2u548_41:
 10488   0000AE  EF21  F001         	goto	i2l202
 10489   0000B2                     i2u548_40:
 10490   0000B2                     i2l4817:
 10491                           
 10492                           ;main.c: 205:         button_counter++;
 10493   0000B2  4A30               	infsnz	_button_counter^0,f,c
 10494   0000B4  2A31               	incf	(_button_counter+1)^0,f,c
 10495   0000B6                     
 10496                           ;main.c: 207:         if( INTCON3bits.INT2IF && button_counter > 800 ){
 10497   0000B6  A2F0               	btfss	240,1,c	;volatile
 10498   0000B8  EF60  F000         	goto	i2u549_41
 10499   0000BC  EF62  F000         	goto	i2u549_40
 10500   0000C0                     i2u549_41:
 10501   0000C0  EFCD  F000         	goto	i2l179
 10502   0000C4                     i2u549_40:
 10503   0000C4  0E21               	movlw	33
 10504   0000C6  5C30               	subwf	_button_counter^0,w,c
 10505   0000C8  0E03               	movlw	3
 10506   0000CA  5831               	subwfb	(_button_counter+1)^0,w,c
 10507   0000CC  A0D8               	btfss	status,0,c
 10508   0000CE  EF6B  F000         	goto	i2u550_41
 10509   0000D2  EF6D  F000         	goto	i2u550_40
 10510   0000D6                     i2u550_41:
 10511   0000D6  EFCD  F000         	goto	i2l179
 10512   0000DA                     i2u550_40:
 10513   0000DA                     
 10514                           ;main.c: 209:             INTCON3bits.INT2IF = 0;
 10515   0000DA  92F0               	bcf	240,1,c	;volatile
 10516   0000DC                     
 10517                           ;main.c: 211:             displayAddress = 1;
 10518   0000DC  0E01               	movlw	1
 10519   0000DE  6E39               	movwf	_displayAddress^0,c
 10520                           
 10521                           ;main.c: 213:             displaySample = 1;
 10522   0000E0  0E01               	movlw	1
 10523   0000E2  6E38               	movwf	_displaySample^0,c
 10524                           
 10525                           ;main.c: 214:             button_counter = 0;
 10526   0000E4  0E00               	movlw	0
 10527   0000E6  6E31               	movwf	(_button_counter+1)^0,c
 10528   0000E8  0E00               	movlw	0
 10529   0000EA  6E30               	movwf	_button_counter^0,c
 10530                           
 10531                           ;main.c: 216:             switch(fsm_state){
 10532   0000EC  EFA9  F000         	goto	i2l4841
 10533   0000F0                     i2l4827:
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;main.c: 218:                     fsm_state = 1;
 10537   0000F0  0E01               	movlw	1
 10538   0000F2  6FF9               	movwf	_fsm_state& (0+255),b
 10539                           
 10540                           ;main.c: 219:                     address_index = 0;
 10541   0000F4  0E00               	movlw	0
 10542   0000F6  6FF3               	movwf	(_address_index+1)& (0+255),b
 10543   0000F8  0E00               	movlw	0
 10544   0000FA  6FF2               	movwf	_address_index& (0+255),b
 10545                           
 10546                           ;main.c: 220:                     if( turnOnDisplay == 0 ){
 10547   0000FC  51FA               	movf	_turnOnDisplay& (0+255),w,b
 10548   0000FE  A4D8               	btfss	status,2,c
 10549   000100  EF84  F000         	goto	i2u551_41
 10550   000104  EF86  F000         	goto	i2u551_40
 10551   000108                     i2u551_41:
 10552   000108  EF05  F001         	goto	i2l4859
 10553   00010C                     i2u551_40:
 10554   00010C                     
 10555                           ; BSR set to: 0
 10556                           ;main.c: 221:                         adcSampling();
 10557   00010C  ECC8  F01E         	call	i2_adcSampling	;wreg free
 10558   000110  EF05  F001         	goto	i2l4859
 10559   000114                     i2l4831:
 10560                           
 10561                           ; BSR set to: 0
 10562                           ;main.c: 226:                     fsm_state = 2;
 10563   000114  0E02               	movlw	2
 10564   000116  6FF9               	movwf	_fsm_state& (0+255),b
 10565                           
 10566                           ;main.c: 227:                     address_index = 0;
 10567   000118  0E00               	movlw	0
 10568   00011A  6FF3               	movwf	(_address_index+1)& (0+255),b
 10569   00011C  0E00               	movlw	0
 10570   00011E  6FF2               	movwf	_address_index& (0+255),b
 10571                           
 10572                           ;main.c: 228:                     break;
 10573   000120  EF05  F001         	goto	i2l4859
 10574   000124                     i2l4833:
 10575                           
 10576                           ; BSR set to: 0
 10577                           ;main.c: 231:                     fsm_state = 3;
 10578   000124  0E03               	movlw	3
 10579   000126  6FF9               	movwf	_fsm_state& (0+255),b
 10580                           
 10581                           ;main.c: 232:                     address_index = 0;
 10582   000128  0E00               	movlw	0
 10583   00012A  6FF3               	movwf	(_address_index+1)& (0+255),b
 10584   00012C  0E00               	movlw	0
 10585   00012E  6FF2               	movwf	_address_index& (0+255),b
 10586   000130                     
 10587                           ; BSR set to: 0
 10588                           ;main.c: 233:                     EUSART_TransmitString("START \r\n");
 10589   000130  0E01               	movlw	low STR_1
 10590   000132  6E02               	movwf	i2EUSART_TransmitString@a^0,c
 10591   000134  5002               	movf	i2EUSART_TransmitString@a^0,w,c
 10592   000136  A4D8               	btfss	status,2,c
 10593   000138  0E03               	movlw	high __smallconst
 10594   00013A  6E03               	movwf	(i2EUSART_TransmitString@a+1)^0,c
 10595   00013C  EC39  F01B         	call	i2_EUSART_TransmitString	;wreg free
 10596                           
 10597                           ;main.c: 234:                     break;
 10598   000140  EF05  F001         	goto	i2l4859
 10599   000144                     i2l4837:
 10600                           
 10601                           ; BSR set to: 0
 10602                           ;main.c: 237:                     fsm_state = 4;
 10603   000144  0E04               	movlw	4
 10604   000146  6FF9               	movwf	_fsm_state& (0+255),b
 10605                           
 10606                           ;main.c: 238:                     break;
 10607   000148  EF05  F001         	goto	i2l4859
 10608   00014C                     i2l187:
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;main.c: 241:                     fsm_state = 0;
 10612   00014C  6BF9               	clrf	_fsm_state& (0+255),b
 10613                           
 10614                           ;main.c: 242:                     break;
 10615   00014E  EF05  F001         	goto	i2l4859
 10616   000152                     i2l4841:
 10617   000152  0100               	movlb	0	; () banked
 10618   000154  51F9               	movf	_fsm_state& (0+255),w,b
 10619                           
 10620                           ; Switch size 1, requested type "simple"
 10621                           ; Number of cases is 8, Range of values is 0 to 7
 10622                           ; switch strategies available:
 10623                           ; Name         Instructions Cycles
 10624                           ; simple_byte           25    13 (average)
 10625                           ;	Chosen strategy is simple_byte
 10626   000156  0A00               	xorlw	0	; case 0
 10627   000158  B4D8               	btfsc	status,2,c
 10628   00015A  EF78  F000         	goto	i2l4827
 10629   00015E  0A01               	xorlw	1	; case 1
 10630   000160  B4D8               	btfsc	status,2,c
 10631   000162  EF8A  F000         	goto	i2l4831
 10632   000166  0A03               	xorlw	3	; case 2
 10633   000168  B4D8               	btfsc	status,2,c
 10634   00016A  EF92  F000         	goto	i2l4833
 10635   00016E  0A01               	xorlw	1	; case 3
 10636   000170  B4D8               	btfsc	status,2,c
 10637   000172  EFA2  F000         	goto	i2l4837
 10638   000176  0A07               	xorlw	7	; case 4
 10639   000178  B4D8               	btfsc	status,2,c
 10640   00017A  EFA6  F000         	goto	i2l187
 10641   00017E  0A01               	xorlw	1	; case 5
 10642   000180  B4D8               	btfsc	status,2,c
 10643   000182  EFA6  F000         	goto	i2l187
 10644   000186  0A03               	xorlw	3	; case 6
 10645   000188  B4D8               	btfsc	status,2,c
 10646   00018A  EFA6  F000         	goto	i2l187
 10647   00018E  0A01               	xorlw	1	; case 7
 10648   000190  B4D8               	btfsc	status,2,c
 10649   000192  EFA6  F000         	goto	i2l187
 10650   000196  EF05  F001         	goto	i2l4859
 10651   00019A                     i2l179:
 10652   00019A  A0F0               	btfss	240,0,c	;volatile
 10653   00019C  EFD2  F000         	goto	i2u552_41
 10654   0001A0  EFD4  F000         	goto	i2u552_40
 10655   0001A4                     i2u552_41:
 10656   0001A4  EF05  F001         	goto	i2l4859
 10657   0001A8                     i2u552_40:
 10658   0001A8  0E21               	movlw	33
 10659   0001AA  5C30               	subwf	_button_counter^0,w,c
 10660   0001AC  0E03               	movlw	3
 10661   0001AE  5831               	subwfb	(_button_counter+1)^0,w,c
 10662   0001B0  A0D8               	btfss	status,0,c
 10663   0001B2  EFDD  F000         	goto	i2u553_41
 10664   0001B6  EFDF  F000         	goto	i2u553_40
 10665   0001BA                     i2u553_41:
 10666   0001BA  EF05  F001         	goto	i2l4859
 10667   0001BE                     i2u553_40:
 10668   0001BE                     
 10669                           ;main.c: 261:             INTCON3bits.INT1IF = 0;
 10670   0001BE  90F0               	bcf	240,0,c	;volatile
 10671                           
 10672                           ;main.c: 263:             displayAddress = 0;
 10673   0001C0  6A39               	clrf	_displayAddress^0,c
 10674   0001C2                     
 10675                           ;main.c: 264:             displaySample = 1;
 10676   0001C2  0E01               	movlw	1
 10677   0001C4  6E38               	movwf	_displaySample^0,c
 10678                           
 10679                           ;main.c: 265:             button_counter = 0;
 10680   0001C6  0E00               	movlw	0
 10681   0001C8  6E31               	movwf	(_button_counter+1)^0,c
 10682   0001CA  0E00               	movlw	0
 10683   0001CC  6E30               	movwf	_button_counter^0,c
 10684                           
 10685                           ;main.c: 268:             switch(fsm_state){
 10686   0001CE  EFF5  F000         	goto	i2l4857
 10687   0001D2                     i2l4849:
 10688                           
 10689                           ; BSR set to: 0
 10690                           ;main.c: 270:                     fsm_state = 5;
 10691   0001D2  0E05               	movlw	5
 10692   0001D4  6FF9               	movwf	_fsm_state& (0+255),b
 10693                           
 10694                           ;main.c: 271:                     break;
 10695   0001D6  EF05  F001         	goto	i2l4859
 10696   0001DA                     i2l4851:
 10697                           
 10698                           ; BSR set to: 0
 10699                           ;main.c: 274:                     fsm_state = 6;
 10700   0001DA  0E06               	movlw	6
 10701   0001DC  6FF9               	movwf	_fsm_state& (0+255),b
 10702                           
 10703                           ;main.c: 275:                     break;
 10704   0001DE  EF05  F001         	goto	i2l4859
 10705   0001E2                     i2l4853:
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;main.c: 278:                     fsm_state = 7;
 10709   0001E2  0E07               	movlw	7
 10710   0001E4  6FF9               	movwf	_fsm_state& (0+255),b
 10711                           
 10712                           ;main.c: 279:                     break;
 10713   0001E6  EF05  F001         	goto	i2l4859
 10714   0001EA                     i2l4857:
 10715   0001EA  0100               	movlb	0	; () banked
 10716   0001EC  51F9               	movf	_fsm_state& (0+255),w,b
 10717                           
 10718                           ; Switch size 1, requested type "simple"
 10719                           ; Number of cases is 3, Range of values is 4 to 6
 10720                           ; switch strategies available:
 10721                           ; Name         Instructions Cycles
 10722                           ; simple_byte           10     6 (average)
 10723                           ;	Chosen strategy is simple_byte
 10724   0001EE  0A04               	xorlw	4	; case 4
 10725   0001F0  B4D8               	btfsc	status,2,c
 10726   0001F2  EFE9  F000         	goto	i2l4849
 10727   0001F6  0A01               	xorlw	1	; case 5
 10728   0001F8  B4D8               	btfsc	status,2,c
 10729   0001FA  EFED  F000         	goto	i2l4851
 10730   0001FE  0A03               	xorlw	3	; case 6
 10731   000200  B4D8               	btfsc	status,2,c
 10732   000202  EFF1  F000         	goto	i2l4853
 10733   000206  EF05  F001         	goto	i2l4859
 10734   00020A                     i2l4859:
 10735                           
 10736                           ;main.c: 286:         if( turnOnDisplay == 1 && button_counter < 10 ){
 10737   00020A  0100               	movlb	0	; () banked
 10738   00020C  05FA               	decf	_turnOnDisplay& (0+255),w,b
 10739   00020E  A4D8               	btfss	status,2,c
 10740   000210  EF0C  F001         	goto	i2u554_41
 10741   000214  EF0E  F001         	goto	i2u554_40
 10742   000218                     i2u554_41:
 10743   000218  EF1F  F001         	goto	i2l4867
 10744   00021C                     i2u554_40:
 10745   00021C                     
 10746                           ; BSR set to: 0
 10747   00021C  5031               	movf	(_button_counter+1)^0,w,c
 10748   00021E  E107               	bnz	i2u555_41
 10749   000220  0E0A               	movlw	10
 10750   000222  5C30               	subwf	_button_counter^0,w,c
 10751   000224  B0D8               	btfsc	status,0,c
 10752   000226  EF17  F001         	goto	i2u555_41
 10753   00022A  EF19  F001         	goto	i2u555_40
 10754   00022E                     i2u555_41:
 10755   00022E  EF1F  F001         	goto	i2l4867
 10756   000232                     i2u555_40:
 10757   000232                     
 10758                           ; BSR set to: 0
 10759                           ;main.c: 287:             setDisplayDigits();
 10760   000232  EC0F  F012         	call	i2_setDisplayDigits	;wreg free
 10761   000236                     
 10762                           ;main.c: 288:             show7Segment();
 10763   000236  ECBC  F01C         	call	i2_show7Segment	;wreg free
 10764                           
 10765                           ;main.c: 289:         }else{
 10766   00023A  EF21  F001         	goto	i2l202
 10767   00023E                     i2l4867:
 10768                           
 10769                           ; BSR set to: 0
 10770                           ;main.c: 290:             turnOnDisplay = 1;
 10771   00023E  0E01               	movlw	1
 10772   000240  6FFA               	movwf	_turnOnDisplay& (0+255),b
 10773   000242                     i2l202:
 10774   000242  C02B  FFF5         	movff	??_ISR+7,tablat
 10775   000246  C02A  FFF8         	movff	??_ISR+6,tblptru
 10776   00024A  C029  FFF7         	movff	??_ISR+5,tblptrh
 10777   00024E  C028  FFF6         	movff	??_ISR+4,tblptrl
 10778   000252  C027  FFF4         	movff	??_ISR+3,prodh
 10779   000256  C026  FFF3         	movff	??_ISR+2,prodl
 10780   00025A  C025  FFE2         	movff	??_ISR+1,fsr1h
 10781   00025E  C024  FFE1         	movff	??_ISR,fsr1l
 10782   000262  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10783   000264  0011               	retfie		f
 10784   000266                     __end_of_ISR:
 10785                           	callstack 0
 10786                           
 10787 ;; *************** function i2_show7Segment *****************
 10788 ;; Defined at:
 10789 ;;		line 746 in file "main.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;		None
 10792 ;; Auto vars:     Size  Location     Type
 10793 ;;		None
 10794 ;; Return value:  Size  Location     Type
 10795 ;;                  1    wreg      void 
 10796 ;; Registers used:
 10797 ;;		wreg, status,2, status,0, cstack
 10798 ;; Tracked objects:
 10799 ;;		On entry : 0/0
 10800 ;;		On exit  : 0/0
 10801 ;;		Unchanged: 0/0
 10802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10803 ;;      Params:         0       0       0       0
 10804 ;;      Locals:         0       0       0       0
 10805 ;;      Temps:          0       0       0       0
 10806 ;;      Totals:         0       0       0       0
 10807 ;;Total ram usage:        0 bytes
 10808 ;; Hardware stack levels used: 1
 10809 ;; Hardware stack levels required when called: 1
 10810 ;; This function calls:
 10811 ;;		i2_displayDigits
 10812 ;;		i2_get7SegmentPattern
 10813 ;; This function is called by:
 10814 ;;		_ISR
 10815 ;; This function uses a non-reentrant model
 10816 ;;
 10817                           
 10818                           	psect	text48
 10819   003978                     __ptext48:
 10820                           	callstack 0
 10821   003978                     i2_show7Segment:
 10822                           	callstack 20
 10823   003978                     
 10824                           ;main.c: 748:     segPattern0 = get7SegmentPattern( displayDigit0 );
 10825   003978  503C               	movf	_displayDigit0^0,w,c
 10826   00397A  EC8E  F016         	call	i2_get7SegmentPattern
 10827   00397E  6E3F               	movwf	_segPattern0^0,c
 10828   003980                     
 10829                           ;main.c: 750:     if( displaySample == 1 && ( fsm_state == 1 || fsm_state == 2 ) ){
 10830   003980  0438               	decf	_displaySample^0,w,c
 10831   003982  A4D8               	btfss	status,2,c
 10832   003984  EFC6  F01C         	goto	i2u539_41
 10833   003988  EFC8  F01C         	goto	i2u539_40
 10834   00398C                     i2u539_41:
 10835   00398C  EFDD  F01C         	goto	i2l4785
 10836   003990                     i2u539_40:
 10837   003990  0100               	movlb	0	; () banked
 10838   003992  05F9               	decf	_fsm_state& (0+255),w,b
 10839   003994  B4D8               	btfsc	status,2,c
 10840   003996  EFCF  F01C         	goto	i2u540_41
 10841   00399A  EFD1  F01C         	goto	i2u540_40
 10842   00399E                     i2u540_41:
 10843   00399E  EFDA  F01C         	goto	i2l4783
 10844   0039A2                     i2u540_40:
 10845   0039A2                     
 10846                           ; BSR set to: 0
 10847   0039A2  0E02               	movlw	2
 10848   0039A4  19F9               	xorwf	_fsm_state& (0+255),w,b
 10849   0039A6  A4D8               	btfss	status,2,c
 10850   0039A8  EFD8  F01C         	goto	i2u541_41
 10851   0039AC  EFDA  F01C         	goto	i2u541_40
 10852   0039B0                     i2u541_41:
 10853   0039B0  EFDD  F01C         	goto	i2l4785
 10854   0039B4                     i2u541_40:
 10855   0039B4                     i2l4783:
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;main.c: 751:         segPattern0 = segPattern0 | 0b10000000;
 10859   0039B4  503F               	movf	_segPattern0^0,w,c
 10860   0039B6  0980               	iorlw	128
 10861   0039B8  6E3F               	movwf	_segPattern0^0,c
 10862   0039BA                     i2l4785:
 10863                           
 10864                           ;main.c: 754:     segPattern1 = get7SegmentPattern( displayDigit1 );
 10865   0039BA  503B               	movf	_displayDigit1^0,w,c
 10866   0039BC  EC8E  F016         	call	i2_get7SegmentPattern
 10867   0039C0  6E3E               	movwf	_segPattern1^0,c
 10868   0039C2                     
 10869                           ;main.c: 755:     segPattern2 = get7SegmentPattern( displayDigit2 );
 10870   0039C2  503A               	movf	_displayDigit2^0,w,c
 10871   0039C4  EC8E  F016         	call	i2_get7SegmentPattern
 10872   0039C8  6E3D               	movwf	_segPattern2^0,c
 10873   0039CA                     
 10874                           ;main.c: 757:     displayDigits( segPattern0, segPattern1, segPattern2 );
 10875   0039CA  C03E  F001         	movff	_segPattern1,i2displayDigits@digit1
 10876   0039CE  C03D  F002         	movff	_segPattern2,i2displayDigits@digit2
 10877   0039D2  503F               	movf	_segPattern0^0,w,c
 10878   0039D4  EC8A  F019         	call	i2_displayDigits
 10879   0039D8  0012               	return		;funcret
 10880   0039DA                     __end_ofi2_show7Segment:
 10881                           	callstack 0
 10882                           
 10883 ;; *************** function i2_get7SegmentPattern *****************
 10884 ;; Defined at:
 10885 ;;		line 529 in file "main.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;  digit           1    wreg     unsigned char 
 10888 ;; Auto vars:     Size  Location     Type
 10889 ;;  digit           1    0[COMRAM] unsigned char 
 10890 ;;  pattern         1    1[COMRAM] unsigned char 
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      unsigned char 
 10893 ;; Registers used:
 10894 ;;		wreg, status,2, status,0
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10900 ;;      Params:         0       0       0       0
 10901 ;;      Locals:         2       0       0       0
 10902 ;;      Temps:          0       0       0       0
 10903 ;;      Totals:         2       0       0       0
 10904 ;;Total ram usage:        2 bytes
 10905 ;; Hardware stack levels used: 1
 10906 ;; This function calls:
 10907 ;;		Nothing
 10908 ;; This function is called by:
 10909 ;;		i2_show7Segment
 10910 ;; This function uses a non-reentrant model
 10911 ;;
 10912                           
 10913                           	psect	text49
 10914   002D1C                     __ptext49:
 10915                           	callstack 0
 10916   002D1C                     i2_get7SegmentPattern:
 10917                           	callstack 20
 10918                           
 10919                           ;incstack = 0
 10920                           ;i2get7SegmentPattern@digit stored from wreg
 10921   002D1C  6E01               	movwf	i2get7SegmentPattern@digit^0,c
 10922   002D1E                     
 10923                           ;main.c: 532:     uint8_t pattern;;main.c: 534:     switch (digit) {
 10924   002D1E  EFD0  F016         	goto	i2l4247
 10925   002D22                     i2l4213:
 10926   002D22  0E3F               	movlw	63
 10927   002D24  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10928   002D26  EF13  F017         	goto	i2l242
 10929   002D2A                     i2l4215:
 10930   002D2A  0E06               	movlw	6
 10931   002D2C  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10932   002D2E  EF13  F017         	goto	i2l242
 10933   002D32                     i2l4217:
 10934   002D32  0E5B               	movlw	91
 10935   002D34  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10936   002D36  EF13  F017         	goto	i2l242
 10937   002D3A                     i2l4219:
 10938   002D3A  0E4F               	movlw	79
 10939   002D3C  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10940   002D3E  EF13  F017         	goto	i2l242
 10941   002D42                     i2l4221:
 10942   002D42  0E66               	movlw	102
 10943   002D44  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10944   002D46  EF13  F017         	goto	i2l242
 10945   002D4A                     i2l4223:
 10946   002D4A  0E6D               	movlw	109
 10947   002D4C  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10948   002D4E  EF13  F017         	goto	i2l242
 10949   002D52                     i2l4225:
 10950   002D52  0E7D               	movlw	125
 10951   002D54  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10952   002D56  EF13  F017         	goto	i2l242
 10953   002D5A                     i2l4227:
 10954   002D5A  0E07               	movlw	7
 10955   002D5C  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10956   002D5E  EF13  F017         	goto	i2l242
 10957   002D62                     i2l4229:
 10958   002D62  0E7F               	movlw	127
 10959   002D64  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10960   002D66  EF13  F017         	goto	i2l242
 10961   002D6A                     i2l4231:
 10962   002D6A  0E6F               	movlw	111
 10963   002D6C  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10964   002D6E  EF13  F017         	goto	i2l242
 10965   002D72                     i2l4233:
 10966   002D72  0E79               	movlw	121
 10967   002D74  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10968   002D76  EF13  F017         	goto	i2l242
 10969   002D7A                     i2l4235:
 10970   002D7A  0E77               	movlw	119
 10971   002D7C  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10972   002D7E  EF13  F017         	goto	i2l242
 10973   002D82                     i2l4237:
 10974   002D82  0E39               	movlw	57
 10975   002D84  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10976   002D86  EF13  F017         	goto	i2l242
 10977   002D8A                     i2l4241:
 10978   002D8A  0E38               	movlw	56
 10979   002D8C  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10980   002D8E  EF13  F017         	goto	i2l242
 10981   002D92                     i2l4243:
 10982   002D92  0E31               	movlw	49
 10983   002D94  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10984   002D96  EF13  F017         	goto	i2l242
 10985   002D9A                     i2l258:
 10986   002D9A  6A02               	clrf	i2get7SegmentPattern@pattern^0,c
 10987   002D9C  EF13  F017         	goto	i2l242
 10988   002DA0                     i2l4247:
 10989   002DA0  5001               	movf	i2get7SegmentPattern@digit^0,w,c
 10990                           
 10991                           ; Switch size 1, requested type "simple"
 10992                           ; Number of cases is 16, Range of values is 0 to 114
 10993                           ; switch strategies available:
 10994                           ; Name         Instructions Cycles
 10995                           ; simple_byte           49    25 (average)
 10996                           ;	Chosen strategy is simple_byte
 10997   002DA2  0A00               	xorlw	0	; case 0
 10998   002DA4  B4D8               	btfsc	status,2,c
 10999   002DA6  EF91  F016         	goto	i2l4213
 11000   002DAA  0A01               	xorlw	1	; case 1
 11001   002DAC  B4D8               	btfsc	status,2,c
 11002   002DAE  EF95  F016         	goto	i2l4215
 11003   002DB2  0A03               	xorlw	3	; case 2
 11004   002DB4  B4D8               	btfsc	status,2,c
 11005   002DB6  EF99  F016         	goto	i2l4217
 11006   002DBA  0A01               	xorlw	1	; case 3
 11007   002DBC  B4D8               	btfsc	status,2,c
 11008   002DBE  EF9D  F016         	goto	i2l4219
 11009   002DC2  0A07               	xorlw	7	; case 4
 11010   002DC4  B4D8               	btfsc	status,2,c
 11011   002DC6  EFA1  F016         	goto	i2l4221
 11012   002DCA  0A01               	xorlw	1	; case 5
 11013   002DCC  B4D8               	btfsc	status,2,c
 11014   002DCE  EFA5  F016         	goto	i2l4223
 11015   002DD2  0A03               	xorlw	3	; case 6
 11016   002DD4  B4D8               	btfsc	status,2,c
 11017   002DD6  EFA9  F016         	goto	i2l4225
 11018   002DDA  0A01               	xorlw	1	; case 7
 11019   002DDC  B4D8               	btfsc	status,2,c
 11020   002DDE  EFAD  F016         	goto	i2l4227
 11021   002DE2  0A0F               	xorlw	15	; case 8
 11022   002DE4  B4D8               	btfsc	status,2,c
 11023   002DE6  EFB1  F016         	goto	i2l4229
 11024   002DEA  0A01               	xorlw	1	; case 9
 11025   002DEC  B4D8               	btfsc	status,2,c
 11026   002DEE  EFB5  F016         	goto	i2l4231
 11027   002DF2  0A48               	xorlw	72	; case 65
 11028   002DF4  B4D8               	btfsc	status,2,c
 11029   002DF6  EFBD  F016         	goto	i2l4235
 11030   002DFA  0A02               	xorlw	2	; case 67
 11031   002DFC  B4D8               	btfsc	status,2,c
 11032   002DFE  EFC1  F016         	goto	i2l4237
 11033   002E02  0A0F               	xorlw	15	; case 76
 11034   002E04  B4D8               	btfsc	status,2,c
 11035   002E06  EFC5  F016         	goto	i2l4241
 11036   002E0A  0A1F               	xorlw	31	; case 83
 11037   002E0C  B4D8               	btfsc	status,2,c
 11038   002E0E  EFA5  F016         	goto	i2l4223
 11039   002E12  0A0A               	xorlw	10	; case 89
 11040   002E14  B4D8               	btfsc	status,2,c
 11041   002E16  EFB9  F016         	goto	i2l4233
 11042   002E1A  0A2B               	xorlw	43	; case 114
 11043   002E1C  B4D8               	btfsc	status,2,c
 11044   002E1E  EFC9  F016         	goto	i2l4243
 11045   002E22  EFCD  F016         	goto	i2l258
 11046   002E26                     i2l242:
 11047                           
 11048                           ;main.c: 554:     return pattern;
 11049   002E26  5002               	movf	i2get7SegmentPattern@pattern^0,w,c
 11050   002E28  0012               	return		;funcret
 11051   002E2A                     __end_ofi2_get7SegmentPattern:
 11052                           	callstack 0
 11053                           
 11054 ;; *************** function i2_displayDigits *****************
 11055 ;; Defined at:
 11056 ;;		line 557 in file "main.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;  digit0          1    wreg     unsigned char 
 11059 ;;  digit1          1    0[COMRAM] unsigned char 
 11060 ;;  digit2          1    1[COMRAM] unsigned char 
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;  digit0          1    4[COMRAM] unsigned char 
 11063 ;;  i               2    5[COMRAM] int 
 11064 ;; Return value:  Size  Location     Type
 11065 ;;                  1    wreg      void 
 11066 ;; Registers used:
 11067 ;;		wreg, status,2, status,0
 11068 ;; Tracked objects:
 11069 ;;		On entry : 0/0
 11070 ;;		On exit  : 0/0
 11071 ;;		Unchanged: 0/0
 11072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11073 ;;      Params:         2       0       0       0
 11074 ;;      Locals:         3       0       0       0
 11075 ;;      Temps:          2       0       0       0
 11076 ;;      Totals:         7       0       0       0
 11077 ;;Total ram usage:        7 bytes
 11078 ;; Hardware stack levels used: 1
 11079 ;; This function calls:
 11080 ;;		Nothing
 11081 ;; This function is called by:
 11082 ;;		i2_show7Segment
 11083 ;; This function uses a non-reentrant model
 11084 ;;
 11085                           
 11086                           	psect	text50
 11087   003314                     __ptext50:
 11088                           	callstack 0
 11089   003314                     i2_displayDigits:
 11090                           	callstack 20
 11091                           
 11092                           ;incstack = 0
 11093                           ;i2displayDigits@digit0 stored from wreg
 11094   003314  6E05               	movwf	i2displayDigits@digit0^0,c
 11095   003316                     
 11096                           ;main.c: 558:     int i;;main.c: 559:     for ( i = 0 ; i < 8 ; i++ ){
 11097   003316  0E00               	movlw	0
 11098   003318  6E07               	movwf	(i2displayDigits@i+1)^0,c
 11099   00331A  0E00               	movlw	0
 11100   00331C  6E06               	movwf	i2displayDigits@i^0,c
 11101   00331E                     i2l4255:
 11102                           
 11103                           ;main.c: 561:         PORTCbits.RC5 = (digit0 >> i) & (0x01);
 11104   00331E  C006  F003         	movff	i2displayDigits@i,??i2_displayDigits
 11105   003322  C005  F004         	movff	i2displayDigits@digit0,??i2_displayDigits+1
 11106   003326  2A03               	incf	??i2_displayDigits^0,f,c
 11107   003328  EF98  F019         	goto	i2u465_44
 11108   00332C                     i2u465_45:
 11109   00332C  90D8               	bcf	status,0,c
 11110   00332E  3204               	rrcf	(??i2_displayDigits+1)^0,f,c
 11111   003330                     i2u465_44:
 11112   003330  2E03               	decfsz	??i2_displayDigits^0,f,c
 11113   003332  EF96  F019         	goto	i2u465_45
 11114   003336  0E01               	movlw	1
 11115   003338  1604               	andwf	(??i2_displayDigits+1)^0,f,c
 11116   00333A  3A04               	swapf	(??i2_displayDigits+1)^0,f,c
 11117   00333C  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 11118   00333E  5082               	movf	130,w,c	;volatile
 11119   003340  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 11120   003342  0BDF               	andlw	-33
 11121   003344  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 11122   003346  6E82               	movwf	130,c	;volatile
 11123                           
 11124                           ;main.c: 562:         PORTCbits.RC4 = (digit1 >> i) & (0x01);
 11125   003348  C006  F003         	movff	i2displayDigits@i,??i2_displayDigits
 11126   00334C  C001  F004         	movff	i2displayDigits@digit1,??i2_displayDigits+1
 11127   003350  2A03               	incf	??i2_displayDigits^0,f,c
 11128   003352  EFAD  F019         	goto	i2u466_44
 11129   003356                     i2u466_45:
 11130   003356  90D8               	bcf	status,0,c
 11131   003358  3204               	rrcf	(??i2_displayDigits+1)^0,f,c
 11132   00335A                     i2u466_44:
 11133   00335A  2E03               	decfsz	??i2_displayDigits^0,f,c
 11134   00335C  EFAB  F019         	goto	i2u466_45
 11135   003360  0E01               	movlw	1
 11136   003362  1604               	andwf	(??i2_displayDigits+1)^0,f,c
 11137   003364  3A04               	swapf	(??i2_displayDigits+1)^0,f,c
 11138   003366  5082               	movf	130,w,c	;volatile
 11139   003368  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 11140   00336A  0BEF               	andlw	-17
 11141   00336C  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 11142   00336E  6E82               	movwf	130,c	;volatile
 11143                           
 11144                           ;main.c: 563:         PORTCbits.RC3 = (digit2 >> i) & (0x01);
 11145   003370  C006  F003         	movff	i2displayDigits@i,??i2_displayDigits
 11146   003374  C002  F004         	movff	i2displayDigits@digit2,??i2_displayDigits+1
 11147   003378  2A03               	incf	??i2_displayDigits^0,f,c
 11148   00337A  EFC1  F019         	goto	i2u467_44
 11149   00337E                     i2u467_45:
 11150   00337E  90D8               	bcf	status,0,c
 11151   003380  3204               	rrcf	(??i2_displayDigits+1)^0,f,c
 11152   003382                     i2u467_44:
 11153   003382  2E03               	decfsz	??i2_displayDigits^0,f,c
 11154   003384  EFBF  F019         	goto	i2u467_45
 11155   003388  0E01               	movlw	1
 11156   00338A  1604               	andwf	(??i2_displayDigits+1)^0,f,c
 11157   00338C  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 11158   00338E  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 11159   003390  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 11160   003392  5082               	movf	130,w,c	;volatile
 11161   003394  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 11162   003396  0BF7               	andlw	-9
 11163   003398  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 11164   00339A  6E82               	movwf	130,c	;volatile
 11165   00339C                     
 11166                           ;main.c: 566:         PORTCbits.RC6 = 1;
 11167   00339C  8C82               	bsf	130,6,c	;volatile
 11168   00339E                     
 11169                           ;main.c: 567:         _delay((unsigned long)((500)*(2000000/4000000.0)));
 11170   00339E  0E53               	movlw	83
 11171   0033A0                     i2u794_47:
 11172   0033A0  2EE8               	decfsz	wreg,f,c
 11173   0033A2  D7FE               	bra	i2u794_47
 11174   0033A4  0000               	nop	
 11175   0033A6                     
 11176                           ;main.c: 568:         PORTCbits.RC6 = 0;
 11177   0033A6  9C82               	bcf	130,6,c	;volatile
 11178   0033A8                     
 11179                           ;main.c: 569:         _delay((unsigned long)((500)*(2000000/4000000.0)));
 11180   0033A8  0E53               	movlw	83
 11181   0033AA                     i2u795_47:
 11182   0033AA  2EE8               	decfsz	wreg,f,c
 11183   0033AC  D7FE               	bra	i2u795_47
 11184   0033AE  0000               	nop	
 11185   0033B0                     
 11186                           ;main.c: 570:     }
 11187   0033B0  4A06               	infsnz	i2displayDigits@i^0,f,c
 11188   0033B2  2A07               	incf	(i2displayDigits@i+1)^0,f,c
 11189   0033B4  BE07               	btfsc	(i2displayDigits@i+1)^0,7,c
 11190   0033B6  EFE6  F019         	goto	i2u468_41
 11191   0033BA  5007               	movf	(i2displayDigits@i+1)^0,w,c
 11192   0033BC  E109               	bnz	i2u468_40
 11193   0033BE  0E08               	movlw	8
 11194   0033C0  5C06               	subwf	i2displayDigits@i^0,w,c
 11195   0033C2  A0D8               	btfss	status,0,c
 11196   0033C4  EFE6  F019         	goto	i2u468_41
 11197   0033C8  EFE8  F019         	goto	i2u468_40
 11198   0033CC                     i2u468_41:
 11199   0033CC  EF8F  F019         	goto	i2l4255
 11200   0033D0                     i2u468_40:
 11201   0033D0                     
 11202                           ;main.c: 573:     PORTCbits.RC7 = 1;
 11203   0033D0  8E82               	bsf	130,7,c	;volatile
 11204   0033D2                     
 11205                           ;main.c: 574:     _delay((unsigned long)((500)*(2000000/4000000.0)));
 11206   0033D2  0E53               	movlw	83
 11207   0033D4                     i2u796_47:
 11208   0033D4  2EE8               	decfsz	wreg,f,c
 11209   0033D6  D7FE               	bra	i2u796_47
 11210   0033D8  0000               	nop	
 11211   0033DA                     
 11212                           ;main.c: 575:     PORTCbits.RC7 = 0;
 11213   0033DA  9E82               	bcf	130,7,c	;volatile
 11214   0033DC  0012               	return		;funcret
 11215   0033DE                     __end_ofi2_displayDigits:
 11216                           	callstack 0
 11217                           
 11218 ;; *************** function i2_setDisplayDigits *****************
 11219 ;; Defined at:
 11220 ;;		line 683 in file "main.c"
 11221 ;; Parameters:    Size  Location     Type
 11222 ;;		None
 11223 ;; Auto vars:     Size  Location     Type
 11224 ;;		None
 11225 ;; Return value:  Size  Location     Type
 11226 ;;                  1    wreg      void 
 11227 ;; Registers used:
 11228 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11229 ;; Tracked objects:
 11230 ;;		On entry : 0/0
 11231 ;;		On exit  : 0/0
 11232 ;;		Unchanged: 0/0
 11233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11234 ;;      Params:         0       0       0       0
 11235 ;;      Locals:         0       0       0       0
 11236 ;;      Temps:          0       0       0       0
 11237 ;;      Totals:         0       0       0       0
 11238 ;;Total ram usage:        0 bytes
 11239 ;; Hardware stack levels used: 1
 11240 ;; Hardware stack levels required when called: 1
 11241 ;; This function calls:
 11242 ;;		i2___flmul
 11243 ;;		i2___fltol
 11244 ;;		i2___lwdiv
 11245 ;;		i2___lwmod
 11246 ;; This function is called by:
 11247 ;;		_ISR
 11248 ;; This function uses a non-reentrant model
 11249 ;;
 11250                           
 11251                           	psect	text51
 11252   00241E                     __ptext51:
 11253                           	callstack 0
 11254   00241E                     i2_setDisplayDigits:
 11255                           	callstack 20
 11256   00241E                     
 11257                           ;main.c: 684:     if (fsm_state == 0) {
 11258   00241E  0100               	movlb	0	; () banked
 11259   002420  51F9               	movf	_fsm_state& (0+255),w,b
 11260   002422  A4D8               	btfss	status,2,c
 11261   002424  EF16  F012         	goto	i2u531_41
 11262   002428  EF18  F012         	goto	i2u531_40
 11263   00242C                     i2u531_41:
 11264   00242C  EF20  F012         	goto	i2l4725
 11265   002430                     i2u531_40:
 11266   002430                     
 11267                           ; BSR set to: 0
 11268                           ;main.c: 686:         displayDigit0 = 11;
 11269   002430  0E0B               	movlw	11
 11270   002432  6E3C               	movwf	_displayDigit0^0,c
 11271                           
 11272                           ;main.c: 687:         displayDigit1 = 'A';
 11273   002434  0E41               	movlw	65
 11274   002436  6E3B               	movwf	_displayDigit1^0,c
 11275                           
 11276                           ;main.c: 688:         displayDigit2 = 11;
 11277   002438  0E0B               	movlw	11
 11278   00243A  6E3A               	movwf	_displayDigit2^0,c
 11279                           
 11280                           ;main.c: 690:     } else if (fsm_state == 1) {
 11281   00243C  EF2C  F013         	goto	i2l340
 11282   002440                     i2l4725:
 11283                           
 11284                           ; BSR set to: 0
 11285   002440  05F9               	decf	_fsm_state& (0+255),w,b
 11286   002442  A4D8               	btfss	status,2,c
 11287   002444  EF26  F012         	goto	i2u532_41
 11288   002448  EF28  F012         	goto	i2u532_40
 11289   00244C                     i2u532_41:
 11290   00244C  EF80  F012         	goto	i2l4739
 11291   002450                     i2u532_40:
 11292   002450                     
 11293                           ; BSR set to: 0
 11294                           ;main.c: 692:         c_target = (unsigned int) (adc_voltage * 100);
 11295   002450  0E00               	movlw	0
 11296   002452  6E05               	movwf	i2___flmul@a^0,c
 11297   002454  0E00               	movlw	0
 11298   002456  6E06               	movwf	(i2___flmul@a+1)^0,c
 11299   002458  0EC8               	movlw	200
 11300   00245A  6E07               	movwf	(i2___flmul@a+2)^0,c
 11301   00245C  0E42               	movlw	66
 11302   00245E  6E08               	movwf	(i2___flmul@a+3)^0,c
 11303   002460  C0E8  F001         	movff	_adc_voltage,i2___flmul@b
 11304   002464  C0E9  F002         	movff	_adc_voltage+1,i2___flmul@b+1
 11305   002468  C0EA  F003         	movff	_adc_voltage+2,i2___flmul@b+2
 11306   00246C  C0EB  F004         	movff	_adc_voltage+3,i2___flmul@b+3
 11307   002470  ECFA  F00A         	call	i2___flmul	;wreg free
 11308   002474  C001  F01A         	movff	?i2___flmul,i2___fltol@f1
 11309   002478  C002  F01B         	movff	?i2___flmul+1,i2___fltol@f1+1
 11310   00247C  C003  F01C         	movff	?i2___flmul+2,i2___fltol@f1+2
 11311   002480  C004  F01D         	movff	?i2___flmul+3,i2___fltol@f1+3
 11312   002484  EC1C  F018         	call	i2___fltol	;wreg free
 11313   002488  C01A  F036         	movff	?i2___fltol,_c_target
 11314   00248C  C01B  F037         	movff	?i2___fltol+1,_c_target+1
 11315   002490                     
 11316                           ;main.c: 693:         c_remainder = c_target % 100;
 11317   002490  C036  F001         	movff	_c_target,i2___lwmod@dividend
 11318   002494  C037  F002         	movff	_c_target+1,i2___lwmod@dividend+1
 11319   002498  0E00               	movlw	0
 11320   00249A  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 11321   00249C  0E64               	movlw	100
 11322   00249E  6E03               	movwf	i2___lwmod@divisor^0,c
 11323   0024A0  EC59  F01C         	call	i2___lwmod	;wreg free
 11324   0024A4  C001  F034         	movff	?i2___lwmod,_c_remainder
 11325   0024A8  C002  F035         	movff	?i2___lwmod+1,_c_remainder+1
 11326   0024AC                     
 11327                           ;main.c: 694:         c_number = c_target / 100;
 11328   0024AC  C036  F001         	movff	_c_target,i2___lwdiv@dividend
 11329   0024B0  C037  F002         	movff	_c_target+1,i2___lwdiv@dividend+1
 11330   0024B4  0E00               	movlw	0
 11331   0024B6  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 11332   0024B8  0E64               	movlw	100
 11333   0024BA  6E03               	movwf	i2___lwdiv@divisor^0,c
 11334   0024BC  ECB3  F01B         	call	i2___lwdiv	;wreg free
 11335   0024C0  C001  F032         	movff	?i2___lwdiv,_c_number
 11336   0024C4  C002  F033         	movff	?i2___lwdiv+1,_c_number+1
 11337   0024C8                     
 11338                           ;main.c: 696:         displayDigit0 = (uint8_t) c_number;
 11339   0024C8  C032  F03C         	movff	_c_number,_displayDigit0
 11340   0024CC                     
 11341                           ;main.c: 697:         displayDigit1 = (uint8_t) (c_remainder / 10);
 11342   0024CC  C034  F001         	movff	_c_remainder,i2___lwdiv@dividend
 11343   0024D0  C035  F002         	movff	_c_remainder+1,i2___lwdiv@dividend+1
 11344   0024D4  0E00               	movlw	0
 11345   0024D6  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 11346   0024D8  0E0A               	movlw	10
 11347   0024DA  6E03               	movwf	i2___lwdiv@divisor^0,c
 11348   0024DC  ECB3  F01B         	call	i2___lwdiv	;wreg free
 11349   0024E0  5001               	movf	?i2___lwdiv^0,w,c
 11350   0024E2  6E3B               	movwf	_displayDigit1^0,c
 11351   0024E4                     
 11352                           ;main.c: 698:         displayDigit2 = c_remainder % 10;
 11353   0024E4  C034  F001         	movff	_c_remainder,i2___lwmod@dividend
 11354   0024E8  C035  F002         	movff	_c_remainder+1,i2___lwmod@dividend+1
 11355   0024EC  0E00               	movlw	0
 11356   0024EE  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 11357   0024F0  0E0A               	movlw	10
 11358   0024F2  6E03               	movwf	i2___lwmod@divisor^0,c
 11359   0024F4  EC59  F01C         	call	i2___lwmod	;wreg free
 11360   0024F8  5001               	movf	?i2___lwmod^0,w,c
 11361   0024FA  6E3A               	movwf	_displayDigit2^0,c
 11362                           
 11363                           ;main.c: 700:     } else if (fsm_state == 2) {
 11364   0024FC  EF2C  F013         	goto	i2l340
 11365   002500                     i2l4739:
 11366                           
 11367                           ; BSR set to: 0
 11368   002500  0E02               	movlw	2
 11369   002502  19F9               	xorwf	_fsm_state& (0+255),w,b
 11370   002504  A4D8               	btfss	status,2,c
 11371   002506  EF87  F012         	goto	i2u533_41
 11372   00250A  EF89  F012         	goto	i2u533_40
 11373   00250E                     i2u533_41:
 11374   00250E  EFD7  F012         	goto	i2l4753
 11375   002512                     i2u533_40:
 11376   002512                     
 11377                           ; BSR set to: 0
 11378                           ;main.c: 702:         c_target = (unsigned int) (adc_voltage * 100);
 11379   002512  0E00               	movlw	0
 11380   002514  6E05               	movwf	i2___flmul@a^0,c
 11381   002516  0E00               	movlw	0
 11382   002518  6E06               	movwf	(i2___flmul@a+1)^0,c
 11383   00251A  0EC8               	movlw	200
 11384   00251C  6E07               	movwf	(i2___flmul@a+2)^0,c
 11385   00251E  0E42               	movlw	66
 11386   002520  6E08               	movwf	(i2___flmul@a+3)^0,c
 11387   002522  C0E8  F001         	movff	_adc_voltage,i2___flmul@b
 11388   002526  C0E9  F002         	movff	_adc_voltage+1,i2___flmul@b+1
 11389   00252A  C0EA  F003         	movff	_adc_voltage+2,i2___flmul@b+2
 11390   00252E  C0EB  F004         	movff	_adc_voltage+3,i2___flmul@b+3
 11391   002532  ECFA  F00A         	call	i2___flmul	;wreg free
 11392   002536  C001  F01A         	movff	?i2___flmul,i2___fltol@f1
 11393   00253A  C002  F01B         	movff	?i2___flmul+1,i2___fltol@f1+1
 11394   00253E  C003  F01C         	movff	?i2___flmul+2,i2___fltol@f1+2
 11395   002542  C004  F01D         	movff	?i2___flmul+3,i2___fltol@f1+3
 11396   002546  EC1C  F018         	call	i2___fltol	;wreg free
 11397   00254A  C01A  F036         	movff	?i2___fltol,_c_target
 11398   00254E  C01B  F037         	movff	?i2___fltol+1,_c_target+1
 11399   002552                     
 11400                           ;main.c: 703:         c_remainder = c_target % 100;
 11401   002552  C036  F001         	movff	_c_target,i2___lwmod@dividend
 11402   002556  C037  F002         	movff	_c_target+1,i2___lwmod@dividend+1
 11403   00255A  0E00               	movlw	0
 11404   00255C  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 11405   00255E  0E64               	movlw	100
 11406   002560  6E03               	movwf	i2___lwmod@divisor^0,c
 11407   002562  EC59  F01C         	call	i2___lwmod	;wreg free
 11408   002566  C001  F034         	movff	?i2___lwmod,_c_remainder
 11409   00256A  C002  F035         	movff	?i2___lwmod+1,_c_remainder+1
 11410   00256E                     
 11411                           ;main.c: 704:         c_number = c_target / 100;
 11412   00256E  C036  F001         	movff	_c_target,i2___lwdiv@dividend
 11413   002572  C037  F002         	movff	_c_target+1,i2___lwdiv@dividend+1
 11414   002576  0E00               	movlw	0
 11415   002578  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 11416   00257A  0E64               	movlw	100
 11417   00257C  6E03               	movwf	i2___lwdiv@divisor^0,c
 11418   00257E  ECB3  F01B         	call	i2___lwdiv	;wreg free
 11419   002582  C001  F032         	movff	?i2___lwdiv,_c_number
 11420   002586  C002  F033         	movff	?i2___lwdiv+1,_c_number+1
 11421   00258A                     
 11422                           ;main.c: 706:         displayDigit0 = (uint8_t) c_number;
 11423   00258A  C032  F03C         	movff	_c_number,_displayDigit0
 11424   00258E                     
 11425                           ;main.c: 707:         displayDigit1 = (uint8_t) (c_remainder / 10);
 11426   00258E  C034  F001         	movff	_c_remainder,i2___lwdiv@dividend
 11427   002592  C035  F002         	movff	_c_remainder+1,i2___lwdiv@dividend+1
 11428   002596  0E00               	movlw	0
 11429   002598  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 11430   00259A  0E0A               	movlw	10
 11431   00259C  6E03               	movwf	i2___lwdiv@divisor^0,c
 11432   00259E  ECB3  F01B         	call	i2___lwdiv	;wreg free
 11433   0025A2  5001               	movf	?i2___lwdiv^0,w,c
 11434   0025A4  6E3B               	movwf	_displayDigit1^0,c
 11435   0025A6                     
 11436                           ;main.c: 708:         displayDigit2 = 'C';
 11437   0025A6  0E43               	movlw	67
 11438   0025A8  6E3A               	movwf	_displayDigit2^0,c
 11439                           
 11440                           ;main.c: 710:     } else if (fsm_state == 3) {
 11441   0025AA  EF2C  F013         	goto	i2l340
 11442   0025AE                     i2l4753:
 11443                           
 11444                           ; BSR set to: 0
 11445   0025AE  0E03               	movlw	3
 11446   0025B0  19F9               	xorwf	_fsm_state& (0+255),w,b
 11447   0025B2  A4D8               	btfss	status,2,c
 11448   0025B4  EFDE  F012         	goto	i2u534_41
 11449   0025B8  EFE0  F012         	goto	i2u534_40
 11450   0025BC                     i2u534_41:
 11451   0025BC  EFE8  F012         	goto	i2l4757
 11452   0025C0                     i2u534_40:
 11453   0025C0                     
 11454                           ; BSR set to: 0
 11455                           ;main.c: 712:         displayDigit0 = 11;
 11456   0025C0  0E0B               	movlw	11
 11457   0025C2  6E3C               	movwf	_displayDigit0^0,c
 11458                           
 11459                           ;main.c: 713:         displayDigit1 = 'C';
 11460   0025C4  0E43               	movlw	67
 11461   0025C6  6E3B               	movwf	_displayDigit1^0,c
 11462                           
 11463                           ;main.c: 714:         displayDigit2 = 11;
 11464   0025C8  0E0B               	movlw	11
 11465   0025CA  6E3A               	movwf	_displayDigit2^0,c
 11466                           
 11467                           ;main.c: 716:     } else if (fsm_state == 4) {
 11468   0025CC  EF2C  F013         	goto	i2l340
 11469   0025D0                     i2l4757:
 11470                           
 11471                           ; BSR set to: 0
 11472   0025D0  0E04               	movlw	4
 11473   0025D2  19F9               	xorwf	_fsm_state& (0+255),w,b
 11474   0025D4  A4D8               	btfss	status,2,c
 11475   0025D6  EFEF  F012         	goto	i2u535_41
 11476   0025DA  EFF1  F012         	goto	i2u535_40
 11477   0025DE                     i2u535_41:
 11478   0025DE  EFF8  F012         	goto	i2l4763
 11479   0025E2                     i2u535_40:
 11480   0025E2                     
 11481                           ; BSR set to: 0
 11482                           ;main.c: 718:         displayDigit0 = 'S';
 11483   0025E2  0E53               	movlw	83
 11484   0025E4  6E3C               	movwf	_displayDigit0^0,c
 11485   0025E6                     
 11486                           ; BSR set to: 0
 11487                           ;main.c: 719:         displayDigit1 = 0;
 11488   0025E6  6A3B               	clrf	_displayDigit1^0,c
 11489                           
 11490                           ;main.c: 720:         displayDigit2 = 11;
 11491   0025E8  0E0B               	movlw	11
 11492   0025EA  6E3A               	movwf	_displayDigit2^0,c
 11493                           
 11494                           ;main.c: 722:     } else if (fsm_state == 5) {
 11495   0025EC  EF2C  F013         	goto	i2l340
 11496   0025F0                     i2l4763:
 11497                           
 11498                           ; BSR set to: 0
 11499   0025F0  0E05               	movlw	5
 11500   0025F2  19F9               	xorwf	_fsm_state& (0+255),w,b
 11501   0025F4  A4D8               	btfss	status,2,c
 11502   0025F6  EFFF  F012         	goto	i2u536_41
 11503   0025FA  EF01  F013         	goto	i2u536_40
 11504   0025FE                     i2u536_41:
 11505   0025FE  EF09  F013         	goto	i2l4767
 11506   002602                     i2u536_40:
 11507   002602                     
 11508                           ; BSR set to: 0
 11509                           ;main.c: 724:         displayDigit0 = 'S';
 11510   002602  0E53               	movlw	83
 11511   002604  6E3C               	movwf	_displayDigit0^0,c
 11512                           
 11513                           ;main.c: 725:         displayDigit1 = 1;
 11514   002606  0E01               	movlw	1
 11515   002608  6E3B               	movwf	_displayDigit1^0,c
 11516                           
 11517                           ;main.c: 726:         displayDigit2 = 11;
 11518   00260A  0E0B               	movlw	11
 11519   00260C  6E3A               	movwf	_displayDigit2^0,c
 11520                           
 11521                           ;main.c: 728:     } else if (fsm_state == 6) {
 11522   00260E  EF2C  F013         	goto	i2l340
 11523   002612                     i2l4767:
 11524                           
 11525                           ; BSR set to: 0
 11526   002612  0E06               	movlw	6
 11527   002614  19F9               	xorwf	_fsm_state& (0+255),w,b
 11528   002616  A4D8               	btfss	status,2,c
 11529   002618  EF10  F013         	goto	i2u537_41
 11530   00261C  EF12  F013         	goto	i2u537_40
 11531   002620                     i2u537_41:
 11532   002620  EF1A  F013         	goto	i2l4771
 11533   002624                     i2u537_40:
 11534   002624                     
 11535                           ; BSR set to: 0
 11536                           ;main.c: 730:         displayDigit0 = 'S';
 11537   002624  0E53               	movlw	83
 11538   002626  6E3C               	movwf	_displayDigit0^0,c
 11539                           
 11540                           ;main.c: 731:         displayDigit1 = 2;
 11541   002628  0E02               	movlw	2
 11542   00262A  6E3B               	movwf	_displayDigit1^0,c
 11543                           
 11544                           ;main.c: 732:         displayDigit2 = 11;
 11545   00262C  0E0B               	movlw	11
 11546   00262E  6E3A               	movwf	_displayDigit2^0,c
 11547                           
 11548                           ;main.c: 734:     } else if (fsm_state == 7) {
 11549   002630  EF2C  F013         	goto	i2l340
 11550   002634                     i2l4771:
 11551                           
 11552                           ; BSR set to: 0
 11553   002634  0E07               	movlw	7
 11554   002636  19F9               	xorwf	_fsm_state& (0+255),w,b
 11555   002638  A4D8               	btfss	status,2,c
 11556   00263A  EF21  F013         	goto	i2u538_41
 11557   00263E  EF23  F013         	goto	i2u538_40
 11558   002642                     i2u538_41:
 11559   002642  EF2B  F013         	goto	i2l338
 11560   002646                     i2u538_40:
 11561   002646                     
 11562                           ; BSR set to: 0
 11563                           ;main.c: 736:         displayDigit0 = 'C';
 11564   002646  0E43               	movlw	67
 11565   002648  6E3C               	movwf	_displayDigit0^0,c
 11566                           
 11567                           ;main.c: 737:         displayDigit1 = 'L';
 11568   00264A  0E4C               	movlw	76
 11569   00264C  6E3B               	movwf	_displayDigit1^0,c
 11570                           
 11571                           ;main.c: 738:         displayDigit2 = 'r';
 11572   00264E  0E72               	movlw	114
 11573   002650  6E3A               	movwf	_displayDigit2^0,c
 11574                           
 11575                           ;main.c: 740:     }
 11576   002652  EF2C  F013         	goto	i2l340
 11577   002656                     i2l338:
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;main.c: 742:         __nop();
 11581   002656  0000               	nop	
 11582   002658                     i2l340:
 11583   002658  0012               	return		;funcret
 11584   00265A                     __end_ofi2_setDisplayDigits:
 11585                           	callstack 0
 11586                           
 11587 ;; *************** function i2___lwmod *****************
 11588 ;; Defined at:
 11589 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwmod.c"
 11590 ;; Parameters:    Size  Location     Type
 11591 ;;  dividend        2    0[COMRAM] unsigned int 
 11592 ;;  divisor         2    2[COMRAM] unsigned int 
 11593 ;; Auto vars:     Size  Location     Type
 11594 ;;  counter         1    4[COMRAM] unsigned char 
 11595 ;; Return value:  Size  Location     Type
 11596 ;;                  2    0[COMRAM] unsigned int 
 11597 ;; Registers used:
 11598 ;;		wreg, status,2, status,0
 11599 ;; Tracked objects:
 11600 ;;		On entry : 0/0
 11601 ;;		On exit  : 0/0
 11602 ;;		Unchanged: 0/0
 11603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11604 ;;      Params:         4       0       0       0
 11605 ;;      Locals:         1       0       0       0
 11606 ;;      Temps:          0       0       0       0
 11607 ;;      Totals:         5       0       0       0
 11608 ;;Total ram usage:        5 bytes
 11609 ;; Hardware stack levels used: 1
 11610 ;; This function calls:
 11611 ;;		Nothing
 11612 ;; This function is called by:
 11613 ;;		i2_setDisplayDigits
 11614 ;; This function uses a non-reentrant model
 11615 ;;
 11616                           
 11617                           	psect	text52
 11618   0038B2                     __ptext52:
 11619                           	callstack 0
 11620   0038B2                     i2___lwmod:
 11621                           	callstack 20
 11622   0038B2  5003               	movf	i2___lwmod@divisor^0,w,c
 11623   0038B4  1004               	iorwf	(i2___lwmod@divisor+1)^0,w,c
 11624   0038B6  B4D8               	btfsc	status,2,c
 11625   0038B8  EF60  F01C         	goto	i2u480_41
 11626   0038BC  EF62  F01C         	goto	i2u480_40
 11627   0038C0                     i2u480_41:
 11628   0038C0  EF86  F01C         	goto	i2l850
 11629   0038C4                     i2u480_40:
 11630   0038C4  0E01               	movlw	1
 11631   0038C6  6E05               	movwf	i2___lwmod@counter^0,c
 11632   0038C8  EF6A  F01C         	goto	i2l4349
 11633   0038CC                     i2l4347:
 11634   0038CC  90D8               	bcf	status,0,c
 11635   0038CE  3603               	rlcf	i2___lwmod@divisor^0,f,c
 11636   0038D0  3604               	rlcf	(i2___lwmod@divisor+1)^0,f,c
 11637   0038D2  2A05               	incf	i2___lwmod@counter^0,f,c
 11638   0038D4                     i2l4349:
 11639   0038D4  AE04               	btfss	(i2___lwmod@divisor+1)^0,7,c
 11640   0038D6  EF6F  F01C         	goto	i2u481_41
 11641   0038DA  EF71  F01C         	goto	i2u481_40
 11642   0038DE                     i2u481_41:
 11643   0038DE  EF66  F01C         	goto	i2l4347
 11644   0038E2                     i2u481_40:
 11645   0038E2                     i2l4351:
 11646   0038E2  5003               	movf	i2___lwmod@divisor^0,w,c
 11647   0038E4  5C01               	subwf	i2___lwmod@dividend^0,w,c
 11648   0038E6  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
 11649   0038E8  5802               	subwfb	(i2___lwmod@dividend+1)^0,w,c
 11650   0038EA  A0D8               	btfss	status,0,c
 11651   0038EC  EF7A  F01C         	goto	i2u482_41
 11652   0038F0  EF7C  F01C         	goto	i2u482_40
 11653   0038F4                     i2u482_41:
 11654   0038F4  EF80  F01C         	goto	i2l4355
 11655   0038F8                     i2u482_40:
 11656   0038F8  5003               	movf	i2___lwmod@divisor^0,w,c
 11657   0038FA  5E01               	subwf	i2___lwmod@dividend^0,f,c
 11658   0038FC  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
 11659   0038FE  5A02               	subwfb	(i2___lwmod@dividend+1)^0,f,c
 11660   003900                     i2l4355:
 11661   003900  90D8               	bcf	status,0,c
 11662   003902  3204               	rrcf	(i2___lwmod@divisor+1)^0,f,c
 11663   003904  3203               	rrcf	i2___lwmod@divisor^0,f,c
 11664   003906  2E05               	decfsz	i2___lwmod@counter^0,f,c
 11665   003908  EF71  F01C         	goto	i2l4351
 11666   00390C                     i2l850:
 11667   00390C  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
 11668   003910  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 11669   003914  0012               	return		;funcret
 11670   003916                     __end_ofi2___lwmod:
 11671                           	callstack 0
 11672                           
 11673 ;; *************** function i2___lwdiv *****************
 11674 ;; Defined at:
 11675 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwdiv.c"
 11676 ;; Parameters:    Size  Location     Type
 11677 ;;  dividend        2    0[COMRAM] unsigned int 
 11678 ;;  divisor         2    2[COMRAM] unsigned int 
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;  quotient        2    4[COMRAM] unsigned int 
 11681 ;;  counter         1    6[COMRAM] unsigned char 
 11682 ;; Return value:  Size  Location     Type
 11683 ;;                  2    0[COMRAM] unsigned int 
 11684 ;; Registers used:
 11685 ;;		wreg, status,2, status,0
 11686 ;; Tracked objects:
 11687 ;;		On entry : 0/0
 11688 ;;		On exit  : 0/0
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11691 ;;      Params:         4       0       0       0
 11692 ;;      Locals:         3       0       0       0
 11693 ;;      Temps:          0       0       0       0
 11694 ;;      Totals:         7       0       0       0
 11695 ;;Total ram usage:        7 bytes
 11696 ;; Hardware stack levels used: 1
 11697 ;; This function calls:
 11698 ;;		Nothing
 11699 ;; This function is called by:
 11700 ;;		i2_setDisplayDigits
 11701 ;; This function uses a non-reentrant model
 11702 ;;
 11703                           
 11704                           	psect	text53
 11705   003766                     __ptext53:
 11706                           	callstack 0
 11707   003766                     i2___lwdiv:
 11708                           	callstack 20
 11709   003766  0E00               	movlw	0
 11710   003768  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
 11711   00376A  0E00               	movlw	0
 11712   00376C  6E05               	movwf	i2___lwdiv@quotient^0,c
 11713   00376E  5003               	movf	i2___lwdiv@divisor^0,w,c
 11714   003770  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 11715   003772  B4D8               	btfsc	status,2,c
 11716   003774  EFBE  F01B         	goto	i2u477_41
 11717   003778  EFC0  F01B         	goto	i2u477_40
 11718   00377C                     i2u477_41:
 11719   00377C  EFE8  F01B         	goto	i2l840
 11720   003780                     i2u477_40:
 11721   003780  0E01               	movlw	1
 11722   003782  6E07               	movwf	i2___lwdiv@counter^0,c
 11723   003784  EFC8  F01B         	goto	i2l4329
 11724   003788                     i2l4327:
 11725   003788  90D8               	bcf	status,0,c
 11726   00378A  3603               	rlcf	i2___lwdiv@divisor^0,f,c
 11727   00378C  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 11728   00378E  2A07               	incf	i2___lwdiv@counter^0,f,c
 11729   003790                     i2l4329:
 11730   003790  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 11731   003792  EFCD  F01B         	goto	i2u478_41
 11732   003796  EFCF  F01B         	goto	i2u478_40
 11733   00379A                     i2u478_41:
 11734   00379A  EFC4  F01B         	goto	i2l4327
 11735   00379E                     i2u478_40:
 11736   00379E                     i2l4331:
 11737   00379E  90D8               	bcf	status,0,c
 11738   0037A0  3605               	rlcf	i2___lwdiv@quotient^0,f,c
 11739   0037A2  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 11740   0037A4  5003               	movf	i2___lwdiv@divisor^0,w,c
 11741   0037A6  5C01               	subwf	i2___lwdiv@dividend^0,w,c
 11742   0037A8  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 11743   0037AA  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 11744   0037AC  A0D8               	btfss	status,0,c
 11745   0037AE  EFDB  F01B         	goto	i2u479_41
 11746   0037B2  EFDD  F01B         	goto	i2u479_40
 11747   0037B6                     i2u479_41:
 11748   0037B6  EFE2  F01B         	goto	i2l4339
 11749   0037BA                     i2u479_40:
 11750   0037BA  5003               	movf	i2___lwdiv@divisor^0,w,c
 11751   0037BC  5E01               	subwf	i2___lwdiv@dividend^0,f,c
 11752   0037BE  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 11753   0037C0  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 11754   0037C2  8005               	bsf	i2___lwdiv@quotient^0,0,c
 11755   0037C4                     i2l4339:
 11756   0037C4  90D8               	bcf	status,0,c
 11757   0037C6  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 11758   0037C8  3203               	rrcf	i2___lwdiv@divisor^0,f,c
 11759   0037CA  2E07               	decfsz	i2___lwdiv@counter^0,f,c
 11760   0037CC  EFCF  F01B         	goto	i2l4331
 11761   0037D0                     i2l840:
 11762   0037D0  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 11763   0037D4  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 11764   0037D8  0012               	return		;funcret
 11765   0037DA                     __end_ofi2___lwdiv:
 11766                           	callstack 0
 11767                           
 11768 ;; *************** function i2___fltol *****************
 11769 ;; Defined at:
 11770 ;;		line 43 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/fltol.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;  f1              4   25[COMRAM] unsigned int 
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;  exp1            1   34[COMRAM] unsigned char 
 11775 ;;  sign1           1   33[COMRAM] unsigned char 
 11776 ;; Return value:  Size  Location     Type
 11777 ;;                  4   25[COMRAM] long 
 11778 ;; Registers used:
 11779 ;;		wreg, status,2, status,0
 11780 ;; Tracked objects:
 11781 ;;		On entry : 0/0
 11782 ;;		On exit  : 0/0
 11783 ;;		Unchanged: 0/0
 11784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11785 ;;      Params:         4       0       0       0
 11786 ;;      Locals:         2       0       0       0
 11787 ;;      Temps:          4       0       0       0
 11788 ;;      Totals:        10       0       0       0
 11789 ;;Total ram usage:       10 bytes
 11790 ;; Hardware stack levels used: 1
 11791 ;; This function calls:
 11792 ;;		Nothing
 11793 ;; This function is called by:
 11794 ;;		i2_setDisplayDigits
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           	psect	text54
 11799   003038                     __ptext54:
 11800                           	callstack 0
 11801   003038                     i2___fltol:
 11802                           	callstack 20
 11803   003038  341C               	rlcf	(i2___fltol@f1+2)^0,w,c
 11804   00303A  341D               	rlcf	(i2___fltol@f1+3)^0,w,c
 11805   00303C  6E23               	movwf	i2___fltol@exp1^0,c
 11806   00303E  5023               	movf	i2___fltol@exp1^0,w,c
 11807   003040  A4D8               	btfss	status,2,c
 11808   003042  EF25  F018         	goto	i2u470_41
 11809   003046  EF27  F018         	goto	i2u470_40
 11810   00304A                     i2u470_41:
 11811   00304A  EF31  F018         	goto	i2l4283
 11812   00304E                     i2u470_40:
 11813   00304E                     i2l4279:
 11814   00304E  0E00               	movlw	0
 11815   003050  6E1A               	movwf	?i2___fltol^0,c
 11816   003052  0E00               	movlw	0
 11817   003054  6E1B               	movwf	(?i2___fltol+1)^0,c
 11818   003056  0E00               	movlw	0
 11819   003058  6E1C               	movwf	(?i2___fltol+2)^0,c
 11820   00305A  0E00               	movlw	0
 11821   00305C  6E1D               	movwf	(?i2___fltol+3)^0,c
 11822   00305E  EF9E  F018         	goto	i2l646
 11823   003062                     i2l4283:
 11824   003062  C01A  F01E         	movff	i2___fltol@f1,??i2___fltol
 11825   003066  C01B  F01F         	movff	i2___fltol@f1+1,??i2___fltol+1
 11826   00306A  C01C  F020         	movff	i2___fltol@f1+2,??i2___fltol+2
 11827   00306E  C01D  F021         	movff	i2___fltol@f1+3,??i2___fltol+3
 11828   003072  0E20               	movlw	32
 11829   003074  EF41  F018         	goto	i2u471_40
 11830   003078                     i2u471_45:
 11831   003078  90D8               	bcf	status,0,c
 11832   00307A  3221               	rrcf	(??i2___fltol+3)^0,f,c
 11833   00307C  3220               	rrcf	(??i2___fltol+2)^0,f,c
 11834   00307E  321F               	rrcf	(??i2___fltol+1)^0,f,c
 11835   003080  321E               	rrcf	??i2___fltol^0,f,c
 11836   003082                     i2u471_40:
 11837   003082  2EE8               	decfsz	wreg,f,c
 11838   003084  EF3C  F018         	goto	i2u471_45
 11839   003088  501E               	movf	??i2___fltol^0,w,c
 11840   00308A  6E22               	movwf	i2___fltol@sign1^0,c
 11841   00308C  8E1C               	bsf	(i2___fltol@f1+2)^0,7,c
 11842   00308E  0EFF               	movlw	255
 11843   003090  161A               	andwf	i2___fltol@f1^0,f,c
 11844   003092  0EFF               	movlw	255
 11845   003094  161B               	andwf	(i2___fltol@f1+1)^0,f,c
 11846   003096  0EFF               	movlw	255
 11847   003098  161C               	andwf	(i2___fltol@f1+2)^0,f,c
 11848   00309A  0E00               	movlw	0
 11849   00309C  161D               	andwf	(i2___fltol@f1+3)^0,f,c
 11850   00309E  0E96               	movlw	150
 11851   0030A0  5E23               	subwf	i2___fltol@exp1^0,f,c
 11852   0030A2  BE23               	btfsc	i2___fltol@exp1^0,7,c
 11853   0030A4  EF58  F018         	goto	i2u472_40
 11854   0030A8  EF56  F018         	goto	i2u472_41
 11855   0030AC                     i2u472_41:
 11856   0030AC  EF6E  F018         	goto	i2l4303
 11857   0030B0                     i2u472_40:
 11858   0030B0  5023               	movf	i2___fltol@exp1^0,w,c
 11859   0030B2  0A80               	xorlw	128
 11860   0030B4  0F97               	addlw	151
 11861   0030B6  B0D8               	btfsc	status,0,c
 11862   0030B8  EF60  F018         	goto	i2u473_41
 11863   0030BC  EF62  F018         	goto	i2u473_40
 11864   0030C0                     i2u473_41:
 11865   0030C0  EF64  F018         	goto	i2l4299
 11866   0030C4                     i2u473_40:
 11867   0030C4  EF27  F018         	goto	i2l4279
 11868   0030C8                     i2l4299:
 11869   0030C8  90D8               	bcf	status,0,c
 11870   0030CA  321D               	rrcf	(i2___fltol@f1+3)^0,f,c
 11871   0030CC  321C               	rrcf	(i2___fltol@f1+2)^0,f,c
 11872   0030CE  321B               	rrcf	(i2___fltol@f1+1)^0,f,c
 11873   0030D0  321A               	rrcf	i2___fltol@f1^0,f,c
 11874   0030D2  3E23               	incfsz	i2___fltol@exp1^0,f,c
 11875   0030D4  EF64  F018         	goto	i2l4299
 11876   0030D8  EF86  F018         	goto	i2l4313
 11877   0030DC                     i2l4303:
 11878   0030DC  0E1F               	movlw	31
 11879   0030DE  6423               	cpfsgt	i2___fltol@exp1^0,c
 11880   0030E0  EF74  F018         	goto	i2u474_41
 11881   0030E4  EF76  F018         	goto	i2u474_40
 11882   0030E8                     i2u474_41:
 11883   0030E8  EF7E  F018         	goto	i2l4311
 11884   0030EC                     i2u474_40:
 11885   0030EC  EF27  F018         	goto	i2l4279
 11886   0030F0                     i2l4309:
 11887   0030F0  90D8               	bcf	status,0,c
 11888   0030F2  361A               	rlcf	i2___fltol@f1^0,f,c
 11889   0030F4  361B               	rlcf	(i2___fltol@f1+1)^0,f,c
 11890   0030F6  361C               	rlcf	(i2___fltol@f1+2)^0,f,c
 11891   0030F8  361D               	rlcf	(i2___fltol@f1+3)^0,f,c
 11892   0030FA  0623               	decf	i2___fltol@exp1^0,f,c
 11893   0030FC                     i2l4311:
 11894   0030FC  5023               	movf	i2___fltol@exp1^0,w,c
 11895   0030FE  A4D8               	btfss	status,2,c
 11896   003100  EF84  F018         	goto	i2u475_41
 11897   003104  EF86  F018         	goto	i2u475_40
 11898   003108                     i2u475_41:
 11899   003108  EF78  F018         	goto	i2l4309
 11900   00310C                     i2u475_40:
 11901   00310C                     i2l4313:
 11902   00310C  5022               	movf	i2___fltol@sign1^0,w,c
 11903   00310E  B4D8               	btfsc	status,2,c
 11904   003110  EF8C  F018         	goto	i2u476_41
 11905   003114  EF8E  F018         	goto	i2u476_40
 11906   003118                     i2u476_41:
 11907   003118  EF96  F018         	goto	i2l4317
 11908   00311C                     i2u476_40:
 11909   00311C  1E1D               	comf	(i2___fltol@f1+3)^0,f,c
 11910   00311E  1E1C               	comf	(i2___fltol@f1+2)^0,f,c
 11911   003120  1E1B               	comf	(i2___fltol@f1+1)^0,f,c
 11912   003122  6C1A               	negf	i2___fltol@f1^0,c
 11913   003124  0E00               	movlw	0
 11914   003126  221B               	addwfc	(i2___fltol@f1+1)^0,f,c
 11915   003128  221C               	addwfc	(i2___fltol@f1+2)^0,f,c
 11916   00312A  221D               	addwfc	(i2___fltol@f1+3)^0,f,c
 11917   00312C                     i2l4317:
 11918   00312C  C01A  F01A         	movff	i2___fltol@f1,?i2___fltol
 11919   003130  C01B  F01B         	movff	i2___fltol@f1+1,?i2___fltol+1
 11920   003134  C01C  F01C         	movff	i2___fltol@f1+2,?i2___fltol+2
 11921   003138  C01D  F01D         	movff	i2___fltol@f1+3,?i2___fltol+3
 11922   00313C                     i2l646:
 11923   00313C  0012               	return		;funcret
 11924   00313E                     __end_ofi2___fltol:
 11925                           	callstack 0
 11926                           
 11927 ;; *************** function i2___flmul *****************
 11928 ;; Defined at:
 11929 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcmul.c"
 11930 ;; Parameters:    Size  Location     Type
 11931 ;;  b               4    0[COMRAM] long 
 11932 ;;  a               4    4[COMRAM] long 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;  prod            4   19[COMRAM] struct .
 11935 ;;  grs             4   13[COMRAM] unsigned long 
 11936 ;;  temp            2   23[COMRAM] struct .
 11937 ;;  bexp            1   18[COMRAM] unsigned char 
 11938 ;;  aexp            1   17[COMRAM] unsigned char 
 11939 ;;  sign            1   12[COMRAM] unsigned char 
 11940 ;; Return value:  Size  Location     Type
 11941 ;;                  4    0[COMRAM] unsigned char 
 11942 ;; Registers used:
 11943 ;;		wreg, status,2, status,0, prodl, prodh
 11944 ;; Tracked objects:
 11945 ;;		On entry : 0/0
 11946 ;;		On exit  : 0/0
 11947 ;;		Unchanged: 0/0
 11948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11949 ;;      Params:         8       0       0       0
 11950 ;;      Locals:        13       0       0       0
 11951 ;;      Temps:          4       0       0       0
 11952 ;;      Totals:        25       0       0       0
 11953 ;;Total ram usage:       25 bytes
 11954 ;; Hardware stack levels used: 1
 11955 ;; This function calls:
 11956 ;;		Nothing
 11957 ;; This function is called by:
 11958 ;;		i2_setDisplayDigits
 11959 ;; This function uses a non-reentrant model
 11960 ;;
 11961                           
 11962                           	psect	text55
 11963   0015F4                     __ptext55:
 11964                           	callstack 0
 11965   0015F4                     i2___flmul:
 11966                           	callstack 20
 11967   0015F4  5004               	movf	(i2___flmul@b+3)^0,w,c
 11968   0015F6  0B80               	andlw	128
 11969   0015F8  6E0D               	movwf	i2___flmul@sign^0,c
 11970   0015FA  5004               	movf	(i2___flmul@b+3)^0,w,c
 11971   0015FC  2404               	addwf	(i2___flmul@b+3)^0,w,c
 11972   0015FE  6E13               	movwf	i2___flmul@bexp^0,c
 11973   001600  AE03               	btfss	(i2___flmul@b+2)^0,7,c
 11974   001602  EF05  F00B         	goto	i2u483_41
 11975   001606  EF07  F00B         	goto	i2u483_40
 11976   00160A                     i2u483_41:
 11977   00160A  EF08  F00B         	goto	i2l4365
 11978   00160E                     i2u483_40:
 11979   00160E  8013               	bsf	i2___flmul@bexp^0,0,c
 11980   001610                     i2l4365:
 11981   001610  5013               	movf	i2___flmul@bexp^0,w,c
 11982   001612  B4D8               	btfsc	status,2,c
 11983   001614  EF0E  F00B         	goto	i2u484_41
 11984   001618  EF10  F00B         	goto	i2u484_40
 11985   00161C                     i2u484_41:
 11986   00161C  EF23  F00B         	goto	i2l4373
 11987   001620                     i2u484_40:
 11988   001620  2813               	incf	i2___flmul@bexp^0,w,c
 11989   001622  A4D8               	btfss	status,2,c
 11990   001624  EF16  F00B         	goto	i2u485_41
 11991   001628  EF18  F00B         	goto	i2u485_40
 11992   00162C                     i2u485_41:
 11993   00162C  EF20  F00B         	goto	i2l4371
 11994   001630                     i2u485_40:
 11995   001630  0E00               	movlw	0
 11996   001632  6E01               	movwf	i2___flmul@b^0,c
 11997   001634  0E00               	movlw	0
 11998   001636  6E02               	movwf	(i2___flmul@b+1)^0,c
 11999   001638  0E00               	movlw	0
 12000   00163A  6E03               	movwf	(i2___flmul@b+2)^0,c
 12001   00163C  0E00               	movlw	0
 12002   00163E  6E04               	movwf	(i2___flmul@b+3)^0,c
 12003   001640                     i2l4371:
 12004   001640  8E03               	bsf	(i2___flmul@b+2)^0,7,c
 12005   001642  EF2B  F00B         	goto	i2l4375
 12006   001646                     i2l4373:
 12007   001646  0E00               	movlw	0
 12008   001648  6E01               	movwf	i2___flmul@b^0,c
 12009   00164A  0E00               	movlw	0
 12010   00164C  6E02               	movwf	(i2___flmul@b+1)^0,c
 12011   00164E  0E00               	movlw	0
 12012   001650  6E03               	movwf	(i2___flmul@b+2)^0,c
 12013   001652  0E00               	movlw	0
 12014   001654  6E04               	movwf	(i2___flmul@b+3)^0,c
 12015   001656                     i2l4375:
 12016   001656  5008               	movf	(i2___flmul@a+3)^0,w,c
 12017   001658  0B80               	andlw	128
 12018   00165A  1A0D               	xorwf	i2___flmul@sign^0,f,c
 12019   00165C  5008               	movf	(i2___flmul@a+3)^0,w,c
 12020   00165E  2408               	addwf	(i2___flmul@a+3)^0,w,c
 12021   001660  6E12               	movwf	i2___flmul@aexp^0,c
 12022   001662  AE07               	btfss	(i2___flmul@a+2)^0,7,c
 12023   001664  EF36  F00B         	goto	i2u486_41
 12024   001668  EF38  F00B         	goto	i2u486_40
 12025   00166C                     i2u486_41:
 12026   00166C  EF39  F00B         	goto	i2l4383
 12027   001670                     i2u486_40:
 12028   001670  8012               	bsf	i2___flmul@aexp^0,0,c
 12029   001672                     i2l4383:
 12030   001672  5012               	movf	i2___flmul@aexp^0,w,c
 12031   001674  B4D8               	btfsc	status,2,c
 12032   001676  EF3F  F00B         	goto	i2u487_41
 12033   00167A  EF41  F00B         	goto	i2u487_40
 12034   00167E                     i2u487_41:
 12035   00167E  EF54  F00B         	goto	i2l4391
 12036   001682                     i2u487_40:
 12037   001682  2812               	incf	i2___flmul@aexp^0,w,c
 12038   001684  A4D8               	btfss	status,2,c
 12039   001686  EF47  F00B         	goto	i2u488_41
 12040   00168A  EF49  F00B         	goto	i2u488_40
 12041   00168E                     i2u488_41:
 12042   00168E  EF51  F00B         	goto	i2l4389
 12043   001692                     i2u488_40:
 12044   001692  0E00               	movlw	0
 12045   001694  6E05               	movwf	i2___flmul@a^0,c
 12046   001696  0E00               	movlw	0
 12047   001698  6E06               	movwf	(i2___flmul@a+1)^0,c
 12048   00169A  0E00               	movlw	0
 12049   00169C  6E07               	movwf	(i2___flmul@a+2)^0,c
 12050   00169E  0E00               	movlw	0
 12051   0016A0  6E08               	movwf	(i2___flmul@a+3)^0,c
 12052   0016A2                     i2l4389:
 12053   0016A2  8E07               	bsf	(i2___flmul@a+2)^0,7,c
 12054   0016A4  EF5C  F00B         	goto	i2l963
 12055   0016A8                     i2l4391:
 12056   0016A8  0E00               	movlw	0
 12057   0016AA  6E05               	movwf	i2___flmul@a^0,c
 12058   0016AC  0E00               	movlw	0
 12059   0016AE  6E06               	movwf	(i2___flmul@a+1)^0,c
 12060   0016B0  0E00               	movlw	0
 12061   0016B2  6E07               	movwf	(i2___flmul@a+2)^0,c
 12062   0016B4  0E00               	movlw	0
 12063   0016B6  6E08               	movwf	(i2___flmul@a+3)^0,c
 12064   0016B8                     i2l963:
 12065   0016B8  5012               	movf	i2___flmul@aexp^0,w,c
 12066   0016BA  B4D8               	btfsc	status,2,c
 12067   0016BC  EF62  F00B         	goto	i2u489_41
 12068   0016C0  EF64  F00B         	goto	i2u489_40
 12069   0016C4                     i2u489_41:
 12070   0016C4  EF6C  F00B         	goto	i2l4395
 12071   0016C8                     i2u489_40:
 12072   0016C8  5013               	movf	i2___flmul@bexp^0,w,c
 12073   0016CA  A4D8               	btfss	status,2,c
 12074   0016CC  EF6A  F00B         	goto	i2u490_41
 12075   0016D0  EF6C  F00B         	goto	i2u490_40
 12076   0016D4                     i2u490_41:
 12077   0016D4  EF76  F00B         	goto	i2l4399
 12078   0016D8                     i2u490_40:
 12079   0016D8                     i2l4395:
 12080   0016D8  0E00               	movlw	0
 12081   0016DA  6E01               	movwf	?i2___flmul^0,c
 12082   0016DC  0E00               	movlw	0
 12083   0016DE  6E02               	movwf	(?i2___flmul+1)^0,c
 12084   0016E0  0E00               	movlw	0
 12085   0016E2  6E03               	movwf	(?i2___flmul+2)^0,c
 12086   0016E4  0E00               	movlw	0
 12087   0016E6  6E04               	movwf	(?i2___flmul+3)^0,c
 12088   0016E8  EF0C  F00D         	goto	i2l967
 12089   0016EC                     i2l4399:
 12090   0016EC  5007               	movf	(i2___flmul@a+2)^0,w,c
 12091   0016EE  0201               	mulwf	i2___flmul@b^0,c
 12092   0016F0  CFF3 F018          	movff	prodl,i2___flmul@temp
 12093   0016F4  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12094   0016F8  5018               	movf	i2___flmul@temp^0,w,c
 12095   0016FA  6E0E               	movwf	i2___flmul@grs^0,c
 12096   0016FC  6A0F               	clrf	(i2___flmul@grs+1)^0,c
 12097   0016FE  6A10               	clrf	(i2___flmul@grs+2)^0,c
 12098   001700  6A11               	clrf	(i2___flmul@grs+3)^0,c
 12099   001702  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12100   001704  6E14               	movwf	i2___flmul@prod^0,c
 12101   001706  6A15               	clrf	(i2___flmul@prod+1)^0,c
 12102   001708  6A16               	clrf	(i2___flmul@prod+2)^0,c
 12103   00170A  6A17               	clrf	(i2___flmul@prod+3)^0,c
 12104   00170C  5006               	movf	(i2___flmul@a+1)^0,w,c
 12105   00170E  0202               	mulwf	(i2___flmul@b+1)^0,c
 12106   001710  CFF3 F018          	movff	prodl,i2___flmul@temp
 12107   001714  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12108   001718  5018               	movf	i2___flmul@temp^0,w,c
 12109   00171A  260E               	addwf	i2___flmul@grs^0,f,c
 12110   00171C  0E00               	movlw	0
 12111   00171E  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 12112   001720  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 12113   001722  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 12114   001724  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12115   001726  2614               	addwf	i2___flmul@prod^0,f,c
 12116   001728  0E00               	movlw	0
 12117   00172A  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12118   00172C  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12119   00172E  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12120   001730  5005               	movf	i2___flmul@a^0,w,c
 12121   001732  0203               	mulwf	(i2___flmul@b+2)^0,c
 12122   001734  CFF3 F018          	movff	prodl,i2___flmul@temp
 12123   001738  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12124   00173C  5018               	movf	i2___flmul@temp^0,w,c
 12125   00173E  260E               	addwf	i2___flmul@grs^0,f,c
 12126   001740  0E00               	movlw	0
 12127   001742  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 12128   001744  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 12129   001746  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 12130   001748  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12131   00174A  2614               	addwf	i2___flmul@prod^0,f,c
 12132   00174C  0E00               	movlw	0
 12133   00174E  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12134   001750  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12135   001752  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12136   001754  C010  F011         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 12137   001758  C00F  F010         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 12138   00175C  C00E  F00F         	movff	i2___flmul@grs,i2___flmul@grs+1
 12139   001760  6A0E               	clrf	i2___flmul@grs^0,c
 12140   001762  5005               	movf	i2___flmul@a^0,w,c
 12141   001764  0202               	mulwf	(i2___flmul@b+1)^0,c
 12142   001766  CFF3 F018          	movff	prodl,i2___flmul@temp
 12143   00176A  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12144   00176E  5018               	movf	i2___flmul@temp^0,w,c
 12145   001770  260E               	addwf	i2___flmul@grs^0,f,c
 12146   001772  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12147   001774  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 12148   001776  0E00               	movlw	0
 12149   001778  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 12150   00177A  0E00               	movlw	0
 12151   00177C  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 12152   00177E  5006               	movf	(i2___flmul@a+1)^0,w,c
 12153   001780  0201               	mulwf	i2___flmul@b^0,c
 12154   001782  CFF3 F018          	movff	prodl,i2___flmul@temp
 12155   001786  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12156   00178A  5018               	movf	i2___flmul@temp^0,w,c
 12157   00178C  260E               	addwf	i2___flmul@grs^0,f,c
 12158   00178E  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12159   001790  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 12160   001792  0E00               	movlw	0
 12161   001794  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 12162   001796  0E00               	movlw	0
 12163   001798  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 12164   00179A  C010  F011         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 12165   00179E  C00F  F010         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 12166   0017A2  C00E  F00F         	movff	i2___flmul@grs,i2___flmul@grs+1
 12167   0017A6  6A0E               	clrf	i2___flmul@grs^0,c
 12168   0017A8  5005               	movf	i2___flmul@a^0,w,c
 12169   0017AA  0201               	mulwf	i2___flmul@b^0,c
 12170   0017AC  CFF3 F018          	movff	prodl,i2___flmul@temp
 12171   0017B0  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12172   0017B4  5018               	movf	i2___flmul@temp^0,w,c
 12173   0017B6  260E               	addwf	i2___flmul@grs^0,f,c
 12174   0017B8  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12175   0017BA  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 12176   0017BC  0E00               	movlw	0
 12177   0017BE  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 12178   0017C0  0E00               	movlw	0
 12179   0017C2  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 12180   0017C4  5007               	movf	(i2___flmul@a+2)^0,w,c
 12181   0017C6  0202               	mulwf	(i2___flmul@b+1)^0,c
 12182   0017C8  CFF3 F018          	movff	prodl,i2___flmul@temp
 12183   0017CC  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12184   0017D0  5018               	movf	i2___flmul@temp^0,w,c
 12185   0017D2  2614               	addwf	i2___flmul@prod^0,f,c
 12186   0017D4  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12187   0017D6  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12188   0017D8  0E00               	movlw	0
 12189   0017DA  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12190   0017DC  0E00               	movlw	0
 12191   0017DE  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12192   0017E0  5006               	movf	(i2___flmul@a+1)^0,w,c
 12193   0017E2  0203               	mulwf	(i2___flmul@b+2)^0,c
 12194   0017E4  CFF3 F018          	movff	prodl,i2___flmul@temp
 12195   0017E8  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12196   0017EC  5018               	movf	i2___flmul@temp^0,w,c
 12197   0017EE  2614               	addwf	i2___flmul@prod^0,f,c
 12198   0017F0  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12199   0017F2  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12200   0017F4  0E00               	movlw	0
 12201   0017F6  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12202   0017F8  0E00               	movlw	0
 12203   0017FA  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12204   0017FC  5007               	movf	(i2___flmul@a+2)^0,w,c
 12205   0017FE  0203               	mulwf	(i2___flmul@b+2)^0,c
 12206   001800  CFF3 F018          	movff	prodl,i2___flmul@temp
 12207   001804  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12208   001808  5018               	movf	i2___flmul@temp^0,w,c
 12209   00180A  6E09               	movwf	??i2___flmul^0,c
 12210   00180C  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12211   00180E  6E0A               	movwf	(??i2___flmul+1)^0,c
 12212   001810  6A0B               	clrf	(??i2___flmul+2)^0,c
 12213   001812  6A0C               	clrf	(??i2___flmul+3)^0,c
 12214   001814  C00B  F00C         	movff	??i2___flmul+2,??i2___flmul+3
 12215   001818  C00A  F00B         	movff	??i2___flmul+1,??i2___flmul+2
 12216   00181C  C009  F00A         	movff	??i2___flmul,??i2___flmul+1
 12217   001820  6A09               	clrf	??i2___flmul^0,c
 12218   001822  5009               	movf	??i2___flmul^0,w,c
 12219   001824  2614               	addwf	i2___flmul@prod^0,f,c
 12220   001826  500A               	movf	(??i2___flmul+1)^0,w,c
 12221   001828  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12222   00182A  500B               	movf	(??i2___flmul+2)^0,w,c
 12223   00182C  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12224   00182E  500C               	movf	(??i2___flmul+3)^0,w,c
 12225   001830  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12226   001832  C00E  F009         	movff	i2___flmul@grs,??i2___flmul
 12227   001836  C00F  F00A         	movff	i2___flmul@grs+1,??i2___flmul+1
 12228   00183A  C010  F00B         	movff	i2___flmul@grs+2,??i2___flmul+2
 12229   00183E  C011  F00C         	movff	i2___flmul@grs+3,??i2___flmul+3
 12230   001842  0E19               	movlw	25
 12231   001844  EF29  F00C         	goto	i2u491_40
 12232   001848                     i2u491_45:
 12233   001848  90D8               	bcf	status,0,c
 12234   00184A  320C               	rrcf	(??i2___flmul+3)^0,f,c
 12235   00184C  320B               	rrcf	(??i2___flmul+2)^0,f,c
 12236   00184E  320A               	rrcf	(??i2___flmul+1)^0,f,c
 12237   001850  3209               	rrcf	??i2___flmul^0,f,c
 12238   001852                     i2u491_40:
 12239   001852  2EE8               	decfsz	wreg,f,c
 12240   001854  EF24  F00C         	goto	i2u491_45
 12241   001858  5009               	movf	??i2___flmul^0,w,c
 12242   00185A  2614               	addwf	i2___flmul@prod^0,f,c
 12243   00185C  500A               	movf	(??i2___flmul+1)^0,w,c
 12244   00185E  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12245   001860  500B               	movf	(??i2___flmul+2)^0,w,c
 12246   001862  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12247   001864  500C               	movf	(??i2___flmul+3)^0,w,c
 12248   001866  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12249   001868  C010  F011         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 12250   00186C  C00F  F010         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 12251   001870  C00E  F00F         	movff	i2___flmul@grs,i2___flmul@grs+1
 12252   001874  6A0E               	clrf	i2___flmul@grs^0,c
 12253   001876  5012               	movf	i2___flmul@aexp^0,w,c
 12254   001878  C013  F009         	movff	i2___flmul@bexp,??i2___flmul
 12255   00187C  6A0A               	clrf	(??i2___flmul+1)^0,c
 12256   00187E  2609               	addwf	??i2___flmul^0,f,c
 12257   001880  0E00               	movlw	0
 12258   001882  220A               	addwfc	(??i2___flmul+1)^0,f,c
 12259   001884  0E82               	movlw	130
 12260   001886  2409               	addwf	??i2___flmul^0,w,c
 12261   001888  6E18               	movwf	i2___flmul@temp^0,c
 12262   00188A  0EFF               	movlw	255
 12263   00188C  200A               	addwfc	(??i2___flmul+1)^0,w,c
 12264   00188E  6E19               	movwf	(i2___flmul@temp+1)^0,c
 12265   001890  EF5F  F00C         	goto	i2l4447
 12266   001894                     i2l4441:
 12267   001894  90D8               	bcf	status,0,c
 12268   001896  3614               	rlcf	i2___flmul@prod^0,f,c
 12269   001898  3615               	rlcf	(i2___flmul@prod+1)^0,f,c
 12270   00189A  3616               	rlcf	(i2___flmul@prod+2)^0,f,c
 12271   00189C  3617               	rlcf	(i2___flmul@prod+3)^0,f,c
 12272   00189E  AE11               	btfss	(i2___flmul@grs+3)^0,7,c
 12273   0018A0  EF54  F00C         	goto	i2u492_41
 12274   0018A4  EF56  F00C         	goto	i2u492_40
 12275   0018A8                     i2u492_41:
 12276   0018A8  EF57  F00C         	goto	i2l970
 12277   0018AC                     i2u492_40:
 12278   0018AC  8014               	bsf	i2___flmul@prod^0,0,c
 12279   0018AE                     i2l970:
 12280   0018AE  90D8               	bcf	status,0,c
 12281   0018B0  360E               	rlcf	i2___flmul@grs^0,f,c
 12282   0018B2  360F               	rlcf	(i2___flmul@grs+1)^0,f,c
 12283   0018B4  3610               	rlcf	(i2___flmul@grs+2)^0,f,c
 12284   0018B6  3611               	rlcf	(i2___flmul@grs+3)^0,f,c
 12285   0018B8  0618               	decf	i2___flmul@temp^0,f,c
 12286   0018BA  A0D8               	btfss	status,0,c
 12287   0018BC  0619               	decf	(i2___flmul@temp+1)^0,f,c
 12288   0018BE                     i2l4447:
 12289   0018BE  AE16               	btfss	(i2___flmul@prod+2)^0,7,c
 12290   0018C0  EF64  F00C         	goto	i2u493_41
 12291   0018C4  EF66  F00C         	goto	i2u493_40
 12292   0018C8                     i2u493_41:
 12293   0018C8  EF4A  F00C         	goto	i2l4441
 12294   0018CC                     i2u493_40:
 12295   0018CC  6A12               	clrf	i2___flmul@aexp^0,c
 12296   0018CE  AE11               	btfss	(i2___flmul@grs+3)^0,7,c
 12297   0018D0  EF6C  F00C         	goto	i2u494_41
 12298   0018D4  EF6E  F00C         	goto	i2u494_40
 12299   0018D8                     i2u494_41:
 12300   0018D8  EF92  F00C         	goto	i2l972
 12301   0018DC                     i2u494_40:
 12302   0018DC  0EFF               	movlw	255
 12303   0018DE  140E               	andwf	i2___flmul@grs^0,w,c
 12304   0018E0  6E09               	movwf	??i2___flmul^0,c
 12305   0018E2  0EFF               	movlw	255
 12306   0018E4  140F               	andwf	(i2___flmul@grs+1)^0,w,c
 12307   0018E6  6E0A               	movwf	(??i2___flmul+1)^0,c
 12308   0018E8  0EFF               	movlw	255
 12309   0018EA  1410               	andwf	(i2___flmul@grs+2)^0,w,c
 12310   0018EC  6E0B               	movwf	(??i2___flmul+2)^0,c
 12311   0018EE  0E7F               	movlw	127
 12312   0018F0  1411               	andwf	(i2___flmul@grs+3)^0,w,c
 12313   0018F2  6E0C               	movwf	(??i2___flmul+3)^0,c
 12314   0018F4  5009               	movf	??i2___flmul^0,w,c
 12315   0018F6  100A               	iorwf	(??i2___flmul+1)^0,w,c
 12316   0018F8  100B               	iorwf	(??i2___flmul+2)^0,w,c
 12317   0018FA  100C               	iorwf	(??i2___flmul+3)^0,w,c
 12318   0018FC  B4D8               	btfsc	status,2,c
 12319   0018FE  EF83  F00C         	goto	i2u495_41
 12320   001902  EF85  F00C         	goto	i2u495_40
 12321   001906                     i2u495_41:
 12322   001906  EF89  F00C         	goto	i2l973
 12323   00190A                     i2u495_40:
 12324   00190A                     i2l4451:
 12325   00190A  0E01               	movlw	1
 12326   00190C  6E12               	movwf	i2___flmul@aexp^0,c
 12327   00190E  EF92  F00C         	goto	i2l972
 12328   001912                     i2l973:
 12329   001912  A014               	btfss	i2___flmul@prod^0,0,c
 12330   001914  EF8E  F00C         	goto	i2u496_41
 12331   001918  EF90  F00C         	goto	i2u496_40
 12332   00191C                     i2u496_41:
 12333   00191C  EF92  F00C         	goto	i2l972
 12334   001920                     i2u496_40:
 12335   001920  EF85  F00C         	goto	i2l4451
 12336   001924                     i2l972:
 12337   001924  5012               	movf	i2___flmul@aexp^0,w,c
 12338   001926  B4D8               	btfsc	status,2,c
 12339   001928  EF98  F00C         	goto	i2u497_41
 12340   00192C  EF9A  F00C         	goto	i2u497_40
 12341   001930                     i2u497_41:
 12342   001930  EFBE  F00C         	goto	i2l4463
 12343   001934                     i2u497_40:
 12344   001934  0E01               	movlw	1
 12345   001936  2614               	addwf	i2___flmul@prod^0,f,c
 12346   001938  0E00               	movlw	0
 12347   00193A  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12348   00193C  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12349   00193E  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12350   001940  A017               	btfss	(i2___flmul@prod+3)^0,0,c
 12351   001942  EFA5  F00C         	goto	i2u498_41
 12352   001946  EFA7  F00C         	goto	i2u498_40
 12353   00194A                     i2u498_41:
 12354   00194A  EFBE  F00C         	goto	i2l4463
 12355   00194E                     i2u498_40:
 12356   00194E  C014  F009         	movff	i2___flmul@prod,??i2___flmul
 12357   001952  C015  F00A         	movff	i2___flmul@prod+1,??i2___flmul+1
 12358   001956  C016  F00B         	movff	i2___flmul@prod+2,??i2___flmul+2
 12359   00195A  C017  F00C         	movff	i2___flmul@prod+3,??i2___flmul+3
 12360   00195E  340C               	rlcf	(??i2___flmul+3)^0,w,c
 12361   001960  320C               	rrcf	(??i2___flmul+3)^0,f,c
 12362   001962  320B               	rrcf	(??i2___flmul+2)^0,f,c
 12363   001964  320A               	rrcf	(??i2___flmul+1)^0,f,c
 12364   001966  3209               	rrcf	??i2___flmul^0,f,c
 12365   001968  C009  F014         	movff	??i2___flmul,i2___flmul@prod
 12366   00196C  C00A  F015         	movff	??i2___flmul+1,i2___flmul@prod+1
 12367   001970  C00B  F016         	movff	??i2___flmul+2,i2___flmul@prod+2
 12368   001974  C00C  F017         	movff	??i2___flmul+3,i2___flmul@prod+3
 12369   001978  4A18               	infsnz	i2___flmul@temp^0,f,c
 12370   00197A  2A19               	incf	(i2___flmul@temp+1)^0,f,c
 12371   00197C                     i2l4463:
 12372   00197C  BE19               	btfsc	(i2___flmul@temp+1)^0,7,c
 12373   00197E  EFC9  F00C         	goto	i2u499_41
 12374   001982  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12375   001984  E108               	bnz	i2u499_40
 12376   001986  2818               	incf	i2___flmul@temp^0,w,c
 12377   001988  A0D8               	btfss	status,0,c
 12378   00198A  EFC9  F00C         	goto	i2u499_41
 12379   00198E  EFCB  F00C         	goto	i2u499_40
 12380   001992                     i2u499_41:
 12381   001992  EFD5  F00C         	goto	i2l4467
 12382   001996                     i2u499_40:
 12383   001996  0E00               	movlw	0
 12384   001998  6E14               	movwf	i2___flmul@prod^0,c
 12385   00199A  0E00               	movlw	0
 12386   00199C  6E15               	movwf	(i2___flmul@prod+1)^0,c
 12387   00199E  0E80               	movlw	128
 12388   0019A0  6E16               	movwf	(i2___flmul@prod+2)^0,c
 12389   0019A2  0E7F               	movlw	127
 12390   0019A4  6E17               	movwf	(i2___flmul@prod+3)^0,c
 12391   0019A6  EF02  F00D         	goto	i2l4481
 12392   0019AA                     i2l4467:
 12393   0019AA  BE19               	btfsc	(i2___flmul@temp+1)^0,7,c
 12394   0019AC  EFE2  F00C         	goto	i2u500_40
 12395   0019B0  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12396   0019B2  E106               	bnz	i2u500_41
 12397   0019B4  0418               	decf	i2___flmul@temp^0,w,c
 12398   0019B6  B0D8               	btfsc	status,0,c
 12399   0019B8  EFE0  F00C         	goto	i2u500_41
 12400   0019BC  EFE2  F00C         	goto	i2u500_40
 12401   0019C0                     i2u500_41:
 12402   0019C0  EFED  F00C         	goto	i2l980
 12403   0019C4                     i2u500_40:
 12404   0019C4  0E00               	movlw	0
 12405   0019C6  6E14               	movwf	i2___flmul@prod^0,c
 12406   0019C8  0E00               	movlw	0
 12407   0019CA  6E15               	movwf	(i2___flmul@prod+1)^0,c
 12408   0019CC  0E00               	movlw	0
 12409   0019CE  6E16               	movwf	(i2___flmul@prod+2)^0,c
 12410   0019D0  0E00               	movlw	0
 12411   0019D2  6E17               	movwf	(i2___flmul@prod+3)^0,c
 12412   0019D4  6A0D               	clrf	i2___flmul@sign^0,c
 12413   0019D6  EF02  F00D         	goto	i2l4481
 12414   0019DA                     i2l980:
 12415   0019DA  C018  F013         	movff	i2___flmul@temp,i2___flmul@bexp
 12416   0019DE  0EFF               	movlw	255
 12417   0019E0  1614               	andwf	i2___flmul@prod^0,f,c
 12418   0019E2  0EFF               	movlw	255
 12419   0019E4  1615               	andwf	(i2___flmul@prod+1)^0,f,c
 12420   0019E6  0E7F               	movlw	127
 12421   0019E8  1616               	andwf	(i2___flmul@prod+2)^0,f,c
 12422   0019EA  0E00               	movlw	0
 12423   0019EC  1617               	andwf	(i2___flmul@prod+3)^0,f,c
 12424   0019EE  A013               	btfss	i2___flmul@bexp^0,0,c
 12425   0019F0  EFFC  F00C         	goto	i2u501_41
 12426   0019F4  EFFE  F00C         	goto	i2u501_40
 12427   0019F8                     i2u501_41:
 12428   0019F8  EFFF  F00C         	goto	i2l4479
 12429   0019FC                     i2u501_40:
 12430   0019FC  8E16               	bsf	(i2___flmul@prod+2)^0,7,c
 12431   0019FE                     i2l4479:
 12432   0019FE  90D8               	bcf	status,0,c
 12433   001A00  3013               	rrcf	i2___flmul@bexp^0,w,c
 12434   001A02  6E17               	movwf	(i2___flmul@prod+3)^0,c
 12435   001A04                     i2l4481:
 12436   001A04  500D               	movf	i2___flmul@sign^0,w,c
 12437   001A06  1217               	iorwf	(i2___flmul@prod+3)^0,f,c
 12438   001A08  C014  F001         	movff	i2___flmul@prod,?i2___flmul
 12439   001A0C  C015  F002         	movff	i2___flmul@prod+1,?i2___flmul+1
 12440   001A10  C016  F003         	movff	i2___flmul@prod+2,?i2___flmul+2
 12441   001A14  C017  F004         	movff	i2___flmul@prod+3,?i2___flmul+3
 12442   001A18                     i2l967:
 12443   001A18  0012               	return		;funcret
 12444   001A1A                     __end_ofi2___flmul:
 12445                           	callstack 0
 12446                           
 12447 ;; *************** function i2_adcSampling *****************
 12448 ;; Defined at:
 12449 ;;		line 140 in file "main.c"
 12450 ;; Parameters:    Size  Location     Type
 12451 ;;		None
 12452 ;; Auto vars:     Size  Location     Type
 12453 ;;		None
 12454 ;; Return value:  Size  Location     Type
 12455 ;;                  1    wreg      void 
 12456 ;; Registers used:
 12457 ;;		wreg, status,2
 12458 ;; Tracked objects:
 12459 ;;		On entry : 0/0
 12460 ;;		On exit  : 0/0
 12461 ;;		Unchanged: 0/0
 12462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12463 ;;      Params:         0       0       0       0
 12464 ;;      Locals:         0       0       0       0
 12465 ;;      Temps:          2       0       0       0
 12466 ;;      Totals:         2       0       0       0
 12467 ;;Total ram usage:        2 bytes
 12468 ;; Hardware stack levels used: 1
 12469 ;; This function calls:
 12470 ;;		Nothing
 12471 ;; This function is called by:
 12472 ;;		_ISR
 12473 ;; This function uses a non-reentrant model
 12474 ;;
 12475                           
 12476                           	psect	text56
 12477   003D90                     __ptext56:
 12478                           	callstack 0
 12479   003D90                     i2_adcSampling:
 12480                           	callstack 21
 12481   003D90                     
 12482                           ;main.c: 142:     sampling = 1;
 12483   003D90  0E01               	movlw	1
 12484   003D92  0100               	movlb	0	; () banked
 12485   003D94  6FFE               	movwf	_sampling& (0+255),b
 12486   003D96                     
 12487                           ; BSR set to: 0
 12488                           ;main.c: 145:     ADCON0bits.GO = 1;
 12489   003D96  82C2               	bsf	194,1,c	;volatile
 12490   003D98                     i2l161:
 12491   003D98  B2C2               	btfsc	194,1,c	;volatile
 12492   003D9A  EFD1  F01E         	goto	i2u527_41
 12493   003D9E  EFD3  F01E         	goto	i2u527_40
 12494   003DA2                     i2u527_41:
 12495   003DA2  EFCC  F01E         	goto	i2l161
 12496   003DA6                     i2u527_40:
 12497   003DA6                     
 12498                           ;main.c: 149:     adcResult = ((uint16_t)ADRESH << 8) | ADRESL;
 12499   003DA6  50C4               	movf	196,w,c	;volatile
 12500   003DA8  6E01               	movwf	??i2_adcSampling^0,c
 12501   003DAA  50C3               	movf	195,w,c	;volatile
 12502   003DAC  0100               	movlb	0	; () banked
 12503   003DAE  6FF6               	movwf	_adcResult& (0+255),b
 12504   003DB0  C001  F0F7         	movff	??i2_adcSampling,_adcResult+1
 12505   003DB4                     
 12506                           ; BSR set to: 0
 12507   003DB4  0012               	return		;funcret
 12508   003DB6                     __end_ofi2_adcSampling:
 12509                           	callstack 0
 12510                           
 12511 ;; *************** function i2_EUSART_TransmitString *****************
 12512 ;; Defined at:
 12513 ;;		line 676 in file "main.c"
 12514 ;; Parameters:    Size  Location     Type
 12515 ;;  a               2    1[COMRAM] PTR unsigned char 
 12516 ;;		 -> STR_7(3), STR_5(7), STR_4(9), STR_3(3), 
 12517 ;;		 -> uart_buffer(10), STR_1(9), 
 12518 ;; Auto vars:     Size  Location     Type
 12519 ;;  i               2    5[COMRAM] int 
 12520 ;; Return value:  Size  Location     Type
 12521 ;;                  1    wreg      void 
 12522 ;; Registers used:
 12523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12524 ;; Tracked objects:
 12525 ;;		On entry : 0/0
 12526 ;;		On exit  : 0/0
 12527 ;;		Unchanged: 0/0
 12528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12529 ;;      Params:         2       0       0       0
 12530 ;;      Locals:         2       0       0       0
 12531 ;;      Temps:          2       0       0       0
 12532 ;;      Totals:         6       0       0       0
 12533 ;;Total ram usage:        6 bytes
 12534 ;; Hardware stack levels used: 1
 12535 ;; Hardware stack levels required when called: 1
 12536 ;; This function calls:
 12537 ;;		i2_EUSART_TransmitChar
 12538 ;; This function is called by:
 12539 ;;		_ISR
 12540 ;; This function uses a non-reentrant model
 12541 ;;
 12542                           
 12543                           	psect	text57
 12544   003672                     __ptext57:
 12545                           	callstack 0
 12546   003672                     i2_EUSART_TransmitString:
 12547                           	callstack 20
 12548   003672                     
 12549                           ;main.c: 677:     int i;;main.c: 678:     for( i= 0; a[i] !='\0'; i++ ){
 12550   003672  0E00               	movlw	0
 12551   003674  6E07               	movwf	(i2EUSART_TransmitString@i+1)^0,c
 12552   003676  0E00               	movlw	0
 12553   003678  6E06               	movwf	i2EUSART_TransmitString@i^0,c
 12554   00367A  EF59  F01B         	goto	i2l4719
 12555   00367E                     i2l4715:
 12556                           
 12557                           ;main.c: 679:        EUSART_TransmitChar(a[i]);
 12558   00367E  5006               	movf	i2EUSART_TransmitString@i^0,w,c
 12559   003680  2402               	addwf	i2EUSART_TransmitString@a^0,w,c
 12560   003682  6E04               	movwf	??i2_EUSART_TransmitString^0,c
 12561   003684  5007               	movf	(i2EUSART_TransmitString@i+1)^0,w,c
 12562   003686  2003               	addwfc	(i2EUSART_TransmitString@a+1)^0,w,c
 12563   003688  6E05               	movwf	(??i2_EUSART_TransmitString+1)^0,c
 12564   00368A  C004  FFF6         	movff	??i2_EUSART_TransmitString,tblptrl
 12565   00368E  C005  FFF7         	movff	??i2_EUSART_TransmitString+1,tblptrh
 12566   003692  6AF8               	clrf	tblptru,c
 12567   003694  0E02               	movlw	(high __ramtop+-1)
 12568   003696  64F7               	cpfsgt	tblptrh,c
 12569   003698  D003               	bra	i2u528_47
 12570   00369A  0008               	tblrd		*
 12571   00369C  50F5               	movf	tablat,w,c
 12572   00369E  D005               	bra	i2u528_40
 12573   0036A0                     i2u528_47:
 12574   0036A0  CFF6 FFE1          	movff	tblptrl,fsr1l
 12575   0036A4  CFF7 FFE2          	movff	tblptrh,fsr1h
 12576   0036A8  50E7               	movf	indf1,w,c
 12577   0036AA                     i2u528_40:
 12578   0036AA  EC04  F01F         	call	i2_EUSART_TransmitChar
 12579   0036AE                     
 12580                           ;main.c: 680:     }
 12581   0036AE  4A06               	infsnz	i2EUSART_TransmitString@i^0,f,c
 12582   0036B0  2A07               	incf	(i2EUSART_TransmitString@i+1)^0,f,c
 12583   0036B2                     i2l4719:
 12584   0036B2  5006               	movf	i2EUSART_TransmitString@i^0,w,c
 12585   0036B4  2402               	addwf	i2EUSART_TransmitString@a^0,w,c
 12586   0036B6  6E04               	movwf	??i2_EUSART_TransmitString^0,c
 12587   0036B8  5007               	movf	(i2EUSART_TransmitString@i+1)^0,w,c
 12588   0036BA  2003               	addwfc	(i2EUSART_TransmitString@a+1)^0,w,c
 12589   0036BC  6E05               	movwf	(??i2_EUSART_TransmitString+1)^0,c
 12590   0036BE  C004  FFF6         	movff	??i2_EUSART_TransmitString,tblptrl
 12591   0036C2  C005  FFF7         	movff	??i2_EUSART_TransmitString+1,tblptrh
 12592   0036C6  6AF8               	clrf	tblptru,c
 12593   0036C8  0E02               	movlw	(high __ramtop+-1)
 12594   0036CA  64F7               	cpfsgt	tblptrh,c
 12595   0036CC  D003               	bra	i2u529_47
 12596   0036CE  0008               	tblrd		*
 12597   0036D0  50F5               	movf	tablat,w,c
 12598   0036D2  D005               	bra	i2u529_40
 12599   0036D4                     i2u529_47:
 12600   0036D4  CFF6 FFE1          	movff	tblptrl,fsr1l
 12601   0036D8  CFF7 FFE2          	movff	tblptrh,fsr1h
 12602   0036DC  50E7               	movf	indf1,w,c
 12603   0036DE                     i2u529_40:
 12604   0036DE  0900               	iorlw	0
 12605   0036E0  A4D8               	btfss	status,2,c
 12606   0036E2  EF75  F01B         	goto	i2u530_41
 12607   0036E6  EF77  F01B         	goto	i2u530_40
 12608   0036EA                     i2u530_41:
 12609   0036EA  EF3F  F01B         	goto	i2l4715
 12610   0036EE                     i2u530_40:
 12611   0036EE  0012               	return		;funcret
 12612   0036F0                     __end_ofi2_EUSART_TransmitString:
 12613                           	callstack 0
 12614                           
 12615 ;; *************** function i2_EUSART_TransmitChar *****************
 12616 ;; Defined at:
 12617 ;;		line 671 in file "main.c"
 12618 ;; Parameters:    Size  Location     Type
 12619 ;;  data            1    wreg     unsigned char 
 12620 ;; Auto vars:     Size  Location     Type
 12621 ;;  data            1    0[COMRAM] unsigned char 
 12622 ;; Return value:  Size  Location     Type
 12623 ;;                  1    wreg      void 
 12624 ;; Registers used:
 12625 ;;		wreg
 12626 ;; Tracked objects:
 12627 ;;		On entry : 0/0
 12628 ;;		On exit  : 0/0
 12629 ;;		Unchanged: 0/0
 12630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12631 ;;      Params:         0       0       0       0
 12632 ;;      Locals:         1       0       0       0
 12633 ;;      Temps:          0       0       0       0
 12634 ;;      Totals:         1       0       0       0
 12635 ;;Total ram usage:        1 bytes
 12636 ;; Hardware stack levels used: 1
 12637 ;; This function calls:
 12638 ;;		Nothing
 12639 ;; This function is called by:
 12640 ;;		i2_EUSART_TransmitString
 12641 ;; This function uses a non-reentrant model
 12642 ;;
 12643                           
 12644                           	psect	text58
 12645   003E08                     __ptext58:
 12646                           	callstack 0
 12647   003E08                     i2_EUSART_TransmitChar:
 12648                           	callstack 20
 12649                           
 12650                           ;incstack = 0
 12651                           ;i2EUSART_TransmitChar@data stored from wreg
 12652   003E08  6E01               	movwf	i2EUSART_TransmitChar@data^0,c
 12653   003E0A                     i2l312:
 12654   003E0A  A2AC               	btfss	172,1,c	;volatile
 12655   003E0C  EF0A  F01F         	goto	i2u469_41
 12656   003E10  EF0C  F01F         	goto	i2u469_40
 12657   003E14                     i2u469_41:
 12658   003E14  EF05  F01F         	goto	i2l312
 12659   003E18                     i2u469_40:
 12660   003E18                     
 12661                           ;main.c: 673:     TXREG = data;
 12662   003E18  C001  FFAD         	movff	i2EUSART_TransmitChar@data,4013	;volatile
 12663   003E1C  0012               	return		;funcret
 12664   003E1E                     __end_ofi2_EUSART_TransmitChar:
 12665                           	callstack 0
 12666                           
 12667                           	psect	rparam
 12668   000001                     ___rparam_used  equ	1
 12669   000000                     ___param_bank   equ	0
 12670   000000                     __Lparam        equ	__Lrparam
 12671   000000                     __Hparam        equ	__Hrparam
 12672                           
 12673                           	psect	temp
 12674   000052                     btemp:
 12675                           	callstack 0
 12676   000052                     	ds	1
 12677   000052                     int$flags       set	btemp
 12678   000053                     wtemp8          set	btemp+1
 12679   000053                     ttemp5          set	btemp+1
 12680   000056                     ttemp6          set	btemp+4
 12681   00005A                     ttemp7          set	btemp+8
 12682                           
 12683                           	psect	config
 12684                           
 12685                           ;Config register CONFIG1L @ 0x300000
 12686                           ;	CPU System Clock Selection bits
 12687                           ;	CPUDIV = NOCLKDIV, No CPU System Clock divide
 12688                           ;	USB Clock Selection bit
 12689                           ;	USBDIV = OFF, USB clock comes directly from the OSC1/OSC2 oscillator block; no divide
 12690   300000                     	org	3145728
 12691   300000  00                 	db	0
 12692                           
 12693                           ;Config register CONFIG1H @ 0x300001
 12694                           ;	Oscillator Selection bits
 12695                           ;	FOSC = IRC, Internal RC oscillator
 12696                           ;	4 X PLL Enable bit
 12697                           ;	PLLEN = OFF, PLL is under software control
 12698                           ;	Primary Clock Enable bit
 12699                           ;	PCLKEN = ON, Primary clock enabled
 12700                           ;	Fail-Safe Clock Monitor Enable
 12701                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 12702                           ;	Internal/External Oscillator Switchover bit
 12703                           ;	IESO = ON, Oscillator Switchover mode enabled
 12704   300001                     	org	3145729
 12705   300001  E8                 	db	232
 12706                           
 12707                           ;Config register CONFIG2L @ 0x300002
 12708                           ;	Power-up Timer Enable bit
 12709                           ;	PWRTEN = OFF, PWRT disabled
 12710                           ;	Brown-out Reset Enable bits
 12711                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12712                           ;	Brown-out Reset Voltage bits
 12713                           ;	BORV = 19, VBOR set to 1.9 V nominal
 12714   300002                     	org	3145730
 12715   300002  1F                 	db	31
 12716                           
 12717                           ;Config register CONFIG2H @ 0x300003
 12718                           ;	Watchdog Timer Enable bit
 12719                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 12720                           ;	Watchdog Timer Postscale Select bits
 12721                           ;	WDTPS = 32768, 1:32768
 12722   300003                     	org	3145731
 12723   300003  1E                 	db	30
 12724                           
 12725                           ; Padding undefined space
 12726   300004                     	org	3145732
 12727   300004  FF                 	db	255
 12728                           
 12729                           ;Config register CONFIG3H @ 0x300005
 12730                           ;	HFINTOSC Fast Start-up bit
 12731                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 12732                           ;	MCLR Pin Enable bit
 12733                           ;	MCLRE = ON, MCLR pin enabled; RA3 input pin disabled
 12734   300005                     	org	3145733
 12735   300005  88                 	db	136
 12736                           
 12737                           ;Config register CONFIG4L @ 0x300006
 12738                           ;	Stack Full/Underflow Reset Enable bit
 12739                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12740                           ;	Single-Supply ICSP Enable bit
 12741                           ;	LVP = OFF, Single-Supply ICSP disabled
 12742                           ;	Boot Block Size Select bit
 12743                           ;	BBSIZ = OFF, 1kW boot block size
 12744                           ;	Extended Instruction Set Enable bit
 12745                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12746                           ;	Background Debugger Enable bit
 12747                           ;	DEBUG = 0x1, unprogrammed default
 12748   300006                     	org	3145734
 12749   300006  81                 	db	129
 12750                           
 12751                           ; Padding undefined space
 12752   300007                     	org	3145735
 12753   300007  FF                 	db	255
 12754                           
 12755                           ;Config register CONFIG5L @ 0x300008
 12756                           ;	Code Protection bit
 12757                           ;	CP0 = OFF, Block 0 not code-protected
 12758                           ;	Code Protection bit
 12759                           ;	CP1 = OFF, Block 1 not code-protected
 12760   300008                     	org	3145736
 12761   300008  03                 	db	3
 12762                           
 12763                           ;Config register CONFIG5H @ 0x300009
 12764                           ;	Boot Block Code Protection bit
 12765                           ;	CPB = OFF, Boot block not code-protected
 12766                           ;	Data EEPROM Code Protection bit
 12767                           ;	CPD = OFF, Data EEPROM not code-protected
 12768   300009                     	org	3145737
 12769   300009  C0                 	db	192
 12770                           
 12771                           ;Config register CONFIG6L @ 0x30000A
 12772                           ;	Table Write Protection bit
 12773                           ;	WRT0 = OFF, Block 0 not write-protected
 12774                           ;	Table Write Protection bit
 12775                           ;	WRT1 = OFF, Block 1 not write-protected
 12776   30000A                     	org	3145738
 12777   30000A  03                 	db	3
 12778                           
 12779                           ;Config register CONFIG6H @ 0x30000B
 12780                           ;	Configuration Register Write Protection bit
 12781                           ;	WRTC = OFF, Configuration registers not write-protected
 12782                           ;	Boot Block Write Protection bit
 12783                           ;	WRTB = OFF, Boot block not write-protected
 12784                           ;	Data EEPROM Write Protection bit
 12785                           ;	WRTD = OFF, Data EEPROM not write-protected
 12786   30000B                     	org	3145739
 12787   30000B  E0                 	db	224
 12788                           
 12789                           ;Config register CONFIG7L @ 0x30000C
 12790                           ;	Table Read Protection bit
 12791                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
 12792                           ;	Table Read Protection bit
 12793                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
 12794   30000C                     	org	3145740
 12795   30000C  03                 	db	3
 12796                           
 12797                           ;Config register CONFIG7H @ 0x30000D
 12798                           ;	Boot Block Table Read Protection bit
 12799                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
 12800   30000D                     	org	3145741
 12801   30000D  40                 	db	64
 12802                           tosu	equ	0xFFF
 12803                           tosh	equ	0xFFE
 12804                           tosl	equ	0xFFD
 12805                           stkptr	equ	0xFFC
 12806                           pclatu	equ	0xFFB
 12807                           pclath	equ	0xFFA
 12808                           pcl	equ	0xFF9
 12809                           tblptru	equ	0xFF8
 12810                           tblptrh	equ	0xFF7
 12811                           tblptrl	equ	0xFF6
 12812                           tablat	equ	0xFF5
 12813                           prodh	equ	0xFF4
 12814                           prodl	equ	0xFF3
 12815                           indf0	equ	0xFEF
 12816                           postinc0	equ	0xFEE
 12817                           postdec0	equ	0xFED
 12818                           preinc0	equ	0xFEC
 12819                           plusw0	equ	0xFEB
 12820                           fsr0h	equ	0xFEA
 12821                           fsr0l	equ	0xFE9
 12822                           wreg	equ	0xFE8
 12823                           indf1	equ	0xFE7
 12824                           postinc1	equ	0xFE6
 12825                           postdec1	equ	0xFE5
 12826                           preinc1	equ	0xFE4
 12827                           plusw1	equ	0xFE3
 12828                           fsr1h	equ	0xFE2
 12829                           fsr1l	equ	0xFE1
 12830                           bsr	equ	0xFE0
 12831                           indf2	equ	0xFDF
 12832                           postinc2	equ	0xFDE
 12833                           postdec2	equ	0xFDD
 12834                           preinc2	equ	0xFDC
 12835                           plusw2	equ	0xFDB
 12836                           fsr2h	equ	0xFDA
 12837                           fsr2l	equ	0xFD9
 12838                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    0
    Data        4
    BSS         141
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      81
    BANK0           160    132     159
    BANK1           256     12      92
    BANK2           256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    EUSART_TransmitString@a	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[9]), STR_3(CODE[3]), STR_4(CODE[9]), STR_5(CODE[7]), 
		 -> STR_7(CODE[3]), uart_buffer(COMRAM[10]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S1627$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    S1627$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_11(CODE[4]), STR_8(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    i2_show7Segment->i2_displayDigits
    i2_setDisplayDigits->i2___fltol
    i2___fltol->i2___flmul
    i2_EUSART_TransmitString->i2_EUSART_TransmitChar

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _show7Segment->_displayDigits
    _setDisplayDigits->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _EUSART_TransmitString->_EUSART_TransmitChar
    _EEPROMWrite->_getHighByte
    _EEPROMWrite->_getLowByte
    _EEPROMRead->_getHighByte
    _EEPROMRead->_getLowByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   25308
                                            128 BANK0      4     4      0
                         _EEPROMRead
                        _EEPROMWrite
              _EUSART_TransmitString
                            ___flmul
                           ___xxtofl
                        _adcSampling
                        _getHighByte
                         _getLowByte
                 _setButtonInterrupt
                   _setDisplayDigits
                           _setupADC
                        _setupEUSART
                           _setupI2C
                        _setupTimer1
                       _show7Segment
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   18141
                                            122 BANK0      6     0      6
                                              0 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   17811
                                            116 BANK0      6     1      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     8      5   17584
                                            104 BANK0     12     7      5
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   8     5      3     266
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   16240
                                             51 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     115
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     3      6    1038
                                             16 BANK0      9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     481
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     335
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     217
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     102
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     495
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     201
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3031
                                             39 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2954
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      68
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     290
                                             39 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     142
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1713
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (1) _show7Segment                                         0     0      0     405
                      _displayDigits
                 _get7SegmentPattern
 ---------------------------------------------------------------------------------
 (2) _get7SegmentPattern                                   2     2      0     129
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _displayDigits                                        7     5      2     276
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _setupTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupEUSART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setDisplayDigits                                     0     0      0    3126
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     250
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     265
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     352
                                             39 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2259
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _setButtonInterrupt                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcSampling                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     517
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _EUSART_TransmitString                                6     4      2     195
                                              1 BANK0      6     4      2
                _EUSART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _EUSART_TransmitChar                                  1     1      0      47
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROMWrite                                          4     1      3     238
                                              2 BANK0      4     1      3
                           _I2CStart
                            _I2CStop
                           _I2CWrite
                        _getHighByte
                         _getLowByte
 ---------------------------------------------------------------------------------
 (1) _EEPROMRead                                           3     1      2     279
                                              2 BANK0      3     1      2
                            _I2CRead
                         _I2CRestart
                           _I2CStart
                            _I2CStop
                           _I2CWrite
                        _getHighByte
                         _getLowByte
 ---------------------------------------------------------------------------------
 (1) _getLowByte                                           2     0      2      40
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getHighByte                                          2     0      2      40
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2CWrite                                             1     1      0      47
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2CStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CRestart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CRead                                              1     1      0      47
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  8     8      0    2411
                                             35 COMRAM     8     8      0
            i2_EUSART_TransmitString
                      i2_adcSampling
                 i2_setDisplayDigits
                     i2_show7Segment
 ---------------------------------------------------------------------------------
 (10) i2_show7Segment                                      0     0      0     255
                    i2_displayDigits
               i2_get7SegmentPattern
 ---------------------------------------------------------------------------------
 (11) i2_get7SegmentPattern                                2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) i2_displayDigits                                     7     5      2     187
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) i2_setDisplayDigits                                  0     0      0    2036
                          i2___flmul
                          i2___fltol
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     165
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     170
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) i2___fltol                                          10     6      4     231
                                             25 COMRAM    10     6      4
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___flmul                                          25    17      8    1470
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (10) i2_adcSampling                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) i2_EUSART_TransmitString                             6     4      2     120
                                              1 COMRAM     6     4      2
              i2_EUSART_TransmitChar
 ---------------------------------------------------------------------------------
 (11) i2_EUSART_TransmitChar                               1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMRead
     _I2CRead
     _I2CRestart
     _I2CStart
     _I2CStop
     _I2CWrite
     _getHighByte
     _getLowByte
   _EEPROMWrite
     _I2CStart
     _I2CStop
     _I2CWrite
     _getHighByte
     _getLowByte
   _EUSART_TransmitString
     _EUSART_TransmitChar
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _adcSampling
   _getHighByte
   _getLowByte
   _setButtonInterrupt
   _setDisplayDigits
     ___flmul
     ___fltol
       ___flmul (ARG)
     ___lwdiv
     ___lwmod
   _setupADC
   _setupEUSART
   _setupI2C
   _setupTimer1
   _show7Segment
     _displayDigits
     _get7SegmentPattern
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width

 _ISR (ROOT)
   i2_EUSART_TransmitString
     i2_EUSART_TransmitChar
   i2_adcSampling
   i2_setDisplayDigits
     i2___flmul
     i2___fltol
       i2___flmul (ARG)
     i2___lwdiv
     i2___lwmod
   i2_show7Segment
     i2_displayDigits
     i2_get7SegmentPattern

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             767      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256     12      92     35.9%
BITBANK0           160      0       0      0.0%
BANK0              160    132     159     99.4%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     43      81     86.2%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlll        43      0       0      0.0%
BITBIGSFRlh         35      0       0      0.0%
BITBIGSFRllh        10      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     326      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Dec 29 17:55:49 2024

                   ___fldiv@aexp 0078                     ___fldiv@bexp 0077                     ___fldiv@sign 0070  
          i2_EUSART_TransmitChar 3E08                      _SSPSTATbits 0FC7                 _address_low_byte 0041  
             i2___lwdiv@dividend 0001                              l300 3D42                              l221 1E1A  
                            l303 3B26                              l231 3DEE                              l312 3DF4  
                            l321 3670                              l161 3D4C                              l306 3B76  
                            l234 3E2E                              l242 2D18                              l155 3E88  
                            l315 3E06                              l164 3D68                              l340 241C  
                            l228 3E82                              l237 3E40                              l309 3DD4  
                            l270 3E64                              l158 3E8E                              l263 3306  
                            l264 3312                              l273 3E44                              l282 3E76  
                            l338 241A                              l258 2C8A                              l346 3976  
                            l267 3E56                              l291 3D8E                              l259 2D1A  
                            l276 3E52                              l285 3D72                              l294 3D12  
                            l614 2FF0                              l279 3E68                              l623 3D0A  
                            l296 3D20                              l288 3D80                              l608 3544  
                            l297 3D32                              l299 3D40                              l619 3036  
                            l646 2F30                              l910 118E                              l903 10E6  
                            l840 375C                              l904 10D4                              l850 38A8  
                            l931 21CE                              l933 2032                              l942 2078  
                            l847 3764                              l943 2096                              l919 3C50  
                            l944 20EE                              l936 1FF6                              l857 38B0  
                            l945 20DC                              l970 1488                              l971 14A6  
                            l963 1292                              l891 10A6                              l980 15B4  
                            l972 14FE                              l973 14EC                              l877 0EFE  
                            l894 1018                              l886 11CA                              l878 0EEC  
                            l967 15F2                              l879 0EB2                              _ISR 0008  
                            _pad 37DA                  __end_of_I2CRead 3D44                  __end_of_I2CStop 3E54  
                            wreg 0FE8                      i2___flmul@a 0005                      i2___flmul@b 0001  
                 ?_displayDigits 0060                     ___flmul@aexp 007B                     ___flmul@bexp 0080  
                   ___flmul@sign 007A                     ___flmul@temp 0085                     ___flmul@prod 0081  
                           ?_ISR 0001                     ___fltol@exp1 0090                             l1011 2B44  
                           l1004 2AAC                             l1102 0AF4                             l1007 2C08  
                           l1018 2BA0                             l1202 3C08                             l1114 35E4  
                           l1211 3CD0                             l1027 3C94                             l1205 3E94  
                           l1054 37F2                             l1118 35EC                             l1072 06AE  
                           l1128 291A                             l1145 3BC0                             l1162 286E  
                           l1058 384A                             l1074 04EE                             l1138 2A50  
                           l1155 323C                             l1165 27B2                             l1069 0D12  
                           l1182 3AD4                             l1176 3A30                             l1194 3498  
                           l5101 0E1E                             l5111 0E32                             l5103 0E22  
                           l6001 2C22                             l5201 1086                             l5121 0E46  
                           l5113 0E36                             l5105 0E26                             l5041 340E  
                           l6011 2C4A                             l6003 2C2A                             l5203 1096  
                           l5131 0E9A                             l5123 0E4A                             l5115 0E3A  
                           l5107 0E2A                             l5051 0D22                             l5043 342C  
                           l5035 33DE                             l6101 3868                             l6021 2C72  
                           l6013 2C52                             l6005 2C32                             l5301 1F4E  
                           l5213 10F6                             l5221 114C                             l5205 1098  
                           l5141 0EDE                             l5133 0EAA                             l5125 0E4E  
                           l5117 0E3E                             l5109 0E2E                             l5061 0D62  
                           l5053 0D30                             l5045 3462                             l5037 33F2  
                           l6111 38A2                             l6103 3870                             l6015 2C5A  
                           l6007 2C3A                             l6031 2C90                             l5311 1F8C  
                           l5303 1F5E                             l5231 11A2                             l5223 115C  
                           l5215 1102                             l5207 10B6                             l5143 0EE0  
                           l5135 0EC0                             l5119 0E42                             l5127 0E52  
                           l5071 0D92                             l5063 0D64                             l5055 0D32  
                           l5039 3404                             l5401 1220                             l6105 387E  
                           l6041 32D0                             l6033 3242                             l6025 2C7A  
                           l6017 2C62                             l6009 2C42                             l6201 3958  
                           l5321 1FD2                             l5313 1F9C                             l5305 1F5E  
                           l5233 11A4                             l5225 116C                             l5217 1110  
                           l5209 10CC                             l5161 0F68                             l5153 0F30  
                           l5145 0EEA                             l5137 0ECC                             l5129 0E7E  
                           l5081 0DBA                             l5073 0D94                             l5057 0D42  
                           l5065 0D6A                             l5049 0D14                             l6113 3B78  
                           l6131 35FC                             l6123 3D44                             l5411 124C  
                           l5403 1230                             l6107 3894                             l6211 3DD6  
                           l6051 32EA                             l6043 32D2                             l6027 2C82  
                           l6019 2C6A                             l6203 3960                             l5331 2020  
                           l5323 1FE6                             l5315 1FAC                             l5251 1E3E  
                           l5235 11AA                             l5227 118C                             l5219 114A  
                           l5163 0F6C                             l5155 0F40                             l5147 0F0C  
                           l5171 0F8C                             l5139 0ED0                             l5091 0DF2  
                           l5083 0DCA                             l5075 0D9A                             l5067 0D7A  
                           l5059 0D52                             l5243 3BC2                             l6115 3B80  
                           l6061 3E66                             l6133 362E                             l6301 2A76  
                           l6125 3D4A                             l5501 15B8                             l5421 12A2  
                           l5413 125C                             l5405 1236                             l6109 389C  
                           l6141 21F2                             l6221 3E2A                             l6213 3DE2  
                           l6053 3308                             l6045 32DA                             l6205 3968  
                           l5341 2068                             l5333 2030                             l5325 1FF4  
                           l5317 1FBC                             l5309 1F72                             l5261 1E7C  
                           l5253 1E4C                             l5237 11B8                             l5229 119C  
                           l5173 0FB2                             l5181 1008                             l5165 0F7A  
                           l5157 0F4E                             l5149 0F1C                             l5093 0E04  
                           l5085 0DDA                             l5077 0DA8                             l5069 0D80  
                           l5245 3BD0                             l6117 3B9A                             ?_pad 0070  
                           l6063 3D6E                             l6071 3DF4                             l6135 3634  
                           l6311 2AEE                             l6303 2ABC                             l6127 3D5A  
                           l5511 15E2                             l5503 15C8                             l5431 12DC  
                           l5423 12B2                             l5415 126C                             l5407 123C  
                           l6151 2282                             l6143 2202                             l6207 3E78  
                           l6231 3DC2                             l6223 3E2C                             l6215 3DE4  
                           l6055 3310                             l6047 32DC                             l6039 324C  
                           l5343 2076                             l5335 2042                             l5327 2000  
                           l5319 1FC2                             l5271 1EAA                             l5263 1E8C  
                           l5255 1E5A                             l5239 11BA                             l5191 105C  
                           l5183 102E                             l5175 0FE6                             l5167 0F7C  
                           l5159 0F5C                             l5095 0E12                             l5087 0DDC  
                           l5079 0DAA                             l5247 3BE2                             l6119 3BB6  
                           l6065 3D10                             l6057 3E54                             l6073 3E02  
                           l6129 35EE                             l6321 2B76                             l6313 2AFA  
                           l6305 2AD2                             l6225 3E30                             l5505 15D6  
                           l5441 132E                             l5433 12F2                             l5417 127C  
                           l5409 124A                             l5601 2EF0                             l6081 3714  
                           l6161 232C                             l6153 229E                             l6145 2242  
                           l6137 21D0                             l6209 3E7A                             l6241 3DCC  
                           l6233 3DC4                             l6217 3E1E                             l6049 32E4  
                           l5353 20FE                             l5361 2146                             l5337 2058  
                           l5345 2088                             l5329 201E                             l5281 1EE0  
                           l5273 1EB0                             l5265 1E8E                             l5257 1E5C  
                           l5521 349A                             l5193 106A                             l5185 103E  
                           l5177 0FE8                             l5169 0F86                             l5097 0E16  
                           l5089 0DE2                             l5249 3BE8                             l6401 1AF4  
                           l6067 3D24                             l6059 3E42                             l6251 3ADA  
                           l6331 2BB4                             l6323 2B82                             l6315 2B2C  
                           l5507 15D8                             l5451 1374                             l5443 133C  
                           l5435 12FE                             l5427 12C6                             l5419 1282  
                           l5603 2F00                             l6091 374E                             l6083 371C  
                           l6075 36F0                             l6171 2384                             l6163 234A  
                           l6147 2260                             l6155 22BC                             l6139 21E2  
                           l6243 3DCE                             l6235 3DC6                             l6227 3DB6  
                           l6219 3E22                             l5371 21AA                             l5363 2160  
                           l5355 210A                             l5347 20A6                             l5339 205E  
                           l5291 1F1E                             l5283 1EF0                             l5275 1EBE  
                           l5259 1E6C                             l5267 1E94                             l5531 353C  
                           l5523 34CA                             l5195 106C                             l5179 0FF8  
                           l5099 0E1A                             l5515 3C0A                             l5611 37DA  
                           l6411 1B30                             l6403 1AFA                             l6069 3D30  
                           l6261 3B08                             l6253 3AE0                             l6333 2BD8  
                           l6325 2B90                             l6317 2B2E                             l6309 2AE6  
                           l5509 15DE                             l5461 13E2                             l5453 138E  
                           l5445 1348                             l5437 1316                             l5429 12D2  
                           l5605 2F10                             l6093 3750                             l6085 372A  
                           l6077 36FA                             l6181 23C6                             l6173 2394  
                           l6165 234E                             l6157 22CE                             l6149 227E  
                           l6245 3DD0                             l6237 3DC8                             l6229 3DBE  
                           l5373 21AE                             l5365 2176                             l5357 2118  
                           l5349 20D4                             l5293 1F2E                             l5285 1EF2  
                           l5277 1EC0                             l5269 1EA4                             l5533 3542  
                           l5525 34DA                             l5541 2F72                             l5197 107A  
                           l5189 1052                             l5517 3C1C                             l5621 3836  
                           l5613 37EA                             l5701 0342                             l6501 1DF4  
                           l6421 1B72                             l6413 1B40                             l6405 1B0A  
                           l6263 3B10                             l6255 3AEE                             l6335 2BE8  
                           l6327 2BAE                             l6319 2B3A                             l5471 1478  
                           l5463 140C                             l5455 139E                             l5447 1358  
                           l5439 1322                             l5391 11E8                             l5607 2F20  
                           l6095 3756                             l6087 3730                             l6079 370C  
                           l6183 23D6                             l6175 23A6                             l6167 236A  
                           l6159 230E                             l6247 3DD2                             l6239 3DCA  
                           l6191 3916                             l5375 21BC                             l5367 2190  
                           l5359 2142                             l5295 1F36                             l5279 1ED0  
                           l5287 1EF8                             l5527 3508                             l5551 2FDE  
                           l5543 2FA0                             l5199 1082                             l5631 31D2  
                           l5623 313E                             l5615 37FE                             l5711 038C  
                           l5703 0346                             l6271 3C64                             l6503 1DF8  
                           l6423 1B74                             l6415 1B46                             l6407 1B1A  
                           l6431 1BA0                             l6351 1A48                             l6343 1A1A  
                           l6281 3B44                             l6265 3B14                             l6257 3AFC  
                           l6249 3AD6                             l6337 2BF6                             l6329 2BB0  
                           l5473 1486                             l5465 1442                             l5457 13BA  
                           l5449 1364                             l5393 11EA                             l6089 3746  
                           l6097 384C                             l6185 23E8                             l6177 23AA  
                           l6169 2372                             l6193 391E                             l5377 21C2  
                           l5369 21A8                             l5297 1F3A                             l5289 1F08  
                           l5529 3518                             l5553 302E                             l5545 2FB0  
                           l5537 2F32                             l5561 3CEA                             l5641 3234  
                           l5625 315E                             l5617 3812                             l5801 072E  
                           l5721 03DC                             l5713 039C                             l5705 036A  
                           l6273 3C6C                             l6505 1E12                             l6441 1C2A  
                           l6433 1BB0                             l6425 1B7C                             l6417 1B56  
                           l6409 1B20                             l6361 1A62                             l6353 1A4A  
                           l6345 1A26                             l6291 3B5E                             l6283 3B48  
                           l6259 3B02                             l6339 2BF8                             l5483 150E  
                           l5491 1556                             l5475 1498                             l5467 1450  
                           l5459 13C6                             l5395 11FA                             l5387 11CC  
                           l6099 3860                             l6187 23F8                             l6179 23B4  
                           l6195 392E                             l5379 21C4                             l5555 3034  
                           l5547 2FBE                             l5539 2F62                             l5563 3CFA  
                           l5627 319E                             l5635 31DE                             l5651 39EA  
                           l5619 3818                             l5811 07C6                             l5803 0736  
                           l5731 0412                             l5723 03EC                             l5715 03A8  
                           l5707 0374                             l6275 3C86                             l6267 3C52  
                           l6507 1E1C                             l6443 1C36                             l6435 1BC2  
                           l6451 1C68                             l6427 1B96                             l6419 1B5C  
                           l6371 1A6C                             l6363 1A64                             l6355 1A4C  
                           l6347 1A40                             l6293 3B6E                             l6285 3B4E  
                           l5493 1570                             l5485 151A                             l5477 14B6  
                           l5469 146E                             l5397 120A                             l5389 11DA  
                           l5581 2E96                             l5573 2E56                             l6189 240A  
                           l6197 3940                             l5549 2FD0                             l5637 31F0  
                           l5629 31C6                             l5661 26D2                             l5653 39FE  
                           l5645 3C96                             l5901 0C6E                             l5821 08AC  
                           l5813 081E                             l5805 073E                             l5741 0474  
                           l5733 041C                             l5725 03F0                             l5717 03B0  
                           l5709 037C                             l6269 3C5C                             l6461 1CA8  
                           l6453 1C7A                             l6445 1C48                             l6437 1BC4  
                           l6429 1B9A                             l6381 1A76                             l6373 1A6E  
                           l6365 1A66                             l6357 1A50                             l6349 1A44  
                           l6287 3B54                             l6279 3B28                             l5495 1584  
                           l5487 1528                             l5479 14E4                             l5399 121A  
                           l5591 2EC6                             l5583 2EA4                             l5575 2E80  
                           l5567 2E2A                             l6199 3952                             l5559 3CD2  
                           l5671 27A2                             l5663 26E6                             l5647 3C9E  
                           l5911 0CEA                             l5903 0C9E                             l5831 0946  
                           l5823 08E0                             l5815 0854                             l5807 074E  
                           l5743 0478                             l5727 03F6                             l5719 03B4  
                           l6471 1CF0                             l6463 1CBE                             l6455 1C7C  
                           l6447 1C62                             l6439 1C0C                             l6391 1A84  
                           l6383 1A78                             l6375 1A70                             l6367 1A68  
                           l6359 1A60                             l6289 3B5A                             l6297 2A56  
                           l5497 159E                             l5489 1552                             l5593 2ED0  
                           l5577 2E82                             l5569 2E42                             l5681 285E  
                           l5665 26F4                             l5673 27D6                             l5657 265A  
                           l5649 39DA                             l5913 0CF2                             l5905 0CAC  
                           l5841 0A20                             l5833 097A                             l5825 08F4  
                           l5809 0762                             l5817 085A                             l5761 04FE  
                           l5745 047E                             l5729 03FE                             l5737 043C  
                           l5921 3572                             l6481 1D36                             l6473 1D04  
                           l6465 1CCE                             l6457 1C8E                             l6449 1C66  
                           l6393 1A88                             l6385 1A7C                             l6377 1A72  
                           l6369 1A6A                             l6299 2A68                             l5499 15AE  
                           l5579 2E92                             l5675 2812                             l5659 267A  
                           l5691 3AA8                             l5907 0CC4                             l5851 0A46  
                           l5835 09D4                             l5843 0A24                             l5827 0928  
                           l5819 0878                             l5771 05E8                             l5763 0502  
                           l5747 0486                             l5739 0464                             l5755 049E  
                           l5923 357A                             l5931 2870                             l6483 1D7E  
                           l6475 1D14                             l6467 1CDC                             l6459 1C9E  
                           l6491 1DCA                             l6395 1A9A                             l6387 1A80  
                           l6379 1A74                             l5589 2EBC                             l5677 2826  
                           l5669 2766                             l5693 3AB4                             l5685 3A84  
                           l5909 0CD4                             l5861 0B14                             l5853 0A52  
                           l5845 0A34                             l5837 09D8                             l5829 0936  
                           l5773 05FC                             l5781 067A                             l5765 0536  
                           l5757 04B6                             l5925 3598                             l5917 3546  
                           l5941 28CE                             l5933 2894                             l6493 1DDA  
                           l6485 1D9C                             l6477 1D18                             l6469 1CEC  
                           l6397 1AAA                             l6389 1A82                             l5599 2EE4  
                           l5679 284E                             l5687 3A98                             l5695 3AB8  
                           l5871 0B46                             l5863 0B24                             l5855 0ACC  
                           l5847 0A3C                             l5839 0A0C                             l5791 06E0  
                           l5783 06B6                             l5775 0630                             l5767 0576  
                           l5927 35B6                             l5919 3550                             l5951 2912  
                           l5943 28D6                             l5935 289C                             l6487 1DA8  
                           l6479 1D2A                             l6495 1DDC                             l6399 1AAC  
                           l5689 3AA4                             l5881 0B7A                             l5873 0B4A  
                           l5865 0B28                             l5857 0AEC                             l5849 0A3E  
                           l5793 06E4                             l5785 06C4                             l5777 0638  
                           l5769 05AA                             l5697 0320                             l5929 35BE  
                           l5961 2988                             l5945 28EE                             l5937 28A8  
                           l6497 1DEE                             l6489 1DBE                             l5891 0C1A  
                           l5883 0B7E                             l5875 0B50                             l5867 0B2E  
                           l5859 0B06                             l5795 06F6                             l5787 06D0  
                           l5699 0334                             l5955 2920                             l5947 28FA  
                           l5939 28AC                             l6499 1DF0                             l5885 0B84  
                           l5869 0B36                             l5877 0B56                             l5893 0C1E  
                           l5797 0704                             l5789 06D8                             l5965 29B2  
                           l5957 293E                             l5949 290C                             l5981 2A2A  
                           l5991 3E8A                             l5895 0C3C                             l5887 0BDC  
                           l5879 0B68                             l5799 071C                             l5975 2A04  
                           l5967 29C8                             l5959 295E                             l5897 0C58  
                           l5889 0C12                             l5969 29D6                             l5977 2A1C  
                           l5987 3E84                             l5995 2C0E                             l5899 0C60  
                           l5997 2C12                             l5999 2C1A                             STR_1 0301  
                           STR_2 0311                             STR_3 030E                             STR_4 0301  
                           STR_5 030A                             STR_6 0311                             STR_7 030E  
                           STR_8 0316                             u6000 10CC                             u6001 10C8  
                           u6010 10E2                             u6011 10DE                             u6020 10F6  
                           u6100 3C08                             u6021 10F2                             u6101 3C04  
                           u6110 1E5A                             u6030 1110                             u6111 1E56  
                           u6031 110C                             u6200 1FF4                             u6120 1E6C  
                           u6040 114A                             u7000 05AA                             u6201 1FF0  
                           u6121 1E68                             u6041 1146                             u7001 05A6  
                           u6210 201E                             u6130 1E7C                             u6050 115C  
                           u7010 05E8                             u6211 201A                             u6131 1E78  
                           u6051 1158                             u7011 05E4                             u6300 2118  
                           u6220 2042                             u6140 1EBE                             u6060 116C  
                           u7100 0928                             u7020 0676                             u6301 2114  
                           u6221 203E                             u6141 1EBA                             u6061 1168  
                           u7101 0924                             u7021 0672                             u6310 2160  
                           u6230 2058                             u6150 1ED0                             u6070 118C  
                           u7110 0936                             u7030 06AE                             u6311 215C  
                           u6231 2054                             u6151 1ECC                             u6071 1188  
                           u7111 0932                             u7031 06AA                             u6400 12A2  
                           u6320 2190                             u6240 2076                             u6160 1EE0  
                           u6080 119C                             u7200 0CBE                             u7120 09D4  
                           u7040 06C4                             u6401 129E                             u6321 218C  
                           u6241 2072                             u6161 1EDC                             u6081 1198  
                           u7201 0CB8                             u7121 09D0                             u7041 06C0  
                           u6410 12B2                             u6330 21BC                             u6250 2096  
                           u6170 1F1E                             u6090 11B8                             u7210 0CC0  
                           u7130 0A20                             u7050 06F6                             u6411 12AE  
                           u6331 21B8                             u6251 2092                             u6171 1F1A  
                           u6091 11B4                             u7131 0A1C                             u7051 06F2  
                           u6500 1570                             u6420 142C                             u6340 11E8  
                           u6260 20A6                             u6180 1F5E                             u5700 3462  
                           u7220 0CD4                             u7140 0ACC                             u7060 0704  
                           u6501 156C                             u6341 11E4                             u6261 20A2  
                           u6181 1F5A                             u5701 345E                             u7221 0CD0  
                           u7141 0AC8                             u7061 0700                             u6510 159E  
                           u6430 1486                             u6350 11FA                             u7310 3306  
                           u6270 20D4                             u6190 1FD2                             u5710 0D30  
                           u7150 0B06                             u7070 072E                             u7230 3572  
                           u6511 159A                             u6431 1482                             u6351 11F6  
                           u7311 3302                             u6271 20D0                             u6191 1FCE  
                           u5711 0D2C                             u7151 0B02                             u7071 072A  
                           u7231 356E                             u7320 3E64                             u7400 3E02  
                           u6520 15D6                             u6440 14A6                             u6360 120A  
                           u7304 32B4                             u6280 20EA                             u6600 302E  
                           u5800 0E7E                             u5720 0D42                             u7160 0B14  
                           u7080 0878                             u7240 35E4                             u7321 3E60  
                           u7401 3DFE                             u6521 15D2                             u6441 14A2  
                           u6425 1422                             u6361 1206                             u7305 32B0  
                           u6281 20E6                             u6601 302A                             u5801 0E7A  
                           u5721 0D3E                             u7161 0B10                             u7081 0874  
                           u7241 35E0                             u7330 3E52                             u6450 14B6  
                           u6370 124A                             u7410 370C                             u6290 20FE  
                           u6530 34CA                             u6610 3CEA                             u5810 0E96  
                           u5730 0D52                             u7170 0B68                             u7090 08E0  
                           u7250 2894                             u7331 3E4E                             u6451 14B2  
                           u6371 1246                             u7411 3708                             u6291 20FA  
                           u6531 34C6                             u6611 3CE6                             u5811 0E90  
                           u5731 0D4E                             u7171 0B64                             u7091 08DC  
                           u7251 2890                             u7340 3E76                             u7500 3660  
                           u6460 14E4                             u6380 125C                             u6620 2E42  
                           u7420 372A                             u6540 3508                             u5900 0F7A  
                           u5820 0E98                             u5740 0D92                             u6700 3836  
                           u7180 0C3C                             u7260 28CE                             u7341 3E72  
                           u6461 14E0                             u6381 1258                             u6621 2E3E  
                           u7421 3726                             u6541 3504                             u5901 0F76  
                           u5741 0D8E                             u6701 3832                             u7181 0C38  
                           u7261 28CA                             u7350 3D80                             u7510 3670  
                           u6470 14FA                             u6390 126C                             u6630 2E76  
                           u7430 3746                             u6550 353C                             u5910 0FB2  
                           u5830 0EC0                             u5750 0DA8                             u6710 3180  
                           u5670 33F2                             u7190 0C58                             u7270 295A  
                           u7351 3D7C                             u7511 366C                             u6471 14F6  
                           u6391 1268                             u7431 3742                             u6551 3538  
                           u5911 0FAE                             u5831 0EBC                             u5751 0DA4  
                           u5671 33EE                             u7191 0C54                             u7271 2956  
                           u7360 3D8E                             u6480 150E                             u6640 2EA4  
                           u7440 3860                             u7520 21E2                             u7600 392E  
                           u6560 2F62                             u5920 0FF8                             u5840 0EDE  
                           u5760 0DBA                             u6720 319E                             u6800 26A4  
                           u5680 3404                             u7361 3D8A                             u6481 150A  
                           u6641 2EA0                             u7441 385C                             u7521 21DE  
                           u7601 392A                             u6561 2F5E                             u5921 0FF4  
                           u5841 0EDA                             u5761 0DB6                             u6721 319A  
                           u5681 3400                             u7370 3D20                             u6490 1528  
                           u6650 2EB8                             u7450 387E                             u7530 2202  
                           u7610 3940                             u6570 2FA0                             u5930 102E  
                           u5850 0EFE                             u5770 0DCA                             u6730 31C6  
                           u6810 26D2                             u5690 342C                             u7371 3D1C  
                           u7507 3656                             u6491 1524                             u6651 2EB4  
                           u6635 2E6C                             u7451 387A                             u7531 21FE  
                           u7611 393C                             u6571 2F9C                             u5931 102A  
                           u5851 0EFA                             u5771 0DC6                             u6731 31C2  
                           u6715 3174                             u6811 26CE                             u5691 3428  
                           u7700 2BAE                             u6660 2EE0                             u7460 3894  
                           u7540 22CE                             u7284 325E                             u7620 3952  
                           u6580 2FBE                             u5940 103E                             u5860 0F0C  
                           u5780 0E04                             u6740 31F0                             u6820 26F4  
                           u6900 3AD4                             u7701 2BAA                             u6661 2EDC  
                           u7461 3890                             u7541 22CA                             u7285 325A  
                           u7621 394E                             u6581 2FBA                             u5941 103A  
                           u5861 0F08                             u5781 0E00                             u6741 31EC  
                           u6821 26F0                             u6805 269A                             u6901 3AD0  
                           u7390 3D40                             u7710 2BE8                             u7630 2A68  
                           u6670 2F00                             u7550 2384                             u7294 328A  
                           u6590 2FDE                             u5950 106A                             u5870 0F1C  
                           u5790 0E12                             u6910 0342                             u7470 3BB6  
                           u7391 3D3C                             u7711 2BE4                             u7631 2A64  
                           u6671 2EFC                             u7551 2380                             u7295 3286  
                           u6591 2FDA                             u5951 1066                             u5871 0F18  
                           u5791 0E0E                             u6911 033E                             u7471 3BB2  
                           u7720 2BF6                             u7640 2A76                             u7480 3D5A  
                           u6680 2F10                             u7560 23A6                             u5960 107A  
                           u5880 0F4E                             u6760 322A                             u6840 2762  
                           u6920 038C                             u7800 1CBE                             u7385 3D2E  
                           u7721 2BF2                             u7641 2A72                             u7481 3D56  
                           u6681 2F0C                             u7561 23A2                             u5961 1076  
                           u5881 0F4A                             u6761 3224                             u6841 275E  
                           u6921 0388                             u7801 1CBA                             u7386 3D30  
                           u7490 362A                             u7650 2AD2                             u7570 23C6  
                           u5970 1096                             u5890 0F5C                             u6770 322C  
                           u6850 2786                             u6690 37EA                             u6930 039C  
                           u7810 1D2A                             u7730 1A9A                             u7651 2ACE  
                           u7571 23C2                             u5971 1092                             u5891 0F58  
                           u6755 3202                             u6835 2708                             u6691 37E6  
                           u6931 0398                             u7811 1D26                             u7731 1A96  
                           u7660 2B28                             u7580 23E8                             u5980 10A6  
                           u6860 27A2                             u6836 2712                             u6780 3CD0  
                           u6940 03DC                             u7820 1DDA                             u7740 1AAA  
                           u7661 2B24                             u7581 23E4                             u5981 10A2  
                           u6861 279E                             u6837 2722                             u6781 3CCC  
                           u6941 03D8                             u7821 1DD6                             u7741 1AA6  
                           u7670 2B72                             u7590 240A                             u5990 10B6  
                           u6870 27F6                             u6790 39EA                             u6950 03EC  
                           u7830 1DEE                             u7750 1B72                             u7671 2B6E  
                           u7591 2406                             u5991 10B2                             u6855 277C  
                           u6791 39E6                             u6951 03E8                             u7831 1DEA  
                           u7751 1B6E                             u7680 2B90                             u6880 2812  
                           u6960 0464                             u7760 1BB0                             u7497 3620  
                           u7681 2B8C                             u6881 280E                             u6961 0460  
                           u7761 1BAC                             u7690 2BA0                             u6890 284E  
                           u6970 0474                             u7770 1BC2                             u7691 2B9C  
                           u7907 32D4                             u6891 284A                             u6875 27EC  
                           u6971 0470                             u7771 1BBE                             u6980 04EA  
                           u7780 1C7A                             u7917 32DE                             u6981 04E6  
                           u7781 1C76                             u6990 0576                             u7790 1C8E  
                           u7927 330A                             u6991 0572                             u7791 1C8A  
                           u7847 1A32                             u7937 3B1C                             u7857 1A52  
                           u7867 1B88                             u7877 1C54                             u7887 1E04  
                           u7897 1E28                             _TMR1 0FCE                   i2_show7Segment 3978  
        i2_EUSART_TransmitString 3672                             _dbuf 0100                             _labs 39DA  
                           _main 1A1A                             _prec 00EE                             pad@i 0077  
                           pad@p 0074                             fsr1h 0FE2               i2___lwdiv@quotient 0005  
                           fsr2h 0FDA                             indf1 0FE7                             indf2 0FDF  
                           fsr1l 0FE1                             fsr2l 0FD9                             btemp 0052  
               __end_of_I2CStart 3E66                 __end_of_I2CWrite 3D90                    ___fpclassifyf 313E  
                           prodh 0FF4                             prodl 0FF3                             start 0266  
                   i2___fltol@f1 001A                  ___fldiv@new_exp 0071                     ___param_bank 0000  
                          ??_ISR 0024              displayDigits@digit0 0064              displayDigits@digit1 0060  
            displayDigits@digit2 0061                            ??_pad 0076                    ___fltol@sign1 008F  
                          ?_labs 0060                  __end_of___fladd 11CC                            ?_main 0001  
                __end_of___fldiv 21D0                  __end_of___flneg 3D0C                            STR_11 031A  
                __end_of___flmul 15F4                  __end_of___flsub 3C52                  __end_of___fltol 2F32  
                          _ANSEL 0F7E                  EEPROMWrite@data 0064                            _T1CON 0FCD  
                __end_of___lwdiv 3766                  __end_of___lwmod 38B2                            i2l202 0242  
                          i2l312 3E0A                            i2l321 36EE                            i2l161 3D98  
                          i2l242 2E26                            i2l315 3E1C                            i2l164 3DB4  
                          i2l340 2658                            i2l263 33D0                            i2l264 33DC  
                          i2l338 2656                            i2l258 2D9A                            i2l346 39D8  
                          i2l259 2E28                            i2l187 014C                            i2l179 019A  
                          i2l646 313C                            i2l840 37D0                            i2l850 390C  
                          i2l847 37D8                            i2l857 3914                            i2l970 18AE  
                          i2l971 18CC                            i2l963 16B8                            i2l980 19DA  
                          i2l972 1924                            i2l973 1912                            i2l967 1A18  
                   vfpfcnvrt@fmt 00CA                            _SPBRG 0FAF                            _TRISA 0F92  
                          _TXREG 0FAD         i2EUSART_TransmitString@a 0002         i2EUSART_TransmitString@i 0006  
                          _flags 00F8              read_prec_or_width@c 0065              read_prec_or_width@n 0066  
                          _fputc 33DE                            _fputs 3BC2                            labs@a 0060  
                          pad@fp 0070                            _width 00EC                            _putch 3E94  
         __end_ofi2_show7Segment 39DA                            tablat 0FF5                            ttemp5 0053  
                          ttemp6 0056                            ttemp7 005A                            status 0FD8  
                          wtemp8 0053                  __end_of_sprintf 3C96                   ?___fpclassifyf 0060  
                  i2___flmul@grs 000E                    i2_adcSampling 3D90                  __initialization 3A32  
         ?i2_EUSART_TransmitChar 0001                     __end_of_labs 3A32                     __end_of_main 1E3E  
              ??i2_displayDigits 0003                        ??_I2CRead 0060                        ??_I2CStop 0060  
                         ??_labs 0064                           ??_main 00E0                    __activetblptr 0002  
                ??_displayDigits 0062        i2get7SegmentPattern@digit 0001       __end_of_read_prec_or_width 35EE  
                         _ADCON0 0FC2                           _ADCON1 0FC1                           _ADCON2 0FC0  
                         ?_fputc 0060                           ?_fputs 0069                           _ADRESH 0FC4  
                         _ADRESL 0FC3        ??i2_EUSART_TransmitString 0004               _get7SegmentPattern 2C0A  
                         ?_putch 0001                     ??_I2CRestart 0060                  ?i2_show7Segment 0001  
                         i2l4211 2D1E                           i2l4301 30D2                           i2l4221 2D42  
                         i2l4213 2D22                           i2l4311 30FC                           i2l4303 30DC  
                         i2l4231 2D6A                           i2l4223 2D4A                           i2l4215 2D2A  
                         i2l4401 16F8                           i2l4313 310C                           i2l4321 3766  
                         i2l4241 2D8A                           i2l4233 2D72                           i2l4225 2D52  
                         i2l4217 2D32                           i2l4411 1748                           i2l4403 1702  
                         i2l4315 311C                           i2l4331 379E                           i2l4323 376E  
                         i2l4243 2D92                           i2l4235 2D7A                           i2l4227 2D5A  
                         i2l4219 2D3A                           i2l4421 178A                           i2l4413 1754  
                         i2l4405 1718                           i2l4317 312C                           i2l4309 30F0  
                         i2l4341 37CA                           i2l4333 37A4                           i2l4325 3780  
                         i2l4261 33A6                           i2l4237 2D82                           i2l4229 2D62  
                         i2l4431 17EC                           i2l4423 179A                           i2l4415 1762  
                         i2l4407 1724                           i2l4335 37BA                           i2l4327 3788  
                         i2l4351 38E2                           i2l4343 38B2                           i2l4271 33DA  
                         i2l4263 33A8                           i2l4255 331E                           i2l4247 2DA0  
                         i2l4273 3E0A                           i2l4441 1894                           i2l4433 1808  
                         i2l4425 17B4                           i2l4417 176E                           i2l4409 173C  
                         i2l4361 1600                           i2l4337 37C2                           i2l4329 3790  
                         i2l4353 38F8                           i2l4345 38C4                           i2l4265 33B0  
                         i2l4257 339C                           i2l4249 3316                           i2l4275 3E18  
                         i2l4451 190A                           i2l4443 189E                           i2l4435 1832  
                         i2l4427 17C4                           i2l4419 177E                           i2l4371 1640  
                         i2l4363 160E                           i2l4291 30A2                           i2l4283 3062  
                         i2l4339 37C4                           i2l4355 3900                           i2l4347 38CC  
                         i2l4267 33B4                           i2l4259 339E                           i2l4461 1978  
                         i2l4445 18AC                           i2l4437 1868                           i2l4429 17E0  
                         i2l4381 1670                           i2l4373 1646                           i2l4365 1610  
                         i2l4293 30B0                           i2l4285 308C                           i2l4277 3038  
                         i2l4357 3906                           i2l4349 38D4                           i2l4269 33D2  
                         i2l4711 3DA6                           i2l4471 19D4                           i2l4455 1934  
                         i2l4463 197C                           i2l4447 18BE                           i2l4439 1876  
                         i2l4391 16A8                           i2l4383 1672                           i2l4375 1656  
                         i2l4367 1620                           i2l4359 15F4                           i2l4287 308E  
                         i2l4279 304E                           i2l4713 3672                           i2l4473 19DE  
                         i2l4481 1A04                           i2l4465 1996                           i2l4457 1940  
                         i2l4449 18DC                           i2l4393 16C8                           i2l4385 1682  
                         i2l4377 165C                           i2l4369 1630                           i2l4289 309E  
                         i2l4721 241E                           i2l4801 0066                           i2l4715 367E  
                         i2l4707 3D90                           i2l4483 1A08                           i2l4475 19EE  
                         i2l4467 19AA                           i2l4459 194E                           i2l4395 16D8  
                         i2l4387 1692                           i2l4379 1662                           i2l4299 30C8  
                         i2l4731 24AC                           i2l4723 2430                           i2l4811 0094  
                         i2l4803 0068                           i2l4717 36AE                           i2l4709 3D96  
                         i2l4477 19FC                           i2l4469 19C4                           i2l4389 16A2  
                         i2l4741 2512                           i2l4733 24C8                           i2l4725 2440  
                         i2l4821 00C4                           i2l4805 0078                           i2l4813 0096  
                         i2l4719 36B2                           i2l4479 19FE                           i2l4399 16EC  
                         i2l4751 25A6                           i2l4743 2552                           i2l4735 24CC  
                         i2l4727 2450                           i2l4831 0114                           i2l4823 00DA  
                         i2l4815 00A4                           i2l4807 007A                           i2l4761 25E6  
                         i2l4745 256E                           i2l4753 25AE                           i2l4737 24E4  
                         i2l4729 2490                           i2l4833 0124                           i2l4841 0152  
                         i2l4825 00DC                           i2l4817 00B2                           i2l4809 0082  
                         i2l4771 2634                           i2l4763 25F0                           i2l4755 25C0  
                         i2l4747 258A                           i2l4739 2500                           i2l4851 01DA  
                         i2l4843 01A8                           i2l4835 0130                           i2l4827 00F0  
                         i2l4819 00B6                           i2l4773 2646                           i2l4765 2602  
                         i2l4757 25D0                           i2l4749 258E                           i2l4781 39A2  
                         i2l4861 021C                           i2l4853 01E2                           i2l4845 01BE  
                         i2l4837 0144                           i2l4829 010C                           i2l4767 2612  
                         i2l4759 25E2                           i2l4783 39B4                           i2l4775 3978  
                         i2l4863 0232                           i2l4847 01C2                           i2l4791 002A  
                         i2l4769 2624                           i2l4785 39BA                           i2l4777 3980  
                         i2l4865 0236                           i2l4849 01D2                           i2l4857 01EA  
                         i2l4793 0038                           i2l4787 39C2                           i2l4779 3990  
                         i2l4867 023E                           i2l4859 020A                           i2l4795 003A  
                         i2l4789 39CA                           i2l4797 0042                           i2l4799 0054  
                 ?i2_adcSampling 0001                           _SSPADD 0FC8                           _SSPBUF 0FC9  
               __end_of___xxtofl 2C0A              ?_get7SegmentPattern 0001               _setButtonInterrupt 3E30  
                   vfprintf@cfmt 00D9                           ___flge 2F32                           ___fleq 349A  
                      ??___fladd 0068                        ??___fldiv 0068                        ??___flneg 0064  
                      ??___flmul 0076                        ??___flsub 008F                        ??___fltol 008B  
                         _efgtoa 0320                        ??___lwdiv 0064                        ??___lwmod 0064  
            _EUSART_TransmitChar 3DF0                           _floorf 265A                 _setDisplayDigits 21D0  
            ?_setButtonInterrupt 0001                           _memcpy 3A84             read_prec_or_width@ap 0061  
                         clear_0 3A58                           clear_1 3A64                           clear_2 3A70  
                         isa$std 0001                           pad@buf 0072               __end_of_I2CRestart 3E78  
                   ?_setupEUSART 0001                           _strcpy 3C96             ??_get7SegmentPattern 0060  
                   ??_EEPROMRead 0064                           fputc@c 0060                           fputs@c 006D  
                         fputs@i 006E                     __pdataCOMRAM 004E                           fputs@s 0069  
              __end_ofi2___flmul 1A1A                __end_ofi2___fltol 313E                 __end_of_setupI2C 3E30  
               __end_of_setupADC 3E84                  ___fpclassifyf@e 0068                        ?_I2CStart 0001  
                ___fpclassifyf@u 006A                  ___fpclassifyf@x 0060                        ?_I2CWrite 0001  
              __end_ofi2___lwdiv 37DA                     __mediumconst 0000                __end_ofi2___lwmod 3916  
                         tblptrh 0FF7                           tblptrl 0FF6                           tblptru 0FF8  
    i2get7SegmentPattern@pattern 0002                           putch@c 0001                 __end_of_vfprintf 3BC2  
                   ?_setupTimer1 0001                        ??_sprintf 00E0          ??_EUSART_TransmitString 0063  
                 i2___flmul@aexp 0012                   i2___flmul@bexp 0013             ?_EUSART_TransmitChar 0001  
                 i2___flmul@sign 000D                   i2___flmul@temp 0018                   i2___flmul@prod 0014  
           ??_setButtonInterrupt 0060                 i2displayDigits@i 0006                       ___flge@ff1 0087  
                     ___flge@ff2 008B                  ??___fpclassifyf 0064                     ___xxtofl@arg 006A  
                   ___xxtofl@exp 0069                     ___xxtofl@val 0060                       ___fleq@ff1 0060  
                     ___fleq@ff2 0064                       __accesstop 0060          __end_of__initialization 3A76  
                 i2___fltol@exp1 0023                    _adc_step_size 004E                       ___flneg@f1 0060  
                  ___rparam_used 0001                       ___fltol@f1 0087               __end_of_EEPROMRead 3B78  
             i2___lwmod@dividend 0001                   __pcstackCOMRAM 0001       __end_ofi2_setDisplayDigits 265A  
                  __end_of_fputc 349A                    __end_of_fputs 3C0A                    __end_of_putch 3E96  
                  _turnOnDisplay 00FA                       ??_I2CStart 0060                       ??_I2CWrite 0060  
                        ??_fputc 0064            ??_EUSART_TransmitChar 0060                          ??_fputs 006D  
        EUSART_TransmitChar@data 0060                          ??_putch 0060                  ??i2_adcSampling 0001  
                     __pbssBANK0 00E4                       __pbssBANK1 0100                    ??_adcSampling 0060  
                     I2CRead@ack 0060                          ?___flge 0087                          ?___fleq 0060  
                        ?_efgtoa 0093                          ?_floorf 0079                          _I2CRead 3D0C  
                        ?_memcpy 0060                       _getLowByte 3E84                          _I2CStop 3E42  
                        ?_strcpy 0060                        ?___xxtofl 0060                          _SSPCON1 0FC6  
                        _SSPCON2 0FC5                    ?_show7Segment 0001                    _address_index 00F2  
                        _SSPSTAT 0FC7                  i2_displayDigits 3314          ??i2_EUSART_TransmitChar 0001  
                        __Hparam 0000                          __Lparam 0000              __end_of_adcSampling 3D6A  
                      ?_setupI2C 0001                        ?_setupADC 0001     __end_ofi2_get7SegmentPattern 2E2A  
                        ___fladd 0D14                          ___fldiv 1E3E                          ___flneg 3CD2  
                        ___flmul 11CC                          ___flsub 3C0A                          ___fltol 2E2A  
                 displayDigits@i 0065                          ___lwdiv 36F0                          ___lwmod 384C  
                      ?_vfprintf 00D4                     __psmallconst 0300                          __pcinit 3A32  
                      _ANSELbits 0F7E                          __ramtop 0300                          __ptext0 1A1A  
                        __ptext1 3C52                          __ptext2 3B78                          __ptext3 2870  
                        __ptext4 3546                          __ptext5 0320                          __ptext6 3C96  
                        __ptext7 37DA                          __ptext8 3BC2                          __ptext9 33DE  
          read_prec_or_width@fmt 0060                       ??___xxtofl 0064                 ??i2_show7Segment 0008  
                   I2CWrite@data 0060                          efgtoa@c 0099                          efgtoa@d 00A7  
                        efgtoa@e 00AB                          efgtoa@f 0095                          efgtoa@g 00BE  
                        efgtoa@h 00B5                          efgtoa@i 00B3                          efgtoa@l 00B9  
                        efgtoa@m 00A9                          efgtoa@n 00C2                          efgtoa@p 009E  
                        efgtoa@t 00A0                          efgtoa@u 00C4                          efgtoa@w 00AD  
                 ??_show7Segment 0067                    _received_data 0042                          _sprintf 3C52  
           end_of_initialization 3A76                          floorf@e 0087                          floorf@m 0083  
                        floorf@u 0089                          floorf@x 0079         __end_of_setDisplayDigits 241E  
                        memcpy@d 0067                          memcpy@n 0064                          memcpy@s 0069  
                        fputc@fp 0062                    __Lmediumconst 0000                          fputs@fp 006B  
                  ??_EEPROMWrite 0065               _read_prec_or_width 3546                __end_of_vfpfcnvrt 2A52  
                     ??_setupI2C 0060                       ??_setupADC 0060                       efgtoa@mode 00A5  
                     efgtoa@sign 00BD                        _RCSTAbits 0FAB                          postdec1 0FE5  
                        postdec2 0FDD              ?_read_prec_or_width 0060                    ??_getHighByte 0062  
                        postinc0 0FEE                          postinc1 0FE6                          postinc2 0FDE  
               vfpfcnvrt@convarg 00CE                       ??_vfprintf 00D9                      ?_getLowByte 0060  
                        strcpy@d 0064                        _PORTCbits 0F82                      ___fladd@grs 006F  
          __end_of_displayDigits 3314                    ___xxtofl@sign 0068                        _TRISBbits 0F93  
                      _TRISCbits 0F94          __end_ofi2_displayDigits 33DE             ??_read_prec_or_width 0063  
                    ___fldiv@grs 0073                      ___fldiv@rem 006C                  i2___fltol@sign1 0022  
                      i2___flmul 15F4                        i2___fltol 3038                i2___lwdiv@divisor 0003  
                      i2___lwdiv 3766                        i2___lwmod 38B2                i2___lwdiv@counter 0007  
  __end_of_EUSART_TransmitString 3672                      ___flmul@grs 007C                      _adcSampling 3D44  
                      _TXSTAbits 0FAC              __end_of_EEPROMWrite 3B28                   __end_of___flge 3038  
                 __end_of___fleq 3546                      vfpfcnvrt@ap 00CB                      vfpfcnvrt@cp 00D3  
                    vfpfcnvrt@fp 00C8                      _BAUDCONbits 0FB8                    __pidataCOMRAM 3E90  
                 __end_of_efgtoa 0D14                   __end_of_floorf 2870                   __end_of_memcpy 3AD6  
                     floorf@F521 002C              __end_of_getHighByte 3E90                   __end_of_strcpy 3CD2  
             i2_setDisplayDigits 241E              start_initialization 3A32         ?i2_EUSART_TransmitString 0002  
                    _adc_voltage 00E8                      __end_of_ISR 0266                  _eeprom_data_ctl 00FB  
                _eeprom_data_lsb 00FD                  _eeprom_data_msb 00FC                      __end_of_pad 384C  
                     ?i2___flmul 0001                       ?i2___fltol 001A             i2_get7SegmentPattern 2D1C  
                     ?i2___lwdiv 0001                       ?i2___lwmod 0001              ?i2_setDisplayDigits 0001  
               getLowByte@number 0060            __end_of___fpclassifyf 323E                      vfprintf@fmt 00D6  
                       ??___flge 008F                         ??___fleq 0068             __end_of_show7Segment 3978  
                       ??_efgtoa 009A             ??i2_setDisplayDigits 0024                         ??_floorf 007D  
                       ?_I2CRead 0001                         ??_memcpy 0066                      _c_remainder 0034  
                       ?_I2CStop 0001                         ??_strcpy 0063                        ___fladd@a 0064  
                      ___fladd@b 0060      __end_of_EUSART_TransmitChar 3E08                        ___fldiv@a 0064  
                      ___fldiv@b 0060                        ___flmul@a 0072                        ___flmul@b 006E  
                    __pbssCOMRAM 002C                        ___flsub@a 008B                        ___flsub@b 0087  
                      _adcResult 00F6                    __pcstackBANK0 0060                    __pcstackBANK1 0150  
              i2___lwmod@divisor 0003                i2___lwmod@counter 0005                 ?i2_displayDigits 0001  
          ?i2_get7SegmentPattern 0001                   _button_counter 0030            __end_ofi2_adcSampling 3DB6  
                    _EEPROMWrite 3AD6                      _efgtoa$1752 00A2                        _main$2068 00E2  
                      _main$2069 00E3                 ___lwdiv@dividend 0060    __end_ofi2_EUSART_TransmitChar 3E1E  
                      __pintcode 0008                         ?___fladd 0060                         ?___fldiv 0060  
                       ?___flneg 0060                getHighByte@number 0060                         ?___flmul 006E  
                       ?___flsub 0087                         ?___fltol 0087        i2EUSART_TransmitChar@data 0001  
                    _getHighByte 3E8A                         ?___lwdiv 0060                         ?___lwmod 0060  
__end_ofi2_EUSART_TransmitString 36F0                      __smallconst 0300                         _I2CStart 3E54  
                       _I2CWrite 3D6A                        _fsm_state 00F9                 ___lwdiv@quotient 0065  
                       ?_sprintf 00DA                      ??i2___flmul 0009                      ??i2___fltol 001E  
             EEPROMWrite@address 0062                      ??i2___lwdiv 0005                      ??i2___lwmod 0005  
         EUSART_TransmitString@a 0061           EUSART_TransmitString@i 0065                ?_setDisplayDigits 0001  
                       _LATAbits 0F89                         _LATCbits 0F8B                      _eeprom_data 00F4  
             ??_setDisplayDigits 0091                         _PIE1bits 0F9D                         i2u500_40 19C4  
                       i2u500_41 19C0                         i2u501_40 19FC                         i2u501_41 19F8  
                       _PIR1bits 0F9E                         i2u530_40 36EE                         i2u530_41 36EA  
                       i2u531_40 2430                         i2u531_41 242C                         i2u532_40 2450  
                       i2u540_40 39A2                         i2u532_41 244C                         i2u540_41 399E  
                       i2u533_40 2512                         i2u541_40 39B4                         i2u533_41 250E  
                       i2u541_41 39B0                         i2u470_40 304E                         i2u534_40 25C0  
                       i2u550_40 00DA                         i2u542_40 0038                         i2u470_41 304A  
                       i2u534_41 25BC                         i2u550_41 00D6                         i2u542_41 0034  
                       i2u527_40 3DA6                         i2u471_40 3082                         i2u535_40 25E2  
                       i2u551_40 010C                         i2u543_40 0054                         i2u527_41 3DA2  
                       i2u535_41 25DE                         i2u551_41 0108                         i2u543_41 0050  
                       i2u471_45 3078                         i2u528_40 36AA                         i2u472_40 30B0  
                       i2u480_40 38C4                         i2u536_40 2602                         i2u552_40 01A8  
                       i2u544_40 0066                         i2u472_41 30AC                         i2u480_41 38C0  
                       i2u536_41 25FE                         i2u552_41 01A4                         i2u544_41 0062  
                       i2u528_47 36A0                         i2u529_40 36DE                         i2u473_40 30C4  
                       i2u481_40 38E2                         i2u537_40 2624                         i2u553_40 01BE  
                       i2u545_40 0078                         i2u473_41 30C0                         i2u481_41 38DE  
                       i2u537_41 2620                         i2u553_41 01BA                         i2u545_41 0074  
                       i2u465_44 3330                         i2u465_45 332C                         i2u529_47 36D4  
                       i2u490_40 16D8                         i2u474_40 30EC                         i2u482_40 38F8  
                       i2u538_40 2646                         i2u554_40 021C                         i2u546_40 0094  
                       i2u490_41 16D4                         i2u474_41 30E8                         i2u482_41 38F4  
                       i2u538_41 2642                         i2u554_41 0218                         i2u546_41 0090  
                       i2u466_44 335A                         i2u466_45 3356                         i2u491_40 1852  
                       i2u483_40 160E                         i2u475_40 310C                         i2u539_40 3990  
                       i2u555_40 0232                         i2u547_40 00A4                         i2u483_41 160A  
                       i2u475_41 3108                         i2u539_41 398C                         i2u555_41 022E  
                       i2u547_41 00A0                         i2u467_44 3382                         i2u491_45 1848  
                       i2u467_45 337E                         i2u492_40 18AC                         i2u484_40 1620  
                       i2u476_40 311C                         i2u468_40 33D0                         i2u548_40 00B2  
                       i2u492_41 18A8                         i2u484_41 161C                         i2u476_41 3118  
                       i2u468_41 33CC                         i2u548_41 00AE                         i2u469_40 3E18  
                       i2u493_40 18CC                         i2u485_40 1630                         i2u477_40 3780  
                       i2u549_40 00C4                         i2u469_41 3E14                         i2u493_41 18C8  
                       i2u485_41 162C                         i2u477_41 377C                         i2u549_41 00C0  
                       i2u494_40 18DC                         i2u486_40 1670                         i2u478_40 379E  
                       i2u494_41 18D8                         i2u486_41 166C                         i2u478_41 379A  
                       i2u495_40 190A                         i2u487_40 1682                         i2u479_40 37BA  
                       i2u495_41 1906                         i2u487_41 167E                         i2u479_41 37B6  
                       i2u496_40 1920                         i2u488_40 1692                         i2u496_41 191C  
                       i2u488_41 168E                         i2u497_40 1934                         i2u489_40 16C8  
                       i2u497_41 1930                         i2u489_41 16C4                         i2u498_40 194E  
                       i2u498_41 194A                         i2u499_40 1996                         i2u499_41 1992  
                       i2u794_47 33A0                         i2u795_47 33AA                         i2u796_47 33D4  
                   ??_getLowByte 0062                        _vfpfcnvrt 2870                        _tmp_index 00F0  
                  ??_setupEUSART 0060                       _ADCON0bits 0FC2           ??i2_get7SegmentPattern 0001  
                  ??_setupTimer1 0060        get7SegmentPattern@pattern 0061                       vfpfcnvrt@c 00D2  
                    _INTCON2bits 0FF1                      _INTCON3bits 0FF0                        copy_data0 3A46  
                     _I2CRestart 3E66                     ?_adcSampling 0001               __end_of_getLowByte 3E8A  
              EEPROMRead@address 0062          get7SegmentPattern@digit 0060                         __Hrparam 0000  
                      memcpy@tmp 0066                       vfprintf@ap 00D7                         __Lrparam 0000  
                     vfprintf@fp 00D4                       ?_vfpfcnvrt 00C8               ___fpclassifyf@F465 00E4  
                     sprintf@fmt 00DB                       _EEPROMRead 3B28                         _c_target 0036  
                       ___xxtofl 2A52                         _c_number 0032                  ___lwdiv@divisor 0062  
                ___lwdiv@counter 0064              __end_of_setupEUSART 3DD6                         __ptext10 3E94  
                       __ptext11 3A84                         __ptext20 1E3E                         __ptext12 39DA  
                       __ptext21 3916                         __ptext13 265A                         __ptext30 36F0  
                       __ptext22 2C0A                         __ptext14 313E                         __ptext31 2E2A  
                       __ptext23 323E                         __ptext15 3C0A                         __ptext40 3E84  
                       __ptext32 11CC                         __ptext24 3DD6                         __ptext16 0D14  
                       __ptext41 3E8A                         __ptext33 3E30                         __ptext25 3E1E  
                       __ptext17 3CD2                         __ptext50 3314                         __ptext42 3D6A  
                       __ptext34 3D44                         __ptext26 3DB6                         __ptext18 2F32  
                       __ptext51 241E                         __ptext43 3E42                         __ptext35 2A52  
                       __ptext27 3E78                         __ptext19 349A                         __ptext52 38B2  
                       __ptext44 3E54                         __ptext36 35EE                         __ptext28 21D0  
                       __ptext53 3766                         __ptext45 3E66                         __ptext37 3DF0  
                       __ptext29 384C                         __ptext54 3038                         __ptext46 3D0C  
                       __ptext38 3AD6                         __ptext55 15F4                         __ptext39 3B28  
                       __ptext56 3D90                         __ptext48 3978                         __ptext57 3672  
                       __ptext49 2D1C                         __ptext58 3E08                     _show7Segment 3916  
                    _segPattern0 003F                      _segPattern1 003E                      _segPattern2 003D  
                     strcpy@dest 0060              __end_of_setupTimer1 3DF0            _EUSART_TransmitString 35EE  
                       _sampling 00FE                         efgtoa@fp 0093                         efgtoa@ne 009C  
                       efgtoa@pp 00A4                         efgtoa@ou 00AF                         _setupI2C 3E1E  
                       _setupADC 3E78                         isa$xinst 0000                         int$flags 0052  
          i2displayDigits@digit0 0005            i2displayDigits@digit1 0001            i2displayDigits@digit2 0002  
                       _vfprintf 3B78       __end_of_get7SegmentPattern 2D1C                       _INTCONbits 0FF2  
                       memcpy@d1 0060                         memcpy@s1 0062       __end_of_setButtonInterrupt 3E42  
                    ?_I2CRestart 0001                         intlevel2 0000                        sprintf@ap 0150  
               ___lwmod@dividend 0060                     ?_EEPROMWrite 0062                        strcpy@src 0062  
                 _displayAddress 0039                       _OSCCONbits 0FD3                      efgtoa@nmode 00A6  
                  _overflowCount 0043                     ?_getHighByte 0060                      ??_vfpfcnvrt 00CD  
                    _setupEUSART 3DB6                      _uart_buffer 0044                         sprintf@f 0151  
                       sprintf@s 00DA                      ?_EEPROMRead 0062                  ___lwmod@divisor 0062  
                ___lwmod@counter 0064                    _displayDigit0 003C                    _displayDigit1 003B  
                  _displayDigit2 003A                    _displayDigits 323E                      _SSPCON2bits 0FC5  
                 EEPROMRead@data 0064                    _displaySample 0038                      _setupTimer1 3DD6  
                  ___fladd@signs 006C                _address_high_byte 0040                     ___fladd@aexp 006D  
                   ___fladd@bexp 006E           ?_EUSART_TransmitString 0061  
