

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Dec 29 13:23:25 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78   000000                     
    79                           ; Generated 12/10/2023 GMT
    80                           ; 
    81                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F14K50 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113   000FE0                     bsr             equ	4064
   114   000FE9                     fsr0            equ	4073
   115   000FEA                     fsr0h           equ	4074
   116   000FE9                     fsr0l           equ	4073
   117   000FE1                     fsr1            equ	4065
   118   000FE2                     fsr1h           equ	4066
   119   000FE1                     fsr1l           equ	4065
   120   000FD9                     fsr2            equ	4057
   121   000FDA                     fsr2h           equ	4058
   122   000FD9                     fsr2l           equ	4057
   123   000FEF                     indf0           equ	4079
   124   000FE7                     indf1           equ	4071
   125   000FDF                     indf2           equ	4063
   126   000FF2                     intcon          equ	4082
   127   000000                     nvmcon          equ	0
   128   000FF9                     pcl             equ	4089
   129   000FFA                     pclath          equ	4090
   130   000FFB                     pclatu          equ	4091
   131   000FEB                     plusw0          equ	4075
   132   000FE3                     plusw1          equ	4067
   133   000FDB                     plusw2          equ	4059
   134   000FED                     postdec0        equ	4077
   135   000FE5                     postdec1        equ	4069
   136   000FDD                     postdec2        equ	4061
   137   000FEE                     postinc0        equ	4078
   138   000FE6                     postinc1        equ	4070
   139   000FDE                     postinc2        equ	4062
   140   000FEC                     preinc0         equ	4076
   141   000FE4                     preinc1         equ	4068
   142   000FDC                     preinc2         equ	4060
   143   000FF3                     prod            equ	4083
   144   000FF4                     prodh           equ	4084
   145   000FF3                     prodl           equ	4083
   146   000FD8                     status          equ	4056
   147   000FF5                     tablat          equ	4085
   148   000FF6                     tblptr          equ	4086
   149   000FF7                     tblptrh         equ	4087
   150   000FF6                     tblptrl         equ	4086
   151   000FF8                     tblptru         equ	4088
   152   000FFD                     tosl            equ	4093
   153   000FE8                     wreg            equ	4072
   154   000F53                     UEP0            equ	3923	;# 
   155   000F54                     UEP1            equ	3924	;# 
   156   000F55                     UEP2            equ	3925	;# 
   157   000F56                     UEP3            equ	3926	;# 
   158   000F57                     UEP4            equ	3927	;# 
   159   000F58                     UEP5            equ	3928	;# 
   160   000F59                     UEP6            equ	3929	;# 
   161   000F5A                     UEP7            equ	3930	;# 
   162   000F5B                     UEIE            equ	3931	;# 
   163   000F5C                     UADDR           equ	3932	;# 
   164   000F5D                     UFRML           equ	3933	;# 
   165   000F5E                     UFRMH           equ	3934	;# 
   166   000F5F                     UEIR            equ	3935	;# 
   167   000F60                     UIE             equ	3936	;# 
   168   000F61                     UCFG            equ	3937	;# 
   169   000F62                     UIR             equ	3938	;# 
   170   000F63                     USTAT           equ	3939	;# 
   171   000F64                     UCON            equ	3940	;# 
   172   000F68                     SRCON0          equ	3944	;# 
   173   000F69                     SRCON1          equ	3945	;# 
   174   000F6B                     CM2CON0         equ	3947	;# 
   175   000F6C                     CM2CON1         equ	3948	;# 
   176   000F6D                     CM1CON0         equ	3949	;# 
   177   000F6F                     SSPMSK          equ	3951	;# 
   178   000F6F                     SSPMASK         equ	3951	;# 
   179   000F76                     SLRCON          equ	3958	;# 
   180   000F77                     WPUA            equ	3959	;# 
   181   000F78                     WPUB            equ	3960	;# 
   182   000F79                     IOCA            equ	3961	;# 
   183   000F7A                     IOCB            equ	3962	;# 
   184   000F7E                     ANSEL           equ	3966	;# 
   185   000F7F                     ANSELH          equ	3967	;# 
   186   000F80                     PORTA           equ	3968	;# 
   187   000F81                     PORTB           equ	3969	;# 
   188   000F82                     PORTC           equ	3970	;# 
   189   000F89                     LATA            equ	3977	;# 
   190   000F8A                     LATB            equ	3978	;# 
   191   000F8B                     LATC            equ	3979	;# 
   192   000F92                     TRISA           equ	3986	;# 
   193   000F92                     DDRA            equ	3986	;# 
   194   000F93                     TRISB           equ	3987	;# 
   195   000F93                     DDRB            equ	3987	;# 
   196   000F94                     TRISC           equ	3988	;# 
   197   000F94                     DDRC            equ	3988	;# 
   198   000F9B                     OSCTUNE         equ	3995	;# 
   199   000F9D                     PIE1            equ	3997	;# 
   200   000F9E                     PIR1            equ	3998	;# 
   201   000F9F                     IPR1            equ	3999	;# 
   202   000FA0                     PIE2            equ	4000	;# 
   203   000FA1                     PIR2            equ	4001	;# 
   204   000FA2                     IPR2            equ	4002	;# 
   205   000FA6                     EECON1          equ	4006	;# 
   206   000FA7                     EECON2          equ	4007	;# 
   207   000FA8                     EEDATA          equ	4008	;# 
   208   000FA9                     EEADR           equ	4009	;# 
   209   000FAB                     RCSTA           equ	4011	;# 
   210   000FAB                     RCSTA1          equ	4011	;# 
   211   000FAC                     TXSTA           equ	4012	;# 
   212   000FAC                     TXSTA1          equ	4012	;# 
   213   000FAD                     TXREG           equ	4013	;# 
   214   000FAD                     TXREG1          equ	4013	;# 
   215   000FAE                     RCREG           equ	4014	;# 
   216   000FAE                     RCREG1          equ	4014	;# 
   217   000FAF                     SPBRG           equ	4015	;# 
   218   000FAF                     SPBRG1          equ	4015	;# 
   219   000FB0                     SPBRGH          equ	4016	;# 
   220   000FB1                     T3CON           equ	4017	;# 
   221   000FB2                     TMR3            equ	4018	;# 
   222   000FB2                     TMR3L           equ	4018	;# 
   223   000FB3                     TMR3H           equ	4019	;# 
   224   000FB6                     ECCP1AS         equ	4022	;# 
   225   000FB7                     PWM1CON         equ	4023	;# 
   226   000FB8                     BAUDCON         equ	4024	;# 
   227   000FB8                     BAUDCTL         equ	4024	;# 
   228   000FB9                     PSTRCON         equ	4025	;# 
   229   000FBA                     REFCON0         equ	4026	;# 
   230   000FBA                     VREFCON0        equ	4026	;# 
   231   000FBB                     REFCON1         equ	4027	;# 
   232   000FBB                     VREFCON1        equ	4027	;# 
   233   000FBC                     REFCON2         equ	4028	;# 
   234   000FBC                     VREFCON2        equ	4028	;# 
   235   000FBD                     CCP1CON         equ	4029	;# 
   236   000FBE                     CCPR1           equ	4030	;# 
   237   000FBE                     CCPR1L          equ	4030	;# 
   238   000FBF                     CCPR1H          equ	4031	;# 
   239   000FC0                     ADCON2          equ	4032	;# 
   240   000FC1                     ADCON1          equ	4033	;# 
   241   000FC2                     ADCON0          equ	4034	;# 
   242   000FC3                     ADRES           equ	4035	;# 
   243   000FC3                     ADRESL          equ	4035	;# 
   244   000FC4                     ADRESH          equ	4036	;# 
   245   000FC5                     SSPCON2         equ	4037	;# 
   246   000FC6                     SSPCON1         equ	4038	;# 
   247   000FC7                     SSPSTAT         equ	4039	;# 
   248   000FC8                     SSPADD          equ	4040	;# 
   249   000FC9                     SSPBUF          equ	4041	;# 
   250   000FCA                     T2CON           equ	4042	;# 
   251   000FCB                     PR2             equ	4043	;# 
   252   000FCB                     MEMCON          equ	4043	;# 
   253   000FCC                     TMR2            equ	4044	;# 
   254   000FCD                     T1CON           equ	4045	;# 
   255   000FCE                     TMR1            equ	4046	;# 
   256   000FCE                     TMR1L           equ	4046	;# 
   257   000FCF                     TMR1H           equ	4047	;# 
   258   000FD0                     RCON            equ	4048	;# 
   259   000FD1                     WDTCON          equ	4049	;# 
   260   000FD2                     OSCCON2         equ	4050	;# 
   261   000FD3                     OSCCON          equ	4051	;# 
   262   000FD5                     T0CON           equ	4053	;# 
   263   000FD6                     TMR0            equ	4054	;# 
   264   000FD6                     TMR0L           equ	4054	;# 
   265   000FD7                     TMR0H           equ	4055	;# 
   266   000FD8                     STATUS          equ	4056	;# 
   267   000FD9                     FSR2            equ	4057	;# 
   268   000FD9                     FSR2L           equ	4057	;# 
   269   000FDA                     FSR2H           equ	4058	;# 
   270   000FDB                     PLUSW2          equ	4059	;# 
   271   000FDC                     PREINC2         equ	4060	;# 
   272   000FDD                     POSTDEC2        equ	4061	;# 
   273   000FDE                     POSTINC2        equ	4062	;# 
   274   000FDF                     INDF2           equ	4063	;# 
   275   000FE0                     BSR             equ	4064	;# 
   276   000FE1                     FSR1            equ	4065	;# 
   277   000FE1                     FSR1L           equ	4065	;# 
   278   000FE2                     FSR1H           equ	4066	;# 
   279   000FE3                     PLUSW1          equ	4067	;# 
   280   000FE4                     PREINC1         equ	4068	;# 
   281   000FE5                     POSTDEC1        equ	4069	;# 
   282   000FE6                     POSTINC1        equ	4070	;# 
   283   000FE7                     INDF1           equ	4071	;# 
   284   000FE8                     WREG            equ	4072	;# 
   285   000FE9                     FSR0            equ	4073	;# 
   286   000FE9                     FSR0L           equ	4073	;# 
   287   000FEA                     FSR0H           equ	4074	;# 
   288   000FEB                     PLUSW0          equ	4075	;# 
   289   000FEC                     PREINC0         equ	4076	;# 
   290   000FED                     POSTDEC0        equ	4077	;# 
   291   000FEE                     POSTINC0        equ	4078	;# 
   292   000FEF                     INDF0           equ	4079	;# 
   293   000FF0                     INTCON3         equ	4080	;# 
   294   000FF1                     INTCON2         equ	4081	;# 
   295   000FF2                     INTCON          equ	4082	;# 
   296   000FF3                     PROD            equ	4083	;# 
   297   000FF3                     PRODL           equ	4083	;# 
   298   000FF4                     PRODH           equ	4084	;# 
   299   000FF5                     TABLAT          equ	4085	;# 
   300   000FF6                     TBLPTR          equ	4086	;# 
   301   000FF6                     TBLPTRL         equ	4086	;# 
   302   000FF7                     TBLPTRH         equ	4087	;# 
   303   000FF8                     TBLPTRU         equ	4088	;# 
   304   000FF9                     PCLAT           equ	4089	;# 
   305   000FF9                     PC              equ	4089	;# 
   306   000FF9                     PCL             equ	4089	;# 
   307   000FFA                     PCLATH          equ	4090	;# 
   308   000FFB                     PCLATU          equ	4091	;# 
   309   000FFC                     STKPTR          equ	4092	;# 
   310   000FFD                     TOS             equ	4093	;# 
   311   000FFD                     TOSL            equ	4093	;# 
   312   000FFE                     TOSH            equ	4094	;# 
   313   000FFF                     TOSU            equ	4095	;# 
   314                           
   315                           	psect	idataCOMRAM
   316   003E8C                     __pidataCOMRAM:
   317                           	callstack 0
   318                           
   319                           ;initializer for _adc_step_size
   320                           ;main.c: 88: uint16_t adcResult = 0;;main.c: 90: uint8_t overflowCount = 0;;main.c: 91: 
      +                          uint8_t sampling = 0;;main.c: 93: uint8_t eeprom_data_lsb = 0;;main.c: 94: uint8_t eepro
      +                          m_data_msb = 0;;main.c: 95: uint8_t eeprom_data_ctl = 0;;main.c: 96: uint16_t eeprom_dat
      +                          a = 0;;main.c: 98: uint8_t received_data = 0;;main.c: 100: uint8_t address_low_byte = 0;
      +                          ;main.c: 101: uint8_t address_high_byte = 0;;main.c: 102: uint16_t address_index = 0;;ma
      +                          in.c: 104: uint8_t segPattern0;;main.c: 105: uint8_t segPattern1;;main.c: 106: uint8_t s
      +                          egPattern2;
   321   003E8C  280A               	dw	10250
   322   003E8E  3BA0               	dw	15264
   323   000FCE                     _TMR1           set	4046
   324   000FAD                     _TXREG          set	4013
   325   000FAB                     _RCSTAbits      set	4011
   326   000FAC                     _TXSTAbits      set	4012
   327   000FAF                     _SPBRG          set	4015
   328   000FB8                     _BAUDCONbits    set	4024
   329   000FC7                     _SSPSTATbits    set	4039
   330   000FC9                     _SSPBUF         set	4041
   331   000FC5                     _SSPCON2bits    set	4037
   332   000FF1                     _INTCON2bits    set	4081
   333   000FC5                     _SSPCON2        set	4037
   334   000FC7                     _SSPSTAT        set	4039
   335   000FC8                     _SSPADD         set	4040
   336   000FC6                     _SSPCON1        set	4038
   337   000F93                     _TRISBbits      set	3987
   338   000F9D                     _PIE1bits       set	3997
   339   000FCD                     _T1CON          set	4045
   340   000FC0                     _ADCON2         set	4032
   341   000FC2                     _ADCON0         set	4034
   342   000FC1                     _ADCON1         set	4033
   343   000F82                     _PORTCbits      set	3970
   344   000FF2                     _INTCONbits     set	4082
   345   000F8B                     _LATCbits       set	3979
   346   000F7E                     _ANSELbits      set	3966
   347   000F94                     _TRISCbits      set	3988
   348   000F92                     _TRISA          set	3986
   349   000F7E                     _ANSEL          set	3966
   350   000FD3                     _OSCCONbits     set	4051
   351   000FF0                     _INTCON3bits    set	4080
   352   000F89                     _LATAbits       set	3977
   353   000F9E                     _PIR1bits       set	3998
   354   000FC3                     _ADRESL         set	4035
   355   000FC4                     _ADRESH         set	4036
   356   000FC2                     _ADCON0bits     set	4034
   357                           
   358                           	psect	smallconst
   359   000300                     __psmallconst:
   360                           	callstack 0
   361   000300  00                 	db	0
   362   000301                     STR_1:
   363   000301  53                 	db	83	;'S'
   364   000302  54                 	db	84	;'T'
   365   000303  41                 	db	65	;'A'
   366   000304  52                 	db	82	;'R'
   367   000305  54                 	db	84	;'T'
   368   000306  20                 	db	32
   369   000307  0D                 	db	13
   370   000308  0A                 	db	10
   371   000309  00                 	db	0
   372   00030A                     STR_5:
   373   00030A  45                 	db	69	;'E'
   374   00030B  4E                 	db	78	;'N'
   375   00030C  44                 	db	68	;'D'
   376   00030D  20                 	db	32
   377   00030E  0D                 	db	13
   378   00030F  0A                 	db	10
   379   000310  00                 	db	0
   380   000311                     STR_2:
   381   000311  25                 	db	37
   382   000312  2E                 	db	46
   383   000313  32                 	db	50	;'2'
   384   000314  66                 	db	102	;'f'
   385   000315  00                 	db	0
   386   000316                     STR_8:
   387   000316  69                 	db	105	;'i'
   388   000317  6E                 	db	110	;'n'
   389   000318  66                 	db	102	;'f'
   390   000319  00                 	db	0
   391   00031A                     STR_11:
   392   00031A  6E                 	db	110	;'n'
   393   00031B  61                 	db	97	;'a'
   394   00031C  6E                 	db	110	;'n'
   395   00031D  00                 	db	0
   396   00031A                     STR_12          equ	STR_11
   397   00031A                     STR_13          equ	STR_11
   398   000316                     STR_9           equ	STR_8
   399   000316                     STR_10          equ	STR_8
   400   000311                     STR_6           equ	STR_2
   401   000301                     STR_4           equ	STR_1
   402   00030E                     STR_3           equ	STR_5+4
   403   00030E                     STR_7           equ	STR_5+4
   404   00031E  00                 	db	0	; dummy byte at the end
   405   000002                     __activetblptr  equ	2
   406                           
   407                           ; #config settings
   408                           
   409                           	psect	cinit
   410   003A2E                     __pcinit:
   411                           	callstack 0
   412   003A2E                     start_initialization:
   413                           	callstack 0
   414   003A2E                     __initialization:
   415                           	callstack 0
   416                           
   417                           ; Initialize objects allocated to COMRAM (4 bytes)
   418                           ; load TBLPTR registers with __pidataCOMRAM
   419   003A2E  0E8C               	movlw	low __pidataCOMRAM
   420   003A30  6EF6               	movwf	tblptrl,c
   421   003A32  0E3E               	movlw	high __pidataCOMRAM
   422   003A34  6EF7               	movwf	tblptrh,c
   423   003A36  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   424   003A38  6EF8               	movwf	tblptru,c
   425   003A3A  EE00  F04A         	lfsr	0,__pdataCOMRAM
   426   003A3E  EE10 F004          	lfsr	1,4
   427   003A42                     copy_data0:
   428   003A42  0009               	tblrd		*+
   429   003A44  CFF5 FFEE          	movff	tablat,postinc0
   430   003A48  50E5               	movf	postdec1,w,c
   431   003A4A  50E1               	movf	fsr1l,w,c
   432   003A4C  E1FA               	bnz	copy_data0
   433                           
   434                           ; Clear objects allocated to BANK1 (80 bytes)
   435   003A4E  EE01  F000         	lfsr	0,__pbssBANK1
   436   003A52  0E50               	movlw	80
   437   003A54                     clear_0:
   438   003A54  6AEE               	clrf	postinc0,c
   439   003A56  06E8               	decf	wreg,f,c
   440   003A58  E1FD               	bnz	clear_0
   441                           
   442                           ; Clear objects allocated to BANK0 (29 bytes)
   443   003A5A  EE00  F0E2         	lfsr	0,__pbssBANK0
   444   003A5E  0E1D               	movlw	29
   445   003A60                     clear_1:
   446   003A60  6AEE               	clrf	postinc0,c
   447   003A62  06E8               	decf	wreg,f,c
   448   003A64  E1FD               	bnz	clear_1
   449                           
   450                           ; Clear objects allocated to COMRAM (30 bytes)
   451   003A66  EE00  F02C         	lfsr	0,__pbssCOMRAM
   452   003A6A  0E1E               	movlw	30
   453   003A6C                     clear_2:
   454   003A6C  6AEE               	clrf	postinc0,c
   455   003A6E  06E8               	decf	wreg,f,c
   456   003A70  E1FD               	bnz	clear_2
   457   003A72                     end_of_initialization:
   458                           	callstack 0
   459   003A72                     __end_of__initialization:
   460                           	callstack 0
   461   003A72  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   462   003A74  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   463   003A76  0E00               	movlw	low (__Lmediumconst shr (0+16))
   464   003A78  6EF8               	movwf	tblptru,c
   465   003A7A  0100               	movlb	0
   466   003A7C  EF0D  F00D         	goto	_main	;jump to C main() function
   467                           
   468                           	psect	bssCOMRAM
   469   00002C                     __pbssCOMRAM:
   470                           	callstack 0
   471   00002C                     _button_counter:
   472                           	callstack 0
   473   00002C                     	ds	2
   474   00002E                     _c_number:
   475                           	callstack 0
   476   00002E                     	ds	2
   477   000030                     _c_remainder:
   478                           	callstack 0
   479   000030                     	ds	2
   480   000032                     _c_target:
   481                           	callstack 0
   482   000032                     	ds	2
   483   000034                     _displaySample:
   484                           	callstack 0
   485   000034                     	ds	1
   486   000035                     _displayAddress:
   487                           	callstack 0
   488   000035                     	ds	1
   489   000036                     _displayDigit2:
   490                           	callstack 0
   491   000036                     	ds	1
   492   000037                     _displayDigit1:
   493                           	callstack 0
   494   000037                     	ds	1
   495   000038                     _displayDigit0:
   496                           	callstack 0
   497   000038                     	ds	1
   498   000039                     _segPattern2:
   499                           	callstack 0
   500   000039                     	ds	1
   501   00003A                     _segPattern1:
   502                           	callstack 0
   503   00003A                     	ds	1
   504   00003B                     _segPattern0:
   505                           	callstack 0
   506   00003B                     	ds	1
   507   00003C                     _address_high_byte:
   508                           	callstack 0
   509   00003C                     	ds	1
   510   00003D                     _address_low_byte:
   511                           	callstack 0
   512   00003D                     	ds	1
   513   00003E                     _received_data:
   514                           	callstack 0
   515   00003E                     	ds	1
   516   00003F                     _overflowCount:
   517                           	callstack 0
   518   00003F                     	ds	1
   519   000040                     _uart_buffer:
   520                           	callstack 0
   521   000040                     	ds	10
   522                           
   523                           	psect	dataCOMRAM
   524   00004A                     __pdataCOMRAM:
   525                           	callstack 0
   526   00004A                     _adc_step_size:
   527                           	callstack 0
   528   00004A                     	ds	4
   529                           
   530                           	psect	bssBANK0
   531   0000E2                     __pbssBANK0:
   532                           	callstack 0
   533   0000E2                     floorf@F521:
   534                           	callstack 0
   535   0000E2                     	ds	4
   536   0000E6                     ___fpclassifyf@F465:
   537                           	callstack 0
   538   0000E6                     	ds	4
   539   0000EA                     _adc_voltage:
   540                           	callstack 0
   541   0000EA                     	ds	4
   542   0000EE                     _width:
   543                           	callstack 0
   544   0000EE                     	ds	2
   545   0000F0                     _prec:
   546                           	callstack 0
   547   0000F0                     	ds	2
   548   0000F2                     _address_index:
   549                           	callstack 0
   550   0000F2                     	ds	2
   551   0000F4                     _eeprom_data:
   552                           	callstack 0
   553   0000F4                     	ds	2
   554   0000F6                     _adcResult:
   555                           	callstack 0
   556   0000F6                     	ds	2
   557   0000F8                     _flags:
   558                           	callstack 0
   559   0000F8                     	ds	1
   560   0000F9                     _fsm_state:
   561                           	callstack 0
   562   0000F9                     	ds	1
   563   0000FA                     _turnOnDisplay:
   564                           	callstack 0
   565   0000FA                     	ds	1
   566   0000FB                     _eeprom_data_ctl:
   567                           	callstack 0
   568   0000FB                     	ds	1
   569   0000FC                     _eeprom_data_msb:
   570                           	callstack 0
   571   0000FC                     	ds	1
   572   0000FD                     _eeprom_data_lsb:
   573                           	callstack 0
   574   0000FD                     	ds	1
   575   0000FE                     _sampling:
   576                           	callstack 0
   577   0000FE                     	ds	1
   578                           
   579                           	psect	bssBANK1
   580   000100                     __pbssBANK1:
   581                           	callstack 0
   582   000100                     _dbuf:
   583                           	callstack 0
   584   000100                     	ds	80
   585                           
   586                           	psect	cstackBANK1
   587   000150                     __pcstackBANK1:
   588                           	callstack 0
   589   000150                     sprintf@ap:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x0
   593   000150                     	ds	1
   594   000151                     sprintf@f:
   595                           	callstack 0
   596                           
   597                           ; 11 bytes @ 0x1
   598   000151                     	ds	11
   599   00015C                     _main$2067:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0xC
   603   00015C                     	ds	1
   604   00015D                     _main$2068:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0xD
   608   00015D                     	ds	1
   609                           
   610                           	psect	cstackBANK0
   611   000060                     __pcstackBANK0:
   612                           	callstack 0
   613   000060                     ?___fpclassifyf:
   614                           	callstack 0
   615   000060                     ?___lwdiv:
   616                           	callstack 0
   617   000060                     ?___lwmod:
   618                           	callstack 0
   619   000060                     ?_read_prec_or_width:
   620                           	callstack 0
   621   000060                     ?___fladd:
   622                           	callstack 0
   623   000060                     ?___fldiv:
   624                           	callstack 0
   625   000060                     ?_labs:
   626                           	callstack 0
   627   000060                     ?___flneg:
   628                           	callstack 0
   629   000060                     ?___xxtofl:
   630                           	callstack 0
   631   000060                     get7SegmentPattern@digit:
   632                           	callstack 0
   633   000060                     displayDigits@digit1:
   634                           	callstack 0
   635   000060                     I2CWrite@data:
   636                           	callstack 0
   637   000060                     I2CRead@ack:
   638                           	callstack 0
   639   000060                     EUSART_TransmitChar@data:
   640                           	callstack 0
   641   000060                     read_prec_or_width@fmt:
   642                           	callstack 0
   643   000060                     getLowByte@number:
   644                           	callstack 0
   645   000060                     getHighByte@number:
   646                           	callstack 0
   647   000060                     ___lwdiv@dividend:
   648                           	callstack 0
   649   000060                     ___lwmod@dividend:
   650                           	callstack 0
   651   000060                     memcpy@d1:
   652                           	callstack 0
   653   000060                     fputc@c:
   654                           	callstack 0
   655   000060                     strcpy@dest:
   656                           	callstack 0
   657   000060                     ___fleq@ff1:
   658                           	callstack 0
   659   000060                     ___flneg@f1:
   660                           	callstack 0
   661   000060                     ___fladd@b:
   662                           	callstack 0
   663   000060                     ___fldiv@b:
   664                           	callstack 0
   665   000060                     ___xxtofl@val:
   666                           	callstack 0
   667   000060                     ___fpclassifyf@x:
   668                           	callstack 0
   669   000060                     labs@a:
   670                           	callstack 0
   671   000060                     ??_adcSampling:
   672   000060                     
   673                           ; 1 bytes @ 0x0
   674   000060                     	ds	1
   675   000061                     get7SegmentPattern@pattern:
   676                           	callstack 0
   677   000061                     displayDigits@digit2:
   678                           	callstack 0
   679   000061                     EUSART_TransmitString@a:
   680                           	callstack 0
   681   000061                     read_prec_or_width@ap:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x1
   685   000061                     	ds	1
   686   000062                     strcpy@src:
   687                           	callstack 0
   688   000062                     EEPROMWrite@address:
   689                           	callstack 0
   690   000062                     EEPROMRead@address:
   691                           	callstack 0
   692   000062                     ___lwdiv@divisor:
   693                           	callstack 0
   694   000062                     ___lwmod@divisor:
   695                           	callstack 0
   696   000062                     memcpy@s1:
   697                           	callstack 0
   698   000062                     fputc@fp:
   699                           	callstack 0
   700   000062                     ??_displayDigits:
   701                           
   702                           ; 1 bytes @ 0x2
   703   000062                     	ds	1
   704   000063                     ??_EUSART_TransmitString:
   705   000063                     ??_strcpy:
   706   000063                     ??_read_prec_or_width:
   707                           
   708                           ; 1 bytes @ 0x3
   709   000063                     	ds	1
   710   000064                     displayDigits@digit0:
   711                           	callstack 0
   712   000064                     EEPROMWrite@data:
   713                           	callstack 0
   714   000064                     EEPROMRead@data:
   715                           	callstack 0
   716   000064                     ___lwdiv@counter:
   717                           	callstack 0
   718   000064                     ___lwmod@counter:
   719                           	callstack 0
   720   000064                     memcpy@n:
   721                           	callstack 0
   722   000064                     strcpy@d:
   723                           	callstack 0
   724   000064                     ___fleq@ff2:
   725                           	callstack 0
   726   000064                     ___fladd@a:
   727                           	callstack 0
   728   000064                     ___fldiv@a:
   729                           	callstack 0
   730   000064                     ??_fputc:
   731   000064                     ??___fpclassifyf:
   732   000064                     ??_labs:
   733   000064                     ??___xxtofl:
   734                           
   735                           ; 1 bytes @ 0x4
   736   000064                     	ds	1
   737   000065                     read_prec_or_width@c:
   738                           	callstack 0
   739   000065                     displayDigits@i:
   740                           	callstack 0
   741   000065                     EUSART_TransmitString@i:
   742                           	callstack 0
   743   000065                     ___lwdiv@quotient:
   744                           	callstack 0
   745   000065                     ??_EEPROMWrite:
   746                           
   747                           ; 1 bytes @ 0x5
   748   000065                     	ds	1
   749   000066                     memcpy@tmp:
   750                           	callstack 0
   751   000066                     read_prec_or_width@n:
   752                           	callstack 0
   753   000066                     
   754                           ; 1 bytes @ 0x6
   755   000066                     	ds	1
   756   000067                     memcpy@d:
   757                           	callstack 0
   758   000067                     
   759                           ; 1 bytes @ 0x7
   760   000067                     	ds	1
   761   000068                     ___xxtofl@sign:
   762                           	callstack 0
   763   000068                     ___fpclassifyf@e:
   764                           	callstack 0
   765   000068                     ??___fladd:
   766   000068                     ??___fldiv:
   767   000068                     ??___fleq:
   768                           
   769                           ; 1 bytes @ 0x8
   770   000068                     	ds	1
   771   000069                     ___xxtofl@exp:
   772                           	callstack 0
   773   000069                     memcpy@s:
   774                           	callstack 0
   775   000069                     fputs@s:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x9
   779   000069                     	ds	1
   780   00006A                     ___xxtofl@arg:
   781                           	callstack 0
   782   00006A                     ___fpclassifyf@u:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0xA
   786   00006A                     	ds	1
   787   00006B                     fputs@fp:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0xB
   791   00006B                     	ds	1
   792   00006C                     ___fladd@signs:
   793                           	callstack 0
   794   00006C                     ___fldiv@rem:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0xC
   798   00006C                     	ds	1
   799   00006D                     ___fladd@aexp:
   800                           	callstack 0
   801   00006D                     fputs@c:
   802                           	callstack 0
   803   00006D                     
   804                           ; 1 bytes @ 0xD
   805   00006D                     	ds	1
   806   00006E                     ?___flmul:
   807                           	callstack 0
   808   00006E                     ___fladd@bexp:
   809                           	callstack 0
   810   00006E                     fputs@i:
   811                           	callstack 0
   812   00006E                     ___flmul@b:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0xE
   816   00006E                     	ds	1
   817   00006F                     ___fladd@grs:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0xF
   821   00006F                     	ds	1
   822   000070                     ___fldiv@sign:
   823                           	callstack 0
   824   000070                     pad@fp:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x10
   828   000070                     	ds	1
   829   000071                     ___fldiv@new_exp:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x11
   833   000071                     	ds	1
   834   000072                     pad@buf:
   835                           	callstack 0
   836   000072                     ___flmul@a:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x12
   840   000072                     	ds	1
   841   000073                     ___fldiv@grs:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x13
   845   000073                     	ds	1
   846   000074                     pad@p:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x14
   850   000074                     	ds	2
   851   000076                     ??___flmul:
   852   000076                     ??_pad:
   853                           
   854                           ; 1 bytes @ 0x16
   855   000076                     	ds	1
   856   000077                     ___fldiv@bexp:
   857                           	callstack 0
   858   000077                     pad@i:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x17
   862   000077                     	ds	1
   863   000078                     ___fldiv@aexp:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x18
   867   000078                     	ds	1
   868   000079                     ?_floorf:
   869                           	callstack 0
   870   000079                     floorf@x:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x19
   874   000079                     	ds	1
   875   00007A                     ___flmul@sign:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x1A
   879   00007A                     	ds	1
   880   00007B                     ___flmul@aexp:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x1B
   884   00007B                     	ds	1
   885   00007C                     ___flmul@bexp:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x1C
   889   00007C                     	ds	1
   890   00007D                     ___flmul@grs:
   891                           	callstack 0
   892   00007D                     ??_floorf:
   893                           
   894                           ; 1 bytes @ 0x1D
   895   00007D                     	ds	4
   896   000081                     ___flmul@prod:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x21
   900   000081                     	ds	2
   901   000083                     floorf@m:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0x23
   905   000083                     	ds	2
   906   000085                     ___flmul@temp:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x25
   910   000085                     	ds	2
   911   000087                     ?___flsub:
   912                           	callstack 0
   913   000087                     ?___fltol:
   914                           	callstack 0
   915   000087                     floorf@e:
   916                           	callstack 0
   917   000087                     ___flge@ff1:
   918                           	callstack 0
   919   000087                     ___fltol@f1:
   920                           	callstack 0
   921   000087                     ___flsub@b:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x27
   925   000087                     	ds	2
   926   000089                     floorf@u:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x29
   930   000089                     	ds	2
   931   00008B                     ___flge@ff2:
   932                           	callstack 0
   933   00008B                     ___flsub@a:
   934                           	callstack 0
   935   00008B                     ??___fltol:
   936                           
   937                           ; 1 bytes @ 0x2B
   938   00008B                     	ds	4
   939   00008F                     ___fltol@sign1:
   940                           	callstack 0
   941   00008F                     ??___flge:
   942                           
   943                           ; 1 bytes @ 0x2F
   944   00008F                     	ds	1
   945   000090                     ___fltol@exp1:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x30
   949   000090                     	ds	1
   950   000091                     
   951                           ; 1 bytes @ 0x31
   952   000091                     	ds	2
   953   000093                     efgtoa@fp:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x33
   957   000093                     	ds	2
   958   000095                     efgtoa@f:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0x35
   962   000095                     	ds	4
   963   000099                     efgtoa@c:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x39
   967   000099                     	ds	1
   968   00009A                     ??_efgtoa:
   969                           
   970                           ; 1 bytes @ 0x3A
   971   00009A                     	ds	2
   972   00009C                     efgtoa@ne:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x3C
   976   00009C                     	ds	2
   977   00009E                     efgtoa@p:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x3E
   981   00009E                     	ds	2
   982   0000A0                     efgtoa@t:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x40
   986   0000A0                     	ds	2
   987   0000A2                     _efgtoa$1751:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x42
   991   0000A2                     	ds	2
   992   0000A4                     efgtoa@pp:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x44
   996   0000A4                     	ds	1
   997   0000A5                     efgtoa@mode:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x45
  1001   0000A5                     	ds	1
  1002   0000A6                     efgtoa@nmode:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x46
  1006   0000A6                     	ds	1
  1007   0000A7                     efgtoa@d:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x47
  1011   0000A7                     	ds	2
  1012   0000A9                     efgtoa@m:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x49
  1016   0000A9                     	ds	2
  1017   0000AB                     efgtoa@e:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x4B
  1021   0000AB                     	ds	2
  1022   0000AD                     efgtoa@w:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x4D
  1026   0000AD                     	ds	2
  1027   0000AF                     efgtoa@ou:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x4F
  1031   0000AF                     	ds	4
  1032   0000B3                     efgtoa@i:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x53
  1036   0000B3                     	ds	2
  1037   0000B5                     efgtoa@h:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x55
  1041   0000B5                     	ds	4
  1042   0000B9                     efgtoa@l:
  1043                           	callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x59
  1046   0000B9                     	ds	4
  1047   0000BD                     efgtoa@sign:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x5D
  1051   0000BD                     	ds	1
  1052   0000BE                     efgtoa@g:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x5E
  1056   0000BE                     	ds	4
  1057   0000C2                     efgtoa@n:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x62
  1061   0000C2                     	ds	2
  1062   0000C4                     efgtoa@u:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0x64
  1066   0000C4                     	ds	4
  1067   0000C8                     vfpfcnvrt@fp:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x68
  1071   0000C8                     	ds	2
  1072   0000CA                     vfpfcnvrt@fmt:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x6A
  1076   0000CA                     	ds	1
  1077   0000CB                     vfpfcnvrt@ap:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x6B
  1081   0000CB                     	ds	2
  1082   0000CD                     ??_vfpfcnvrt:
  1083                           
  1084                           ; 1 bytes @ 0x6D
  1085   0000CD                     	ds	1
  1086   0000CE                     vfpfcnvrt@convarg:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x6E
  1090   0000CE                     	ds	4
  1091   0000D2                     vfpfcnvrt@c:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x72
  1095   0000D2                     	ds	1
  1096   0000D3                     vfpfcnvrt@cp:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x73
  1100   0000D3                     	ds	1
  1101   0000D4                     ?_vfprintf:
  1102                           	callstack 0
  1103   0000D4                     vfprintf@fp:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x74
  1107   0000D4                     	ds	2
  1108   0000D6                     vfprintf@fmt:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x76
  1112   0000D6                     	ds	1
  1113   0000D7                     vfprintf@ap:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x77
  1117   0000D7                     	ds	2
  1118   0000D9                     vfprintf@cfmt:
  1119                           	callstack 0
  1120   0000D9                     
  1121                           ; 1 bytes @ 0x79
  1122   0000D9                     	ds	1
  1123   0000DA                     ?_sprintf:
  1124                           	callstack 0
  1125   0000DA                     sprintf@s:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x7A
  1129   0000DA                     	ds	1
  1130   0000DB                     sprintf@fmt:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x7B
  1134   0000DB                     	ds	5
  1135   0000E0                     ??_main:
  1136                           
  1137                           ; 1 bytes @ 0x80
  1138   0000E0                     	ds	2
  1139                           
  1140                           	psect	cstackCOMRAM
  1141   000001                     __pcstackCOMRAM:
  1142                           	callstack 0
  1143   000001                     ?i2___lwdiv:
  1144                           	callstack 0
  1145   000001                     ?i2___lwmod:
  1146                           	callstack 0
  1147   000001                     ?i2___flmul:
  1148                           	callstack 0
  1149   000001                     i2get7SegmentPattern@digit:
  1150                           	callstack 0
  1151   000001                     i2displayDigits@digit1:
  1152                           	callstack 0
  1153   000001                     i2EUSART_TransmitChar@data:
  1154                           	callstack 0
  1155   000001                     i2___lwdiv@dividend:
  1156                           	callstack 0
  1157   000001                     i2___lwmod@dividend:
  1158                           	callstack 0
  1159   000001                     i2___flmul@b:
  1160                           	callstack 0
  1161   000001                     ??i2_adcSampling:
  1162   000001                     
  1163                           ; 1 bytes @ 0x0
  1164   000001                     	ds	1
  1165   000002                     i2get7SegmentPattern@pattern:
  1166                           	callstack 0
  1167   000002                     i2displayDigits@digit2:
  1168                           	callstack 0
  1169   000002                     i2EUSART_TransmitString@a:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x1
  1173   000002                     	ds	1
  1174   000003                     i2___lwdiv@divisor:
  1175                           	callstack 0
  1176   000003                     i2___lwmod@divisor:
  1177                           	callstack 0
  1178   000003                     ??i2_displayDigits:
  1179                           
  1180                           ; 1 bytes @ 0x2
  1181   000003                     	ds	1
  1182   000004                     ??i2_EUSART_TransmitString:
  1183                           
  1184                           ; 1 bytes @ 0x3
  1185   000004                     	ds	1
  1186   000005                     i2displayDigits@digit0:
  1187                           	callstack 0
  1188   000005                     i2___lwmod@counter:
  1189                           	callstack 0
  1190   000005                     i2___lwdiv@quotient:
  1191                           	callstack 0
  1192   000005                     i2___flmul@a:
  1193                           	callstack 0
  1194   000005                     
  1195                           ; 1 bytes @ 0x4
  1196   000005                     	ds	1
  1197   000006                     i2displayDigits@i:
  1198                           	callstack 0
  1199   000006                     i2EUSART_TransmitString@i:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x5
  1203   000006                     	ds	1
  1204   000007                     i2___lwdiv@counter:
  1205                           	callstack 0
  1206                           
  1207                           ; 1 bytes @ 0x6
  1208   000007                     	ds	1
  1209   000008                     
  1210                           ; 1 bytes @ 0x7
  1211   000008                     	ds	1
  1212   000009                     ??i2___flmul:
  1213                           
  1214                           ; 1 bytes @ 0x8
  1215   000009                     	ds	4
  1216   00000D                     i2___flmul@sign:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0xC
  1220   00000D                     	ds	1
  1221   00000E                     i2___flmul@grs:
  1222                           	callstack 0
  1223                           
  1224                           ; 4 bytes @ 0xD
  1225   00000E                     	ds	4
  1226   000012                     i2___flmul@aexp:
  1227                           	callstack 0
  1228                           
  1229                           ; 1 bytes @ 0x11
  1230   000012                     	ds	1
  1231   000013                     i2___flmul@bexp:
  1232                           	callstack 0
  1233                           
  1234                           ; 1 bytes @ 0x12
  1235   000013                     	ds	1
  1236   000014                     i2___flmul@prod:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x13
  1240   000014                     	ds	4
  1241   000018                     i2___flmul@temp:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x17
  1245   000018                     	ds	2
  1246   00001A                     ?i2___fltol:
  1247                           	callstack 0
  1248   00001A                     i2___fltol@f1:
  1249                           	callstack 0
  1250                           
  1251                           ; 4 bytes @ 0x19
  1252   00001A                     	ds	4
  1253   00001E                     ??i2___fltol:
  1254                           
  1255                           ; 1 bytes @ 0x1D
  1256   00001E                     	ds	4
  1257   000022                     i2___fltol@sign1:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x21
  1261   000022                     	ds	1
  1262   000023                     i2___fltol@exp1:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x22
  1266   000023                     	ds	1
  1267   000024                     ??_ISR:
  1268   000024                     
  1269                           ; 1 bytes @ 0x23
  1270   000024                     	ds	8
  1271                           
  1272 ;;
  1273 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1274 ;;
  1275 ;; *************** function _main *****************
  1276 ;; Defined at:
  1277 ;;		line 295 in file "main.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1291 ;;      Params:         0       0       0       0
  1292 ;;      Locals:         0       0       2       0
  1293 ;;      Temps:          0       2       0       0
  1294 ;;      Totals:         0       2       2       0
  1295 ;;Total ram usage:        4 bytes
  1296 ;; Hardware stack levels required when called: 11
  1297 ;; This function calls:
  1298 ;;		_EEPROMRead
  1299 ;;		_EEPROMWrite
  1300 ;;		_EUSART_TransmitString
  1301 ;;		___flmul
  1302 ;;		___xxtofl
  1303 ;;		_adcSampling
  1304 ;;		_getHighByte
  1305 ;;		_getLowByte
  1306 ;;		_setButtonInterrupt
  1307 ;;		_setDisplayDigits
  1308 ;;		_setupADC
  1309 ;;		_setupEUSART
  1310 ;;		_setupI2C
  1311 ;;		_setupTimer1
  1312 ;;		_show7Segment
  1313 ;;		_sprintf
  1314 ;; This function is called by:
  1315 ;;		Startup code after reset
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text0
  1320   001A1A                     __ptext0:
  1321                           	callstack 0
  1322   001A1A                     _main:
  1323                           	callstack 20
  1324   001A1A                     
  1325                           ;main.c: 298:     OSCCONbits.SCS0 = 1;
  1326   001A1A  80D3               	bsf	211,0,c	;volatile
  1327                           
  1328                           ;main.c: 299:     OSCCONbits.SCS1 = 1;
  1329   001A1C  82D3               	bsf	211,1,c	;volatile
  1330                           
  1331                           ;main.c: 301:     OSCCONbits.OSTS = 0;
  1332   001A1E  96D3               	bcf	211,3,c	;volatile
  1333                           
  1334                           ;main.c: 304:     OSCCONbits.IRCF0 = 0;
  1335   001A20  98D3               	bcf	211,4,c	;volatile
  1336                           
  1337                           ;main.c: 305:     OSCCONbits.IRCF1 = 0;
  1338   001A22  9AD3               	bcf	211,5,c	;volatile
  1339                           
  1340                           ;main.c: 306:     OSCCONbits.IRCF2 = 1;
  1341   001A24  8CD3               	bsf	211,6,c	;volatile
  1342   001A26                     
  1343                           ;main.c: 308:     _delay((unsigned long)((500)*(2000000/4000.0)));
  1344   001A26  0E02               	movlw	2
  1345   001A28  0100               	movlb	0	; () banked
  1346   001A2A  6FE1               	movwf	(??_main+1)& (0+255),b
  1347   001A2C  0E45               	movlw	69
  1348   001A2E  6FE0               	movwf	??_main& (0+255),b
  1349   001A30  0EA9               	movlw	169
  1350   001A32                     u10017:
  1351   001A32  2EE8               	decfsz	wreg,f,c
  1352   001A34  D7FE               	bra	u10017
  1353   001A36  2FE0               	decfsz	??_main& (0+255),f,b
  1354   001A38  D7FC               	bra	u10017
  1355   001A3A  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1356   001A3C  D7FA               	bra	u10017
  1357   001A3E  D000               	nop2	
  1358   001A40                     
  1359                           ;main.c: 311:     ANSEL = 0b00001000;
  1360   001A40  0E08               	movlw	8
  1361   001A42  6E7E               	movwf	126,c	;volatile
  1362   001A44                     
  1363                           ;main.c: 312:     TRISA = 0b00010000;
  1364   001A44  0E10               	movlw	16
  1365   001A46  6E92               	movwf	146,c	;volatile
  1366   001A48                     
  1367                           ;main.c: 314:     TRISCbits.RC0 = 0;
  1368   001A48  9094               	bcf	148,0,c	;volatile
  1369   001A4A                     
  1370                           ;main.c: 315:     ANSELbits.ANS4 = 0;
  1371   001A4A  987E               	bcf	126,4,c	;volatile
  1372   001A4C                     
  1373                           ;main.c: 317:     setupADC();
  1374   001A4C  EC3A  F01F         	call	_setupADC	;wreg free
  1375   001A50                     
  1376                           ;main.c: 319:     _delay((unsigned long)((100)*(2000000/4000000.0)));
  1377   001A50  0E10               	movlw	16
  1378   001A52                     u10027:
  1379   001A52  2EE8               	decfsz	wreg,f,c
  1380   001A54  D7FE               	bra	u10027
  1381   001A56  D000               	nop2	
  1382                           
  1383                           ;main.c: 322:     setupTimer1();
  1384   001A58  ECE9  F01E         	call	_setupTimer1	;wreg free
  1385                           
  1386                           ;main.c: 324:     setupI2C();
  1387   001A5C  EC0D  F01F         	call	_setupI2C	;wreg free
  1388   001A60                     
  1389                           ;main.c: 328:     TRISCbits.TRISC5 = 0;
  1390   001A60  9A94               	bcf	148,5,c	;volatile
  1391   001A62                     
  1392                           ;main.c: 329:     TRISCbits.TRISC4 = 0;
  1393   001A62  9894               	bcf	148,4,c	;volatile
  1394   001A64                     
  1395                           ;main.c: 330:     TRISCbits.TRISC3 = 0;
  1396   001A64  9694               	bcf	148,3,c	;volatile
  1397   001A66                     
  1398                           ;main.c: 331:     TRISCbits.TRISC6 = 0;
  1399   001A66  9C94               	bcf	148,6,c	;volatile
  1400   001A68                     
  1401                           ;main.c: 332:     TRISCbits.TRISC7 = 0;
  1402   001A68  9E94               	bcf	148,7,c	;volatile
  1403   001A6A                     
  1404                           ;main.c: 334:     LATCbits.LATC5 = 0;
  1405   001A6A  9A8B               	bcf	139,5,c	;volatile
  1406   001A6C                     
  1407                           ;main.c: 335:     LATCbits.LATC4 = 0;
  1408   001A6C  988B               	bcf	139,4,c	;volatile
  1409   001A6E                     
  1410                           ;main.c: 336:     LATCbits.LATC3 = 0;
  1411   001A6E  968B               	bcf	139,3,c	;volatile
  1412   001A70                     
  1413                           ;main.c: 337:     LATCbits.LATC6 = 0;
  1414   001A70  9C8B               	bcf	139,6,c	;volatile
  1415   001A72                     
  1416                           ;main.c: 338:     LATCbits.LATC7 = 0;
  1417   001A72  9E8B               	bcf	139,7,c	;volatile
  1418   001A74                     
  1419                           ;main.c: 341:     TRISCbits.RC1 = 1;
  1420   001A74  8294               	bsf	148,1,c	;volatile
  1421   001A76                     
  1422                           ;main.c: 342:     TRISCbits.RC2 = 1;
  1423   001A76  8494               	bsf	148,2,c	;volatile
  1424   001A78                     
  1425                           ;main.c: 343:     setButtonInterrupt();
  1426   001A78  EC16  F01F         	call	_setButtonInterrupt	;wreg free
  1427   001A7C                     
  1428                           ;main.c: 346:     setupEUSART();
  1429   001A7C  ECD9  F01E         	call	_setupEUSART	;wreg free
  1430   001A80                     
  1431                           ;main.c: 348:     INTCONbits.PEIE = 1;
  1432   001A80  8CF2               	bsf	242,6,c	;volatile
  1433   001A82                     
  1434                           ;main.c: 349:     INTCONbits.GIE = 1;
  1435   001A82  8EF2               	bsf	242,7,c	;volatile
  1436   001A84                     
  1437                           ;main.c: 351:     adcSampling();
  1438   001A84  ECA0  F01E         	call	_adcSampling	;wreg free
  1439   001A88                     l7859:
  1440                           
  1441                           ;main.c: 355:         if( sampling == 1 && fsm_state == 1 ){
  1442   001A88  0100               	movlb	0	; () banked
  1443   001A8A  05FE               	decf	_sampling& (0+255),w,b
  1444   001A8C  A4D8               	btfss	status,2,c
  1445   001A8E  EF4B  F00D         	goto	u9901
  1446   001A92  EF4D  F00D         	goto	u9900
  1447   001A96                     u9901:
  1448   001A96  EFCE  F00D         	goto	l7895
  1449   001A9A                     u9900:
  1450   001A9A                     
  1451                           ; BSR set to: 0
  1452   001A9A  05F9               	decf	_fsm_state& (0+255),w,b
  1453   001A9C  A4D8               	btfss	status,2,c
  1454   001A9E  EF53  F00D         	goto	u9911
  1455   001AA2  EF55  F00D         	goto	u9910
  1456   001AA6                     u9911:
  1457   001AA6  EFCE  F00D         	goto	l7895
  1458   001AAA                     u9910:
  1459   001AAA                     
  1460                           ; BSR set to: 0
  1461                           ;main.c: 357:             LATAbits.LA5 = 1;
  1462   001AAA  8A89               	bsf	137,5,c	;volatile
  1463   001AAC                     
  1464                           ; BSR set to: 0
  1465                           ;main.c: 359:             adc_voltage = adc_step_size * adcResult;
  1466   001AAC  C0F6  F060         	movff	_adcResult,___xxtofl@val
  1467   001AB0  C0F7  F061         	movff	_adcResult+1,___xxtofl@val+1
  1468   001AB4  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1469   001AB6  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1470   001AB8  0E00               	movlw	0
  1471   001ABA  EC27  F015         	call	___xxtofl
  1472   001ABE  C060  F06E         	movff	?___xxtofl,___flmul@b
  1473   001AC2  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1474   001AC6  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1475   001ACA  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1476   001ACE  0E0A               	movlw	10
  1477   001AD0  0100               	movlb	0	; () banked
  1478   001AD2  6F72               	movwf	___flmul@a& (0+255),b
  1479   001AD4  0E28               	movlw	40
  1480   001AD6  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1481   001AD8  0EA0               	movlw	160
  1482   001ADA  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1483   001ADC  0E3B               	movlw	59
  1484   001ADE  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1485   001AE0  ECE6  F008         	call	___flmul	;wreg free
  1486   001AE4  C06E  F0EA         	movff	?___flmul,_adc_voltage
  1487   001AE8  C06F  F0EB         	movff	?___flmul+1,_adc_voltage+1
  1488   001AEC  C070  F0EC         	movff	?___flmul+2,_adc_voltage+2
  1489   001AF0  C071  F0ED         	movff	?___flmul+3,_adc_voltage+3
  1490   001AF4                     
  1491                           ;main.c: 362:             address_index++;
  1492   001AF4  0100               	movlb	0	; () banked
  1493   001AF6  4BF2               	infsnz	_address_index& (0+255),f,b
  1494   001AF8  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1495   001AFA                     
  1496                           ; BSR set to: 0
  1497                           ;main.c: 363:             EEPROMWrite(address_index, getLowByte( adcResult) );
  1498   001AFA  C0F6  F060         	movff	_adcResult,getLowByte@number
  1499   001AFE  C0F7  F061         	movff	_adcResult+1,getLowByte@number+1
  1500   001B02  EC40  F01F         	call	_getLowByte	;wreg free
  1501   001B06  0101               	movlb	1	; () banked
  1502   001B08  6F5C               	movwf	_main$2067& (0+255),b
  1503   001B0A                     
  1504                           ; BSR set to: 1
  1505                           ;main.c: 363:             EEPROMWrite(address_index, getLowByte( adcResult) );
  1506   001B0A  C0F2  F062         	movff	_address_index,EEPROMWrite@address
  1507   001B0E  C0F3  F063         	movff	_address_index+1,EEPROMWrite@address+1
  1508   001B12  C15C  F064         	movff	_main$2067,EEPROMWrite@data
  1509   001B16  EC69  F01D         	call	_EEPROMWrite	;wreg free
  1510   001B1A                     
  1511                           ;main.c: 364:             address_index++;
  1512   001B1A  0100               	movlb	0	; () banked
  1513   001B1C  4BF2               	infsnz	_address_index& (0+255),f,b
  1514   001B1E  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1515   001B20                     
  1516                           ; BSR set to: 0
  1517                           ;main.c: 365:             EEPROMWrite(address_index, getHighByte( adcResult) );
  1518   001B20  C0F6  F060         	movff	_adcResult,getHighByte@number
  1519   001B24  C0F7  F061         	movff	_adcResult+1,getHighByte@number+1
  1520   001B28  EC43  F01F         	call	_getHighByte	;wreg free
  1521   001B2C  0101               	movlb	1	; () banked
  1522   001B2E  6F5D               	movwf	_main$2068& (0+255),b
  1523   001B30                     
  1524                           ; BSR set to: 1
  1525                           ;main.c: 365:             EEPROMWrite(address_index, getHighByte( adcResult) );
  1526   001B30  C0F2  F062         	movff	_address_index,EEPROMWrite@address
  1527   001B34  C0F3  F063         	movff	_address_index+1,EEPROMWrite@address+1
  1528   001B38  C15D  F064         	movff	_main$2068,EEPROMWrite@data
  1529   001B3C  EC69  F01D         	call	_EEPROMWrite	;wreg free
  1530   001B40                     
  1531                           ;main.c: 366:             address_index++;
  1532   001B40  0100               	movlb	0	; () banked
  1533   001B42  4BF2               	infsnz	_address_index& (0+255),f,b
  1534   001B44  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1535   001B46                     
  1536                           ; BSR set to: 0
  1537                           ;main.c: 367:             EEPROMWrite(address_index, 254 );
  1538   001B46  C0F2  F062         	movff	_address_index,EEPROMWrite@address
  1539   001B4A  C0F3  F063         	movff	_address_index+1,EEPROMWrite@address+1
  1540   001B4E  0EFE               	movlw	254
  1541   001B50  6F64               	movwf	EEPROMWrite@data& (0+255),b
  1542   001B52  EC69  F01D         	call	_EEPROMWrite	;wreg free
  1543   001B56                     
  1544                           ;main.c: 369:             if( address_index >= 8100 ){
  1545   001B56  0EA4               	movlw	164
  1546   001B58  0100               	movlb	0	; () banked
  1547   001B5A  5DF2               	subwf	_address_index& (0+255),w,b
  1548   001B5C  0E1F               	movlw	31
  1549   001B5E  59F3               	subwfb	(_address_index+1)& (0+255),w,b
  1550   001B60  A0D8               	btfss	status,0,c
  1551   001B62  EFB5  F00D         	goto	u9921
  1552   001B66  EFB7  F00D         	goto	u9920
  1553   001B6A                     u9921:
  1554   001B6A  EFBC  F00D         	goto	l7889
  1555   001B6E                     u9920:
  1556   001B6E                     
  1557                           ; BSR set to: 0
  1558                           ;main.c: 374:                 fsm_state = 0;
  1559   001B6E  6BF9               	clrf	_fsm_state& (0+255),b
  1560   001B70                     
  1561                           ; BSR set to: 0
  1562                           ;main.c: 375:                 address_index = 0;
  1563   001B70  0E00               	movlw	0
  1564   001B72  6FF3               	movwf	(_address_index+1)& (0+255),b
  1565   001B74  0E00               	movlw	0
  1566   001B76  6FF2               	movwf	_address_index& (0+255),b
  1567   001B78                     l7889:
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;main.c: 378:             _delay((unsigned long)((1000)*(2000000/4000.0)));
  1571   001B78  0E03               	movlw	3
  1572   001B7A  0100               	movlb	0	; () banked
  1573   001B7C  6FE1               	movwf	(??_main+1)& (0+255),b
  1574   001B7E  0E8A               	movlw	138
  1575   001B80  6FE0               	movwf	??_main& (0+255),b
  1576   001B82  0E55               	movlw	85
  1577   001B84                     u10037:
  1578   001B84  2EE8               	decfsz	wreg,f,c
  1579   001B86  D7FE               	bra	u10037
  1580   001B88  2FE0               	decfsz	??_main& (0+255),f,b
  1581   001B8A  D7FC               	bra	u10037
  1582   001B8C  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1583   001B8E  D7FA               	bra	u10037
  1584   001B90  D000               	nop2	
  1585   001B92                     
  1586                           ;main.c: 380:             sampling = 0;
  1587   001B92  0100               	movlb	0	; () banked
  1588   001B94  6BFE               	clrf	_sampling& (0+255),b
  1589   001B96                     
  1590                           ; BSR set to: 0
  1591                           ;main.c: 381:             LATAbits.LA5 = 0;
  1592   001B96  9A89               	bcf	137,5,c	;volatile
  1593                           
  1594                           ;main.c: 383:         }else if( sampling == 1 && fsm_state == 2 ){
  1595   001B98  EF32  F00E         	goto	l7915
  1596   001B9C                     l7895:
  1597                           
  1598                           ; BSR set to: 0
  1599   001B9C  05FE               	decf	_sampling& (0+255),w,b
  1600   001B9E  A4D8               	btfss	status,2,c
  1601   001BA0  EFD4  F00D         	goto	u9931
  1602   001BA4  EFD6  F00D         	goto	u9930
  1603   001BA8                     u9931:
  1604   001BA8  EF32  F00E         	goto	l7915
  1605   001BAC                     u9930:
  1606   001BAC                     
  1607                           ; BSR set to: 0
  1608   001BAC  0E02               	movlw	2
  1609   001BAE  19F9               	xorwf	_fsm_state& (0+255),w,b
  1610   001BB0  A4D8               	btfss	status,2,c
  1611   001BB2  EFDD  F00D         	goto	u9941
  1612   001BB6  EFDF  F00D         	goto	u9940
  1613   001BBA                     u9941:
  1614   001BBA  EF32  F00E         	goto	l7915
  1615   001BBE                     u9940:
  1616   001BBE                     
  1617                           ; BSR set to: 0
  1618                           ;main.c: 384:             LATAbits.LA5 = 1;
  1619   001BBE  8A89               	bsf	137,5,c	;volatile
  1620   001BC0                     
  1621                           ; BSR set to: 0
  1622                           ;main.c: 385:             adc_voltage = adc_step_size * adcResult;
  1623   001BC0  C0F6  F060         	movff	_adcResult,___xxtofl@val
  1624   001BC4  C0F7  F061         	movff	_adcResult+1,___xxtofl@val+1
  1625   001BC8  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1626   001BCA  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1627   001BCC  0E00               	movlw	0
  1628   001BCE  EC27  F015         	call	___xxtofl
  1629   001BD2  C060  F06E         	movff	?___xxtofl,___flmul@b
  1630   001BD6  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1631   001BDA  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1632   001BDE  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1633   001BE2  0E0A               	movlw	10
  1634   001BE4  0100               	movlb	0	; () banked
  1635   001BE6  6F72               	movwf	___flmul@a& (0+255),b
  1636   001BE8  0E28               	movlw	40
  1637   001BEA  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1638   001BEC  0EA0               	movlw	160
  1639   001BEE  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1640   001BF0  0E3B               	movlw	59
  1641   001BF2  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1642   001BF4  ECE6  F008         	call	___flmul	;wreg free
  1643   001BF8  C06E  F0EA         	movff	?___flmul,_adc_voltage
  1644   001BFC  C06F  F0EB         	movff	?___flmul+1,_adc_voltage+1
  1645   001C00  C070  F0EC         	movff	?___flmul+2,_adc_voltage+2
  1646   001C04  C071  F0ED         	movff	?___flmul+3,_adc_voltage+3
  1647   001C08                     
  1648                           ;main.c: 389:             sprintf(uart_buffer, "%.2f", adc_voltage);
  1649   001C08  0E40               	movlw	low _uart_buffer
  1650   001C0A  0100               	movlb	0	; () banked
  1651   001C0C  6FDA               	movwf	sprintf@s& (0+255),b
  1652   001C0E  0E11               	movlw	low STR_2
  1653   001C10  6FDB               	movwf	sprintf@fmt& (0+255),b
  1654   001C12  C0EA  F0DC         	movff	_adc_voltage,?_sprintf+2
  1655   001C16  C0EB  F0DD         	movff	_adc_voltage+1,?_sprintf+3
  1656   001C1A  C0EC  F0DE         	movff	_adc_voltage+2,?_sprintf+4
  1657   001C1E  C0ED  F0DF         	movff	_adc_voltage+3,?_sprintf+5
  1658   001C22  EC27  F01E         	call	_sprintf	;wreg free
  1659   001C26                     
  1660                           ;main.c: 391:             EUSART_TransmitString(uart_buffer);
  1661   001C26  0E40               	movlw	low _uart_buffer
  1662   001C28  0100               	movlb	0	; () banked
  1663   001C2A  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1664   001C2C  6B62               	clrf	(EUSART_TransmitString@a+1)& (0+255),b
  1665   001C2E  ECF5  F01A         	call	_EUSART_TransmitString	;wreg free
  1666   001C32                     
  1667                           ;main.c: 392:             EUSART_TransmitString("\r\n");
  1668   001C32  0E0E               	movlw	low (STR_5+4)
  1669   001C34  0100               	movlb	0	; () banked
  1670   001C36  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1671   001C38  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1672   001C3A  A4D8               	btfss	status,2,c
  1673   001C3C  0E03               	movlw	high __smallconst
  1674   001C3E  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1675   001C40  ECF5  F01A         	call	_EUSART_TransmitString	;wreg free
  1676   001C44                     
  1677                           ;main.c: 394:             _delay((unsigned long)((1000)*(2000000/4000.0)));
  1678   001C44  0E03               	movlw	3
  1679   001C46  0100               	movlb	0	; () banked
  1680   001C48  6FE1               	movwf	(??_main+1)& (0+255),b
  1681   001C4A  0E8A               	movlw	138
  1682   001C4C  6FE0               	movwf	??_main& (0+255),b
  1683   001C4E  0E55               	movlw	85
  1684   001C50                     u10047:
  1685   001C50  2EE8               	decfsz	wreg,f,c
  1686   001C52  D7FE               	bra	u10047
  1687   001C54  2FE0               	decfsz	??_main& (0+255),f,b
  1688   001C56  D7FC               	bra	u10047
  1689   001C58  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1690   001C5A  D7FA               	bra	u10047
  1691   001C5C  D000               	nop2	
  1692   001C5E                     
  1693                           ;main.c: 396:             sampling = 0;
  1694   001C5E  0100               	movlb	0	; () banked
  1695   001C60  6BFE               	clrf	_sampling& (0+255),b
  1696   001C62                     
  1697                           ; BSR set to: 0
  1698                           ;main.c: 397:             LATAbits.LA5 = 0;
  1699   001C62  9A89               	bcf	137,5,c	;volatile
  1700   001C64                     l7915:
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;main.c: 401:         if( fsm_state == 3 ){
  1704   001C64  0E03               	movlw	3
  1705   001C66  19F9               	xorwf	_fsm_state& (0+255),w,b
  1706   001C68  A4D8               	btfss	status,2,c
  1707   001C6A  EF39  F00E         	goto	u9951
  1708   001C6E  EF3B  F00E         	goto	u9950
  1709   001C72                     u9951:
  1710   001C72  EFE3  F00E         	goto	l7955
  1711   001C76                     u9950:
  1712   001C76                     
  1713                           ; BSR set to: 0
  1714                           ;main.c: 403:             LATAbits.LA5 = 1;
  1715   001C76  8A89               	bsf	137,5,c	;volatile
  1716   001C78                     
  1717                           ; BSR set to: 0
  1718                           ;main.c: 405:             if( address_index == 0){
  1719   001C78  51F2               	movf	_address_index& (0+255),w,b
  1720   001C7A  11F3               	iorwf	(_address_index+1)& (0+255),w,b
  1721   001C7C  A4D8               	btfss	status,2,c
  1722   001C7E  EF43  F00E         	goto	u9961
  1723   001C82  EF45  F00E         	goto	u9960
  1724   001C86                     u9961:
  1725   001C86  EF52  F00E         	goto	l7925
  1726   001C8A                     u9960:
  1727   001C8A                     
  1728                           ; BSR set to: 0
  1729                           ;main.c: 406:                 EUSART_TransmitString("START \r\n");
  1730   001C8A  0E01               	movlw	low STR_1
  1731   001C8C  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1732   001C8E  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1733   001C90  A4D8               	btfss	status,2,c
  1734   001C92  0E03               	movlw	high __smallconst
  1735   001C94  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1736   001C96  ECF5  F01A         	call	_EUSART_TransmitString	;wreg free
  1737   001C9A                     
  1738                           ;main.c: 407:                 address_index++;
  1739   001C9A  0100               	movlb	0	; () banked
  1740   001C9C  4BF2               	infsnz	_address_index& (0+255),f,b
  1741   001C9E  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1742                           
  1743                           ;main.c: 409:             }else if(address_index >= 7200 ){
  1744   001CA0  EFEC  F00E         	goto	l7959
  1745   001CA4                     l7925:
  1746                           
  1747                           ; BSR set to: 0
  1748   001CA4  0E20               	movlw	32
  1749   001CA6  5DF2               	subwf	_address_index& (0+255),w,b
  1750   001CA8  0E1C               	movlw	28
  1751   001CAA  59F3               	subwfb	(_address_index+1)& (0+255),w,b
  1752   001CAC  A0D8               	btfss	status,0,c
  1753   001CAE  EF5B  F00E         	goto	u9971
  1754   001CB2  EF5D  F00E         	goto	u9970
  1755   001CB6                     u9971:
  1756   001CB6  EF6C  F00E         	goto	l7931
  1757   001CBA                     u9970:
  1758   001CBA                     
  1759                           ; BSR set to: 0
  1760                           ;main.c: 410:                 EUSART_TransmitString("END \r\n");
  1761   001CBA  0E0A               	movlw	low STR_5
  1762   001CBC  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1763   001CBE  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1764   001CC0  A4D8               	btfss	status,2,c
  1765   001CC2  0E03               	movlw	high __smallconst
  1766   001CC4  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1767   001CC6  ECF5  F01A         	call	_EUSART_TransmitString	;wreg free
  1768   001CCA                     
  1769                           ;main.c: 411:                 address_index = 0;
  1770   001CCA  0E00               	movlw	0
  1771   001CCC  0100               	movlb	0	; () banked
  1772   001CCE  6FF3               	movwf	(_address_index+1)& (0+255),b
  1773   001CD0  0E00               	movlw	0
  1774   001CD2  6FF2               	movwf	_address_index& (0+255),b
  1775                           
  1776                           ;main.c: 413:             }else {
  1777   001CD4  EFEC  F00E         	goto	l7959
  1778   001CD8                     l7931:
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;main.c: 414:                 eeprom_data_lsb = EEPROMRead(address_index);
  1782   001CD8  C0F2  F062         	movff	_address_index,EEPROMRead@address
  1783   001CDC  C0F3  F063         	movff	_address_index+1,EEPROMRead@address+1
  1784   001CE0  EC92  F01D         	call	_EEPROMRead	;wreg free
  1785   001CE4  0100               	movlb	0	; () banked
  1786   001CE6  6FFD               	movwf	_eeprom_data_lsb& (0+255),b
  1787   001CE8                     
  1788                           ; BSR set to: 0
  1789                           ;main.c: 415:                 address_index++;
  1790   001CE8  4BF2               	infsnz	_address_index& (0+255),f,b
  1791   001CEA  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1792   001CEC                     
  1793                           ; BSR set to: 0
  1794                           ;main.c: 416:                 eeprom_data_msb = EEPROMRead(address_index);
  1795   001CEC  C0F2  F062         	movff	_address_index,EEPROMRead@address
  1796   001CF0  C0F3  F063         	movff	_address_index+1,EEPROMRead@address+1
  1797   001CF4  EC92  F01D         	call	_EEPROMRead	;wreg free
  1798   001CF8  0100               	movlb	0	; () banked
  1799   001CFA  6FFC               	movwf	_eeprom_data_msb& (0+255),b
  1800                           
  1801                           ;main.c: 417:                 address_index++;
  1802   001CFC  4BF2               	infsnz	_address_index& (0+255),f,b
  1803   001CFE  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1804   001D00                     
  1805                           ; BSR set to: 0
  1806                           ;main.c: 418:                 eeprom_data_ctl = EEPROMRead(address_index);
  1807   001D00  C0F2  F062         	movff	_address_index,EEPROMRead@address
  1808   001D04  C0F3  F063         	movff	_address_index+1,EEPROMRead@address+1
  1809   001D08  EC92  F01D         	call	_EEPROMRead	;wreg free
  1810   001D0C  0100               	movlb	0	; () banked
  1811   001D0E  6FFB               	movwf	_eeprom_data_ctl& (0+255),b
  1812   001D10                     
  1813                           ; BSR set to: 0
  1814                           ;main.c: 419:                 address_index++;
  1815   001D10  4BF2               	infsnz	_address_index& (0+255),f,b
  1816   001D12  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1817   001D14                     
  1818                           ; BSR set to: 0
  1819                           ;main.c: 421:                 if( eeprom_data_ctl == 254 ){
  1820   001D14  0EFE               	movlw	254
  1821   001D16  19FB               	xorwf	_eeprom_data_ctl& (0+255),w,b
  1822   001D18  A4D8               	btfss	status,2,c
  1823   001D1A  EF91  F00E         	goto	u9981
  1824   001D1E  EF93  F00E         	goto	u9980
  1825   001D22                     u9981:
  1826   001D22  EFDD  F00E         	goto	l7953
  1827   001D26                     u9980:
  1828   001D26                     
  1829                           ; BSR set to: 0
  1830                           ;main.c: 424:                     eeprom_data = ((uint16_t) eeprom_data_msb << 8) | eepr
      +                          om_data_lsb;
  1831   001D26  51FC               	movf	_eeprom_data_msb& (0+255),w,b
  1832   001D28  6FE0               	movwf	??_main& (0+255),b
  1833   001D2A  51FD               	movf	_eeprom_data_lsb& (0+255),w,b
  1834   001D2C  6FF4               	movwf	_eeprom_data& (0+255),b
  1835   001D2E  C0E0  F0F5         	movff	??_main,_eeprom_data+1
  1836   001D32                     
  1837                           ; BSR set to: 0
  1838                           ;main.c: 426:                     adc_voltage = adc_step_size * eeprom_data;
  1839   001D32  C0F4  F060         	movff	_eeprom_data,___xxtofl@val
  1840   001D36  C0F5  F061         	movff	_eeprom_data+1,___xxtofl@val+1
  1841   001D3A  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1842   001D3C  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1843   001D3E  0E00               	movlw	0
  1844   001D40  EC27  F015         	call	___xxtofl
  1845   001D44  C060  F06E         	movff	?___xxtofl,___flmul@b
  1846   001D48  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1847   001D4C  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1848   001D50  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1849   001D54  0E0A               	movlw	10
  1850   001D56  0100               	movlb	0	; () banked
  1851   001D58  6F72               	movwf	___flmul@a& (0+255),b
  1852   001D5A  0E28               	movlw	40
  1853   001D5C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1854   001D5E  0EA0               	movlw	160
  1855   001D60  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1856   001D62  0E3B               	movlw	59
  1857   001D64  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1858   001D66  ECE6  F008         	call	___flmul	;wreg free
  1859   001D6A  C06E  F0EA         	movff	?___flmul,_adc_voltage
  1860   001D6E  C06F  F0EB         	movff	?___flmul+1,_adc_voltage+1
  1861   001D72  C070  F0EC         	movff	?___flmul+2,_adc_voltage+2
  1862   001D76  C071  F0ED         	movff	?___flmul+3,_adc_voltage+3
  1863   001D7A                     
  1864                           ;main.c: 429:                     sprintf(uart_buffer, "%.2f", adc_voltage);
  1865   001D7A  0E40               	movlw	low _uart_buffer
  1866   001D7C  0100               	movlb	0	; () banked
  1867   001D7E  6FDA               	movwf	sprintf@s& (0+255),b
  1868   001D80  0E11               	movlw	low STR_2
  1869   001D82  6FDB               	movwf	sprintf@fmt& (0+255),b
  1870   001D84  C0EA  F0DC         	movff	_adc_voltage,?_sprintf+2
  1871   001D88  C0EB  F0DD         	movff	_adc_voltage+1,?_sprintf+3
  1872   001D8C  C0EC  F0DE         	movff	_adc_voltage+2,?_sprintf+4
  1873   001D90  C0ED  F0DF         	movff	_adc_voltage+3,?_sprintf+5
  1874   001D94  EC27  F01E         	call	_sprintf	;wreg free
  1875   001D98                     
  1876                           ;main.c: 431:                     EUSART_TransmitString(uart_buffer);
  1877   001D98  0E40               	movlw	low _uart_buffer
  1878   001D9A  0100               	movlb	0	; () banked
  1879   001D9C  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1880   001D9E  6B62               	clrf	(EUSART_TransmitString@a+1)& (0+255),b
  1881   001DA0  ECF5  F01A         	call	_EUSART_TransmitString	;wreg free
  1882   001DA4                     
  1883                           ;main.c: 432:                     EUSART_TransmitString("\r\n");
  1884   001DA4  0E0E               	movlw	low (STR_5+4)
  1885   001DA6  0100               	movlb	0	; () banked
  1886   001DA8  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1887   001DAA  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1888   001DAC  A4D8               	btfss	status,2,c
  1889   001DAE  0E03               	movlw	high __smallconst
  1890   001DB0  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1891   001DB2  ECF5  F01A         	call	_EUSART_TransmitString	;wreg free
  1892                           
  1893                           ;main.c: 433:                 }else{
  1894   001DB6  EFEC  F00E         	goto	l7959
  1895   001DBA                     l7953:
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;main.c: 434:                     address_index = 7200;
  1899   001DBA  0E1C               	movlw	28
  1900   001DBC  6FF3               	movwf	(_address_index+1)& (0+255),b
  1901   001DBE  0E20               	movlw	32
  1902   001DC0  6FF2               	movwf	_address_index& (0+255),b
  1903   001DC2  EFEC  F00E         	goto	l7959
  1904   001DC6                     l7955:
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;main.c: 439:             if( fsm_state < 7){
  1908   001DC6  0E07               	movlw	7
  1909   001DC8  61F9               	cpfslt	_fsm_state& (0+255),b
  1910   001DCA  EFE9  F00E         	goto	u9991
  1911   001DCE  EFEB  F00E         	goto	u9990
  1912   001DD2                     u9991:
  1913   001DD2  EFEC  F00E         	goto	l7959
  1914   001DD6                     u9990:
  1915   001DD6                     
  1916                           ; BSR set to: 0
  1917                           ;main.c: 440:                 LATAbits.LA5 = 0;
  1918   001DD6  9A89               	bcf	137,5,c	;volatile
  1919   001DD8                     l7959:
  1920                           
  1921                           ;main.c: 444:         if( turnOnDisplay == 1 ){
  1922   001DD8  0100               	movlb	0	; () banked
  1923   001DDA  05FA               	decf	_turnOnDisplay& (0+255),w,b
  1924   001DDC  A4D8               	btfss	status,2,c
  1925   001DDE  EFF3  F00E         	goto	u10001
  1926   001DE2  EFF5  F00E         	goto	u10000
  1927   001DE6                     u10001:
  1928   001DE6  EF0B  F00F         	goto	l219
  1929   001DEA                     u10000:
  1930   001DEA                     
  1931                           ; BSR set to: 0
  1932                           ;main.c: 446:             PORTCbits.RC0 = 0;
  1933   001DEA  9082               	bcf	130,0,c	;volatile
  1934   001DEC                     
  1935                           ; BSR set to: 0
  1936                           ;main.c: 448:             setDisplayDigits();
  1937   001DEC  ECE6  F010         	call	_setDisplayDigits	;wreg free
  1938   001DF0                     
  1939                           ;main.c: 449:             show7Segment();
  1940   001DF0  EC89  F01C         	call	_show7Segment	;wreg free
  1941   001DF4                     
  1942                           ;main.c: 451:             _delay((unsigned long)((10000)*(2000000/4000.0)));
  1943   001DF4  0E1A               	movlw	26
  1944   001DF6  0100               	movlb	0	; () banked
  1945   001DF8  6FE1               	movwf	(??_main+1)& (0+255),b
  1946   001DFA  0E5E               	movlw	94
  1947   001DFC  6FE0               	movwf	??_main& (0+255),b
  1948   001DFE  0E6E               	movlw	110
  1949   001E00                     u10057:
  1950   001E00  2EE8               	decfsz	wreg,f,c
  1951   001E02  D7FE               	bra	u10057
  1952   001E04  2FE0               	decfsz	??_main& (0+255),f,b
  1953   001E06  D7FC               	bra	u10057
  1954   001E08  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1955   001E0A  D7FA               	bra	u10057
  1956   001E0C  0000               	nop	
  1957   001E0E                     
  1958                           ;main.c: 453:             turnOnDisplay = 0;
  1959   001E0E  0100               	movlb	0	; () banked
  1960   001E10  6BFA               	clrf	_turnOnDisplay& (0+255),b
  1961                           
  1962                           ;main.c: 455:         }else{
  1963   001E12  EF44  F00D         	goto	l7859
  1964   001E16                     l219:
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;main.c: 457:             PORTCbits.RC0 = 1;
  1968   001E16  8082               	bsf	130,0,c	;volatile
  1969   001E18                     
  1970                           ; BSR set to: 0
  1971                           ;main.c: 459:              _delay((unsigned long)((1000)*(2000000/4000.0)));
  1972   001E18  0E03               	movlw	3
  1973   001E1A  0100               	movlb	0	; () banked
  1974   001E1C  6FE1               	movwf	(??_main+1)& (0+255),b
  1975   001E1E  0E8A               	movlw	138
  1976   001E20  6FE0               	movwf	??_main& (0+255),b
  1977   001E22  0E55               	movlw	85
  1978   001E24                     u10067:
  1979   001E24  2EE8               	decfsz	wreg,f,c
  1980   001E26  D7FE               	bra	u10067
  1981   001E28  2FE0               	decfsz	??_main& (0+255),f,b
  1982   001E2A  D7FC               	bra	u10067
  1983   001E2C  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1984   001E2E  D7FA               	bra	u10067
  1985   001E30  D000               	nop2	
  1986   001E32  EF44  F00D         	goto	l7859
  1987   001E36  EF33  F001         	goto	start
  1988   001E3A                     __end_of_main:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _sprintf *****************
  1992 ;; Defined at:
  1993 ;;		line 9 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_sprintf.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  s               1  122[BANK0 ] PTR unsigned char 
  1996 ;;		 -> uart_buffer(10), 
  1997 ;;  fmt             1  123[BANK0 ] PTR const unsigned char 
  1998 ;;		 -> STR_6(5), STR_2(5), 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  f              11    1[BANK1 ] struct _IO_FILE
  2001 ;;  ret             2    0        int 
  2002 ;;  ap              1    0[BANK1 ] PTR void [1]
  2003 ;;		 -> ?_sprintf(2), 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  2  122[BANK0 ] int 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2013 ;;      Params:         0       6       0       0
  2014 ;;      Locals:         0       0      12       0
  2015 ;;      Temps:          0       0       0       0
  2016 ;;      Totals:         0       6      12       0
  2017 ;;Total ram usage:       18 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 10
  2020 ;; This function calls:
  2021 ;;		_vfprintf
  2022 ;; This function is called by:
  2023 ;;		_main
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text1
  2028   003C4E                     __ptext1:
  2029                           	callstack 0
  2030   003C4E                     _sprintf:
  2031                           	callstack 20
  2032   003C4E  0EDC               	movlw	low (?_sprintf+2)
  2033   003C50  0101               	movlb	1	; () banked
  2034   003C52  6F50               	movwf	sprintf@ap& (0+255),b
  2035   003C54  C0DA  F151         	movff	sprintf@s,sprintf@f
  2036   003C58                     
  2037                           ; BSR set to: 1
  2038   003C58  0E00               	movlw	0
  2039   003C5A  6F54               	movwf	(sprintf@f+3)& (0+255),b
  2040   003C5C  0E00               	movlw	0
  2041   003C5E  6F53               	movwf	(sprintf@f+2)& (0+255),b
  2042   003C60                     
  2043                           ; BSR set to: 1
  2044   003C60  0E00               	movlw	0
  2045   003C62  6F5B               	movwf	(sprintf@f+10)& (0+255),b
  2046   003C64  0E00               	movlw	0
  2047   003C66  6F5A               	movwf	(sprintf@f+9)& (0+255),b
  2048   003C68                     
  2049                           ; BSR set to: 1
  2050   003C68  0E51               	movlw	low sprintf@f
  2051   003C6A  0100               	movlb	0	; () banked
  2052   003C6C  6FD4               	movwf	vfprintf@fp& (0+255),b
  2053   003C6E  0E01               	movlw	high sprintf@f
  2054   003C70  6FD5               	movwf	(vfprintf@fp+1)& (0+255),b
  2055   003C72  C0DB  F0D6         	movff	sprintf@fmt,vfprintf@fmt
  2056   003C76  0E50               	movlw	low sprintf@ap
  2057   003C78  6FD7               	movwf	vfprintf@ap& (0+255),b
  2058   003C7A  0E01               	movlw	high sprintf@ap
  2059   003C7C  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  2060   003C7E  ECBA  F01D         	call	_vfprintf	;wreg free
  2061   003C82  0100               	movlb	0	; () banked
  2062   003C84  51DA               	movf	sprintf@s& (0+255),w,b
  2063   003C86  0101               	movlb	1	; () banked
  2064   003C88  2553               	addwf	(sprintf@f+2)& (0+255),w,b
  2065   003C8A  6ED9               	movwf	fsr2l,c
  2066   003C8C  6ADA               	clrf	fsr2h,c
  2067   003C8E  6ADF               	clrf	indf2,c
  2068   003C90                     
  2069                           ; BSR set to: 1
  2070   003C90  0012               	return		;funcret
  2071   003C92                     __end_of_sprintf:
  2072                           	callstack 0
  2073                           
  2074 ;; *************** function _vfprintf *****************
  2075 ;; Defined at:
  2076 ;;		line 1817 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  fp              2  116[BANK0 ] PTR struct _IO_FILE
  2079 ;;		 -> sprintf@f(11), 
  2080 ;;  fmt             1  118[BANK0 ] PTR const unsigned char 
  2081 ;;		 -> STR_6(5), STR_2(5), 
  2082 ;;  ap              2  119[BANK0 ] PTR PTR void 
  2083 ;;		 -> sprintf@ap(1), 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  cfmt            1  121[BANK0 ] PTR unsigned char 
  2086 ;;		 -> STR_6(5), STR_2(5), 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  2  116[BANK0 ] int 
  2089 ;; Registers used:
  2090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2096 ;;      Params:         0       5       0       0
  2097 ;;      Locals:         0       1       0       0
  2098 ;;      Temps:          0       0       0       0
  2099 ;;      Totals:         0       6       0       0
  2100 ;;Total ram usage:        6 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; Hardware stack levels required when called: 9
  2103 ;; This function calls:
  2104 ;;		_vfpfcnvrt
  2105 ;; This function is called by:
  2106 ;;		_sprintf
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text2
  2111   003B74                     __ptext2:
  2112                           	callstack 0
  2113   003B74                     _vfprintf:
  2114                           	callstack 20
  2115   003B74                     
  2116                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
  2117   003B74  C0D6  F0D9         	movff	vfprintf@fmt,vfprintf@cfmt
  2118                           
  2119                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  2120   003B78  EFCB  F01D         	goto	l7583
  2121   003B7C                     l7581:
  2122                           
  2123                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt,
      +                           ap);
  2124   003B7C  C0D4  F0C8         	movff	vfprintf@fp,vfpfcnvrt@fp
  2125   003B80  C0D5  F0C9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2126   003B84  0ED9               	movlw	low vfprintf@cfmt
  2127   003B86  0100               	movlb	0	; () banked
  2128   003B88  6FCA               	movwf	vfpfcnvrt@fmt& (0+255),b
  2129   003B8A  C0D7  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  2130   003B8E  C0D8  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2131   003B92  EC36  F014         	call	_vfpfcnvrt	;wreg free
  2132   003B96                     l7583:
  2133                           
  2134                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  2135   003B96  C0D9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2136   003B9A                     	if	1	;There is more than 1 active tblptr byte
  2137   003B9A  0E03               	movlw	high __smallconst
  2138   003B9C  6EF7               	movwf	tblptrh,c
  2139   003B9E                     	endif
  2140   003B9E                     	if	0	;tblptru may be non-zero
  2141   003B9E                     	endif
  2142   003B9E                     	if	0	;tblptru may be non-zero
  2143   003B9E                     	endif
  2144   003B9E  0008               	tblrd		*
  2145   003BA0  50F5               	movf	tablat,w,c
  2146   003BA2  0900               	iorlw	0
  2147   003BA4  A4D8               	btfss	status,2,c
  2148   003BA6  EFD7  F01D         	goto	u9641
  2149   003BAA  EFD9  F01D         	goto	u9640
  2150   003BAE                     u9641:
  2151   003BAE  EFBE  F01D         	goto	l7581
  2152   003BB2                     u9640:
  2153   003BB2                     
  2154                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  2155   003BB2  0E00               	movlw	0
  2156   003BB4  0100               	movlb	0	; () banked
  2157   003BB6  6FD5               	movwf	(?_vfprintf+1)& (0+255),b
  2158   003BB8  0E00               	movlw	0
  2159   003BBA  6FD4               	movwf	?_vfprintf& (0+255),b
  2160   003BBC                     
  2161                           ; BSR set to: 0
  2162   003BBC  0012               	return		;funcret
  2163   003BBE                     __end_of_vfprintf:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _vfpfcnvrt *****************
  2167 ;; Defined at:
  2168 ;;		line 1177 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  fp              2  104[BANK0 ] PTR struct _IO_FILE
  2171 ;;		 -> sprintf@f(11), 
  2172 ;;  fmt             1  106[BANK0 ] PTR PTR unsigned char 
  2173 ;;		 -> vfprintf@cfmt(1), 
  2174 ;;  ap              2  107[BANK0 ] PTR PTR void 
  2175 ;;		 -> sprintf@ap(1), 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  convarg         4  110[BANK0 ] struct .
  2178 ;;  cp              1  115[BANK0 ] PTR unsigned char 
  2179 ;;		 -> STR_6(5), STR_2(5), 
  2180 ;;  c               1  114[BANK0 ] unsigned char 
  2181 ;;  done            1    0        _Bool 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2191 ;;      Params:         0       5       0       0
  2192 ;;      Locals:         0       6       0       0
  2193 ;;      Temps:          0       1       0       0
  2194 ;;      Totals:         0      12       0       0
  2195 ;;Total ram usage:       12 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 8
  2198 ;; This function calls:
  2199 ;;		_efgtoa
  2200 ;;		_fputc
  2201 ;;		_read_prec_or_width
  2202 ;; This function is called by:
  2203 ;;		_vfprintf
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text3
  2208   00286C                     __ptext3:
  2209                           	callstack 0
  2210   00286C                     _vfpfcnvrt:
  2211                           	callstack 20
  2212   00286C                     
  2213                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v2.50/pic/sources/c99/common/doprnt.c: 1188:  } convarg;;/opt/microchip/xc8/v2.50/pi
      +                          c/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2214   00286C  0100               	movlb	0	; () banked
  2215   00286E  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2216   002870  6ED9               	movwf	fsr2l,c
  2217   002872  6ADA               	clrf	fsr2h,c
  2218   002874  CFDF FFF6          	movff	indf2,tblptrl
  2219   002878                     	if	1	;There is more than 1 active tblptr byte
  2220   002878  0E03               	movlw	high __smallconst
  2221   00287A  6EF7               	movwf	tblptrh,c
  2222   00287C                     	endif
  2223   00287C                     	if	0	;tblptru may be non-zero
  2224   00287C                     	endif
  2225   00287C                     	if	0	;tblptru may be non-zero
  2226   00287C                     	endif
  2227   00287C  0008               	tblrd		*
  2228   00287E  50F5               	movf	tablat,w,c
  2229   002880  0A25               	xorlw	37
  2230   002882  A4D8               	btfss	status,2,c
  2231   002884  EF46  F014         	goto	u9421
  2232   002888  EF48  F014         	goto	u9420
  2233   00288C                     u9421:
  2234   00288C  EF13  F015         	goto	l7447
  2235   002890                     u9420:
  2236   002890                     
  2237                           ; BSR set to: 0
  2238                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
  2239   002890  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2240   002892  6ED9               	movwf	fsr2l,c
  2241   002894  6ADA               	clrf	fsr2h,c
  2242   002896  2ADF               	incf	indf2,f,c
  2243   002898                     
  2244                           ; BSR set to: 0
  2245                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
  2246   002898  0E00               	movlw	0
  2247   00289A  6FEF               	movwf	(_width+1)& (0+255),b
  2248   00289C  0E00               	movlw	0
  2249   00289E  6FEE               	movwf	_width& (0+255),b
  2250   0028A0  C0EE  F0F8         	movff	_width,_flags
  2251   0028A4                     
  2252                           ; BSR set to: 0
  2253                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
  2254   0028A4  69F0               	setf	_prec& (0+255),b
  2255   0028A6  69F1               	setf	(_prec+1)& (0+255),b
  2256   0028A8                     
  2257                           ; BSR set to: 0
  2258                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1265:         if ((*fmt)[0] =
      +                          = '.') {
  2259   0028A8  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2260   0028AA  6ED9               	movwf	fsr2l,c
  2261   0028AC  6ADA               	clrf	fsr2h,c
  2262   0028AE  CFDF FFF6          	movff	indf2,tblptrl
  2263   0028B2                     	if	1	;There is more than 1 active tblptr byte
  2264   0028B2  0E03               	movlw	high __smallconst
  2265   0028B4  6EF7               	movwf	tblptrh,c
  2266   0028B6                     	endif
  2267   0028B6                     	if	0	;tblptru may be non-zero
  2268   0028B6                     	endif
  2269   0028B6                     	if	0	;tblptru may be non-zero
  2270   0028B6                     	endif
  2271   0028B6  0008               	tblrd		*
  2272   0028B8  50F5               	movf	tablat,w,c
  2273   0028BA  0A2E               	xorlw	46
  2274   0028BC  A4D8               	btfss	status,2,c
  2275   0028BE  EF63  F014         	goto	u9431
  2276   0028C2  EF65  F014         	goto	u9430
  2277   0028C6                     u9431:
  2278   0028C6  EF75  F014         	goto	l7411
  2279   0028CA                     u9430:
  2280   0028CA                     
  2281                           ; BSR set to: 0
  2282                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1266:             ++*fmt;
  2283   0028CA  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2284   0028CC  6ED9               	movwf	fsr2l,c
  2285   0028CE  6ADA               	clrf	fsr2h,c
  2286   0028D0  2ADF               	incf	indf2,f,c
  2287   0028D2                     
  2288                           ; BSR set to: 0
  2289                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1267:    prec = read_prec_or_
      +                          width(fmt, ap);
  2290   0028D2  C0CA  F060         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2291   0028D6  C0CB  F061         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2292   0028DA  C0CC  F062         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  2293   0028DE  ECA1  F01A         	call	_read_prec_or_width	;wreg free
  2294   0028E2  C060  F0F0         	movff	?_read_prec_or_width,_prec
  2295   0028E6  C061  F0F1         	movff	?_read_prec_or_width+1,_prec+1
  2296   0028EA                     l7411:
  2297                           
  2298                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1689:   cp = *fmt;
  2299   0028EA  0100               	movlb	0	; () banked
  2300   0028EC  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2301   0028EE  6ED9               	movwf	fsr2l,c
  2302   0028F0  6ADA               	clrf	fsr2h,c
  2303   0028F2  50DF               	movf	indf2,w,c
  2304   0028F4  6FD3               	movwf	vfpfcnvrt@cp& (0+255),b
  2305   0028F6                     
  2306                           ; BSR set to: 0
  2307                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1690:   c = *cp;
  2308   0028F6  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2309   0028FA                     	if	1	;There is more than 1 active tblptr byte
  2310   0028FA  0E03               	movlw	high __smallconst
  2311   0028FC  6EF7               	movwf	tblptrh,c
  2312   0028FE                     	endif
  2313   0028FE                     	if	0	;tblptru may be non-zero
  2314   0028FE                     	endif
  2315   0028FE                     	if	0	;tblptru may be non-zero
  2316   0028FE                     	endif
  2317   0028FE  0008               	tblrd		*
  2318   002900  CFF5 F0D2          	movff	tablat,vfpfcnvrt@c
  2319                           
  2320                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1691:   switch(c) {
  2321   002904  EF8E  F014         	goto	l7421
  2322   002908                     l7415:
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1695:     cp++;
  2326   002908  2BD3               	incf	vfpfcnvrt@cp& (0+255),f,b
  2327                           
  2328                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1696:     break;
  2329   00290A  EF9D  F014         	goto	l7423
  2330   00290E                     l7417:
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1721:     c = 'l';
  2334   00290E  0E6C               	movlw	108
  2335   002910  6FD2               	movwf	vfpfcnvrt@c& (0+255),b
  2336                           
  2337                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1722:     break;
  2338   002912  EF9D  F014         	goto	l7423
  2339   002916                     l1126:
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1724:     c = 0;
  2343   002916  6BD2               	clrf	vfpfcnvrt@c& (0+255),b
  2344                           
  2345                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1725:     break;
  2346   002918  EF9D  F014         	goto	l7423
  2347   00291C                     l7421:
  2348                           
  2349                           ; BSR set to: 0
  2350   00291C  51D2               	movf	vfpfcnvrt@c& (0+255),w,b
  2351                           
  2352                           ; Switch size 1, requested type "simple"
  2353                           ; Number of cases is 3, Range of values is 76 to 108
  2354                           ; switch strategies available:
  2355                           ; Name         Instructions Cycles
  2356                           ; simple_byte           10     6 (average)
  2357                           ;	Chosen strategy is simple_byte
  2358   00291E  0A4C               	xorlw	76	; case 76
  2359   002920  B4D8               	btfsc	status,2,c
  2360   002922  EF84  F014         	goto	l7415
  2361   002926  0A2A               	xorlw	42	; case 102
  2362   002928  B4D8               	btfsc	status,2,c
  2363   00292A  EF87  F014         	goto	l7417
  2364   00292E  0A0A               	xorlw	10	; case 108
  2365   002930  B4D8               	btfsc	status,2,c
  2366   002932  EF84  F014         	goto	l7415
  2367   002936  EF8B  F014         	goto	l1126
  2368   00293A                     l7423:
  2369                           
  2370                           ; BSR set to: 0
  2371   00293A  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2372   00293E                     	if	1	;There is more than 1 active tblptr byte
  2373   00293E  0E03               	movlw	high __smallconst
  2374   002940  6EF7               	movwf	tblptrh,c
  2375   002942                     	endif
  2376   002942                     	if	0	;tblptru may be non-zero
  2377   002942                     	endif
  2378   002942                     	if	0	;tblptru may be non-zero
  2379   002942                     	endif
  2380   002942  0008               	tblrd		*
  2381   002944  50F5               	movf	tablat,w,c
  2382   002946  0A66               	xorlw	102
  2383   002948  A4D8               	btfss	status,2,c
  2384   00294A  EFA9  F014         	goto	u9441
  2385   00294E  EFAB  F014         	goto	u9440
  2386   002952                     u9441:
  2387   002952  EF0C  F015         	goto	l7443
  2388   002956                     u9440:
  2389   002956  EFD7  F014         	goto	l7431
  2390   00295A                     l7425:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1756:      convarg.f = (long 
      +                          double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2394   00295A  C0CB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2395   00295E  C0CC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2396   002962  CFDF F0CD          	movff	indf2,??_vfpfcnvrt
  2397   002966  0E04               	movlw	4
  2398   002968  26DF               	addwf	indf2,f,c
  2399   00296A  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  2400   00296C  6ED9               	movwf	fsr2l,c
  2401   00296E  6ADA               	clrf	fsr2h,c
  2402   002970  CFDE F0CE          	movff	postinc2,vfpfcnvrt@convarg
  2403   002974  CFDE F0CF          	movff	postinc2,vfpfcnvrt@convarg+1
  2404   002978  CFDE F0D0          	movff	postinc2,vfpfcnvrt@convarg+2
  2405   00297C  CFDE F0D1          	movff	postinc2,vfpfcnvrt@convarg+3
  2406                           
  2407                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1757:      break;
  2408   002980  EFE2  F014         	goto	l7433
  2409   002984                     l7427:
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1759:      convarg.f = (long 
      +                          double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2413   002984  C0CB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2414   002988  C0CC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2415   00298C  CFDF F0CD          	movff	indf2,??_vfpfcnvrt
  2416   002990  0E04               	movlw	4
  2417   002992  26DF               	addwf	indf2,f,c
  2418   002994  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  2419   002996  6ED9               	movwf	fsr2l,c
  2420   002998  6ADA               	clrf	fsr2h,c
  2421   00299A  CFDE F0CE          	movff	postinc2,vfpfcnvrt@convarg
  2422   00299E  CFDE F0CF          	movff	postinc2,vfpfcnvrt@convarg+1
  2423   0029A2  CFDE F0D0          	movff	postinc2,vfpfcnvrt@convarg+2
  2424   0029A6  CFDE F0D1          	movff	postinc2,vfpfcnvrt@convarg+3
  2425                           
  2426                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1760:      break;
  2427   0029AA  EFE2  F014         	goto	l7433
  2428   0029AE                     l7431:
  2429                           
  2430                           ; BSR set to: 0
  2431   0029AE  51D2               	movf	vfpfcnvrt@c& (0+255),w,b
  2432                           
  2433                           ; Switch size 1, requested type "simple"
  2434                           ; Number of cases is 2, Range of values is 76 to 108
  2435                           ; switch strategies available:
  2436                           ; Name         Instructions Cycles
  2437                           ; simple_byte            7     4 (average)
  2438                           ;	Chosen strategy is simple_byte
  2439   0029B0  0A4C               	xorlw	76	; case 76
  2440   0029B2  B4D8               	btfsc	status,2,c
  2441   0029B4  EFC2  F014         	goto	l7427
  2442   0029B8  0A20               	xorlw	32	; case 108
  2443   0029BA  B4D8               	btfsc	status,2,c
  2444   0029BC  EFAD  F014         	goto	l7425
  2445   0029C0  EFE2  F014         	goto	l7433
  2446   0029C4                     l7433:
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1762:    *fmt = cp+1;
  2450   0029C4  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2451   0029C6  6ED9               	movwf	fsr2l,c
  2452   0029C8  6ADA               	clrf	fsr2h,c
  2453   0029CA  29D3               	incf	vfpfcnvrt@cp& (0+255),w,b
  2454   0029CC  6EDF               	movwf	indf2,c
  2455                           
  2456                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1763:    switch (*cp) {
  2457   0029CE  EF00  F015         	goto	l7441
  2458   0029D2                     l7435:
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1790:      return (void) efgt
      +                          oa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2462   0029D2  C0C8  F093         	movff	vfpfcnvrt@fp,efgtoa@fp
  2463   0029D6  C0C9  F094         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2464   0029DA  C0CE  F095         	movff	vfpfcnvrt@convarg,efgtoa@f
  2465   0029DE  C0CF  F096         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2466   0029E2  C0D0  F097         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2467   0029E6  C0D1  F098         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2468   0029EA  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2469   0029EE                     	if	1	;There is more than 1 active tblptr byte
  2470   0029EE  0E03               	movlw	high __smallconst
  2471   0029F0  6EF7               	movwf	tblptrh,c
  2472   0029F2                     	endif
  2473   0029F2                     	if	0	;tblptru may be non-zero
  2474   0029F2                     	endif
  2475   0029F2                     	if	0	;tblptru may be non-zero
  2476   0029F2                     	endif
  2477   0029F2  0008               	tblrd		*
  2478   0029F4  CFF5 F099          	movff	tablat,efgtoa@c
  2479   0029F8  EC90  F001         	call	_efgtoa	;wreg free
  2480   0029FC  EF26  F015         	goto	l1136
  2481   002A00                     l7441:
  2482                           
  2483                           ; BSR set to: 0
  2484   002A00  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2485   002A04                     	if	1	;There is more than 1 active tblptr byte
  2486   002A04  0E03               	movlw	high __smallconst
  2487   002A06  6EF7               	movwf	tblptrh,c
  2488   002A08                     	endif
  2489   002A08                     	if	0	;tblptru may be non-zero
  2490   002A08                     	endif
  2491   002A08                     	if	0	;tblptru may be non-zero
  2492   002A08                     	endif
  2493   002A08  0008               	tblrd		*
  2494   002A0A  50F5               	movf	tablat,w,c
  2495                           
  2496                           ; Switch size 1, requested type "simple"
  2497                           ; Number of cases is 1, Range of values is 102 to 102
  2498                           ; switch strategies available:
  2499                           ; Name         Instructions Cycles
  2500                           ; simple_byte            4     3 (average)
  2501                           ;	Chosen strategy is simple_byte
  2502   002A0C  0A66               	xorlw	102	; case 102
  2503   002A0E  B4D8               	btfsc	status,2,c
  2504   002A10  EFE9  F014         	goto	l7435
  2505   002A14  EF0C  F015         	goto	l7443
  2506   002A18                     l7443:
  2507                           
  2508                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
  2509   002A18  0100               	movlb	0	; () banked
  2510   002A1A  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2511   002A1C  6ED9               	movwf	fsr2l,c
  2512   002A1E  6ADA               	clrf	fsr2h,c
  2513   002A20  2ADF               	incf	indf2,f,c
  2514   002A22  EF26  F015         	goto	l1136
  2515   002A26                     l7447:
  2516                           
  2517                           ; BSR set to: 0
  2518                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
  2519   002A26  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2520   002A28  6ED9               	movwf	fsr2l,c
  2521   002A2A  6ADA               	clrf	fsr2h,c
  2522   002A2C  CFDF FFF6          	movff	indf2,tblptrl
  2523   002A30                     	if	1	;There is more than 1 active tblptr byte
  2524   002A30  0E03               	movlw	high __smallconst
  2525   002A32  6EF7               	movwf	tblptrh,c
  2526   002A34                     	endif
  2527   002A34                     	if	0	;tblptru may be non-zero
  2528   002A34                     	endif
  2529   002A34                     	if	0	;tblptru may be non-zero
  2530   002A34                     	endif
  2531   002A34  0008               	tblrd		*
  2532   002A36  50F5               	movf	tablat,w,c
  2533   002A38  6F60               	movwf	fputc@c& (0+255),b
  2534   002A3A  6B61               	clrf	(fputc@c+1)& (0+255),b
  2535   002A3C  C0C8  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2536   002A40  C0C9  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2537   002A44  ECED  F019         	call	_fputc	;wreg free
  2538   002A48  EF0C  F015         	goto	l7443
  2539   002A4C                     l1136:
  2540   002A4C  0012               	return		;funcret
  2541   002A4E                     __end_of_vfpfcnvrt:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _read_prec_or_width *****************
  2545 ;; Defined at:
  2546 ;;		line 1158 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  fmt             1    0[BANK0 ] PTR PTR const unsigned c
  2549 ;;		 -> vfprintf@cfmt(1), 
  2550 ;;  ap              2    1[BANK0 ] PTR PTR void [1]
  2551 ;;		 -> sprintf@ap(1), 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  c               1    5[BANK0 ] unsigned char 
  2554 ;;  n               2    6[BANK0 ] int 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  2    0[BANK0 ] int 
  2557 ;; Registers used:
  2558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2564 ;;      Params:         0       3       0       0
  2565 ;;      Locals:         0       3       0       0
  2566 ;;      Temps:          0       2       0       0
  2567 ;;      Totals:         0       8       0       0
  2568 ;;Total ram usage:        8 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 3
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_vfpfcnvrt
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text4
  2579   003542                     __ptext4:
  2580                           	callstack 0
  2581   003542                     _read_prec_or_width:
  2582                           	callstack 24
  2583   003542                     
  2584                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  2585   003542  0E00               	movlw	0
  2586   003544  0100               	movlb	0	; () banked
  2587   003546  6F67               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2588   003548  0E00               	movlw	0
  2589   00354A  6F66               	movwf	read_prec_or_width@n& (0+255),b
  2590   00354C                     
  2591                           ; BSR set to: 0
  2592                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)[0] == '*
      +                          ') {
  2593   00354C  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2594   00354E  6ED9               	movwf	fsr2l,c
  2595   003550  6ADA               	clrf	fsr2h,c
  2596   003552  CFDF FFF6          	movff	indf2,tblptrl
  2597   003556                     	if	1	;There is more than 1 active tblptr byte
  2598   003556  0E03               	movlw	high __smallconst
  2599   003558  6EF7               	movwf	tblptrh,c
  2600   00355A                     	endif
  2601   00355A                     	if	0	;tblptru may be non-zero
  2602   00355A                     	endif
  2603   00355A                     	if	0	;tblptru may be non-zero
  2604   00355A                     	endif
  2605   00355A  0008               	tblrd		*
  2606   00355C  50F5               	movf	tablat,w,c
  2607   00355E  0A2A               	xorlw	42
  2608   003560  A4D8               	btfss	status,2,c
  2609   003562  EFB5  F01A         	goto	u9401
  2610   003566  EFB7  F01A         	goto	u9400
  2611   00356A                     u9401:
  2612   00356A  EFDD  F01A         	goto	l7395
  2613   00356E                     u9400:
  2614   00356E                     
  2615                           ; BSR set to: 0
  2616                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt;
  2617   00356E  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2618   003570  6ED9               	movwf	fsr2l,c
  2619   003572  6ADA               	clrf	fsr2h,c
  2620   003574  2ADF               	incf	indf2,f,c
  2621   003576                     
  2622                           ; BSR set to: 0
  2623                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1162:         n = (*(int *)__
      +                          va_arg(*(int **)*ap, (int)0));
  2624   003576  C061  FFD9         	movff	read_prec_or_width@ap,fsr2l
  2625   00357A  C062  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  2626   00357E  0E02               	movlw	2
  2627   003580  26DF               	addwf	indf2,f,c
  2628   003582  5CDF               	subwf	indf2,w,c
  2629   003584  6ED9               	movwf	fsr2l,c
  2630   003586  6ADA               	clrf	fsr2h,c
  2631   003588  CFDE F066          	movff	postinc2,read_prec_or_width@n
  2632   00358C  CFDE F067          	movff	postinc2,read_prec_or_width@n+1
  2633                           
  2634                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1163:     } else {
  2635   003590  EFF0  F01A         	goto	l1112
  2636   003594                     l7391:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1166:             n = n * 10 
      +                          + c;
  2640   003594  0E0A               	movlw	10
  2641   003596  0366               	mulwf	read_prec_or_width@n& (0+255),b
  2642   003598  CFF3 F063          	movff	prodl,??_read_prec_or_width
  2643   00359C  CFF4 F064          	movff	prodh,??_read_prec_or_width+1
  2644   0035A0  0367               	mulwf	(read_prec_or_width@n+1)& (0+255),b
  2645   0035A2  50F3               	movf	prodl,w,c
  2646   0035A4  2764               	addwf	(??_read_prec_or_width+1)& (0+255),f,b
  2647   0035A6  5165               	movf	read_prec_or_width@c& (0+255),w,b
  2648   0035A8  2563               	addwf	??_read_prec_or_width& (0+255),w,b
  2649   0035AA  6F66               	movwf	read_prec_or_width@n& (0+255),b
  2650   0035AC  0E00               	movlw	0
  2651   0035AE  2164               	addwfc	(??_read_prec_or_width+1)& (0+255),w,b
  2652   0035B0  6F67               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2653   0035B2                     
  2654                           ; BSR set to: 0
  2655                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1167:             ++*fmt;
  2656   0035B2  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2657   0035B4  6ED9               	movwf	fsr2l,c
  2658   0035B6  6ADA               	clrf	fsr2h,c
  2659   0035B8  2ADF               	incf	indf2,f,c
  2660   0035BA                     l7395:
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1165:         while ((c = ((u
      +                          nsigned)(*fmt)[0]) - '0') < 10) {
  2664   0035BA  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2665   0035BC  6ED9               	movwf	fsr2l,c
  2666   0035BE  6ADA               	clrf	fsr2h,c
  2667   0035C0  CFDF FFF6          	movff	indf2,tblptrl
  2668   0035C4                     	if	1	;There is more than 1 active tblptr byte
  2669   0035C4  0E03               	movlw	high __smallconst
  2670   0035C6  6EF7               	movwf	tblptrh,c
  2671   0035C8                     	endif
  2672   0035C8                     	if	0	;tblptru may be non-zero
  2673   0035C8                     	endif
  2674   0035C8                     	if	0	;tblptru may be non-zero
  2675   0035C8                     	endif
  2676   0035C8  0008               	tblrd		*
  2677   0035CA  50F5               	movf	tablat,w,c
  2678   0035CC  0FD0               	addlw	208
  2679   0035CE  6F65               	movwf	read_prec_or_width@c& (0+255),b
  2680   0035D0  0E09               	movlw	9
  2681   0035D2  6565               	cpfsgt	read_prec_or_width@c& (0+255),b
  2682   0035D4  EFEE  F01A         	goto	u9411
  2683   0035D8  EFF0  F01A         	goto	u9410
  2684   0035DC                     u9411:
  2685   0035DC  EFCA  F01A         	goto	l7391
  2686   0035E0                     u9410:
  2687   0035E0                     l1112:
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1170:     return n;
  2691   0035E0  C066  F060         	movff	read_prec_or_width@n,?_read_prec_or_width
  2692   0035E4  C067  F061         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2693   0035E8                     
  2694                           ; BSR set to: 0
  2695   0035E8  0012               	return		;funcret
  2696   0035EA                     __end_of_read_prec_or_width:
  2697                           	callstack 0
  2698                           
  2699 ;; *************** function _efgtoa *****************
  2700 ;; Defined at:
  2701 ;;		line 587 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  fp              2   51[BANK0 ] PTR struct _IO_FILE
  2704 ;;		 -> sprintf@f(11), 
  2705 ;;  f               4   53[BANK0 ] PTR struct _IO_FILE
  2706 ;;  c               1   57[BANK0 ] unsigned char 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  u               4  100[BANK0 ] struct flui
  2709 ;;  g               4   94[BANK0 ] struct flui
  2710 ;;  l               4   89[BANK0 ] struct flui
  2711 ;;  h               4   85[BANK0 ] struct flui
  2712 ;;  ou              4   79[BANK0 ] struct flui
  2713 ;;  n               2   98[BANK0 ] int 
  2714 ;;  i               2   83[BANK0 ] int 
  2715 ;;  w               2   77[BANK0 ] int 
  2716 ;;  e               2   75[BANK0 ] int 
  2717 ;;  m               2   73[BANK0 ] int 
  2718 ;;  d               2   71[BANK0 ] int 
  2719 ;;  t               2   64[BANK0 ] int 
  2720 ;;  p               2   62[BANK0 ] int 
  2721 ;;  ne              2   60[BANK0 ] int 
  2722 ;;  sign            1   93[BANK0 ] unsigned char 
  2723 ;;  nmode           1   70[BANK0 ] unsigned char 
  2724 ;;  mode            1   69[BANK0 ] unsigned char 
  2725 ;;  pp              1   68[BANK0 ] unsigned char 
  2726 ;;  esign           1    0        unsigned char 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2736 ;;      Params:         0       7       0       0
  2737 ;;      Locals:         0      44       0       0
  2738 ;;      Temps:          0       2       0       0
  2739 ;;      Totals:         0      53       0       0
  2740 ;;Total ram usage:       53 bytes
  2741 ;; Hardware stack levels used: 1
  2742 ;; Hardware stack levels required when called: 7
  2743 ;; This function calls:
  2744 ;;		___fladd
  2745 ;;		___fldiv
  2746 ;;		___fleq
  2747 ;;		___flge
  2748 ;;		___flmul
  2749 ;;		___flneg
  2750 ;;		___flsub
  2751 ;;		___fltol
  2752 ;;		___fpclassifyf
  2753 ;;		_floorf
  2754 ;;		_labs
  2755 ;;		_memcpy
  2756 ;;		_pad
  2757 ;;		_strcpy
  2758 ;; This function is called by:
  2759 ;;		_vfpfcnvrt
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text5
  2764   000320                     __ptext5:
  2765                           	callstack 0
  2766   000320                     _efgtoa:
  2767                           	callstack 20
  2768   000320                     
  2769                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 587: static void efgtoa(FILE 
      +                          *fp, long double f, char c);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 58
      +                          8: {;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 589:     char mode, nmode
      +                          , pp, sign, esign;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 590:     in
      +                          t d, e, i, m, n, ne, p, t, w;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 
      +                          591:     long double h, l;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 592
      +                          :  union flui g, u, ou;
  2770   000320  0100               	movlb	0	; () banked
  2771   000322  6BBD               	clrf	efgtoa@sign& (0+255),b
  2772                           
  2773                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 596:     g.f = f;
  2774   000324  C095  F0BE         	movff	efgtoa@f,efgtoa@g
  2775   000328  C096  F0BF         	movff	efgtoa@f+1,efgtoa@g+1
  2776   00032C  C097  F0C0         	movff	efgtoa@f+2,efgtoa@g+2
  2777   000330  C098  F0C1         	movff	efgtoa@f+3,efgtoa@g+3
  2778   000334                     
  2779                           ; BSR set to: 0
  2780                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 597:     if (g.f < 0.0) {
  2781   000334  BFC1               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2782   000336  EFA1  F001         	goto	u9080
  2783   00033A  EF9F  F001         	goto	u9081
  2784   00033E                     u9081:
  2785   00033E  EFB5  F001         	goto	l7171
  2786   000342                     u9080:
  2787   000342                     
  2788                           ; BSR set to: 0
  2789                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 598:         sign = 1;
  2790   000342  0E01               	movlw	1
  2791   000344  6FBD               	movwf	efgtoa@sign& (0+255),b
  2792   000346                     
  2793                           ; BSR set to: 0
  2794                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 599:         g.f = -g.f;
  2795   000346  C0BE  F060         	movff	efgtoa@g,___flneg@f1
  2796   00034A  C0BF  F061         	movff	efgtoa@g+1,___flneg@f1+1
  2797   00034E  C0C0  F062         	movff	efgtoa@g+2,___flneg@f1+2
  2798   000352  C0C1  F063         	movff	efgtoa@g+3,___flneg@f1+3
  2799   000356  EC67  F01E         	call	___flneg	;wreg free
  2800   00035A  C060  F0BE         	movff	?___flneg,efgtoa@g
  2801   00035E  C061  F0BF         	movff	?___flneg+1,efgtoa@g+1
  2802   000362  C062  F0C0         	movff	?___flneg+2,efgtoa@g+2
  2803   000366  C063  F0C1         	movff	?___flneg+3,efgtoa@g+3
  2804   00036A                     l7171:
  2805                           
  2806                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 603:     n = 0;
  2807   00036A  0E00               	movlw	0
  2808   00036C  0100               	movlb	0	; () banked
  2809   00036E  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2810   000370  0E00               	movlw	0
  2811   000372  6FC2               	movwf	efgtoa@n& (0+255),b
  2812   000374                     
  2813                           ; BSR set to: 0
  2814                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 604:     w = width;
  2815   000374  C0EE  F0AD         	movff	_width,efgtoa@w
  2816   000378  C0EF  F0AE         	movff	_width+1,efgtoa@w+1
  2817   00037C                     
  2818                           ; BSR set to: 0
  2819                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 605:     if (sign
  2820   00037C  51BD               	movf	efgtoa@sign& (0+255),w,b
  2821   00037E  B4D8               	btfsc	status,2,c
  2822   000380  EFC4  F001         	goto	u9091
  2823   000384  EFC6  F001         	goto	u9090
  2824   000388                     u9091:
  2825   000388  EFDA  F001         	goto	l7185
  2826   00038C                     u9090:
  2827   00038C                     
  2828                           ; BSR set to: 0
  2829                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 609:    ) {;/opt/microchip/xc
      +                          8/v2.50/pic/sources/c99/common/doprnt.c: 610:   sign = sign ? '-' : '+';
  2830   00038C  51BD               	movf	efgtoa@sign& (0+255),w,b
  2831   00038E  A4D8               	btfss	status,2,c
  2832   000390  EFCC  F001         	goto	u9101
  2833   000394  EFCE  F001         	goto	u9100
  2834   000398                     u9101:
  2835   000398  EFD4  F001         	goto	l7181
  2836   00039C                     u9100:
  2837   00039C                     
  2838                           ; BSR set to: 0
  2839   00039C  0E00               	movlw	0
  2840   00039E  6FA3               	movwf	(_efgtoa$1751+1)& (0+255),b
  2841   0003A0  0E2B               	movlw	43
  2842   0003A2  6FA2               	movwf	_efgtoa$1751& (0+255),b
  2843   0003A4  EFD8  F001         	goto	l7183
  2844   0003A8                     l7181:
  2845                           
  2846                           ; BSR set to: 0
  2847   0003A8  0E00               	movlw	0
  2848   0003AA  6FA3               	movwf	(_efgtoa$1751+1)& (0+255),b
  2849   0003AC  0E2D               	movlw	45
  2850   0003AE  6FA2               	movwf	_efgtoa$1751& (0+255),b
  2851   0003B0                     l7183:
  2852                           
  2853                           ; BSR set to: 0
  2854   0003B0  C0A2  F0BD         	movff	_efgtoa$1751,efgtoa@sign
  2855   0003B4                     l7185:
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 619:     if (( __fpclassifyf(
      +                          g.f) == 1 )) {
  2859   0003B4  C0BE  F060         	movff	efgtoa@g,___fpclassifyf@x
  2860   0003B8  C0BF  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2861   0003BC  C0C0  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2862   0003C0  C0C1  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2863   0003C4  EC9D  F018         	call	___fpclassifyf	;wreg free
  2864   0003C8  0100               	movlb	0	; () banked
  2865   0003CA  0560               	decf	?___fpclassifyf& (0+255),w,b
  2866   0003CC  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2867   0003CE  A4D8               	btfss	status,2,c
  2868   0003D0  EFEC  F001         	goto	u9111
  2869   0003D4  EFEE  F001         	goto	u9110
  2870   0003D8                     u9111:
  2871   0003D8  EF1E  F002         	goto	l7203
  2872   0003DC                     u9110:
  2873   0003DC                     
  2874                           ; BSR set to: 0
  2875                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 620:   if (sign) {
  2876   0003DC  51BD               	movf	efgtoa@sign& (0+255),w,b
  2877   0003DE  B4D8               	btfsc	status,2,c
  2878   0003E0  EFF4  F001         	goto	u9121
  2879   0003E4  EFF6  F001         	goto	u9120
  2880   0003E8                     u9121:
  2881   0003E8  EFFF  F001         	goto	l7195
  2882   0003EC                     u9120:
  2883   0003EC                     
  2884                           ; BSR set to: 0
  2885                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 621:    dbuf[0] = sign;
  2886   0003EC  C0BD  F100         	movff	efgtoa@sign,_dbuf
  2887   0003F0                     
  2888                           ; BSR set to: 0
  2889                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 622:    w--;
  2890   0003F0  07AD               	decf	efgtoa@w& (0+255),f,b
  2891   0003F2  A0D8               	btfss	status,0,c
  2892   0003F4  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  2893   0003F6                     
  2894                           ; BSR set to: 0
  2895                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 623:    n = 1;
  2896   0003F6  0E00               	movlw	0
  2897   0003F8  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2898   0003FA  0E01               	movlw	1
  2899   0003FC  6FC2               	movwf	efgtoa@n& (0+255),b
  2900   0003FE                     l7195:
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 631:   {;/opt/microchip/xc8/v
      +                          2.50/pic/sources/c99/common/doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  2904   0003FE  0E00               	movlw	low _dbuf
  2905   000400  25C2               	addwf	efgtoa@n& (0+255),w,b
  2906   000402  6F60               	movwf	strcpy@dest& (0+255),b
  2907   000404  0E01               	movlw	high _dbuf
  2908   000406  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2909   000408  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2910   00040A  0E16               	movlw	low STR_8
  2911   00040C  6F62               	movwf	strcpy@src& (0+255),b
  2912   00040E  EC49  F01E         	call	_strcpy	;wreg free
  2913   000412                     l7197:
  2914                           
  2915                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 633:         };/opt/microchip
      +                          /xc8/v2.50/pic/sources/c99/common/doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("in
      +                          f"[0]))-1);
  2916   000412  0100               	movlb	0	; () banked
  2917   000414  0EFD               	movlw	253
  2918   000416  27AD               	addwf	efgtoa@w& (0+255),f,b
  2919   000418  0EFF               	movlw	255
  2920   00041A  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2921   00041C                     
  2922                           ; BSR set to: 0
  2923                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 635:         return (void) pa
      +                          d(fp, &dbuf[0], w);
  2924   00041C  C093  F070         	movff	efgtoa@fp,pad@fp
  2925   000420  C094  F071         	movff	efgtoa@fp+1,pad@fp+1
  2926   000424  0E00               	movlw	low _dbuf
  2927   000426  6F72               	movwf	pad@buf& (0+255),b
  2928   000428  0E01               	movlw	high _dbuf
  2929   00042A  6F73               	movwf	(pad@buf+1)& (0+255),b
  2930   00042C  C0AD  F074         	movff	efgtoa@w,pad@p
  2931   000430  C0AE  F075         	movff	efgtoa@w+1,pad@p+1
  2932   000434  ECEB  F01B         	call	_pad	;wreg free
  2933   000438  EF89  F006         	goto	l1067
  2934   00043C                     l7203:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 637:     if (( __fpclassifyf(
      +                          g.f) == 0 )) {
  2938   00043C  C0BE  F060         	movff	efgtoa@g,___fpclassifyf@x
  2939   000440  C0BF  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2940   000444  C0C0  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2941   000448  C0C1  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2942   00044C  EC9D  F018         	call	___fpclassifyf	;wreg free
  2943   000450  0100               	movlb	0	; () banked
  2944   000452  5160               	movf	?___fpclassifyf& (0+255),w,b
  2945   000454  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2946   000456  A4D8               	btfss	status,2,c
  2947   000458  EF30  F002         	goto	u9131
  2948   00045C  EF32  F002         	goto	u9130
  2949   000460                     u9131:
  2950   000460  EF4F  F002         	goto	l7221
  2951   000464                     u9130:
  2952   000464                     
  2953                           ; BSR set to: 0
  2954                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 638:   if (sign) {
  2955   000464  51BD               	movf	efgtoa@sign& (0+255),w,b
  2956   000466  B4D8               	btfsc	status,2,c
  2957   000468  EF38  F002         	goto	u9141
  2958   00046C  EF3A  F002         	goto	u9140
  2959   000470                     u9141:
  2960   000470  EF43  F002         	goto	l7213
  2961   000474                     u9140:
  2962   000474                     
  2963                           ; BSR set to: 0
  2964                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 639:    dbuf[0] = sign;
  2965   000474  C0BD  F100         	movff	efgtoa@sign,_dbuf
  2966   000478                     
  2967                           ; BSR set to: 0
  2968                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 640:    w--;
  2969   000478  07AD               	decf	efgtoa@w& (0+255),f,b
  2970   00047A  A0D8               	btfss	status,0,c
  2971   00047C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  2972   00047E                     
  2973                           ; BSR set to: 0
  2974                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 641:    n = 1;
  2975   00047E  0E00               	movlw	0
  2976   000480  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2977   000482  0E01               	movlw	1
  2978   000484  6FC2               	movwf	efgtoa@n& (0+255),b
  2979   000486                     l7213:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 649:   {;/opt/microchip/xc8/v
      +                          2.50/pic/sources/c99/common/doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  2983   000486  0E00               	movlw	low _dbuf
  2984   000488  25C2               	addwf	efgtoa@n& (0+255),w,b
  2985   00048A  6F60               	movwf	strcpy@dest& (0+255),b
  2986   00048C  0E01               	movlw	high _dbuf
  2987   00048E  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2988   000490  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2989   000492  0E1A               	movlw	low STR_11
  2990   000494  6F62               	movwf	strcpy@src& (0+255),b
  2991   000496  EC49  F01E         	call	_strcpy	;wreg free
  2992   00049A  EF09  F002         	goto	l7197
  2993   00049E                     l7221:
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 657:     u.f = 1.0;
  2997   00049E  0E00               	movlw	0
  2998   0004A0  6FC4               	movwf	efgtoa@u& (0+255),b
  2999   0004A2  0E00               	movlw	0
  3000   0004A4  6FC5               	movwf	(efgtoa@u+1)& (0+255),b
  3001   0004A6  0E80               	movlw	128
  3002   0004A8  6FC6               	movwf	(efgtoa@u+2)& (0+255),b
  3003   0004AA  0E3F               	movlw	63
  3004   0004AC  6FC7               	movwf	(efgtoa@u+3)& (0+255),b
  3005                           
  3006                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 658:     e = 0;
  3007   0004AE  0E00               	movlw	0
  3008   0004B0  6FAC               	movwf	(efgtoa@e+1)& (0+255),b
  3009   0004B2  0E00               	movlw	0
  3010   0004B4  6FAB               	movwf	efgtoa@e& (0+255),b
  3011   0004B6                     
  3012                           ; BSR set to: 0
  3013                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 659:  if (!(g.f == 0.0)) {
  3014   0004B6  C0BE  F060         	movff	efgtoa@g,___fleq@ff1
  3015   0004BA  C0BF  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  3016   0004BE  C0C0  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  3017   0004C2  C0C1  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  3018   0004C6  0E00               	movlw	0
  3019   0004C8  6F64               	movwf	___fleq@ff2& (0+255),b
  3020   0004CA  0E00               	movlw	0
  3021   0004CC  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  3022   0004CE  0E00               	movlw	0
  3023   0004D0  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  3024   0004D2  0E00               	movlw	0
  3025   0004D4  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  3026   0004D6  EC4B  F01A         	call	___fleq	;wreg free
  3027   0004DA  0100               	movlb	0	; () banked
  3028   0004DC  B0D8               	btfsc	status,0,c
  3029   0004DE  EF73  F002         	goto	u9151
  3030   0004E2  EF75  F002         	goto	u9150
  3031   0004E6                     u9151:
  3032   0004E6  EF57  F003         	goto	l1070
  3033   0004EA                     u9150:
  3034   0004EA  EF81  F002         	goto	l7229
  3035   0004EE                     l1072:
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 661:    u = ou;
  3039   0004EE  C0AF  F0C4         	movff	efgtoa@ou,efgtoa@u
  3040   0004F2  C0B0  F0C5         	movff	efgtoa@ou+1,efgtoa@u+1
  3041   0004F6  C0B1  F0C6         	movff	efgtoa@ou+2,efgtoa@u+2
  3042   0004FA  C0B2  F0C7         	movff	efgtoa@ou+3,efgtoa@u+3
  3043   0004FE                     
  3044                           ; BSR set to: 0
  3045                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 662:    ++e;
  3046   0004FE  4BAB               	infsnz	efgtoa@e& (0+255),f,b
  3047   000500  2BAC               	incf	(efgtoa@e+1)& (0+255),f,b
  3048   000502                     l7229:
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 660:   while ((labs((g).u-((o
      +                          u.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3052   000502  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3053   000506  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3054   00050A  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3055   00050E  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3056   000512  0E00               	movlw	0
  3057   000514  6F72               	movwf	___flmul@a& (0+255),b
  3058   000516  0E00               	movlw	0
  3059   000518  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3060   00051A  0E20               	movlw	32
  3061   00051C  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3062   00051E  0E41               	movlw	65
  3063   000520  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3064   000522  ECE6  F008         	call	___flmul	;wreg free
  3065   000526  C06E  F0AF         	movff	?___flmul,efgtoa@ou
  3066   00052A  C06F  F0B0         	movff	?___flmul+1,efgtoa@ou+1
  3067   00052E  C070  F0B1         	movff	?___flmul+2,efgtoa@ou+2
  3068   000532  C071  F0B2         	movff	?___flmul+3,efgtoa@ou+3
  3069   000536  0100               	movlb	0	; () banked
  3070   000538  51AF               	movf	efgtoa@ou& (0+255),w,b
  3071   00053A  5DBE               	subwf	efgtoa@g& (0+255),w,b
  3072   00053C  6F60               	movwf	labs@a& (0+255),b
  3073   00053E  51B0               	movf	(efgtoa@ou+1)& (0+255),w,b
  3074   000540  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3075   000542  6F61               	movwf	(labs@a+1)& (0+255),b
  3076   000544  51B1               	movf	(efgtoa@ou+2)& (0+255),w,b
  3077   000546  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3078   000548  6F62               	movwf	(labs@a+2)& (0+255),b
  3079   00054A  51B2               	movf	(efgtoa@ou+3)& (0+255),w,b
  3080   00054C  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3081   00054E  6F63               	movwf	(labs@a+3)& (0+255),b
  3082   000550  ECEB  F01C         	call	_labs	;wreg free
  3083   000554  0100               	movlb	0	; () banked
  3084   000556  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  3085   000558  EFB9  F002         	goto	u9161
  3086   00055C  5163               	movf	(?_labs+3)& (0+255),w,b
  3087   00055E  1162               	iorwf	(?_labs+2)& (0+255),w,b
  3088   000560  1161               	iorwf	(?_labs+1)& (0+255),w,b
  3089   000562  E109               	bnz	u9160
  3090   000564  0E02               	movlw	2
  3091   000566  5D60               	subwf	?_labs& (0+255),w,b
  3092   000568  A0D8               	btfss	status,0,c
  3093   00056A  EFB9  F002         	goto	u9161
  3094   00056E  EFBB  F002         	goto	u9160
  3095   000572                     u9161:
  3096   000572  EF77  F002         	goto	l1072
  3097   000576                     u9160:
  3098   000576                     
  3099                           ; BSR set to: 0
  3100   000576  C0AF  F087         	movff	efgtoa@ou,___flge@ff1
  3101   00057A  C0B0  F088         	movff	efgtoa@ou+1,___flge@ff1+1
  3102   00057E  C0B1  F089         	movff	efgtoa@ou+2,___flge@ff1+2
  3103   000582  C0B2  F08A         	movff	efgtoa@ou+3,___flge@ff1+3
  3104   000586  C0BE  F08B         	movff	efgtoa@g,___flge@ff2
  3105   00058A  C0BF  F08C         	movff	efgtoa@g+1,___flge@ff2+1
  3106   00058E  C0C0  F08D         	movff	efgtoa@g+2,___flge@ff2+2
  3107   000592  C0C1  F08E         	movff	efgtoa@g+3,___flge@ff2+3
  3108   000596  EC97  F017         	call	___flge	;wreg free
  3109   00059A  0100               	movlb	0	; () banked
  3110   00059C  A0D8               	btfss	status,0,c
  3111   00059E  EFD3  F002         	goto	u9171
  3112   0005A2  EFD5  F002         	goto	u9170
  3113   0005A6                     u9171:
  3114   0005A6  EF77  F002         	goto	l1072
  3115   0005AA                     u9170:
  3116   0005AA                     
  3117                           ; BSR set to: 0
  3118                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 664:   if ((labs((g).u-(u).u)
      +                           <= 1)) {
  3119   0005AA  51C4               	movf	efgtoa@u& (0+255),w,b
  3120   0005AC  5DBE               	subwf	efgtoa@g& (0+255),w,b
  3121   0005AE  6F60               	movwf	labs@a& (0+255),b
  3122   0005B0  51C5               	movf	(efgtoa@u+1)& (0+255),w,b
  3123   0005B2  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3124   0005B4  6F61               	movwf	(labs@a+1)& (0+255),b
  3125   0005B6  51C6               	movf	(efgtoa@u+2)& (0+255),w,b
  3126   0005B8  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3127   0005BA  6F62               	movwf	(labs@a+2)& (0+255),b
  3128   0005BC  51C7               	movf	(efgtoa@u+3)& (0+255),w,b
  3129   0005BE  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3130   0005C0  6F63               	movwf	(labs@a+3)& (0+255),b
  3131   0005C2  ECEB  F01C         	call	_labs	;wreg free
  3132   0005C6  0100               	movlb	0	; () banked
  3133   0005C8  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  3134   0005CA  EFF4  F002         	goto	u9180
  3135   0005CE  5163               	movf	(?_labs+3)& (0+255),w,b
  3136   0005D0  1162               	iorwf	(?_labs+2)& (0+255),w,b
  3137   0005D2  1161               	iorwf	(?_labs+1)& (0+255),w,b
  3138   0005D4  E107               	bnz	u9181
  3139   0005D6  0E02               	movlw	2
  3140   0005D8  5D60               	subwf	?_labs& (0+255),w,b
  3141   0005DA  B0D8               	btfsc	status,0,c
  3142   0005DC  EFF2  F002         	goto	u9181
  3143   0005E0  EFF4  F002         	goto	u9180
  3144   0005E4                     u9181:
  3145   0005E4  EF3D  F003         	goto	l7247
  3146   0005E8                     u9180:
  3147   0005E8                     l7237:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 665:    g = u;
  3151   0005E8  C0C4  F0BE         	movff	efgtoa@u,efgtoa@g
  3152   0005EC  C0C5  F0BF         	movff	efgtoa@u+1,efgtoa@g+1
  3153   0005F0  C0C6  F0C0         	movff	efgtoa@u+2,efgtoa@g+2
  3154   0005F4  C0C7  F0C1         	movff	efgtoa@u+3,efgtoa@g+3
  3155                           
  3156                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 666:   }
  3157   0005F8  EF57  F003         	goto	l1070
  3158   0005FC                     l7239:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 669:     u.f = u.f/10.0;
  3162   0005FC  C0C4  F060         	movff	efgtoa@u,___fldiv@b
  3163   000600  C0C5  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3164   000604  C0C6  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3165   000608  C0C7  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3166   00060C  0E00               	movlw	0
  3167   00060E  6F64               	movwf	___fldiv@a& (0+255),b
  3168   000610  0E00               	movlw	0
  3169   000612  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3170   000614  0E20               	movlw	32
  3171   000616  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3172   000618  0E41               	movlw	65
  3173   00061A  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3174   00061C  EC1D  F00F         	call	___fldiv	;wreg free
  3175   000620  C060  F0C4         	movff	?___fldiv,efgtoa@u
  3176   000624  C061  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  3177   000628  C062  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  3178   00062C  C063  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  3179   000630                     
  3180                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 670:     --e;
  3181   000630  0100               	movlb	0	; () banked
  3182   000632  07AB               	decf	efgtoa@e& (0+255),f,b
  3183   000634  A0D8               	btfss	status,0,c
  3184   000636  07AC               	decf	(efgtoa@e+1)& (0+255),f,b
  3185   000638                     
  3186                           ; BSR set to: 0
  3187                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 671:     if ((labs((g).u-(u).
      +                          u) <= 1)) {
  3188   000638  51C4               	movf	efgtoa@u& (0+255),w,b
  3189   00063A  5DBE               	subwf	efgtoa@g& (0+255),w,b
  3190   00063C  6F60               	movwf	labs@a& (0+255),b
  3191   00063E  51C5               	movf	(efgtoa@u+1)& (0+255),w,b
  3192   000640  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3193   000642  6F61               	movwf	(labs@a+1)& (0+255),b
  3194   000644  51C6               	movf	(efgtoa@u+2)& (0+255),w,b
  3195   000646  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3196   000648  6F62               	movwf	(labs@a+2)& (0+255),b
  3197   00064A  51C7               	movf	(efgtoa@u+3)& (0+255),w,b
  3198   00064C  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3199   00064E  6F63               	movwf	(labs@a+3)& (0+255),b
  3200   000650  ECEB  F01C         	call	_labs	;wreg free
  3201   000654  0100               	movlb	0	; () banked
  3202   000656  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  3203   000658  EF3B  F003         	goto	u9190
  3204   00065C  5163               	movf	(?_labs+3)& (0+255),w,b
  3205   00065E  1162               	iorwf	(?_labs+2)& (0+255),w,b
  3206   000660  1161               	iorwf	(?_labs+1)& (0+255),w,b
  3207   000662  E107               	bnz	u9191
  3208   000664  0E02               	movlw	2
  3209   000666  5D60               	subwf	?_labs& (0+255),w,b
  3210   000668  B0D8               	btfsc	status,0,c
  3211   00066A  EF39  F003         	goto	u9191
  3212   00066E  EF3B  F003         	goto	u9190
  3213   000672                     u9191:
  3214   000672  EF3D  F003         	goto	l7247
  3215   000676                     u9190:
  3216   000676  EFF4  F002         	goto	l7237
  3217   00067A                     l7247:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 668:    while (g.f < u.f) {
  3221   00067A  C0BE  F087         	movff	efgtoa@g,___flge@ff1
  3222   00067E  C0BF  F088         	movff	efgtoa@g+1,___flge@ff1+1
  3223   000682  C0C0  F089         	movff	efgtoa@g+2,___flge@ff1+2
  3224   000686  C0C1  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  3225   00068A  C0C4  F08B         	movff	efgtoa@u,___flge@ff2
  3226   00068E  C0C5  F08C         	movff	efgtoa@u+1,___flge@ff2+1
  3227   000692  C0C6  F08D         	movff	efgtoa@u+2,___flge@ff2+2
  3228   000696  C0C7  F08E         	movff	efgtoa@u+3,___flge@ff2+3
  3229   00069A  EC97  F017         	call	___flge	;wreg free
  3230   00069E  0100               	movlb	0	; () banked
  3231   0006A0  A0D8               	btfss	status,0,c
  3232   0006A2  EF55  F003         	goto	u9201
  3233   0006A6  EF57  F003         	goto	u9200
  3234   0006AA                     u9201:
  3235   0006AA  EFFE  F002         	goto	l7239
  3236   0006AE                     u9200:
  3237   0006AE                     l1070:
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 683:  mode = c;
  3241   0006AE  C099  F0A5         	movff	efgtoa@c,efgtoa@mode
  3242                           
  3243                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 685:     nmode = mode;
  3244   0006B2  C0A5  F0A6         	movff	efgtoa@mode,efgtoa@nmode
  3245   0006B6                     
  3246                           ; BSR set to: 0
  3247                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 695:  {;/opt/microchip/xc8/v2
      +                          .50/pic/sources/c99/common/doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
  3248   0006B6  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  3249   0006B8  EF60  F003         	goto	u9211
  3250   0006BC  EF62  F003         	goto	u9210
  3251   0006C0                     u9211:
  3252   0006C0  EF68  F003         	goto	l7253
  3253   0006C4                     u9210:
  3254   0006C4                     
  3255                           ; BSR set to: 0
  3256   0006C4  C0F0  F09E         	movff	_prec,efgtoa@p
  3257   0006C8  C0F1  F09F         	movff	_prec+1,efgtoa@p+1
  3258   0006CC  EF6C  F003         	goto	l7255
  3259   0006D0                     l7253:
  3260                           
  3261                           ; BSR set to: 0
  3262   0006D0  0E00               	movlw	0
  3263   0006D2  6F9F               	movwf	(efgtoa@p+1)& (0+255),b
  3264   0006D4  0E06               	movlw	6
  3265   0006D6  6F9E               	movwf	efgtoa@p& (0+255),b
  3266   0006D8                     l7255:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 697:     };/opt/microchip/xc8
      +                          /v2.50/pic/sources/c99/common/doprnt.c: 711:     m = p;
  3270   0006D8  C09E  F0A9         	movff	efgtoa@p,efgtoa@m
  3271   0006DC  C09F  F0AA         	movff	efgtoa@p+1,efgtoa@m+1
  3272   0006E0                     
  3273                           ; BSR set to: 0
  3274                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 715:  {;/opt/microchip/xc8/v2
      +                          .50/pic/sources/c99/common/doprnt.c: 716:         ++m;
  3275   0006E0  4BA9               	infsnz	efgtoa@m& (0+255),f,b
  3276   0006E2  2BAA               	incf	(efgtoa@m+1)& (0+255),f,b
  3277   0006E4                     
  3278                           ; BSR set to: 0
  3279                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 717:     };/opt/microchip/xc8
      +                          /v2.50/pic/sources/c99/common/doprnt.c: 721:     if (nmode == 'f') {
  3280   0006E4  0E66               	movlw	102
  3281   0006E6  19A6               	xorwf	efgtoa@nmode& (0+255),w,b
  3282   0006E8  A4D8               	btfss	status,2,c
  3283   0006EA  EF79  F003         	goto	u9221
  3284   0006EE  EF7B  F003         	goto	u9220
  3285   0006F2                     u9221:
  3286   0006F2  EF9B  F003         	goto	l7269
  3287   0006F6                     u9220:
  3288   0006F6                     
  3289                           ; BSR set to: 0
  3290                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 722:         if (e < 0) {
  3291   0006F6  BFAC               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3292   0006F8  EF82  F003         	goto	u9230
  3293   0006FC  EF80  F003         	goto	u9231
  3294   000700                     u9231:
  3295   000700  EF8E  F003         	goto	l7265
  3296   000704                     u9230:
  3297   000704                     
  3298                           ; BSR set to: 0
  3299                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 723:             u.f = 1.0;
  3300   000704  0E00               	movlw	0
  3301   000706  6FC4               	movwf	efgtoa@u& (0+255),b
  3302   000708  0E00               	movlw	0
  3303   00070A  6FC5               	movwf	(efgtoa@u+1)& (0+255),b
  3304   00070C  0E80               	movlw	128
  3305   00070E  6FC6               	movwf	(efgtoa@u+2)& (0+255),b
  3306   000710  0E3F               	movlw	63
  3307   000712  6FC7               	movwf	(efgtoa@u+3)& (0+255),b
  3308                           
  3309                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 724:             e = 0;
  3310   000714  0E00               	movlw	0
  3311   000716  6FAC               	movwf	(efgtoa@e+1)& (0+255),b
  3312   000718  0E00               	movlw	0
  3313   00071A  6FAB               	movwf	efgtoa@e& (0+255),b
  3314   00071C                     l7265:
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 726:         if (!(mode == 'g
      +                          ')) {
  3318   00071C  0E67               	movlw	103
  3319   00071E  19A5               	xorwf	efgtoa@mode& (0+255),w,b
  3320   000720  B4D8               	btfsc	status,2,c
  3321   000722  EF95  F003         	goto	u9241
  3322   000726  EF97  F003         	goto	u9240
  3323   00072A                     u9241:
  3324   00072A  EF9B  F003         	goto	l7269
  3325   00072E                     u9240:
  3326   00072E                     
  3327                           ; BSR set to: 0
  3328                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 727:             m += e;
  3329   00072E  51AB               	movf	efgtoa@e& (0+255),w,b
  3330   000730  27A9               	addwf	efgtoa@m& (0+255),f,b
  3331   000732  51AC               	movf	(efgtoa@e+1)& (0+255),w,b
  3332   000734  23AA               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3333   000736                     l7269:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 733:     i = 0;
  3337   000736  0E00               	movlw	0
  3338   000738  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3339   00073A  0E00               	movlw	0
  3340   00073C  6FB3               	movwf	efgtoa@i& (0+255),b
  3341   00073E                     
  3342                           ; BSR set to: 0
  3343                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 734:     h = g.f;
  3344   00073E  C0BE  F0B5         	movff	efgtoa@g,efgtoa@h
  3345   000742  C0BF  F0B6         	movff	efgtoa@g+1,efgtoa@h+1
  3346   000746  C0C0  F0B7         	movff	efgtoa@g+2,efgtoa@h+2
  3347   00074A  C0C1  F0B8         	movff	efgtoa@g+3,efgtoa@h+3
  3348   00074E                     
  3349                           ; BSR set to: 0
  3350                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 735:     ou = u;
  3351   00074E  C0C4  F0AF         	movff	efgtoa@u,efgtoa@ou
  3352   000752  C0C5  F0B0         	movff	efgtoa@u+1,efgtoa@ou+1
  3353   000756  C0C6  F0B1         	movff	efgtoa@u+2,efgtoa@ou+2
  3354   00075A  C0C7  F0B2         	movff	efgtoa@u+3,efgtoa@ou+3
  3355                           
  3356                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 736:     while (i < m) {
  3357   00075E  EF2D  F004         	goto	l7283
  3358   000762                     l7275:
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 737:         l = floorf(h/u.f
      +                          );
  3362   000762  C0B5  F060         	movff	efgtoa@h,___fldiv@b
  3363   000766  C0B6  F061         	movff	efgtoa@h+1,___fldiv@b+1
  3364   00076A  C0B7  F062         	movff	efgtoa@h+2,___fldiv@b+2
  3365   00076E  C0B8  F063         	movff	efgtoa@h+3,___fldiv@b+3
  3366   000772  C0C4  F064         	movff	efgtoa@u,___fldiv@a
  3367   000776  C0C5  F065         	movff	efgtoa@u+1,___fldiv@a+1
  3368   00077A  C0C6  F066         	movff	efgtoa@u+2,___fldiv@a+2
  3369   00077E  C0C7  F067         	movff	efgtoa@u+3,___fldiv@a+3
  3370   000782  EC1D  F00F         	call	___fldiv	;wreg free
  3371   000786  C060  F079         	movff	?___fldiv,floorf@x
  3372   00078A  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  3373   00078E  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  3374   000792  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  3375   000796  EC2B  F013         	call	_floorf	;wreg free
  3376   00079A  C079  F0B9         	movff	?_floorf,efgtoa@l
  3377   00079E  C07A  F0BA         	movff	?_floorf+1,efgtoa@l+1
  3378   0007A2  C07B  F0BB         	movff	?_floorf+2,efgtoa@l+2
  3379   0007A6  C07C  F0BC         	movff	?_floorf+3,efgtoa@l+3
  3380                           
  3381                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 738:         d = (int)l;
  3382   0007AA  C0B9  F087         	movff	efgtoa@l,___fltol@f1
  3383   0007AE  C0BA  F088         	movff	efgtoa@l+1,___fltol@f1+1
  3384   0007B2  C0BB  F089         	movff	efgtoa@l+2,___fltol@f1+2
  3385   0007B6  C0BC  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  3386   0007BA  EC13  F017         	call	___fltol	;wreg free
  3387   0007BE  C087  F0A7         	movff	?___fltol,efgtoa@d
  3388   0007C2  C088  F0A8         	movff	?___fltol+1,efgtoa@d+1
  3389   0007C6                     
  3390                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 739:         h -= l*u.f;
  3391   0007C6  C0B5  F087         	movff	efgtoa@h,___flsub@b
  3392   0007CA  C0B6  F088         	movff	efgtoa@h+1,___flsub@b+1
  3393   0007CE  C0B7  F089         	movff	efgtoa@h+2,___flsub@b+2
  3394   0007D2  C0B8  F08A         	movff	efgtoa@h+3,___flsub@b+3
  3395   0007D6  C0B9  F072         	movff	efgtoa@l,___flmul@a
  3396   0007DA  C0BA  F073         	movff	efgtoa@l+1,___flmul@a+1
  3397   0007DE  C0BB  F074         	movff	efgtoa@l+2,___flmul@a+2
  3398   0007E2  C0BC  F075         	movff	efgtoa@l+3,___flmul@a+3
  3399   0007E6  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3400   0007EA  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3401   0007EE  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3402   0007F2  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3403   0007F6  ECE6  F008         	call	___flmul	;wreg free
  3404   0007FA  C06E  F08B         	movff	?___flmul,___flsub@a
  3405   0007FE  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  3406   000802  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  3407   000806  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  3408   00080A  EC03  F01E         	call	___flsub	;wreg free
  3409   00080E  C087  F0B5         	movff	?___flsub,efgtoa@h
  3410   000812  C088  F0B6         	movff	?___flsub+1,efgtoa@h+1
  3411   000816  C089  F0B7         	movff	?___flsub+2,efgtoa@h+2
  3412   00081A  C08A  F0B8         	movff	?___flsub+3,efgtoa@h+3
  3413   00081E                     
  3414                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 740:         u.f = u.f/10.0;
  3415   00081E  C0C4  F060         	movff	efgtoa@u,___fldiv@b
  3416   000822  C0C5  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3417   000826  C0C6  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3418   00082A  C0C7  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3419   00082E  0E00               	movlw	0
  3420   000830  0100               	movlb	0	; () banked
  3421   000832  6F64               	movwf	___fldiv@a& (0+255),b
  3422   000834  0E00               	movlw	0
  3423   000836  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3424   000838  0E20               	movlw	32
  3425   00083A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3426   00083C  0E41               	movlw	65
  3427   00083E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3428   000840  EC1D  F00F         	call	___fldiv	;wreg free
  3429   000844  C060  F0C4         	movff	?___fldiv,efgtoa@u
  3430   000848  C061  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  3431   00084C  C062  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  3432   000850  C063  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  3433   000854                     
  3434                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 741:         ++i;
  3435   000854  0100               	movlb	0	; () banked
  3436   000856  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  3437   000858  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  3438   00085A                     l7283:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 736:     while (i < m) {
  3442   00085A  51A9               	movf	efgtoa@m& (0+255),w,b
  3443   00085C  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3444   00085E  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3445   000860  0A80               	xorlw	128
  3446   000862  6F9A               	movwf	??_efgtoa& (0+255),b
  3447   000864  51AA               	movf	(efgtoa@m+1)& (0+255),w,b
  3448   000866  0A80               	xorlw	128
  3449   000868  599A               	subwfb	??_efgtoa& (0+255),w,b
  3450   00086A  A0D8               	btfss	status,0,c
  3451   00086C  EF3A  F004         	goto	u9251
  3452   000870  EF3C  F004         	goto	u9250
  3453   000874                     u9251:
  3454   000874  EFB1  F003         	goto	l7275
  3455   000878                     u9250:
  3456   000878                     
  3457                           ; BSR set to: 0
  3458                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 745:     l = u.f*5.0;
  3459   000878  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3460   00087C  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3461   000880  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3462   000884  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3463   000888  0E00               	movlw	0
  3464   00088A  6F72               	movwf	___flmul@a& (0+255),b
  3465   00088C  0E00               	movlw	0
  3466   00088E  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3467   000890  0EA0               	movlw	160
  3468   000892  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3469   000894  0E40               	movlw	64
  3470   000896  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3471   000898  ECE6  F008         	call	___flmul	;wreg free
  3472   00089C  C06E  F0B9         	movff	?___flmul,efgtoa@l
  3473   0008A0  C06F  F0BA         	movff	?___flmul+1,efgtoa@l+1
  3474   0008A4  C070  F0BB         	movff	?___flmul+2,efgtoa@l+2
  3475   0008A8  C071  F0BC         	movff	?___flmul+3,efgtoa@l+3
  3476   0008AC                     
  3477                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 746:     if (h < l) {
  3478   0008AC  C0B5  F087         	movff	efgtoa@h,___flge@ff1
  3479   0008B0  C0B6  F088         	movff	efgtoa@h+1,___flge@ff1+1
  3480   0008B4  C0B7  F089         	movff	efgtoa@h+2,___flge@ff1+2
  3481   0008B8  C0B8  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  3482   0008BC  C0B9  F08B         	movff	efgtoa@l,___flge@ff2
  3483   0008C0  C0BA  F08C         	movff	efgtoa@l+1,___flge@ff2+1
  3484   0008C4  C0BB  F08D         	movff	efgtoa@l+2,___flge@ff2+2
  3485   0008C8  C0BC  F08E         	movff	efgtoa@l+3,___flge@ff2+3
  3486   0008CC  EC97  F017         	call	___flge	;wreg free
  3487   0008D0  0100               	movlb	0	; () banked
  3488   0008D2  B0D8               	btfsc	status,0,c
  3489   0008D4  EF6E  F004         	goto	u9261
  3490   0008D8  EF70  F004         	goto	u9260
  3491   0008DC                     u9261:
  3492   0008DC  EF7A  F004         	goto	l7291
  3493   0008E0                     u9260:
  3494   0008E0                     
  3495                           ; BSR set to: 0
  3496                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 747:         l = 0.0;
  3497   0008E0  0E00               	movlw	0
  3498   0008E2  6FB9               	movwf	efgtoa@l& (0+255),b
  3499   0008E4  0E00               	movlw	0
  3500   0008E6  6FBA               	movwf	(efgtoa@l+1)& (0+255),b
  3501   0008E8  0E00               	movlw	0
  3502   0008EA  6FBB               	movwf	(efgtoa@l+2)& (0+255),b
  3503   0008EC  0E00               	movlw	0
  3504   0008EE  6FBC               	movwf	(efgtoa@l+3)& (0+255),b
  3505                           
  3506                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 748:     } else {
  3507   0008F0  EFA3  F004         	goto	l7297
  3508   0008F4                     l7291:
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 750:         if ((h == l) && 
      +                          !(d % 2)) {
  3512   0008F4  C0B5  F060         	movff	efgtoa@h,___fleq@ff1
  3513   0008F8  C0B6  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  3514   0008FC  C0B7  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  3515   000900  C0B8  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  3516   000904  C0B9  F064         	movff	efgtoa@l,___fleq@ff2
  3517   000908  C0BA  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  3518   00090C  C0BB  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  3519   000910  C0BC  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  3520   000914  EC4B  F01A         	call	___fleq	;wreg free
  3521   000918  0100               	movlb	0	; () banked
  3522   00091A  A0D8               	btfss	status,0,c
  3523   00091C  EF92  F004         	goto	u9271
  3524   000920  EF94  F004         	goto	u9270
  3525   000924                     u9271:
  3526   000924  EFA3  F004         	goto	l7297
  3527   000928                     u9270:
  3528   000928                     
  3529                           ; BSR set to: 0
  3530   000928  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  3531   00092A  EF99  F004         	goto	u9281
  3532   00092E  EF9B  F004         	goto	u9280
  3533   000932                     u9281:
  3534   000932  EFA3  F004         	goto	l7297
  3535   000936                     u9280:
  3536   000936                     
  3537                           ; BSR set to: 0
  3538                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 751:             l = 0.0;
  3539   000936  0E00               	movlw	0
  3540   000938  6FB9               	movwf	efgtoa@l& (0+255),b
  3541   00093A  0E00               	movlw	0
  3542   00093C  6FBA               	movwf	(efgtoa@l+1)& (0+255),b
  3543   00093E  0E00               	movlw	0
  3544   000940  6FBB               	movwf	(efgtoa@l+2)& (0+255),b
  3545   000942  0E00               	movlw	0
  3546   000944  6FBC               	movwf	(efgtoa@l+3)& (0+255),b
  3547   000946                     l7297:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 756:     h = g.f + l;
  3551   000946  C0BE  F060         	movff	efgtoa@g,___fladd@b
  3552   00094A  C0BF  F061         	movff	efgtoa@g+1,___fladd@b+1
  3553   00094E  C0C0  F062         	movff	efgtoa@g+2,___fladd@b+2
  3554   000952  C0C1  F063         	movff	efgtoa@g+3,___fladd@b+3
  3555   000956  C0B9  F064         	movff	efgtoa@l,___fladd@a
  3556   00095A  C0BA  F065         	movff	efgtoa@l+1,___fladd@a+1
  3557   00095E  C0BB  F066         	movff	efgtoa@l+2,___fladd@a+2
  3558   000962  C0BC  F067         	movff	efgtoa@l+3,___fladd@a+3
  3559   000966  EC8A  F006         	call	___fladd	;wreg free
  3560   00096A  C060  F0B5         	movff	?___fladd,efgtoa@h
  3561   00096E  C061  F0B6         	movff	?___fladd+1,efgtoa@h+1
  3562   000972  C062  F0B7         	movff	?___fladd+2,efgtoa@h+2
  3563   000976  C063  F0B8         	movff	?___fladd+3,efgtoa@h+3
  3564   00097A                     
  3565                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 758:  if (h >= (ou.f*10.0)) {
  3566   00097A  C0B5  F087         	movff	efgtoa@h,___flge@ff1
  3567   00097E  C0B6  F088         	movff	efgtoa@h+1,___flge@ff1+1
  3568   000982  C0B7  F089         	movff	efgtoa@h+2,___flge@ff1+2
  3569   000986  C0B8  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  3570   00098A  0E00               	movlw	0
  3571   00098C  0100               	movlb	0	; () banked
  3572   00098E  6F72               	movwf	___flmul@a& (0+255),b
  3573   000990  0E00               	movlw	0
  3574   000992  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3575   000994  0E20               	movlw	32
  3576   000996  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3577   000998  0E41               	movlw	65
  3578   00099A  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3579   00099C  C0AF  F06E         	movff	efgtoa@ou,___flmul@b
  3580   0009A0  C0B0  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  3581   0009A4  C0B1  F070         	movff	efgtoa@ou+2,___flmul@b+2
  3582   0009A8  C0B2  F071         	movff	efgtoa@ou+3,___flmul@b+3
  3583   0009AC  ECE6  F008         	call	___flmul	;wreg free
  3584   0009B0  C06E  F08B         	movff	?___flmul,___flge@ff2
  3585   0009B4  C06F  F08C         	movff	?___flmul+1,___flge@ff2+1
  3586   0009B8  C070  F08D         	movff	?___flmul+2,___flge@ff2+2
  3587   0009BC  C071  F08E         	movff	?___flmul+3,___flge@ff2+3
  3588   0009C0  EC97  F017         	call	___flge	;wreg free
  3589   0009C4  0100               	movlb	0	; () banked
  3590   0009C6  A0D8               	btfss	status,0,c
  3591   0009C8  EFE8  F004         	goto	u9291
  3592   0009CC  EFEA  F004         	goto	u9290
  3593   0009D0                     u9291:
  3594   0009D0  EF12  F005         	goto	l7309
  3595   0009D4                     u9290:
  3596   0009D4                     
  3597                           ; BSR set to: 0
  3598                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 759:   e++;
  3599   0009D4  4BAB               	infsnz	efgtoa@e& (0+255),f,b
  3600   0009D6  2BAC               	incf	(efgtoa@e+1)& (0+255),f,b
  3601   0009D8                     
  3602                           ; BSR set to: 0
  3603                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 760:   ou.f *= 10.0;
  3604   0009D8  C0AF  F06E         	movff	efgtoa@ou,___flmul@b
  3605   0009DC  C0B0  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  3606   0009E0  C0B1  F070         	movff	efgtoa@ou+2,___flmul@b+2
  3607   0009E4  C0B2  F071         	movff	efgtoa@ou+3,___flmul@b+3
  3608   0009E8  0E00               	movlw	0
  3609   0009EA  6F72               	movwf	___flmul@a& (0+255),b
  3610   0009EC  0E00               	movlw	0
  3611   0009EE  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3612   0009F0  0E20               	movlw	32
  3613   0009F2  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3614   0009F4  0E41               	movlw	65
  3615   0009F6  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3616   0009F8  ECE6  F008         	call	___flmul	;wreg free
  3617   0009FC  C06E  F0AF         	movff	?___flmul,efgtoa@ou
  3618   000A00  C06F  F0B0         	movff	?___flmul+1,efgtoa@ou+1
  3619   000A04  C070  F0B1         	movff	?___flmul+2,efgtoa@ou+2
  3620   000A08  C071  F0B2         	movff	?___flmul+3,efgtoa@ou+3
  3621   000A0C                     
  3622                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 762:   if (nmode == 'f') {
  3623   000A0C  0E66               	movlw	102
  3624   000A0E  0100               	movlb	0	; () banked
  3625   000A10  19A6               	xorwf	efgtoa@nmode& (0+255),w,b
  3626   000A12  A4D8               	btfss	status,2,c
  3627   000A14  EF0E  F005         	goto	u9301
  3628   000A18  EF10  F005         	goto	u9300
  3629   000A1C                     u9301:
  3630   000A1C  EF12  F005         	goto	l7309
  3631   000A20                     u9300:
  3632   000A20                     
  3633                           ; BSR set to: 0
  3634                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 764:    m++;
  3635   000A20  4BA9               	infsnz	efgtoa@m& (0+255),f,b
  3636   000A22  2BAA               	incf	(efgtoa@m+1)& (0+255),f,b
  3637   000A24                     l7309:
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 770:     u = ou;
  3641   000A24  C0AF  F0C4         	movff	efgtoa@ou,efgtoa@u
  3642   000A28  C0B0  F0C5         	movff	efgtoa@ou+1,efgtoa@u+1
  3643   000A2C  C0B1  F0C6         	movff	efgtoa@ou+2,efgtoa@u+2
  3644   000A30  C0B2  F0C7         	movff	efgtoa@ou+3,efgtoa@u+3
  3645   000A34                     
  3646                           ; BSR set to: 0
  3647                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 774:  ne = e;
  3648   000A34  C0AB  F09C         	movff	efgtoa@e,efgtoa@ne
  3649   000A38  C0AC  F09D         	movff	efgtoa@e+1,efgtoa@ne+1
  3650   000A3C                     
  3651                           ; BSR set to: 0
  3652                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 776:     pp = 0;
  3653   000A3C  6BA4               	clrf	efgtoa@pp& (0+255),b
  3654   000A3E                     
  3655                           ; BSR set to: 0
  3656                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 777:     t = 0;
  3657   000A3E  0E00               	movlw	0
  3658   000A40  6FA1               	movwf	(efgtoa@t+1)& (0+255),b
  3659   000A42  0E00               	movlw	0
  3660   000A44  6FA0               	movwf	efgtoa@t& (0+255),b
  3661   000A46                     
  3662                           ; BSR set to: 0
  3663                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 778:     i = 0;
  3664   000A46  0E00               	movlw	0
  3665   000A48  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3666   000A4A  0E00               	movlw	0
  3667   000A4C  6FB3               	movwf	efgtoa@i& (0+255),b
  3668                           
  3669                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 779:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3670   000A4E  EF0F  F006         	goto	l7359
  3671   000A52                     l7319:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 780:         l = floorf(h/u.f
      +                          );
  3675   000A52  C0B5  F060         	movff	efgtoa@h,___fldiv@b
  3676   000A56  C0B6  F061         	movff	efgtoa@h+1,___fldiv@b+1
  3677   000A5A  C0B7  F062         	movff	efgtoa@h+2,___fldiv@b+2
  3678   000A5E  C0B8  F063         	movff	efgtoa@h+3,___fldiv@b+3
  3679   000A62  C0C4  F064         	movff	efgtoa@u,___fldiv@a
  3680   000A66  C0C5  F065         	movff	efgtoa@u+1,___fldiv@a+1
  3681   000A6A  C0C6  F066         	movff	efgtoa@u+2,___fldiv@a+2
  3682   000A6E  C0C7  F067         	movff	efgtoa@u+3,___fldiv@a+3
  3683   000A72  EC1D  F00F         	call	___fldiv	;wreg free
  3684   000A76  C060  F079         	movff	?___fldiv,floorf@x
  3685   000A7A  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  3686   000A7E  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  3687   000A82  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  3688   000A86  EC2B  F013         	call	_floorf	;wreg free
  3689   000A8A  C079  F0B9         	movff	?_floorf,efgtoa@l
  3690   000A8E  C07A  F0BA         	movff	?_floorf+1,efgtoa@l+1
  3691   000A92  C07B  F0BB         	movff	?_floorf+2,efgtoa@l+2
  3692   000A96  C07C  F0BC         	movff	?_floorf+3,efgtoa@l+3
  3693                           
  3694                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 781:         d = (int)l > 9 ?
      +                           9 : (int)l;
  3695   000A9A  C0B9  F087         	movff	efgtoa@l,___fltol@f1
  3696   000A9E  C0BA  F088         	movff	efgtoa@l+1,___fltol@f1+1
  3697   000AA2  C0BB  F089         	movff	efgtoa@l+2,___fltol@f1+2
  3698   000AA6  C0BC  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  3699   000AAA  EC13  F017         	call	___fltol	;wreg free
  3700   000AAE  0100               	movlb	0	; () banked
  3701   000AB0  BF88               	btfsc	(?___fltol+1)& (0+255),7,b
  3702   000AB2  EF66  F005         	goto	u9310
  3703   000AB6  5188               	movf	(?___fltol+1)& (0+255),w,b
  3704   000AB8  E107               	bnz	u9311
  3705   000ABA  0E0A               	movlw	10
  3706   000ABC  5D87               	subwf	?___fltol& (0+255),w,b
  3707   000ABE  B0D8               	btfsc	status,0,c
  3708   000AC0  EF64  F005         	goto	u9311
  3709   000AC4  EF66  F005         	goto	u9310
  3710   000AC8                     u9311:
  3711   000AC8  EF76  F005         	goto	l7323
  3712   000ACC                     u9310:
  3713   000ACC                     
  3714                           ; BSR set to: 0
  3715   000ACC  C0B9  F087         	movff	efgtoa@l,___fltol@f1
  3716   000AD0  C0BA  F088         	movff	efgtoa@l+1,___fltol@f1+1
  3717   000AD4  C0BB  F089         	movff	efgtoa@l+2,___fltol@f1+2
  3718   000AD8  C0BC  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  3719   000ADC  EC13  F017         	call	___fltol	;wreg free
  3720   000AE0  C087  F0A7         	movff	?___fltol,efgtoa@d
  3721   000AE4  C088  F0A8         	movff	?___fltol+1,efgtoa@d+1
  3722   000AE8  EF7A  F005         	goto	l1100
  3723   000AEC                     l7323:
  3724                           
  3725                           ; BSR set to: 0
  3726   000AEC  0E00               	movlw	0
  3727   000AEE  6FA8               	movwf	(efgtoa@d+1)& (0+255),b
  3728   000AF0  0E09               	movlw	9
  3729   000AF2  6FA7               	movwf	efgtoa@d& (0+255),b
  3730   000AF4                     l1100:
  3731                           
  3732                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 792:   {;/opt/microchip/xc8/v
      +                          2.50/pic/sources/c99/common/doprnt.c: 793:             if (!pp && (ne < 0)) {
  3733   000AF4  0100               	movlb	0	; () banked
  3734   000AF6  51A4               	movf	efgtoa@pp& (0+255),w,b
  3735   000AF8  A4D8               	btfss	status,2,c
  3736   000AFA  EF81  F005         	goto	u9321
  3737   000AFE  EF83  F005         	goto	u9320
  3738   000B02                     u9321:
  3739   000B02  EFAB  F005         	goto	l7343
  3740   000B06                     u9320:
  3741   000B06                     
  3742                           ; BSR set to: 0
  3743   000B06  BF9D               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3744   000B08  EF8A  F005         	goto	u9330
  3745   000B0C  EF88  F005         	goto	u9331
  3746   000B10                     u9331:
  3747   000B10  EFAB  F005         	goto	l7343
  3748   000B14                     u9330:
  3749   000B14                     
  3750                           ; BSR set to: 0
  3751                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 794:                 dbuf[n++
      +                          ] = '.';
  3752   000B14  0E00               	movlw	low _dbuf
  3753   000B16  25C2               	addwf	efgtoa@n& (0+255),w,b
  3754   000B18  6ED9               	movwf	fsr2l,c
  3755   000B1A  0E01               	movlw	high _dbuf
  3756   000B1C  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3757   000B1E  6EDA               	movwf	fsr2h,c
  3758   000B20  0E2E               	movlw	46
  3759   000B22  6EDF               	movwf	indf2,c
  3760   000B24                     
  3761                           ; BSR set to: 0
  3762   000B24  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3763   000B26  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3764   000B28                     
  3765                           ; BSR set to: 0
  3766                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 795:                 --w;
  3767   000B28  07AD               	decf	efgtoa@w& (0+255),f,b
  3768   000B2A  A0D8               	btfss	status,0,c
  3769   000B2C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3770   000B2E                     
  3771                           ; BSR set to: 0
  3772                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 796:                 pp = 1;
  3773   000B2E  0E01               	movlw	1
  3774   000B30  6FA4               	movwf	efgtoa@pp& (0+255),b
  3775   000B32  EFAB  F005         	goto	l7343
  3776   000B36                     l7335:
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 799:                 dbuf[n++
      +                          ] = '0';
  3780   000B36  0E00               	movlw	low _dbuf
  3781   000B38  25C2               	addwf	efgtoa@n& (0+255),w,b
  3782   000B3A  6ED9               	movwf	fsr2l,c
  3783   000B3C  0E01               	movlw	high _dbuf
  3784   000B3E  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3785   000B40  6EDA               	movwf	fsr2h,c
  3786   000B42  0E30               	movlw	48
  3787   000B44  6EDF               	movwf	indf2,c
  3788   000B46                     
  3789                           ; BSR set to: 0
  3790   000B46  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3791   000B48  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3792   000B4A                     
  3793                           ; BSR set to: 0
  3794                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 800:                 --w;
  3795   000B4A  07AD               	decf	efgtoa@w& (0+255),f,b
  3796   000B4C  A0D8               	btfss	status,0,c
  3797   000B4E  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3798   000B50                     
  3799                           ; BSR set to: 0
  3800                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 801:                 --t;
  3801   000B50  07A0               	decf	efgtoa@t& (0+255),f,b
  3802   000B52  A0D8               	btfss	status,0,c
  3803   000B54  07A1               	decf	(efgtoa@t+1)& (0+255),f,b
  3804   000B56                     l7343:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 798:             while (t) {
  3808   000B56  51A0               	movf	efgtoa@t& (0+255),w,b
  3809   000B58  11A1               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3810   000B5A  A4D8               	btfss	status,2,c
  3811   000B5C  EFB2  F005         	goto	u9341
  3812   000B60  EFB4  F005         	goto	u9340
  3813   000B64                     u9341:
  3814   000B64  EF9B  F005         	goto	l7335
  3815   000B68                     u9340:
  3816   000B68                     
  3817                           ; BSR set to: 0
  3818                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 803:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  3819   000B68  0E00               	movlw	low _dbuf
  3820   000B6A  25C2               	addwf	efgtoa@n& (0+255),w,b
  3821   000B6C  6ED9               	movwf	fsr2l,c
  3822   000B6E  0E01               	movlw	high _dbuf
  3823   000B70  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3824   000B72  6EDA               	movwf	fsr2h,c
  3825   000B74  51A7               	movf	efgtoa@d& (0+255),w,b
  3826   000B76  0F30               	addlw	48
  3827   000B78  6EDF               	movwf	indf2,c
  3828   000B7A                     
  3829                           ; BSR set to: 0
  3830   000B7A  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3831   000B7C  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3832   000B7E                     
  3833                           ; BSR set to: 0
  3834                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 804:             --w;
  3835   000B7E  07AD               	decf	efgtoa@w& (0+255),f,b
  3836   000B80  A0D8               	btfss	status,0,c
  3837   000B82  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3838   000B84                     
  3839                           ; BSR set to: 0
  3840                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 805:         };/opt/microchip
      +                          /xc8/v2.50/pic/sources/c99/common/doprnt.c: 806:         h -= l*u.f;
  3841   000B84  C0B5  F087         	movff	efgtoa@h,___flsub@b
  3842   000B88  C0B6  F088         	movff	efgtoa@h+1,___flsub@b+1
  3843   000B8C  C0B7  F089         	movff	efgtoa@h+2,___flsub@b+2
  3844   000B90  C0B8  F08A         	movff	efgtoa@h+3,___flsub@b+3
  3845   000B94  C0B9  F072         	movff	efgtoa@l,___flmul@a
  3846   000B98  C0BA  F073         	movff	efgtoa@l+1,___flmul@a+1
  3847   000B9C  C0BB  F074         	movff	efgtoa@l+2,___flmul@a+2
  3848   000BA0  C0BC  F075         	movff	efgtoa@l+3,___flmul@a+3
  3849   000BA4  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3850   000BA8  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3851   000BAC  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3852   000BB0  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3853   000BB4  ECE6  F008         	call	___flmul	;wreg free
  3854   000BB8  C06E  F08B         	movff	?___flmul,___flsub@a
  3855   000BBC  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  3856   000BC0  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  3857   000BC4  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  3858   000BC8  EC03  F01E         	call	___flsub	;wreg free
  3859   000BCC  C087  F0B5         	movff	?___flsub,efgtoa@h
  3860   000BD0  C088  F0B6         	movff	?___flsub+1,efgtoa@h+1
  3861   000BD4  C089  F0B7         	movff	?___flsub+2,efgtoa@h+2
  3862   000BD8  C08A  F0B8         	movff	?___flsub+3,efgtoa@h+3
  3863   000BDC                     
  3864                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 807:         u.f = u.f/10.0;
  3865   000BDC  C0C4  F060         	movff	efgtoa@u,___fldiv@b
  3866   000BE0  C0C5  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3867   000BE4  C0C6  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3868   000BE8  C0C7  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3869   000BEC  0E00               	movlw	0
  3870   000BEE  0100               	movlb	0	; () banked
  3871   000BF0  6F64               	movwf	___fldiv@a& (0+255),b
  3872   000BF2  0E00               	movlw	0
  3873   000BF4  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3874   000BF6  0E20               	movlw	32
  3875   000BF8  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3876   000BFA  0E41               	movlw	65
  3877   000BFC  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3878   000BFE  EC1D  F00F         	call	___fldiv	;wreg free
  3879   000C02  C060  F0C4         	movff	?___fldiv,efgtoa@u
  3880   000C06  C061  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  3881   000C0A  C062  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  3882   000C0E  C063  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  3883   000C12                     
  3884                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 808:         --ne;
  3885   000C12  0100               	movlb	0	; () banked
  3886   000C14  079C               	decf	efgtoa@ne& (0+255),f,b
  3887   000C16  A0D8               	btfss	status,0,c
  3888   000C18  079D               	decf	(efgtoa@ne+1)& (0+255),f,b
  3889   000C1A                     
  3890                           ; BSR set to: 0
  3891                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 809:         ++i;
  3892   000C1A  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  3893   000C1C  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  3894   000C1E                     l7359:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 779:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3898   000C1E  51A9               	movf	efgtoa@m& (0+255),w,b
  3899   000C20  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3900   000C22  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3901   000C24  0A80               	xorlw	128
  3902   000C26  6F9A               	movwf	??_efgtoa& (0+255),b
  3903   000C28  51AA               	movf	(efgtoa@m+1)& (0+255),w,b
  3904   000C2A  0A80               	xorlw	128
  3905   000C2C  599A               	subwfb	??_efgtoa& (0+255),w,b
  3906   000C2E  B0D8               	btfsc	status,0,c
  3907   000C30  EF1C  F006         	goto	u9351
  3908   000C34  EF1E  F006         	goto	u9350
  3909   000C38                     u9351:
  3910   000C38  EF2C  F006         	goto	l7363
  3911   000C3C                     u9350:
  3912   000C3C                     
  3913                           ; BSR set to: 0
  3914   000C3C  BFC3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3915   000C3E  EF2A  F006         	goto	u9361
  3916   000C42  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3917   000C44  E109               	bnz	u9360
  3918   000C46  0E4B               	movlw	75
  3919   000C48  5DC2               	subwf	efgtoa@n& (0+255),w,b
  3920   000C4A  A0D8               	btfss	status,0,c
  3921   000C4C  EF2A  F006         	goto	u9361
  3922   000C50  EF2C  F006         	goto	u9360
  3923   000C54                     u9361:
  3924   000C54  EF29  F005         	goto	l7319
  3925   000C58                     u9360:
  3926   000C58                     l7363:
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 816:  i = sizeof(dbuf) - 1;
  3930   000C58  0E00               	movlw	0
  3931   000C5A  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3932   000C5C  0E4F               	movlw	79
  3933   000C5E  6FB3               	movwf	efgtoa@i& (0+255),b
  3934   000C60                     
  3935                           ; BSR set to: 0
  3936                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 817:     dbuf[i] = '\0';
  3937   000C60  0E00               	movlw	low _dbuf
  3938   000C62  25B3               	addwf	efgtoa@i& (0+255),w,b
  3939   000C64  6ED9               	movwf	fsr2l,c
  3940   000C66  0E01               	movlw	high _dbuf
  3941   000C68  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3942   000C6A  6EDA               	movwf	fsr2h,c
  3943   000C6C  6ADF               	clrf	indf2,c
  3944   000C6E                     
  3945                           ; BSR set to: 0
  3946                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 848:  memcpy(&dbuf[i-n], &dbu
      +                          f[0], (size_t)n);
  3947   000C6E  0E00               	movlw	low _dbuf
  3948   000C70  6F9A               	movwf	??_efgtoa& (0+255),b
  3949   000C72  0E01               	movlw	high _dbuf
  3950   000C74  6F9B               	movwf	(??_efgtoa+1)& (0+255),b
  3951   000C76  51C2               	movf	efgtoa@n& (0+255),w,b
  3952   000C78  5F9A               	subwf	??_efgtoa& (0+255),f,b
  3953   000C7A  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3954   000C7C  5B9B               	subwfb	(??_efgtoa+1)& (0+255),f,b
  3955   000C7E  51B3               	movf	efgtoa@i& (0+255),w,b
  3956   000C80  259A               	addwf	??_efgtoa& (0+255),w,b
  3957   000C82  6F60               	movwf	memcpy@d1& (0+255),b
  3958   000C84  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3959   000C86  219B               	addwfc	(??_efgtoa+1)& (0+255),w,b
  3960   000C88  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3961   000C8A  0E00               	movlw	low _dbuf
  3962   000C8C  6F62               	movwf	memcpy@s1& (0+255),b
  3963   000C8E  0E01               	movlw	high _dbuf
  3964   000C90  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  3965   000C92  C0C2  F064         	movff	efgtoa@n,memcpy@n
  3966   000C96  C0C3  F065         	movff	efgtoa@n+1,memcpy@n+1
  3967   000C9A  EC40  F01D         	call	_memcpy	;wreg free
  3968   000C9E                     
  3969                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 849:  n = i-n;
  3970   000C9E  0100               	movlb	0	; () banked
  3971   000CA0  51C2               	movf	efgtoa@n& (0+255),w,b
  3972   000CA2  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3973   000CA4  6FC2               	movwf	efgtoa@n& (0+255),b
  3974   000CA6  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3975   000CA8  59B4               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3976   000CAA  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  3977   000CAC                     
  3978                           ; BSR set to: 0
  3979                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 850:  i = sign == 0 ? 0 : 1;
  3980   000CAC  51BD               	movf	efgtoa@sign& (0+255),w,b
  3981   000CAE  A4D8               	btfss	status,2,c
  3982   000CB0  EF5C  F006         	goto	u9371
  3983   000CB4  EF5F  F006         	goto	u9370
  3984   000CB8                     u9371:
  3985   000CB8  0E01               	movlw	1
  3986   000CBA  EF60  F006         	goto	u9380
  3987   000CBE                     u9370:
  3988   000CBE  0E00               	movlw	0
  3989   000CC0                     u9380:
  3990   000CC0  6FB3               	movwf	efgtoa@i& (0+255),b
  3991   000CC2  6BB4               	clrf	(efgtoa@i+1)& (0+255),b
  3992   000CC4                     
  3993                           ; BSR set to: 0
  3994                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 861:  if (sign) {
  3995   000CC4  51BD               	movf	efgtoa@sign& (0+255),w,b
  3996   000CC6  B4D8               	btfsc	status,2,c
  3997   000CC8  EF68  F006         	goto	u9391
  3998   000CCC  EF6A  F006         	goto	u9390
  3999   000CD0                     u9391:
  4000   000CD0  EF75  F006         	goto	l7377
  4001   000CD4                     u9390:
  4002   000CD4                     
  4003                           ; BSR set to: 0
  4004                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 862:   dbuf[--n] = sign;
  4005   000CD4  07C2               	decf	efgtoa@n& (0+255),f,b
  4006   000CD6  A0D8               	btfss	status,0,c
  4007   000CD8  07C3               	decf	(efgtoa@n+1)& (0+255),f,b
  4008   000CDA  0E00               	movlw	low _dbuf
  4009   000CDC  25C2               	addwf	efgtoa@n& (0+255),w,b
  4010   000CDE  6ED9               	movwf	fsr2l,c
  4011   000CE0  0E01               	movlw	high _dbuf
  4012   000CE2  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4013   000CE4  6EDA               	movwf	fsr2h,c
  4014   000CE6  C0BD  FFDF         	movff	efgtoa@sign,indf2
  4015   000CEA                     l7377:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 864:  w -= i;
  4019   000CEA  51B3               	movf	efgtoa@i& (0+255),w,b
  4020   000CEC  5FAD               	subwf	efgtoa@w& (0+255),f,b
  4021   000CEE  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  4022   000CF0  5BAE               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4023   000CF2                     
  4024                           ; BSR set to: 0
  4025                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 867:     return (void) pad(fp
      +                          , &dbuf[n], w);
  4026   000CF2  C093  F070         	movff	efgtoa@fp,pad@fp
  4027   000CF6  C094  F071         	movff	efgtoa@fp+1,pad@fp+1
  4028   000CFA  0E00               	movlw	low _dbuf
  4029   000CFC  25C2               	addwf	efgtoa@n& (0+255),w,b
  4030   000CFE  6F72               	movwf	pad@buf& (0+255),b
  4031   000D00  0E01               	movlw	high _dbuf
  4032   000D02  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4033   000D04  6F73               	movwf	(pad@buf+1)& (0+255),b
  4034   000D06  C0AD  F074         	movff	efgtoa@w,pad@p
  4035   000D0A  C0AE  F075         	movff	efgtoa@w+1,pad@p+1
  4036   000D0E  ECEB  F01B         	call	_pad	;wreg free
  4037   000D12                     l1067:
  4038   000D12  0012               	return		;funcret
  4039   000D14                     __end_of_efgtoa:
  4040                           	callstack 0
  4041                           
  4042 ;; *************** function _strcpy *****************
  4043 ;; Defined at:
  4044 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/strcpy.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  4047 ;;		 -> dbuf(80), 
  4048 ;;  src             1    2[BANK0 ] PTR const unsigned char 
  4049 ;;		 -> STR_11(4), STR_8(4), 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  d               2    4[BANK0 ] PTR unsigned char 
  4052 ;;		 -> dbuf(80), 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  2    0[BANK0 ] PTR unsigned char 
  4055 ;; Registers used:
  4056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4062 ;;      Params:         0       3       0       0
  4063 ;;      Locals:         0       2       0       0
  4064 ;;      Temps:          0       1       0       0
  4065 ;;      Totals:         0       6       0       0
  4066 ;;Total ram usage:        6 bytes
  4067 ;; Hardware stack levels used: 1
  4068 ;; Hardware stack levels required when called: 3
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_efgtoa
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text6
  4077   003C92                     __ptext6:
  4078                           	callstack 0
  4079   003C92                     _strcpy:
  4080                           	callstack 23
  4081   003C92  C060  F064         	movff	strcpy@dest,strcpy@d
  4082   003C96  C061  F065         	movff	strcpy@dest+1,strcpy@d+1
  4083   003C9A                     l7113:
  4084   003C9A  0100               	movlb	0	; () banked
  4085   003C9C  2B62               	incf	strcpy@src& (0+255),f,b
  4086   003C9E  0562               	decf	strcpy@src& (0+255),w,b
  4087   003CA0  6F63               	movwf	??_strcpy& (0+255),b
  4088   003CA2  C063  FFF6         	movff	??_strcpy,tblptrl
  4089   003CA6                     	if	1	;There is more than 1 active tblptr byte
  4090   003CA6  0E03               	movlw	high __smallconst
  4091   003CA8  6EF7               	movwf	tblptrh,c
  4092   003CAA                     	endif
  4093   003CAA                     	if	0	;tblptru may be non-zero
  4094   003CAA                     	endif
  4095   003CAA                     	if	0	;tblptru may be non-zero
  4096   003CAA                     	endif
  4097   003CAA  C064  FFD9         	movff	strcpy@d,fsr2l
  4098   003CAE  C065  FFDA         	movff	strcpy@d+1,fsr2h
  4099   003CB2  4B64               	infsnz	strcpy@d& (0+255),f,b
  4100   003CB4  2B65               	incf	(strcpy@d+1)& (0+255),f,b
  4101   003CB6  0008               	tblrd		*
  4102   003CB8  CFF5 FFDF          	movff	tablat,indf2
  4103   003CBC  50DF               	movf	indf2,w,c
  4104   003CBE  A4D8               	btfss	status,2,c
  4105   003CC0  EF64  F01E         	goto	u8951
  4106   003CC4  EF66  F01E         	goto	u8950
  4107   003CC8                     u8951:
  4108   003CC8  EF4D  F01E         	goto	l7113
  4109   003CCC                     u8950:
  4110   003CCC                     
  4111                           ; BSR set to: 0
  4112   003CCC  0012               	return		;funcret
  4113   003CCE                     __end_of_strcpy:
  4114                           	callstack 0
  4115                           
  4116 ;; *************** function _pad *****************
  4117 ;; Defined at:
  4118 ;;		line 193 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  4121 ;;		 -> sprintf@f(11), 
  4122 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  4123 ;;		 -> dbuf(80), 
  4124 ;;  p               2   20[BANK0 ] int 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  i               2   23[BANK0 ] int 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4136 ;;      Params:         0       6       0       0
  4137 ;;      Locals:         0       2       0       0
  4138 ;;      Temps:          0       1       0       0
  4139 ;;      Totals:         0       9       0       0
  4140 ;;Total ram usage:        9 bytes
  4141 ;; Hardware stack levels used: 1
  4142 ;; Hardware stack levels required when called: 6
  4143 ;; This function calls:
  4144 ;;		_fputc
  4145 ;;		_fputs
  4146 ;; This function is called by:
  4147 ;;		_efgtoa
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text7
  4152   0037D6                     __ptext7:
  4153                           	callstack 0
  4154   0037D6                     _pad:
  4155                           	callstack 20
  4156   0037D6                     
  4157                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 193: static void pad(FILE *fp
      +                          , char *buf, int p);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 194: {;/op
      +                          t/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 195:     int i;;/opt/microchip/xc
      +                          8/v2.50/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  4158   0037D6  0100               	movlb	0	; () banked
  4159   0037D8  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  4160   0037DA  EFF3  F01B         	goto	u8860
  4161   0037DE  EFF1  F01B         	goto	u8861
  4162   0037E2                     u8861:
  4163   0037E2  EFF7  F01B         	goto	l1052
  4164   0037E6                     u8860:
  4165   0037E6                     
  4166                           ; BSR set to: 0
  4167                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  4168   0037E6  0E00               	movlw	0
  4169   0037E8  6F75               	movwf	(pad@p+1)& (0+255),b
  4170   0037EA  0E00               	movlw	0
  4171   0037EC  6F74               	movwf	pad@p& (0+255),b
  4172   0037EE                     l1052:
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  4176   0037EE  0E00               	movlw	0
  4177   0037F0  6F78               	movwf	(pad@i+1)& (0+255),b
  4178   0037F2  0E00               	movlw	0
  4179   0037F4  6F77               	movwf	pad@i& (0+255),b
  4180                           
  4181                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  4182   0037F6  EF0A  F01C         	goto	l7085
  4183   0037FA                     l7081:
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 210:         fputc(' ', fp);
  4187   0037FA  0E00               	movlw	0
  4188   0037FC  6F61               	movwf	(fputc@c+1)& (0+255),b
  4189   0037FE  0E20               	movlw	32
  4190   003800  6F60               	movwf	fputc@c& (0+255),b
  4191   003802  C070  F062         	movff	pad@fp,fputc@fp
  4192   003806  C071  F063         	movff	pad@fp+1,fputc@fp+1
  4193   00380A  ECED  F019         	call	_fputc	;wreg free
  4194   00380E                     
  4195                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 211:         ++i;
  4196   00380E  0100               	movlb	0	; () banked
  4197   003810  4B77               	infsnz	pad@i& (0+255),f,b
  4198   003812  2B78               	incf	(pad@i+1)& (0+255),f,b
  4199   003814                     l7085:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  4203   003814  5174               	movf	pad@p& (0+255),w,b
  4204   003816  5D77               	subwf	pad@i& (0+255),w,b
  4205   003818  5178               	movf	(pad@i+1)& (0+255),w,b
  4206   00381A  0A80               	xorlw	128
  4207   00381C  6F76               	movwf	??_pad& (0+255),b
  4208   00381E  5175               	movf	(pad@p+1)& (0+255),w,b
  4209   003820  0A80               	xorlw	128
  4210   003822  5976               	subwfb	??_pad& (0+255),w,b
  4211   003824  A0D8               	btfss	status,0,c
  4212   003826  EF17  F01C         	goto	u8871
  4213   00382A  EF19  F01C         	goto	u8870
  4214   00382E                     u8871:
  4215   00382E  EFFD  F01B         	goto	l7081
  4216   003832                     u8870:
  4217   003832                     
  4218                           ; BSR set to: 0
  4219                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 218:         fputs((const cha
      +                          r *)buf, fp);
  4220   003832  C072  F069         	movff	pad@buf,fputs@s
  4221   003836  C073  F06A         	movff	pad@buf+1,fputs@s+1
  4222   00383A  C070  F06B         	movff	pad@fp,fputs@fp
  4223   00383E  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  4224   003842  ECDF  F01D         	call	_fputs	;wreg free
  4225   003846  0012               	return		;funcret
  4226   003848                     __end_of_pad:
  4227                           	callstack 0
  4228                           
  4229 ;; *************** function _fputs *****************
  4230 ;; Defined at:
  4231 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputs.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4234 ;;		 -> dbuf(80), 
  4235 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4236 ;;		 -> sprintf@f(11), 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  i               2   14[BANK0 ] int 
  4239 ;;  c               1   13[BANK0 ] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  2    9[BANK0 ] int 
  4242 ;; Registers used:
  4243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4249 ;;      Params:         0       4       0       0
  4250 ;;      Locals:         0       3       0       0
  4251 ;;      Temps:          0       0       0       0
  4252 ;;      Totals:         0       7       0       0
  4253 ;;Total ram usage:        7 bytes
  4254 ;; Hardware stack levels used: 1
  4255 ;; Hardware stack levels required when called: 5
  4256 ;; This function calls:
  4257 ;;		_fputc
  4258 ;; This function is called by:
  4259 ;;		_pad
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	text8
  4264   003BBE                     __ptext8:
  4265                           	callstack 0
  4266   003BBE                     _fputs:
  4267                           	callstack 20
  4268   003BBE  0E00               	movlw	0
  4269   003BC0  0100               	movlb	0	; () banked
  4270   003BC2  6F6F               	movwf	(fputs@i+1)& (0+255),b
  4271   003BC4  0E00               	movlw	0
  4272   003BC6  6F6E               	movwf	fputs@i& (0+255),b
  4273   003BC8  EFF2  F01D         	goto	l6715
  4274   003BCC                     l6711:
  4275                           
  4276                           ; BSR set to: 0
  4277   003BCC  C06D  F060         	movff	fputs@c,fputc@c
  4278   003BD0  6B61               	clrf	(fputc@c+1)& (0+255),b
  4279   003BD2  C06B  F062         	movff	fputs@fp,fputc@fp
  4280   003BD6  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  4281   003BDA  ECED  F019         	call	_fputc	;wreg free
  4282   003BDE  0100               	movlb	0	; () banked
  4283   003BE0  4B6E               	infsnz	fputs@i& (0+255),f,b
  4284   003BE2  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  4285   003BE4                     l6715:
  4286                           
  4287                           ; BSR set to: 0
  4288   003BE4  516E               	movf	fputs@i& (0+255),w,b
  4289   003BE6  2569               	addwf	fputs@s& (0+255),w,b
  4290   003BE8  6ED9               	movwf	fsr2l,c
  4291   003BEA  516F               	movf	(fputs@i+1)& (0+255),w,b
  4292   003BEC  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  4293   003BEE  6EDA               	movwf	fsr2h,c
  4294   003BF0  50DF               	movf	indf2,w,c
  4295   003BF2  6F6D               	movwf	fputs@c& (0+255),b
  4296   003BF4  516D               	movf	fputs@c& (0+255),w,b
  4297   003BF6  A4D8               	btfss	status,2,c
  4298   003BF8  EF00  F01E         	goto	u8271
  4299   003BFC  EF02  F01E         	goto	u8270
  4300   003C00                     u8271:
  4301   003C00  EFE6  F01D         	goto	l6711
  4302   003C04                     u8270:
  4303   003C04                     
  4304                           ; BSR set to: 0
  4305   003C04  0012               	return		;funcret
  4306   003C06                     __end_of_fputs:
  4307                           	callstack 0
  4308                           
  4309 ;; *************** function _fputc *****************
  4310 ;; Defined at:
  4311 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputc.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  c               2    0[BANK0 ] int 
  4314 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4315 ;;		 -> sprintf@f(11), 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2    0[BANK0 ] int 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4327 ;;      Params:         0       4       0       0
  4328 ;;      Locals:         0       0       0       0
  4329 ;;      Temps:          0       5       0       0
  4330 ;;      Totals:         0       9       0       0
  4331 ;;Total ram usage:        9 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 4
  4334 ;; This function calls:
  4335 ;;		_putch
  4336 ;; This function is called by:
  4337 ;;		_pad
  4338 ;;		_vfpfcnvrt
  4339 ;;		_fputs
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text9
  4344   0033DA                     __ptext9:
  4345                           	callstack 0
  4346   0033DA                     _fputc:
  4347                           	callstack 23
  4348   0033DA  0100               	movlb	0	; () banked
  4349   0033DC  5162               	movf	fputc@fp& (0+255),w,b
  4350   0033DE  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4351   0033E0  B4D8               	btfsc	status,2,c
  4352   0033E2  EFF5  F019         	goto	u7841
  4353   0033E6  EFF7  F019         	goto	u7840
  4354   0033EA                     u7841:
  4355   0033EA  EF00  F01A         	goto	l6505
  4356   0033EE                     u7840:
  4357   0033EE                     
  4358                           ; BSR set to: 0
  4359   0033EE  5162               	movf	fputc@fp& (0+255),w,b
  4360   0033F0  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4361   0033F2  A4D8               	btfss	status,2,c
  4362   0033F4  EFFE  F019         	goto	u7851
  4363   0033F8  EF00  F01A         	goto	u7850
  4364   0033FC                     u7851:
  4365   0033FC  EF05  F01A         	goto	l6507
  4366   003400                     u7850:
  4367   003400                     l6505:
  4368                           
  4369                           ; BSR set to: 0
  4370   003400  5160               	movf	fputc@c& (0+255),w,b
  4371   003402  EC48  F01F         	call	_putch
  4372   003406  EF4A  F01A         	goto	l1192
  4373   00340A                     l6507:
  4374                           
  4375                           ; BSR set to: 0
  4376   00340A  EE20 F009          	lfsr	2,9
  4377   00340E  5162               	movf	fputc@fp& (0+255),w,b
  4378   003410  26D9               	addwf	fsr2l,f,c
  4379   003412  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4380   003414  22DA               	addwfc	fsr2h,f,c
  4381   003416  50DE               	movf	postinc2,w,c
  4382   003418  10DE               	iorwf	postinc2,w,c
  4383   00341A  B4D8               	btfsc	status,2,c
  4384   00341C  EF12  F01A         	goto	u7861
  4385   003420  EF14  F01A         	goto	u7860
  4386   003424                     u7861:
  4387   003424  EF2F  F01A         	goto	l6511
  4388   003428                     u7860:
  4389   003428                     
  4390                           ; BSR set to: 0
  4391   003428  EE20 F009          	lfsr	2,9
  4392   00342C  5162               	movf	fputc@fp& (0+255),w,b
  4393   00342E  26D9               	addwf	fsr2l,f,c
  4394   003430  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4395   003432  22DA               	addwfc	fsr2h,f,c
  4396   003434  EE10 F002          	lfsr	1,2
  4397   003438  5162               	movf	fputc@fp& (0+255),w,b
  4398   00343A  26E1               	addwf	fsr1l,f,c
  4399   00343C  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4400   00343E  22E2               	addwfc	fsr1h,f,c
  4401   003440  50DE               	movf	postinc2,w,c
  4402   003442  5CE6               	subwf	postinc1,w,c
  4403   003444  50E6               	movf	postinc1,w,c
  4404   003446  0A80               	xorlw	128
  4405   003448  6F68               	movwf	(??_fputc+4)& (0+255),b
  4406   00344A  50DE               	movf	postinc2,w,c
  4407   00344C  0A80               	xorlw	128
  4408   00344E  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  4409   003450  B0D8               	btfsc	status,0,c
  4410   003452  EF2D  F01A         	goto	u7871
  4411   003456  EF2F  F01A         	goto	u7870
  4412   00345A                     u7871:
  4413   00345A  EF4A  F01A         	goto	l1192
  4414   00345E                     u7870:
  4415   00345E                     l6511:
  4416                           
  4417                           ; BSR set to: 0
  4418   00345E  EE20 F002          	lfsr	2,2
  4419   003462  5162               	movf	fputc@fp& (0+255),w,b
  4420   003464  26D9               	addwf	fsr2l,f,c
  4421   003466  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4422   003468  22DA               	addwfc	fsr2h,f,c
  4423   00346A  50DF               	movf	indf2,w,c
  4424   00346C  6F64               	movwf	??_fputc& (0+255),b
  4425   00346E  C062  FFD9         	movff	fputc@fp,fsr2l
  4426   003472  C063  FFDA         	movff	fputc@fp+1,fsr2h
  4427   003476  50DF               	movf	indf2,w,c
  4428   003478  2564               	addwf	??_fputc& (0+255),w,b
  4429   00347A  6ED9               	movwf	fsr2l,c
  4430   00347C  6ADA               	clrf	fsr2h,c
  4431   00347E  C060  FFDF         	movff	fputc@c,indf2
  4432   003482  EE20 F002          	lfsr	2,2
  4433   003486  5162               	movf	fputc@fp& (0+255),w,b
  4434   003488  26D9               	addwf	fsr2l,f,c
  4435   00348A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4436   00348C  22DA               	addwfc	fsr2h,f,c
  4437   00348E  2ADE               	incf	postinc2,f,c
  4438   003490  0E00               	movlw	0
  4439   003492  22DD               	addwfc	postdec2,f,c
  4440   003494                     l1192:
  4441   003494  0012               	return		;funcret
  4442   003496                     __end_of_fputc:
  4443                           	callstack 0
  4444                           
  4445 ;; *************** function _putch *****************
  4446 ;; Defined at:
  4447 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/putch.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  c               1    wreg     unsigned char 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  c               1    0[COMRAM] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4461 ;;      Params:         0       0       0       0
  4462 ;;      Locals:         0       0       0       0
  4463 ;;      Temps:          0       0       0       0
  4464 ;;      Totals:         0       0       0       0
  4465 ;;Total ram usage:        0 bytes
  4466 ;; Hardware stack levels used: 1
  4467 ;; Hardware stack levels required when called: 3
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_fputc
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text10
  4476   003E90                     __ptext10:
  4477                           	callstack 0
  4478   003E90                     _putch:
  4479                           	callstack 23
  4480   003E90  0012               	return		;funcret
  4481   003E92                     __end_of_putch:
  4482                           	callstack 0
  4483                           
  4484 ;; *************** function _memcpy *****************
  4485 ;; Defined at:
  4486 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/memcpy.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  d1              2    0[BANK0 ] PTR void 
  4489 ;;		 -> dbuf(80), 
  4490 ;;  s1              2    2[BANK0 ] PTR const void 
  4491 ;;		 -> dbuf(80), 
  4492 ;;  n               2    4[BANK0 ] unsigned int 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4495 ;;		 -> dbuf(80), 
  4496 ;;  d               2    7[BANK0 ] PTR unsigned char 
  4497 ;;		 -> dbuf(80), 
  4498 ;;  tmp             1    6[BANK0 ] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  2    0[BANK0 ] PTR void 
  4501 ;; Registers used:
  4502 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4508 ;;      Params:         0       6       0       0
  4509 ;;      Locals:         0       5       0       0
  4510 ;;      Temps:          0       0       0       0
  4511 ;;      Totals:         0      11       0       0
  4512 ;;Total ram usage:       11 bytes
  4513 ;; Hardware stack levels used: 1
  4514 ;; Hardware stack levels required when called: 3
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_efgtoa
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text11
  4523   003A80                     __ptext11:
  4524                           	callstack 0
  4525   003A80                     _memcpy:
  4526                           	callstack 23
  4527   003A80  C062  F069         	movff	memcpy@s1,memcpy@s
  4528   003A84  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
  4529   003A88  C060  F067         	movff	memcpy@d1,memcpy@d
  4530   003A8C  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
  4531   003A90  EF5A  F01D         	goto	l7161
  4532   003A94                     l7153:
  4533                           
  4534                           ; BSR set to: 0
  4535   003A94  C069  FFD9         	movff	memcpy@s,fsr2l
  4536   003A98  C06A  FFDA         	movff	memcpy@s+1,fsr2h
  4537   003A9C  50DF               	movf	indf2,w,c
  4538   003A9E  6F66               	movwf	memcpy@tmp& (0+255),b
  4539   003AA0                     
  4540                           ; BSR set to: 0
  4541   003AA0  4B69               	infsnz	memcpy@s& (0+255),f,b
  4542   003AA2  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
  4543   003AA4                     
  4544                           ; BSR set to: 0
  4545   003AA4  C067  FFD9         	movff	memcpy@d,fsr2l
  4546   003AA8  C068  FFDA         	movff	memcpy@d+1,fsr2h
  4547   003AAC  C066  FFDF         	movff	memcpy@tmp,indf2
  4548   003AB0                     
  4549                           ; BSR set to: 0
  4550   003AB0  4B67               	infsnz	memcpy@d& (0+255),f,b
  4551   003AB2  2B68               	incf	(memcpy@d+1)& (0+255),f,b
  4552   003AB4                     l7161:
  4553   003AB4  0100               	movlb	0	; () banked
  4554   003AB6  0764               	decf	memcpy@n& (0+255),f,b
  4555   003AB8  A0D8               	btfss	status,0,c
  4556   003ABA  0765               	decf	(memcpy@n+1)& (0+255),f,b
  4557   003ABC  2964               	incf	memcpy@n& (0+255),w,b
  4558   003ABE  E106               	bnz	u9071
  4559   003AC0  2965               	incf	(memcpy@n+1)& (0+255),w,b
  4560   003AC2  A4D8               	btfss	status,2,c
  4561   003AC4  EF66  F01D         	goto	u9071
  4562   003AC8  EF68  F01D         	goto	u9070
  4563   003ACC                     u9071:
  4564   003ACC  EF4A  F01D         	goto	l7153
  4565   003AD0                     u9070:
  4566   003AD0                     
  4567                           ; BSR set to: 0
  4568   003AD0  0012               	return		;funcret
  4569   003AD2                     __end_of_memcpy:
  4570                           	callstack 0
  4571                           
  4572 ;; *************** function _labs *****************
  4573 ;; Defined at:
  4574 ;;		line 1 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/labs.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  a               4    0[BANK0 ] long 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;		None
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  4    0[BANK0 ] long 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4588 ;;      Params:         0       4       0       0
  4589 ;;      Locals:         0       0       0       0
  4590 ;;      Temps:          0       4       0       0
  4591 ;;      Totals:         0       8       0       0
  4592 ;;Total ram usage:        8 bytes
  4593 ;; Hardware stack levels used: 1
  4594 ;; Hardware stack levels required when called: 3
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_efgtoa
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text12
  4603   0039D6                     __ptext12:
  4604                           	callstack 0
  4605   0039D6                     _labs:
  4606                           	callstack 23
  4607   0039D6  0100               	movlb	0	; () banked
  4608   0039D8  BF63               	btfsc	(labs@a+3)& (0+255),7,b
  4609   0039DA  EFF1  F01C         	goto	u8961
  4610   0039DE  EFF3  F01C         	goto	u8960
  4611   0039E2                     u8961:
  4612   0039E2  EFFD  F01C         	goto	l7119
  4613   0039E6                     u8960:
  4614   0039E6                     
  4615                           ; BSR set to: 0
  4616   0039E6  C060  F060         	movff	labs@a,?_labs
  4617   0039EA  C061  F061         	movff	labs@a+1,?_labs+1
  4618   0039EE  C062  F062         	movff	labs@a+2,?_labs+2
  4619   0039F2  C063  F063         	movff	labs@a+3,?_labs+3
  4620   0039F6  EF16  F01D         	goto	l1174
  4621   0039FA                     l7119:
  4622                           
  4623                           ; BSR set to: 0
  4624   0039FA  C060  F064         	movff	labs@a,??_labs
  4625   0039FE  C061  F065         	movff	labs@a+1,??_labs+1
  4626   003A02  C062  F066         	movff	labs@a+2,??_labs+2
  4627   003A06  C063  F067         	movff	labs@a+3,??_labs+3
  4628   003A0A  1F64               	comf	??_labs& (0+255),f,b
  4629   003A0C  1F65               	comf	(??_labs+1)& (0+255),f,b
  4630   003A0E  1F66               	comf	(??_labs+2)& (0+255),f,b
  4631   003A10  1F67               	comf	(??_labs+3)& (0+255),f,b
  4632   003A12  2B64               	incf	??_labs& (0+255),f,b
  4633   003A14  0E00               	movlw	0
  4634   003A16  2365               	addwfc	(??_labs+1)& (0+255),f,b
  4635   003A18  2366               	addwfc	(??_labs+2)& (0+255),f,b
  4636   003A1A  2367               	addwfc	(??_labs+3)& (0+255),f,b
  4637   003A1C  C064  F060         	movff	??_labs,?_labs
  4638   003A20  C065  F061         	movff	??_labs+1,?_labs+1
  4639   003A24  C066  F062         	movff	??_labs+2,?_labs+2
  4640   003A28  C067  F063         	movff	??_labs+3,?_labs+3
  4641   003A2C                     l1174:
  4642                           
  4643                           ; BSR set to: 0
  4644   003A2C  0012               	return		;funcret
  4645   003A2E                     __end_of_labs:
  4646                           	callstack 0
  4647                           
  4648 ;; *************** function _floorf *****************
  4649 ;; Defined at:
  4650 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/floorf.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  x               4   25[BANK0 ] float 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  u               4   41[BANK0 ] struct .
  4655 ;;  m               4   35[BANK0 ] unsigned long 
  4656 ;;  e               2   39[BANK0 ] int 
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  4   25[BANK0 ] float 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2, status,0
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4666 ;;      Params:         0       4       0       0
  4667 ;;      Locals:         0      10       0       0
  4668 ;;      Temps:          0       6       0       0
  4669 ;;      Totals:         0      20       0       0
  4670 ;;Total ram usage:       20 bytes
  4671 ;; Hardware stack levels used: 1
  4672 ;; Hardware stack levels required when called: 3
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_efgtoa
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text13
  4681   002656                     __ptext13:
  4682                           	callstack 0
  4683   002656                     _floorf:
  4684                           	callstack 23
  4685   002656  C0E2  F089         	movff	floorf@F521,floorf@u
  4686   00265A  C0E3  F08A         	movff	floorf@F521+1,floorf@u+1
  4687   00265E  C0E4  F08B         	movff	floorf@F521+2,floorf@u+2
  4688   002662  C0E5  F08C         	movff	floorf@F521+3,floorf@u+3
  4689   002666  C079  F089         	movff	floorf@x,floorf@u
  4690   00266A  C07A  F08A         	movff	floorf@x+1,floorf@u+1
  4691   00266E  C07B  F08B         	movff	floorf@x+2,floorf@u+2
  4692   002672  C07C  F08C         	movff	floorf@x+3,floorf@u+3
  4693   002676  0E81               	movlw	129
  4694   002678  0100               	movlb	0	; () banked
  4695   00267A  6F7D               	movwf	??_floorf& (0+255),b
  4696   00267C  0EFF               	movlw	255
  4697   00267E  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4698   002680  C089  F07F         	movff	floorf@u,??_floorf+2
  4699   002684  C08A  F080         	movff	floorf@u+1,??_floorf+3
  4700   002688  C08B  F081         	movff	floorf@u+2,??_floorf+4
  4701   00268C  C08C  F082         	movff	floorf@u+3,??_floorf+5
  4702   002690  0E18               	movlw	24
  4703   002692  EF50  F013         	goto	u8970
  4704   002696                     u8975:
  4705   002696  90D8               	bcf	status,0,c
  4706   002698  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  4707   00269A  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4708   00269C  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4709   00269E  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4710   0026A0                     u8970:
  4711   0026A0  2EE8               	decfsz	wreg,f,c
  4712   0026A2  EF4B  F013         	goto	u8975
  4713   0026A6  517F               	movf	(??_floorf+2)& (0+255),w,b
  4714   0026A8  257D               	addwf	??_floorf& (0+255),w,b
  4715   0026AA  6F87               	movwf	floorf@e& (0+255),b
  4716   0026AC  0E00               	movlw	0
  4717   0026AE  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  4718   0026B0  6F88               	movwf	(floorf@e+1)& (0+255),b
  4719   0026B2  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4720   0026B4  EF65  F013         	goto	u8981
  4721   0026B8  5188               	movf	(floorf@e+1)& (0+255),w,b
  4722   0026BA  E109               	bnz	u8980
  4723   0026BC  0E17               	movlw	23
  4724   0026BE  5D87               	subwf	floorf@e& (0+255),w,b
  4725   0026C0  A0D8               	btfss	status,0,c
  4726   0026C2  EF65  F013         	goto	u8981
  4727   0026C6  EF67  F013         	goto	u8980
  4728   0026CA                     u8981:
  4729   0026CA  EF71  F013         	goto	l7129
  4730   0026CE                     u8980:
  4731   0026CE                     l7127:
  4732                           
  4733                           ; BSR set to: 0
  4734   0026CE  C079  F079         	movff	floorf@x,?_floorf
  4735   0026D2  C07A  F07A         	movff	floorf@x+1,?_floorf+1
  4736   0026D6  C07B  F07B         	movff	floorf@x+2,?_floorf+2
  4737   0026DA  C07C  F07C         	movff	floorf@x+3,?_floorf+3
  4738   0026DE  EF35  F014         	goto	l1160
  4739   0026E2                     l7129:
  4740                           
  4741                           ; BSR set to: 0
  4742   0026E2  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4743   0026E4  EF76  F013         	goto	u8991
  4744   0026E8  EF78  F013         	goto	u8990
  4745   0026EC                     u8991:
  4746   0026EC  EFE9  F013         	goto	l7139
  4747   0026F0                     u8990:
  4748   0026F0                     
  4749                           ; BSR set to: 0
  4750   0026F0  C087  F07D         	movff	floorf@e,??_floorf
  4751   0026F4  0EFF               	movlw	255
  4752   0026F6  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4753   0026F8  0EFF               	movlw	255
  4754   0026FA  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4755   0026FC  0E7F               	movlw	127
  4756   0026FE  6F80               	movwf	(??_floorf+3)& (0+255),b
  4757   002700  0E00               	movlw	0
  4758   002702  6F81               	movwf	(??_floorf+4)& (0+255),b
  4759   002704                     u9005:
  4760   002704  677D               	tstfsz	??_floorf& (0+255),b
  4761   002706  EF87  F013         	goto	u9006
  4762   00270A  EF8F  F013         	goto	u9007
  4763   00270E                     u9006:
  4764   00270E  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  4765   002710  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4766   002712  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4767   002714  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4768   002716  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4769   002718  2F7D               	decfsz	??_floorf& (0+255),f,b
  4770   00271A  EF82  F013         	goto	u9005
  4771   00271E                     u9007:
  4772   00271E  C07E  F083         	movff	??_floorf+1,floorf@m
  4773   002722  C07F  F084         	movff	??_floorf+2,floorf@m+1
  4774   002726  C080  F085         	movff	??_floorf+3,floorf@m+2
  4775   00272A  C081  F086         	movff	??_floorf+4,floorf@m+3
  4776   00272E  0100               	movlb	0	; () banked
  4777   002730  5183               	movf	floorf@m& (0+255),w,b
  4778   002732  1589               	andwf	floorf@u& (0+255),w,b
  4779   002734  6F7D               	movwf	??_floorf& (0+255),b
  4780   002736  5184               	movf	(floorf@m+1)& (0+255),w,b
  4781   002738  158A               	andwf	(floorf@u+1)& (0+255),w,b
  4782   00273A  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4783   00273C  5185               	movf	(floorf@m+2)& (0+255),w,b
  4784   00273E  158B               	andwf	(floorf@u+2)& (0+255),w,b
  4785   002740  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4786   002742  5186               	movf	(floorf@m+3)& (0+255),w,b
  4787   002744  158C               	andwf	(floorf@u+3)& (0+255),w,b
  4788   002746  6F80               	movwf	(??_floorf+3)& (0+255),b
  4789   002748  517D               	movf	??_floorf& (0+255),w,b
  4790   00274A  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4791   00274C  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4792   00274E  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4793   002750  A4D8               	btfss	status,2,c
  4794   002752  EFAD  F013         	goto	u9011
  4795   002756  EFAF  F013         	goto	u9010
  4796   00275A                     u9011:
  4797   00275A  EFB1  F013         	goto	l7135
  4798   00275E                     u9010:
  4799   00275E  EF67  F013         	goto	l7127
  4800   002762                     l7135:
  4801                           
  4802                           ; BSR set to: 0
  4803   002762  C089  F07D         	movff	floorf@u,??_floorf
  4804   002766  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  4805   00276A  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  4806   00276E  C08C  F080         	movff	floorf@u+3,??_floorf+3
  4807   002772  0E20               	movlw	32
  4808   002774  EFC1  F013         	goto	u9020
  4809   002778                     u9025:
  4810   002778  90D8               	bcf	status,0,c
  4811   00277A  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4812   00277C  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4813   00277E  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4814   002780  337D               	rrcf	??_floorf& (0+255),f,b
  4815   002782                     u9020:
  4816   002782  2EE8               	decfsz	wreg,f,c
  4817   002784  EFBC  F013         	goto	u9025
  4818   002788  517D               	movf	??_floorf& (0+255),w,b
  4819   00278A  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4820   00278C  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4821   00278E  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4822   002790  B4D8               	btfsc	status,2,c
  4823   002792  EFCD  F013         	goto	u9031
  4824   002796  EFCF  F013         	goto	u9030
  4825   00279A                     u9031:
  4826   00279A  EFD7  F013         	goto	l1163
  4827   00279E                     u9030:
  4828   00279E                     
  4829                           ; BSR set to: 0
  4830   00279E  5183               	movf	floorf@m& (0+255),w,b
  4831   0027A0  2789               	addwf	floorf@u& (0+255),f,b
  4832   0027A2  5184               	movf	(floorf@m+1)& (0+255),w,b
  4833   0027A4  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  4834   0027A6  5185               	movf	(floorf@m+2)& (0+255),w,b
  4835   0027A8  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  4836   0027AA  5186               	movf	(floorf@m+3)& (0+255),w,b
  4837   0027AC  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  4838   0027AE                     l1163:
  4839                           
  4840                           ; BSR set to: 0
  4841   0027AE  1D83               	comf	floorf@m& (0+255),w,b
  4842   0027B0  6F7D               	movwf	??_floorf& (0+255),b
  4843   0027B2  1D84               	comf	(floorf@m+1)& (0+255),w,b
  4844   0027B4  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4845   0027B6  1D85               	comf	(floorf@m+2)& (0+255),w,b
  4846   0027B8  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4847   0027BA  1D86               	comf	(floorf@m+3)& (0+255),w,b
  4848   0027BC  6F80               	movwf	(??_floorf+3)& (0+255),b
  4849   0027BE  517D               	movf	??_floorf& (0+255),w,b
  4850   0027C0  1789               	andwf	floorf@u& (0+255),f,b
  4851   0027C2  517E               	movf	(??_floorf+1)& (0+255),w,b
  4852   0027C4  178A               	andwf	(floorf@u+1)& (0+255),f,b
  4853   0027C6  517F               	movf	(??_floorf+2)& (0+255),w,b
  4854   0027C8  178B               	andwf	(floorf@u+2)& (0+255),f,b
  4855   0027CA  5180               	movf	(??_floorf+3)& (0+255),w,b
  4856   0027CC  178C               	andwf	(floorf@u+3)& (0+255),f,b
  4857   0027CE  EF2D  F014         	goto	l7147
  4858   0027D2                     l7139:
  4859                           
  4860                           ; BSR set to: 0
  4861   0027D2  C089  F07D         	movff	floorf@u,??_floorf
  4862   0027D6  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  4863   0027DA  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  4864   0027DE  C08C  F080         	movff	floorf@u+3,??_floorf+3
  4865   0027E2  0E20               	movlw	32
  4866   0027E4  EFF9  F013         	goto	u9040
  4867   0027E8                     u9045:
  4868   0027E8  90D8               	bcf	status,0,c
  4869   0027EA  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4870   0027EC  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4871   0027EE  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4872   0027F0  337D               	rrcf	??_floorf& (0+255),f,b
  4873   0027F2                     u9040:
  4874   0027F2  2EE8               	decfsz	wreg,f,c
  4875   0027F4  EFF4  F013         	goto	u9045
  4876   0027F8  517D               	movf	??_floorf& (0+255),w,b
  4877   0027FA  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4878   0027FC  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4879   0027FE  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4880   002800  A4D8               	btfss	status,2,c
  4881   002802  EF05  F014         	goto	u9051
  4882   002806  EF07  F014         	goto	u9050
  4883   00280A                     u9051:
  4884   00280A  EF11  F014         	goto	l7143
  4885   00280E                     u9050:
  4886   00280E                     
  4887                           ; BSR set to: 0
  4888   00280E  0E00               	movlw	0
  4889   002810  6F89               	movwf	floorf@u& (0+255),b
  4890   002812  0E00               	movlw	0
  4891   002814  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4892   002816  0E00               	movlw	0
  4893   002818  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4894   00281A  0E00               	movlw	0
  4895   00281C  6F8C               	movwf	(floorf@u+3)& (0+255),b
  4896   00281E  EF2D  F014         	goto	l7147
  4897   002822                     l7143:
  4898                           
  4899                           ; BSR set to: 0
  4900   002822  90D8               	bcf	status,0,c
  4901   002824  3589               	rlcf	floorf@u& (0+255),w,b
  4902   002826  6F7D               	movwf	??_floorf& (0+255),b
  4903   002828  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  4904   00282A  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4905   00282C  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  4906   00282E  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4907   002830  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  4908   002832  6F80               	movwf	(??_floorf+3)& (0+255),b
  4909   002834  517D               	movf	??_floorf& (0+255),w,b
  4910   002836  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4911   002838  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4912   00283A  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4913   00283C  B4D8               	btfsc	status,2,c
  4914   00283E  EF23  F014         	goto	u9061
  4915   002842  EF25  F014         	goto	u9060
  4916   002846                     u9061:
  4917   002846  EF2D  F014         	goto	l7147
  4918   00284A                     u9060:
  4919   00284A                     
  4920                           ; BSR set to: 0
  4921   00284A  0E00               	movlw	0
  4922   00284C  6F89               	movwf	floorf@u& (0+255),b
  4923   00284E  0E00               	movlw	0
  4924   002850  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4925   002852  0E80               	movlw	128
  4926   002854  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4927   002856  0EBF               	movlw	191
  4928   002858  6F8C               	movwf	(floorf@u+3)& (0+255),b
  4929   00285A                     l7147:
  4930                           
  4931                           ; BSR set to: 0
  4932   00285A  C089  F079         	movff	floorf@u,?_floorf
  4933   00285E  C08A  F07A         	movff	floorf@u+1,?_floorf+1
  4934   002862  C08B  F07B         	movff	floorf@u+2,?_floorf+2
  4935   002866  C08C  F07C         	movff	floorf@u+3,?_floorf+3
  4936   00286A                     l1160:
  4937                           
  4938                           ; BSR set to: 0
  4939   00286A  0012               	return		;funcret
  4940   00286C                     __end_of_floorf:
  4941                           	callstack 0
  4942                           
  4943 ;; *************** function ___fpclassifyf *****************
  4944 ;; Defined at:
  4945 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/__fpclassifyf.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  x               4    0[BANK0 ] float 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  u               4   10[BANK0 ] struct .
  4950 ;;  e               2    8[BANK0 ] int 
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  2    0[BANK0 ] int 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2, status,0
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4960 ;;      Params:         0       4       0       0
  4961 ;;      Locals:         0       6       0       0
  4962 ;;      Temps:          0       4       0       0
  4963 ;;      Totals:         0      14       0       0
  4964 ;;Total ram usage:       14 bytes
  4965 ;; Hardware stack levels used: 1
  4966 ;; Hardware stack levels required when called: 3
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_efgtoa
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	text14
  4975   00313A                     __ptext14:
  4976                           	callstack 0
  4977   00313A                     ___fpclassifyf:
  4978                           	callstack 23
  4979   00313A  C0E6  F06A         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4980   00313E  C0E7  F06B         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4981   003142  C0E8  F06C         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4982   003146  C0E9  F06D         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4983   00314A  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  4984   00314E  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4985   003152  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4986   003156  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4987   00315A  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  4988   00315E  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4989   003162  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4990   003166  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4991   00316A  0E18               	movlw	24
  4992   00316C  EFBE  F018         	goto	u8880
  4993   003170                     u8885:
  4994   003170  0100               	movlb	0	; () banked
  4995   003172  90D8               	bcf	status,0,c
  4996   003174  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  4997   003176  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  4998   003178  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  4999   00317A  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  5000   00317C                     u8880:
  5001   00317C  2EE8               	decfsz	wreg,f,c
  5002   00317E  EFB8  F018         	goto	u8885
  5003   003182  5164               	movf	??___fpclassifyf& (0+255),w,b
  5004   003184  6F68               	movwf	___fpclassifyf@e& (0+255),b
  5005   003186  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5006   003188  5168               	movf	___fpclassifyf@e& (0+255),w,b
  5007   00318A  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5008   00318C  A4D8               	btfss	status,2,c
  5009   00318E  EFCB  F018         	goto	u8891
  5010   003192  EFCD  F018         	goto	u8890
  5011   003196                     u8891:
  5012   003196  EFED  F018         	goto	l7101
  5013   00319A                     u8890:
  5014   00319A                     
  5015                           ; BSR set to: 0
  5016   00319A  90D8               	bcf	status,0,c
  5017   00319C  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5018   00319E  6F64               	movwf	??___fpclassifyf& (0+255),b
  5019   0031A0  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5020   0031A2  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  5021   0031A4  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5022   0031A6  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  5023   0031A8  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5024   0031AA  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  5025   0031AC  5164               	movf	??___fpclassifyf& (0+255),w,b
  5026   0031AE  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5027   0031B0  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5028   0031B2  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5029   0031B4  A4D8               	btfss	status,2,c
  5030   0031B6  EFDF  F018         	goto	u8901
  5031   0031BA  EFE1  F018         	goto	u8900
  5032   0031BE                     u8901:
  5033   0031BE  EFE7  F018         	goto	l7097
  5034   0031C2                     u8900:
  5035   0031C2                     
  5036                           ; BSR set to: 0
  5037   0031C2  0E00               	movlw	0
  5038   0031C4  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5039   0031C6  0E02               	movlw	2
  5040   0031C8  6F60               	movwf	?___fpclassifyf& (0+255),b
  5041   0031CA  EF1C  F019         	goto	l1153
  5042   0031CE                     l7097:
  5043                           
  5044                           ; BSR set to: 0
  5045   0031CE  0E00               	movlw	0
  5046   0031D0  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5047   0031D2  0E03               	movlw	3
  5048   0031D4  6F60               	movwf	?___fpclassifyf& (0+255),b
  5049   0031D6  EF1C  F019         	goto	l1153
  5050   0031DA                     l7101:
  5051                           
  5052                           ; BSR set to: 0
  5053   0031DA  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5054   0031DC  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5055   0031DE  A4D8               	btfss	status,2,c
  5056   0031E0  EFF4  F018         	goto	u8911
  5057   0031E4  EFF6  F018         	goto	u8910
  5058   0031E8                     u8911:
  5059   0031E8  EF18  F019         	goto	l7107
  5060   0031EC                     u8910:
  5061   0031EC                     
  5062                           ; BSR set to: 0
  5063   0031EC  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5064   0031F0  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5065   0031F4  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5066   0031F8  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5067   0031FC  0E09               	movlw	9
  5068   0031FE                     u8925:
  5069   0031FE  90D8               	bcf	status,0,c
  5070   003200  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5071   003202  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5072   003204  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5073   003206  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5074   003208  2EE8               	decfsz	wreg,f,c
  5075   00320A  EFFF  F018         	goto	u8925
  5076   00320E  5164               	movf	??___fpclassifyf& (0+255),w,b
  5077   003210  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5078   003212  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5079   003214  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5080   003216  B4D8               	btfsc	status,2,c
  5081   003218  EF10  F019         	goto	u8931
  5082   00321C  EF13  F019         	goto	u8930
  5083   003220                     u8931:
  5084   003220  0E01               	movlw	1
  5085   003222  EF14  F019         	goto	u8940
  5086   003226                     u8930:
  5087   003226  0E00               	movlw	0
  5088   003228                     u8940:
  5089   003228  6F60               	movwf	?___fpclassifyf& (0+255),b
  5090   00322A  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5091   00322C  EF1C  F019         	goto	l1153
  5092   003230                     l7107:
  5093                           
  5094                           ; BSR set to: 0
  5095   003230  0E00               	movlw	0
  5096   003232  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5097   003234  0E04               	movlw	4
  5098   003236  6F60               	movwf	?___fpclassifyf& (0+255),b
  5099   003238                     l1153:
  5100                           
  5101                           ; BSR set to: 0
  5102   003238  0012               	return		;funcret
  5103   00323A                     __end_of___fpclassifyf:
  5104                           	callstack 0
  5105                           
  5106 ;; *************** function ___flsub *****************
  5107 ;; Defined at:
  5108 ;;		line 245 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcadd.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  b               4   39[BANK0 ] int 
  5111 ;;  a               4   43[BANK0 ] int 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  4   39[BANK0 ] int 
  5116 ;; Registers used:
  5117 ;;		wreg, status,2, status,0, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5123 ;;      Params:         0       8       0       0
  5124 ;;      Locals:         0       0       0       0
  5125 ;;      Temps:          0       0       0       0
  5126 ;;      Totals:         0       8       0       0
  5127 ;;Total ram usage:        8 bytes
  5128 ;; Hardware stack levels used: 1
  5129 ;; Hardware stack levels required when called: 4
  5130 ;; This function calls:
  5131 ;;		___fladd
  5132 ;; This function is called by:
  5133 ;;		_efgtoa
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text15
  5138   003C06                     __ptext15:
  5139                           	callstack 0
  5140   003C06                     ___flsub:
  5141                           	callstack 22
  5142   003C06  0E00               	movlw	0
  5143   003C08  0100               	movlb	0	; () banked
  5144   003C0A  1B8B               	xorwf	___flsub@a& (0+255),f,b
  5145   003C0C  0E00               	movlw	0
  5146   003C0E  1B8C               	xorwf	(___flsub@a+1)& (0+255),f,b
  5147   003C10  0E00               	movlw	0
  5148   003C12  1B8D               	xorwf	(___flsub@a+2)& (0+255),f,b
  5149   003C14  0E80               	movlw	128
  5150   003C16  1B8E               	xorwf	(___flsub@a+3)& (0+255),f,b
  5151   003C18                     
  5152                           ; BSR set to: 0
  5153   003C18  C087  F060         	movff	___flsub@b,___fladd@b
  5154   003C1C  C088  F061         	movff	___flsub@b+1,___fladd@b+1
  5155   003C20  C089  F062         	movff	___flsub@b+2,___fladd@b+2
  5156   003C24  C08A  F063         	movff	___flsub@b+3,___fladd@b+3
  5157   003C28  C08B  F064         	movff	___flsub@a,___fladd@a
  5158   003C2C  C08C  F065         	movff	___flsub@a+1,___fladd@a+1
  5159   003C30  C08D  F066         	movff	___flsub@a+2,___fladd@a+2
  5160   003C34  C08E  F067         	movff	___flsub@a+3,___fladd@a+3
  5161   003C38  EC8A  F006         	call	___fladd	;wreg free
  5162   003C3C  C060  F087         	movff	?___fladd,?___flsub
  5163   003C40  C061  F088         	movff	?___fladd+1,?___flsub+1
  5164   003C44  C062  F089         	movff	?___fladd+2,?___flsub+2
  5165   003C48  C063  F08A         	movff	?___fladd+3,?___flsub+3
  5166   003C4C  0012               	return		;funcret
  5167   003C4E                     __end_of___flsub:
  5168                           	callstack 0
  5169                           
  5170 ;; *************** function ___fladd *****************
  5171 ;; Defined at:
  5172 ;;		line 10 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcadd.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  b               4    0[BANK0 ] int 
  5175 ;;  a               4    4[BANK0 ] int 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  grs             1   15[BANK0 ] unsigned char 
  5178 ;;  bexp            1   14[BANK0 ] unsigned char 
  5179 ;;  aexp            1   13[BANK0 ] unsigned char 
  5180 ;;  signs           1   12[BANK0 ] unsigned char 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  4    0[BANK0 ] unsigned char 
  5183 ;; Registers used:
  5184 ;;		wreg, status,2, status,0
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5190 ;;      Params:         0       8       0       0
  5191 ;;      Locals:         0       4       0       0
  5192 ;;      Temps:          0       4       0       0
  5193 ;;      Totals:         0      16       0       0
  5194 ;;Total ram usage:       16 bytes
  5195 ;; Hardware stack levels used: 1
  5196 ;; Hardware stack levels required when called: 3
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		___flsub
  5201 ;;		_efgtoa
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text16
  5206   000D14                     __ptext16:
  5207                           	callstack 0
  5208   000D14                     ___fladd:
  5209                           	callstack 22
  5210   000D14  0100               	movlb	0	; () banked
  5211   000D16  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5212   000D18  0B80               	andlw	128
  5213   000D1A  6F6C               	movwf	___fladd@signs& (0+255),b
  5214   000D1C  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5215   000D1E  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  5216   000D20  6F6E               	movwf	___fladd@bexp& (0+255),b
  5217   000D22                     
  5218                           ; BSR set to: 0
  5219   000D22  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5220   000D24  EF96  F006         	goto	u7881
  5221   000D28  EF98  F006         	goto	u7880
  5222   000D2C                     u7881:
  5223   000D2C  EF99  F006         	goto	l6521
  5224   000D30                     u7880:
  5225   000D30                     
  5226                           ; BSR set to: 0
  5227   000D30  816E               	bsf	___fladd@bexp& (0+255),0,b
  5228   000D32                     l6521:
  5229                           
  5230                           ; BSR set to: 0
  5231   000D32  516E               	movf	___fladd@bexp& (0+255),w,b
  5232   000D34  B4D8               	btfsc	status,2,c
  5233   000D36  EF9F  F006         	goto	u7891
  5234   000D3A  EFA1  F006         	goto	u7890
  5235   000D3E                     u7891:
  5236   000D3E  EFB5  F006         	goto	l6531
  5237   000D42                     u7890:
  5238   000D42                     
  5239                           ; BSR set to: 0
  5240   000D42  296E               	incf	___fladd@bexp& (0+255),w,b
  5241   000D44  A4D8               	btfss	status,2,c
  5242   000D46  EFA7  F006         	goto	u7901
  5243   000D4A  EFA9  F006         	goto	u7900
  5244   000D4E                     u7901:
  5245   000D4E  EFB1  F006         	goto	l6527
  5246   000D52                     u7900:
  5247   000D52                     
  5248                           ; BSR set to: 0
  5249   000D52  0E00               	movlw	0
  5250   000D54  6F60               	movwf	___fladd@b& (0+255),b
  5251   000D56  0E00               	movlw	0
  5252   000D58  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5253   000D5A  0E00               	movlw	0
  5254   000D5C  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5255   000D5E  0E00               	movlw	0
  5256   000D60  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5257   000D62                     l6527:
  5258                           
  5259                           ; BSR set to: 0
  5260   000D62  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5261   000D64                     
  5262                           ; BSR set to: 0
  5263   000D64  6B63               	clrf	(___fladd@b+3)& (0+255),b
  5264   000D66  EFBD  F006         	goto	l6533
  5265   000D6A                     l6531:
  5266                           
  5267                           ; BSR set to: 0
  5268   000D6A  0E00               	movlw	0
  5269   000D6C  6F60               	movwf	___fladd@b& (0+255),b
  5270   000D6E  0E00               	movlw	0
  5271   000D70  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5272   000D72  0E00               	movlw	0
  5273   000D74  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5274   000D76  0E00               	movlw	0
  5275   000D78  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5276   000D7A                     l6533:
  5277                           
  5278                           ; BSR set to: 0
  5279   000D7A  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5280   000D7C  0B80               	andlw	128
  5281   000D7E  6F6D               	movwf	___fladd@aexp& (0+255),b
  5282   000D80                     
  5283                           ; BSR set to: 0
  5284   000D80  516C               	movf	___fladd@signs& (0+255),w,b
  5285   000D82  196D               	xorwf	___fladd@aexp& (0+255),w,b
  5286   000D84  B4D8               	btfsc	status,2,c
  5287   000D86  EFC7  F006         	goto	u7911
  5288   000D8A  EFC9  F006         	goto	u7910
  5289   000D8E                     u7911:
  5290   000D8E  EFCA  F006         	goto	l6539
  5291   000D92                     u7910:
  5292   000D92                     
  5293                           ; BSR set to: 0
  5294   000D92  8D6C               	bsf	___fladd@signs& (0+255),6,b
  5295   000D94                     l6539:
  5296                           
  5297                           ; BSR set to: 0
  5298   000D94  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5299   000D96  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  5300   000D98  6F6D               	movwf	___fladd@aexp& (0+255),b
  5301   000D9A                     
  5302                           ; BSR set to: 0
  5303   000D9A  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
  5304   000D9C  EFD2  F006         	goto	u7921
  5305   000DA0  EFD4  F006         	goto	u7920
  5306   000DA4                     u7921:
  5307   000DA4  EFD5  F006         	goto	l6545
  5308   000DA8                     u7920:
  5309   000DA8                     
  5310                           ; BSR set to: 0
  5311   000DA8  816D               	bsf	___fladd@aexp& (0+255),0,b
  5312   000DAA                     l6545:
  5313                           
  5314                           ; BSR set to: 0
  5315   000DAA  516D               	movf	___fladd@aexp& (0+255),w,b
  5316   000DAC  B4D8               	btfsc	status,2,c
  5317   000DAE  EFDB  F006         	goto	u7931
  5318   000DB2  EFDD  F006         	goto	u7930
  5319   000DB6                     u7931:
  5320   000DB6  EFF1  F006         	goto	l6555
  5321   000DBA                     u7930:
  5322   000DBA                     
  5323                           ; BSR set to: 0
  5324   000DBA  296D               	incf	___fladd@aexp& (0+255),w,b
  5325   000DBC  A4D8               	btfss	status,2,c
  5326   000DBE  EFE3  F006         	goto	u7941
  5327   000DC2  EFE5  F006         	goto	u7940
  5328   000DC6                     u7941:
  5329   000DC6  EFED  F006         	goto	l6551
  5330   000DCA                     u7940:
  5331   000DCA                     
  5332                           ; BSR set to: 0
  5333   000DCA  0E00               	movlw	0
  5334   000DCC  6F64               	movwf	___fladd@a& (0+255),b
  5335   000DCE  0E00               	movlw	0
  5336   000DD0  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5337   000DD2  0E00               	movlw	0
  5338   000DD4  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5339   000DD6  0E00               	movlw	0
  5340   000DD8  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5341   000DDA                     l6551:
  5342                           
  5343                           ; BSR set to: 0
  5344   000DDA  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  5345   000DDC                     
  5346                           ; BSR set to: 0
  5347   000DDC  6B67               	clrf	(___fladd@a+3)& (0+255),b
  5348   000DDE  EFF9  F006         	goto	l6557
  5349   000DE2                     l6555:
  5350                           
  5351                           ; BSR set to: 0
  5352   000DE2  0E00               	movlw	0
  5353   000DE4  6F64               	movwf	___fladd@a& (0+255),b
  5354   000DE6  0E00               	movlw	0
  5355   000DE8  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5356   000DEA  0E00               	movlw	0
  5357   000DEC  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5358   000DEE  0E00               	movlw	0
  5359   000DF0  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5360   000DF2                     l6557:
  5361                           
  5362                           ; BSR set to: 0
  5363   000DF2  516E               	movf	___fladd@bexp& (0+255),w,b
  5364   000DF4  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  5365   000DF6  B0D8               	btfsc	status,0,c
  5366   000DF8  EF00  F007         	goto	u7951
  5367   000DFC  EF02  F007         	goto	u7950
  5368   000E00                     u7951:
  5369   000E00  EF29  F007         	goto	l6593
  5370   000E04                     u7950:
  5371   000E04                     
  5372                           ; BSR set to: 0
  5373   000E04  AD6C               	btfss	___fladd@signs& (0+255),6,b
  5374   000E06  EF07  F007         	goto	u7961
  5375   000E0A  EF09  F007         	goto	u7960
  5376   000E0E                     u7961:
  5377   000E0E  EF0B  F007         	goto	l6563
  5378   000E12                     u7960:
  5379   000E12                     
  5380                           ; BSR set to: 0
  5381   000E12  0E80               	movlw	128
  5382   000E14  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5383   000E16                     l6563:
  5384                           
  5385                           ; BSR set to: 0
  5386   000E16  C06E  F06F         	movff	___fladd@bexp,___fladd@grs
  5387   000E1A                     
  5388                           ; BSR set to: 0
  5389   000E1A  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5390   000E1E                     
  5391                           ; BSR set to: 0
  5392   000E1E  C06F  F06D         	movff	___fladd@grs,___fladd@aexp
  5393   000E22                     
  5394                           ; BSR set to: 0
  5395   000E22  C060  F06F         	movff	___fladd@b,___fladd@grs
  5396   000E26                     
  5397                           ; BSR set to: 0
  5398   000E26  C064  F060         	movff	___fladd@a,___fladd@b
  5399   000E2A                     
  5400                           ; BSR set to: 0
  5401   000E2A  C06F  F064         	movff	___fladd@grs,___fladd@a
  5402   000E2E                     
  5403                           ; BSR set to: 0
  5404   000E2E  C061  F06F         	movff	___fladd@b+1,___fladd@grs
  5405   000E32                     
  5406                           ; BSR set to: 0
  5407   000E32  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  5408   000E36                     
  5409                           ; BSR set to: 0
  5410   000E36  C06F  F065         	movff	___fladd@grs,___fladd@a+1
  5411   000E3A                     
  5412                           ; BSR set to: 0
  5413   000E3A  C062  F06F         	movff	___fladd@b+2,___fladd@grs
  5414   000E3E                     
  5415                           ; BSR set to: 0
  5416   000E3E  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  5417   000E42                     
  5418                           ; BSR set to: 0
  5419   000E42  C06F  F066         	movff	___fladd@grs,___fladd@a+2
  5420   000E46                     
  5421                           ; BSR set to: 0
  5422   000E46  C063  F06F         	movff	___fladd@b+3,___fladd@grs
  5423   000E4A                     
  5424                           ; BSR set to: 0
  5425   000E4A  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  5426   000E4E                     
  5427                           ; BSR set to: 0
  5428   000E4E  C06F  F067         	movff	___fladd@grs,___fladd@a+3
  5429   000E52                     l6593:
  5430                           
  5431                           ; BSR set to: 0
  5432   000E52  6B6F               	clrf	___fladd@grs& (0+255),b
  5433   000E54  516E               	movf	___fladd@bexp& (0+255),w,b
  5434   000E56  C06D  F068         	movff	___fladd@aexp,??___fladd
  5435   000E5A  6B69               	clrf	(??___fladd+1)& (0+255),b
  5436   000E5C  5F68               	subwf	??___fladd& (0+255),f,b
  5437   000E5E  0E00               	movlw	0
  5438   000E60  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  5439   000E62  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  5440   000E64  EF3D  F007         	goto	u7971
  5441   000E68  5169               	movf	(??___fladd+1)& (0+255),w,b
  5442   000E6A  E109               	bnz	u7970
  5443   000E6C  0E1A               	movlw	26
  5444   000E6E  5D68               	subwf	??___fladd& (0+255),w,b
  5445   000E70  A0D8               	btfss	status,0,c
  5446   000E72  EF3D  F007         	goto	u7971
  5447   000E76  EF3F  F007         	goto	u7970
  5448   000E7A                     u7971:
  5449   000E7A  EF76  F007         	goto	l876
  5450   000E7E                     u7970:
  5451   000E7E                     
  5452                           ; BSR set to: 0
  5453   000E7E  5160               	movf	___fladd@b& (0+255),w,b
  5454   000E80  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5455   000E82  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5456   000E84  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5457   000E86  A4D8               	btfss	status,2,c
  5458   000E88  EF48  F007         	goto	u7981
  5459   000E8C  EF4B  F007         	goto	u7980
  5460   000E90                     u7981:
  5461   000E90  0E01               	movlw	1
  5462   000E92  EF4C  F007         	goto	u7990
  5463   000E96                     u7980:
  5464   000E96  0E00               	movlw	0
  5465   000E98                     u7990:
  5466   000E98  6F6F               	movwf	___fladd@grs& (0+255),b
  5467   000E9A                     
  5468                           ; BSR set to: 0
  5469   000E9A  0E00               	movlw	0
  5470   000E9C  6F60               	movwf	___fladd@b& (0+255),b
  5471   000E9E  0E00               	movlw	0
  5472   000EA0  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5473   000EA2  0E00               	movlw	0
  5474   000EA4  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5475   000EA6  0E00               	movlw	0
  5476   000EA8  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5477   000EAA                     
  5478                           ; BSR set to: 0
  5479   000EAA  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5480   000EAE  EF7F  F007         	goto	l875
  5481   000EB2                     l877:
  5482                           
  5483                           ; BSR set to: 0
  5484   000EB2  A16F               	btfss	___fladd@grs& (0+255),0,b
  5485   000EB4  EF5E  F007         	goto	u8001
  5486   000EB8  EF60  F007         	goto	u8000
  5487   000EBC                     u8001:
  5488   000EBC  EF66  F007         	goto	l6603
  5489   000EC0                     u8000:
  5490   000EC0                     
  5491                           ; BSR set to: 0
  5492   000EC0  90D8               	bcf	status,0,c
  5493   000EC2  316F               	rrcf	___fladd@grs& (0+255),w,b
  5494   000EC4  0901               	iorlw	1
  5495   000EC6  6F6F               	movwf	___fladd@grs& (0+255),b
  5496   000EC8  EF68  F007         	goto	l6605
  5497   000ECC                     l6603:
  5498                           
  5499                           ; BSR set to: 0
  5500   000ECC  90D8               	bcf	status,0,c
  5501   000ECE  336F               	rrcf	___fladd@grs& (0+255),f,b
  5502   000ED0                     l6605:
  5503                           
  5504                           ; BSR set to: 0
  5505   000ED0  A160               	btfss	___fladd@b& (0+255),0,b
  5506   000ED2  EF6D  F007         	goto	u8011
  5507   000ED6  EF6F  F007         	goto	u8010
  5508   000EDA                     u8011:
  5509   000EDA  EF70  F007         	goto	l6609
  5510   000EDE                     u8010:
  5511   000EDE                     
  5512                           ; BSR set to: 0
  5513   000EDE  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5514   000EE0                     l6609:
  5515                           
  5516                           ; BSR set to: 0
  5517   000EE0  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5518   000EE2  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5519   000EE4  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5520   000EE6  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5521   000EE8  3360               	rrcf	___fladd@b& (0+255),f,b
  5522   000EEA                     
  5523                           ; BSR set to: 0
  5524   000EEA  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5525   000EEC                     l876:
  5526                           
  5527                           ; BSR set to: 0
  5528   000EEC  516D               	movf	___fladd@aexp& (0+255),w,b
  5529   000EEE  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  5530   000EF0  A0D8               	btfss	status,0,c
  5531   000EF2  EF7D  F007         	goto	u8021
  5532   000EF6  EF7F  F007         	goto	u8020
  5533   000EFA                     u8021:
  5534   000EFA  EF59  F007         	goto	l877
  5535   000EFE                     u8020:
  5536   000EFE                     l875:
  5537                           
  5538                           ; BSR set to: 0
  5539   000EFE  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  5540   000F00  EF84  F007         	goto	u8031
  5541   000F04  EF86  F007         	goto	u8030
  5542   000F08                     u8031:
  5543   000F08  EFC6  F007         	goto	l6637
  5544   000F0C                     u8030:
  5545   000F0C                     
  5546                           ; BSR set to: 0
  5547   000F0C  516E               	movf	___fladd@bexp& (0+255),w,b
  5548   000F0E  A4D8               	btfss	status,2,c
  5549   000F10  EF8C  F007         	goto	u8041
  5550   000F14  EF8E  F007         	goto	u8040
  5551   000F18                     u8041:
  5552   000F18  EF98  F007         	goto	l6619
  5553   000F1C                     u8040:
  5554   000F1C                     
  5555                           ; BSR set to: 0
  5556   000F1C  0E00               	movlw	0
  5557   000F1E  6F60               	movwf	?___fladd& (0+255),b
  5558   000F20  0E00               	movlw	0
  5559   000F22  6F61               	movwf	(?___fladd+1)& (0+255),b
  5560   000F24  0E00               	movlw	0
  5561   000F26  6F62               	movwf	(?___fladd+2)& (0+255),b
  5562   000F28  0E00               	movlw	0
  5563   000F2A  6F63               	movwf	(?___fladd+3)& (0+255),b
  5564   000F2C  EFE5  F008         	goto	l884
  5565   000F30                     l6619:
  5566                           
  5567                           ; BSR set to: 0
  5568   000F30  5164               	movf	___fladd@a& (0+255),w,b
  5569   000F32  2760               	addwf	___fladd@b& (0+255),f,b
  5570   000F34  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5571   000F36  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5572   000F38  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5573   000F3A  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5574   000F3C  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5575   000F3E  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5576   000F40                     
  5577                           ; BSR set to: 0
  5578   000F40  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5579   000F42  EFA5  F007         	goto	u8051
  5580   000F46  EFA7  F007         	goto	u8050
  5581   000F4A                     u8051:
  5582   000F4A  EF53  F008         	goto	l889
  5583   000F4E                     u8050:
  5584   000F4E                     
  5585                           ; BSR set to: 0
  5586   000F4E  A16F               	btfss	___fladd@grs& (0+255),0,b
  5587   000F50  EFAC  F007         	goto	u8061
  5588   000F54  EFAE  F007         	goto	u8060
  5589   000F58                     u8061:
  5590   000F58  EFB4  F007         	goto	l6627
  5591   000F5C                     u8060:
  5592   000F5C                     
  5593                           ; BSR set to: 0
  5594   000F5C  90D8               	bcf	status,0,c
  5595   000F5E  316F               	rrcf	___fladd@grs& (0+255),w,b
  5596   000F60  0901               	iorlw	1
  5597   000F62  6F6F               	movwf	___fladd@grs& (0+255),b
  5598   000F64  EFB6  F007         	goto	l6629
  5599   000F68                     l6627:
  5600                           
  5601                           ; BSR set to: 0
  5602   000F68  90D8               	bcf	status,0,c
  5603   000F6A  336F               	rrcf	___fladd@grs& (0+255),f,b
  5604   000F6C                     l6629:
  5605                           
  5606                           ; BSR set to: 0
  5607   000F6C  A160               	btfss	___fladd@b& (0+255),0,b
  5608   000F6E  EFBB  F007         	goto	u8071
  5609   000F72  EFBD  F007         	goto	u8070
  5610   000F76                     u8071:
  5611   000F76  EFBE  F007         	goto	l6633
  5612   000F7A                     u8070:
  5613   000F7A                     
  5614                           ; BSR set to: 0
  5615   000F7A  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5616   000F7C                     l6633:
  5617                           
  5618                           ; BSR set to: 0
  5619   000F7C  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5620   000F7E  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5621   000F80  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5622   000F82  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5623   000F84  3360               	rrcf	___fladd@b& (0+255),f,b
  5624   000F86                     
  5625                           ; BSR set to: 0
  5626   000F86  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5627   000F88  EF53  F008         	goto	l889
  5628   000F8C                     l6637:
  5629                           
  5630                           ; BSR set to: 0
  5631   000F8C  5164               	movf	___fladd@a& (0+255),w,b
  5632   000F8E  5D60               	subwf	___fladd@b& (0+255),w,b
  5633   000F90  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5634   000F92  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  5635   000F94  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5636   000F96  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  5637   000F98  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5638   000F9A  0A80               	xorlw	128
  5639   000F9C  6F68               	movwf	??___fladd& (0+255),b
  5640   000F9E  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5641   000FA0  0A80               	xorlw	128
  5642   000FA2  5968               	subwfb	??___fladd& (0+255),w,b
  5643   000FA4  B0D8               	btfsc	status,0,c
  5644   000FA6  EFD7  F007         	goto	u8081
  5645   000FAA  EFD9  F007         	goto	u8080
  5646   000FAE                     u8081:
  5647   000FAE  EF04  F008         	goto	l6647
  5648   000FB2                     u8080:
  5649   000FB2                     
  5650                           ; BSR set to: 0
  5651   000FB2  5160               	movf	___fladd@b& (0+255),w,b
  5652   000FB4  5D64               	subwf	___fladd@a& (0+255),w,b
  5653   000FB6  6F68               	movwf	??___fladd& (0+255),b
  5654   000FB8  5161               	movf	(___fladd@b+1)& (0+255),w,b
  5655   000FBA  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  5656   000FBC  6F69               	movwf	(??___fladd+1)& (0+255),b
  5657   000FBE  5162               	movf	(___fladd@b+2)& (0+255),w,b
  5658   000FC0  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  5659   000FC2  6F6A               	movwf	(??___fladd+2)& (0+255),b
  5660   000FC4  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5661   000FC6  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  5662   000FC8  6F6B               	movwf	(??___fladd+3)& (0+255),b
  5663   000FCA  0EFF               	movlw	255
  5664   000FCC  2568               	addwf	??___fladd& (0+255),w,b
  5665   000FCE  6F60               	movwf	___fladd@b& (0+255),b
  5666   000FD0  0EFF               	movlw	255
  5667   000FD2  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  5668   000FD4  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5669   000FD6  0EFF               	movlw	255
  5670   000FD8  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  5671   000FDA  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5672   000FDC  0EFF               	movlw	255
  5673   000FDE  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  5674   000FE0  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5675   000FE2  0E80               	movlw	128
  5676   000FE4  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5677   000FE6                     
  5678                           ; BSR set to: 0
  5679   000FE6  6D6F               	negf	___fladd@grs& (0+255),b
  5680   000FE8                     
  5681                           ; BSR set to: 0
  5682   000FE8  516F               	movf	___fladd@grs& (0+255),w,b
  5683   000FEA  A4D8               	btfss	status,2,c
  5684   000FEC  EFFA  F007         	goto	u8091
  5685   000FF0  EFFC  F007         	goto	u8090
  5686   000FF4                     u8091:
  5687   000FF4  EF0C  F008         	goto	l892
  5688   000FF8                     u8090:
  5689   000FF8                     
  5690                           ; BSR set to: 0
  5691   000FF8  0E01               	movlw	1
  5692   000FFA  2760               	addwf	___fladd@b& (0+255),f,b
  5693   000FFC  0E00               	movlw	0
  5694   000FFE  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5695   001000  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5696   001002  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5697   001004  EF0C  F008         	goto	l892
  5698   001008                     l6647:
  5699                           
  5700                           ; BSR set to: 0
  5701   001008  5164               	movf	___fladd@a& (0+255),w,b
  5702   00100A  5F60               	subwf	___fladd@b& (0+255),f,b
  5703   00100C  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5704   00100E  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  5705   001010  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5706   001012  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  5707   001014  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5708   001016  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  5709   001018                     l892:
  5710                           
  5711                           ; BSR set to: 0
  5712   001018  5160               	movf	___fladd@b& (0+255),w,b
  5713   00101A  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5714   00101C  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5715   00101E  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5716   001020  A4D8               	btfss	status,2,c
  5717   001022  EF15  F008         	goto	u8101
  5718   001026  EF17  F008         	goto	u8100
  5719   00102A                     u8101:
  5720   00102A  EF4C  F008         	goto	l6671
  5721   00102E                     u8100:
  5722   00102E                     
  5723                           ; BSR set to: 0
  5724   00102E  516F               	movf	___fladd@grs& (0+255),w,b
  5725   001030  A4D8               	btfss	status,2,c
  5726   001032  EF1D  F008         	goto	u8111
  5727   001036  EF1F  F008         	goto	u8110
  5728   00103A                     u8111:
  5729   00103A  EF4C  F008         	goto	l6671
  5730   00103E                     u8110:
  5731   00103E                     
  5732                           ; BSR set to: 0
  5733   00103E  0E00               	movlw	0
  5734   001040  6F60               	movwf	?___fladd& (0+255),b
  5735   001042  0E00               	movlw	0
  5736   001044  6F61               	movwf	(?___fladd+1)& (0+255),b
  5737   001046  0E00               	movlw	0
  5738   001048  6F62               	movwf	(?___fladd+2)& (0+255),b
  5739   00104A  0E00               	movlw	0
  5740   00104C  6F63               	movwf	(?___fladd+3)& (0+255),b
  5741   00104E  EFE5  F008         	goto	l884
  5742   001052                     l6655:
  5743                           
  5744                           ; BSR set to: 0
  5745   001052  90D8               	bcf	status,0,c
  5746   001054  3760               	rlcf	___fladd@b& (0+255),f,b
  5747   001056  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  5748   001058  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  5749   00105A  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  5750   00105C                     
  5751                           ; BSR set to: 0
  5752   00105C  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5753   00105E  EF33  F008         	goto	u8121
  5754   001062  EF35  F008         	goto	u8120
  5755   001066                     u8121:
  5756   001066  EF36  F008         	goto	l6661
  5757   00106A                     u8120:
  5758   00106A                     
  5759                           ; BSR set to: 0
  5760   00106A  8160               	bsf	___fladd@b& (0+255),0,b
  5761   00106C                     l6661:
  5762                           
  5763                           ; BSR set to: 0
  5764   00106C  A16F               	btfss	___fladd@grs& (0+255),0,b
  5765   00106E  EF3B  F008         	goto	u8131
  5766   001072  EF3D  F008         	goto	u8130
  5767   001076                     u8131:
  5768   001076  EF41  F008         	goto	l6665
  5769   00107A                     u8130:
  5770   00107A                     
  5771                           ; BSR set to: 0
  5772   00107A  80D8               	bsf	status,0,c
  5773   00107C  376F               	rlcf	___fladd@grs& (0+255),f,b
  5774   00107E  EF43  F008         	goto	l6667
  5775   001082                     l6665:
  5776                           
  5777                           ; BSR set to: 0
  5778   001082  90D8               	bcf	status,0,c
  5779   001084  376F               	rlcf	___fladd@grs& (0+255),f,b
  5780   001086                     l6667:
  5781                           
  5782                           ; BSR set to: 0
  5783   001086  516E               	movf	___fladd@bexp& (0+255),w,b
  5784   001088  B4D8               	btfsc	status,2,c
  5785   00108A  EF49  F008         	goto	u8141
  5786   00108E  EF4B  F008         	goto	u8140
  5787   001092                     u8141:
  5788   001092  EF4C  F008         	goto	l6671
  5789   001096                     u8140:
  5790   001096                     
  5791                           ; BSR set to: 0
  5792   001096  076E               	decf	___fladd@bexp& (0+255),f,b
  5793   001098                     l6671:
  5794                           
  5795                           ; BSR set to: 0
  5796   001098  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5797   00109A  EF51  F008         	goto	u8151
  5798   00109E  EF53  F008         	goto	u8150
  5799   0010A2                     u8151:
  5800   0010A2  EF29  F008         	goto	l6655
  5801   0010A6                     u8150:
  5802   0010A6                     l889:
  5803                           
  5804                           ; BSR set to: 0
  5805   0010A6  6B6D               	clrf	___fladd@aexp& (0+255),b
  5806   0010A8  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5807   0010AA  EF59  F008         	goto	u8161
  5808   0010AE  EF5B  F008         	goto	u8160
  5809   0010B2                     u8161:
  5810   0010B2  EF73  F008         	goto	l901
  5811   0010B6                     u8160:
  5812   0010B6                     
  5813                           ; BSR set to: 0
  5814   0010B6  C06F  F068         	movff	___fladd@grs,??___fladd
  5815   0010BA  0E7F               	movlw	127
  5816   0010BC  1768               	andwf	??___fladd& (0+255),f,b
  5817   0010BE  B4D8               	btfsc	status,2,c
  5818   0010C0  EF64  F008         	goto	u8171
  5819   0010C4  EF66  F008         	goto	u8170
  5820   0010C8                     u8171:
  5821   0010C8  EF6A  F008         	goto	l902
  5822   0010CC                     u8170:
  5823   0010CC                     l6675:
  5824                           
  5825                           ; BSR set to: 0
  5826   0010CC  0E01               	movlw	1
  5827   0010CE  6F6D               	movwf	___fladd@aexp& (0+255),b
  5828   0010D0  EF73  F008         	goto	l901
  5829   0010D4                     l902:
  5830                           
  5831                           ; BSR set to: 0
  5832   0010D4  A160               	btfss	___fladd@b& (0+255),0,b
  5833   0010D6  EF6F  F008         	goto	u8181
  5834   0010DA  EF71  F008         	goto	u8180
  5835   0010DE                     u8181:
  5836   0010DE  EF73  F008         	goto	l901
  5837   0010E2                     u8180:
  5838   0010E2  EF66  F008         	goto	l6675
  5839   0010E6                     l901:
  5840                           
  5841                           ; BSR set to: 0
  5842   0010E6  516D               	movf	___fladd@aexp& (0+255),w,b
  5843   0010E8  B4D8               	btfsc	status,2,c
  5844   0010EA  EF79  F008         	goto	u8191
  5845   0010EE  EF7B  F008         	goto	u8190
  5846   0010F2                     u8191:
  5847   0010F2  EFA6  F008         	goto	l6687
  5848   0010F6                     u8190:
  5849   0010F6                     
  5850                           ; BSR set to: 0
  5851   0010F6  0E01               	movlw	1
  5852   0010F8  2760               	addwf	___fladd@b& (0+255),f,b
  5853   0010FA  0E00               	movlw	0
  5854   0010FC  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5855   0010FE  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5856   001100  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5857   001102                     
  5858                           ; BSR set to: 0
  5859   001102  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5860   001104  EF86  F008         	goto	u8201
  5861   001108  EF88  F008         	goto	u8200
  5862   00110C                     u8201:
  5863   00110C  EFA6  F008         	goto	l6687
  5864   001110                     u8200:
  5865   001110                     
  5866                           ; BSR set to: 0
  5867   001110  C060  F068         	movff	___fladd@b,??___fladd
  5868   001114  C061  F069         	movff	___fladd@b+1,??___fladd+1
  5869   001118  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  5870   00111C  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  5871   001120  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  5872   001122  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  5873   001124  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  5874   001126  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  5875   001128  3368               	rrcf	??___fladd& (0+255),f,b
  5876   00112A  C068  F060         	movff	??___fladd,___fladd@b
  5877   00112E  C069  F061         	movff	??___fladd+1,___fladd@b+1
  5878   001132  C06A  F062         	movff	??___fladd+2,___fladd@b+2
  5879   001136  C06B  F063         	movff	??___fladd+3,___fladd@b+3
  5880   00113A  296E               	incf	___fladd@bexp& (0+255),w,b
  5881   00113C  B4D8               	btfsc	status,2,c
  5882   00113E  EFA3  F008         	goto	u8211
  5883   001142  EFA5  F008         	goto	u8210
  5884   001146                     u8211:
  5885   001146  EFA6  F008         	goto	l6687
  5886   00114A                     u8210:
  5887   00114A                     
  5888                           ; BSR set to: 0
  5889   00114A  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5890   00114C                     l6687:
  5891                           
  5892                           ; BSR set to: 0
  5893   00114C  296E               	incf	___fladd@bexp& (0+255),w,b
  5894   00114E  B4D8               	btfsc	status,2,c
  5895   001150  EFAC  F008         	goto	u8221
  5896   001154  EFAE  F008         	goto	u8220
  5897   001158                     u8221:
  5898   001158  EFB6  F008         	goto	l6691
  5899   00115C                     u8220:
  5900   00115C                     
  5901                           ; BSR set to: 0
  5902   00115C  516E               	movf	___fladd@bexp& (0+255),w,b
  5903   00115E  A4D8               	btfss	status,2,c
  5904   001160  EFB4  F008         	goto	u8231
  5905   001164  EFB6  F008         	goto	u8230
  5906   001168                     u8231:
  5907   001168  EFC7  F008         	goto	l908
  5908   00116C                     u8230:
  5909   00116C                     l6691:
  5910                           
  5911                           ; BSR set to: 0
  5912   00116C  0E00               	movlw	0
  5913   00116E  6F60               	movwf	___fladd@b& (0+255),b
  5914   001170  0E00               	movlw	0
  5915   001172  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5916   001174  0E00               	movlw	0
  5917   001176  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5918   001178  0E00               	movlw	0
  5919   00117A  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5920   00117C  516E               	movf	___fladd@bexp& (0+255),w,b
  5921   00117E  A4D8               	btfss	status,2,c
  5922   001180  EFC4  F008         	goto	u8241
  5923   001184  EFC6  F008         	goto	u8240
  5924   001188                     u8241:
  5925   001188  EFC7  F008         	goto	l908
  5926   00118C                     u8240:
  5927   00118C                     
  5928                           ; BSR set to: 0
  5929   00118C  6B6C               	clrf	___fladd@signs& (0+255),b
  5930   00118E                     l908:
  5931                           
  5932                           ; BSR set to: 0
  5933   00118E  A16E               	btfss	___fladd@bexp& (0+255),0,b
  5934   001190  EFCC  F008         	goto	u8251
  5935   001194  EFCE  F008         	goto	u8250
  5936   001198                     u8251:
  5937   001198  EFD1  F008         	goto	l6697
  5938   00119C                     u8250:
  5939   00119C                     
  5940                           ; BSR set to: 0
  5941   00119C  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5942   00119E  EFD2  F008         	goto	l6699
  5943   0011A2                     l6697:
  5944                           
  5945                           ; BSR set to: 0
  5946   0011A2  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  5947   0011A4                     l6699:
  5948                           
  5949                           ; BSR set to: 0
  5950   0011A4  90D8               	bcf	status,0,c
  5951   0011A6  316E               	rrcf	___fladd@bexp& (0+255),w,b
  5952   0011A8  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5953   0011AA                     
  5954                           ; BSR set to: 0
  5955   0011AA  AF6C               	btfss	___fladd@signs& (0+255),7,b
  5956   0011AC  EFDA  F008         	goto	u8261
  5957   0011B0  EFDC  F008         	goto	u8260
  5958   0011B4                     u8261:
  5959   0011B4  EFDD  F008         	goto	l6705
  5960   0011B8                     u8260:
  5961   0011B8                     
  5962                           ; BSR set to: 0
  5963   0011B8  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  5964   0011BA                     l6705:
  5965                           
  5966                           ; BSR set to: 0
  5967   0011BA  C060  F060         	movff	___fladd@b,?___fladd
  5968   0011BE  C061  F061         	movff	___fladd@b+1,?___fladd+1
  5969   0011C2  C062  F062         	movff	___fladd@b+2,?___fladd+2
  5970   0011C6  C063  F063         	movff	___fladd@b+3,?___fladd+3
  5971   0011CA                     l884:
  5972                           
  5973                           ; BSR set to: 0
  5974   0011CA  0012               	return		;funcret
  5975   0011CC                     __end_of___fladd:
  5976                           	callstack 0
  5977                           
  5978 ;; *************** function ___flneg *****************
  5979 ;; Defined at:
  5980 ;;		line 15 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/flneg.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  f1              4    0[BANK0 ] unsigned char 
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  4    0[BANK0 ] unsigned char 
  5987 ;; Registers used:
  5988 ;;		wreg, status,2, status,0
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5994 ;;      Params:         0       4       0       0
  5995 ;;      Locals:         0       0       0       0
  5996 ;;      Temps:          0       0       0       0
  5997 ;;      Totals:         0       4       0       0
  5998 ;;Total ram usage:        4 bytes
  5999 ;; Hardware stack levels used: 1
  6000 ;; Hardware stack levels required when called: 3
  6001 ;; This function calls:
  6002 ;;		Nothing
  6003 ;; This function is called by:
  6004 ;;		_efgtoa
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text17
  6009   003CCE                     __ptext17:
  6010                           	callstack 0
  6011   003CCE                     ___flneg:
  6012                           	callstack 23
  6013   003CCE  0100               	movlb	0	; () banked
  6014   003CD0  5160               	movf	___flneg@f1& (0+255),w,b
  6015   003CD2  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  6016   003CD4  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  6017   003CD6  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  6018   003CD8  B4D8               	btfsc	status,2,c
  6019   003CDA  EF71  F01E         	goto	u8781
  6020   003CDE  EF73  F01E         	goto	u8780
  6021   003CE2                     u8781:
  6022   003CE2  EF7B  F01E         	goto	l7029
  6023   003CE6                     u8780:
  6024   003CE6                     
  6025                           ; BSR set to: 0
  6026   003CE6  0E00               	movlw	0
  6027   003CE8  1B60               	xorwf	___flneg@f1& (0+255),f,b
  6028   003CEA  0E00               	movlw	0
  6029   003CEC  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  6030   003CEE  0E00               	movlw	0
  6031   003CF0  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  6032   003CF2  0E80               	movlw	128
  6033   003CF4  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6034   003CF6                     l7029:
  6035                           
  6036                           ; BSR set to: 0
  6037   003CF6  C060  F060         	movff	___flneg@f1,?___flneg
  6038   003CFA  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  6039   003CFE  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  6040   003D02  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  6041   003D06                     
  6042                           ; BSR set to: 0
  6043   003D06  0012               	return		;funcret
  6044   003D08                     __end_of___flneg:
  6045                           	callstack 0
  6046                           
  6047 ;; *************** function ___flge *****************
  6048 ;; Defined at:
  6049 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/flge.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  ff1             4   39[BANK0 ] unsigned char 
  6052 ;;  ff2             4   43[BANK0 ] unsigned char 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;		None
  6055 ;; Return value:  Size  Location     Type
  6056 ;;		None               void
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6064 ;;      Params:         0       8       0       0
  6065 ;;      Locals:         0       0       0       0
  6066 ;;      Temps:          0       4       0       0
  6067 ;;      Totals:         0      12       0       0
  6068 ;;Total ram usage:       12 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 3
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_efgtoa
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text18
  6079   002F2E                     __ptext18:
  6080                           	callstack 0
  6081   002F2E                     ___flge:
  6082                           	callstack 23
  6083   002F2E  0E00               	movlw	0
  6084   002F30  0100               	movlb	0	; () banked
  6085   002F32  1587               	andwf	___flge@ff1& (0+255),w,b
  6086   002F34  6F8F               	movwf	??___flge& (0+255),b
  6087   002F36  0E00               	movlw	0
  6088   002F38  1588               	andwf	(___flge@ff1+1)& (0+255),w,b
  6089   002F3A  6F90               	movwf	(??___flge+1)& (0+255),b
  6090   002F3C  0E80               	movlw	128
  6091   002F3E  1589               	andwf	(___flge@ff1+2)& (0+255),w,b
  6092   002F40  6F91               	movwf	(??___flge+2)& (0+255),b
  6093   002F42  0E7F               	movlw	127
  6094   002F44  158A               	andwf	(___flge@ff1+3)& (0+255),w,b
  6095   002F46  6F92               	movwf	(??___flge+3)& (0+255),b
  6096   002F48  518F               	movf	??___flge& (0+255),w,b
  6097   002F4A  1190               	iorwf	(??___flge+1)& (0+255),w,b
  6098   002F4C  1191               	iorwf	(??___flge+2)& (0+255),w,b
  6099   002F4E  1192               	iorwf	(??___flge+3)& (0+255),w,b
  6100   002F50  A4D8               	btfss	status,2,c
  6101   002F52  EFAD  F017         	goto	u8731
  6102   002F56  EFAF  F017         	goto	u8730
  6103   002F5A                     u8731:
  6104   002F5A  EFB7  F017         	goto	l7007
  6105   002F5E                     u8730:
  6106   002F5E                     
  6107                           ; BSR set to: 0
  6108   002F5E  0E00               	movlw	0
  6109   002F60  6F87               	movwf	___flge@ff1& (0+255),b
  6110   002F62  0E00               	movlw	0
  6111   002F64  6F88               	movwf	(___flge@ff1+1)& (0+255),b
  6112   002F66  0E00               	movlw	0
  6113   002F68  6F89               	movwf	(___flge@ff1+2)& (0+255),b
  6114   002F6A  0E00               	movlw	0
  6115   002F6C  6F8A               	movwf	(___flge@ff1+3)& (0+255),b
  6116   002F6E                     l7007:
  6117                           
  6118                           ; BSR set to: 0
  6119   002F6E  0E00               	movlw	0
  6120   002F70  158B               	andwf	___flge@ff2& (0+255),w,b
  6121   002F72  6F8F               	movwf	??___flge& (0+255),b
  6122   002F74  0E00               	movlw	0
  6123   002F76  158C               	andwf	(___flge@ff2+1)& (0+255),w,b
  6124   002F78  6F90               	movwf	(??___flge+1)& (0+255),b
  6125   002F7A  0E80               	movlw	128
  6126   002F7C  158D               	andwf	(___flge@ff2+2)& (0+255),w,b
  6127   002F7E  6F91               	movwf	(??___flge+2)& (0+255),b
  6128   002F80  0E7F               	movlw	127
  6129   002F82  158E               	andwf	(___flge@ff2+3)& (0+255),w,b
  6130   002F84  6F92               	movwf	(??___flge+3)& (0+255),b
  6131   002F86  518F               	movf	??___flge& (0+255),w,b
  6132   002F88  1190               	iorwf	(??___flge+1)& (0+255),w,b
  6133   002F8A  1191               	iorwf	(??___flge+2)& (0+255),w,b
  6134   002F8C  1192               	iorwf	(??___flge+3)& (0+255),w,b
  6135   002F8E  A4D8               	btfss	status,2,c
  6136   002F90  EFCC  F017         	goto	u8741
  6137   002F94  EFCE  F017         	goto	u8740
  6138   002F98                     u8741:
  6139   002F98  EFD6  F017         	goto	l7011
  6140   002F9C                     u8740:
  6141   002F9C                     
  6142                           ; BSR set to: 0
  6143   002F9C  0E00               	movlw	0
  6144   002F9E  6F8B               	movwf	___flge@ff2& (0+255),b
  6145   002FA0  0E00               	movlw	0
  6146   002FA2  6F8C               	movwf	(___flge@ff2+1)& (0+255),b
  6147   002FA4  0E00               	movlw	0
  6148   002FA6  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
  6149   002FA8  0E00               	movlw	0
  6150   002FAA  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
  6151   002FAC                     l7011:
  6152                           
  6153                           ; BSR set to: 0
  6154   002FAC  AF8A               	btfss	(___flge@ff1+3)& (0+255),7,b
  6155   002FAE  EFDB  F017         	goto	u8751
  6156   002FB2  EFDD  F017         	goto	u8750
  6157   002FB6                     u8751:
  6158   002FB6  EFE6  F017         	goto	l7015
  6159   002FBA                     u8750:
  6160   002FBA                     
  6161                           ; BSR set to: 0
  6162   002FBA  6D87               	negf	___flge@ff1& (0+255),b
  6163   002FBC  1F88               	comf	(___flge@ff1+1)& (0+255),f,b
  6164   002FBE  B0D8               	btfsc	status,0,c
  6165   002FC0  2B88               	incf	(___flge@ff1+1)& (0+255),f,b
  6166   002FC2  1F89               	comf	(___flge@ff1+2)& (0+255),f,b
  6167   002FC4  B0D8               	btfsc	status,0,c
  6168   002FC6  2B89               	incf	(___flge@ff1+2)& (0+255),f,b
  6169   002FC8  0E80               	movlw	128
  6170   002FCA  578A               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6171   002FCC                     l7015:
  6172                           
  6173                           ; BSR set to: 0
  6174   002FCC  AF8E               	btfss	(___flge@ff2+3)& (0+255),7,b
  6175   002FCE  EFEB  F017         	goto	u8761
  6176   002FD2  EFED  F017         	goto	u8760
  6177   002FD6                     u8761:
  6178   002FD6  EFF6  F017         	goto	l612
  6179   002FDA                     u8760:
  6180   002FDA                     
  6181                           ; BSR set to: 0
  6182   002FDA  6D8B               	negf	___flge@ff2& (0+255),b
  6183   002FDC  1F8C               	comf	(___flge@ff2+1)& (0+255),f,b
  6184   002FDE  B0D8               	btfsc	status,0,c
  6185   002FE0  2B8C               	incf	(___flge@ff2+1)& (0+255),f,b
  6186   002FE2  1F8D               	comf	(___flge@ff2+2)& (0+255),f,b
  6187   002FE4  B0D8               	btfsc	status,0,c
  6188   002FE6  2B8D               	incf	(___flge@ff2+2)& (0+255),f,b
  6189   002FE8  0E80               	movlw	128
  6190   002FEA  578E               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6191   002FEC                     l612:
  6192                           
  6193                           ; BSR set to: 0
  6194   002FEC  0E00               	movlw	0
  6195   002FEE  1B87               	xorwf	___flge@ff1& (0+255),f,b
  6196   002FF0  0E00               	movlw	0
  6197   002FF2  1B88               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6198   002FF4  0E00               	movlw	0
  6199   002FF6  1B89               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6200   002FF8  0E80               	movlw	128
  6201   002FFA  1B8A               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6202   002FFC  0E00               	movlw	0
  6203   002FFE  1B8B               	xorwf	___flge@ff2& (0+255),f,b
  6204   003000  0E00               	movlw	0
  6205   003002  1B8C               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6206   003004  0E00               	movlw	0
  6207   003006  1B8D               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6208   003008  0E80               	movlw	128
  6209   00300A  1B8E               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6210   00300C  518B               	movf	___flge@ff2& (0+255),w,b
  6211   00300E  5D87               	subwf	___flge@ff1& (0+255),w,b
  6212   003010  518C               	movf	(___flge@ff2+1)& (0+255),w,b
  6213   003012  5988               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6214   003014  518D               	movf	(___flge@ff2+2)& (0+255),w,b
  6215   003016  5989               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6216   003018  518E               	movf	(___flge@ff2+3)& (0+255),w,b
  6217   00301A  598A               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6218   00301C  B0D8               	btfsc	status,0,c
  6219   00301E  EF13  F018         	goto	u8771
  6220   003022  EF15  F018         	goto	u8770
  6221   003026                     u8771:
  6222   003026  EF18  F018         	goto	l7021
  6223   00302A                     u8770:
  6224   00302A                     
  6225                           ; BSR set to: 0
  6226   00302A  90D8               	bcf	status,0,c
  6227   00302C  EF19  F018         	goto	l617
  6228   003030                     l7021:
  6229                           
  6230                           ; BSR set to: 0
  6231   003030  80D8               	bsf	status,0,c
  6232   003032                     l617:
  6233                           
  6234                           ; BSR set to: 0
  6235   003032  0012               	return		;funcret
  6236   003034                     __end_of___flge:
  6237                           	callstack 0
  6238                           
  6239 ;; *************** function ___fleq *****************
  6240 ;; Defined at:
  6241 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/fleq.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  ff1             4    0[BANK0 ] unsigned char 
  6244 ;;  ff2             4    4[BANK0 ] unsigned char 
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;		None
  6247 ;; Return value:  Size  Location     Type
  6248 ;;		None               void
  6249 ;; Registers used:
  6250 ;;		wreg, status,2, status,0
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6256 ;;      Params:         0       8       0       0
  6257 ;;      Locals:         0       0       0       0
  6258 ;;      Temps:          0       4       0       0
  6259 ;;      Totals:         0      12       0       0
  6260 ;;Total ram usage:       12 bytes
  6261 ;; Hardware stack levels used: 1
  6262 ;; Hardware stack levels required when called: 3
  6263 ;; This function calls:
  6264 ;;		Nothing
  6265 ;; This function is called by:
  6266 ;;		_efgtoa
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           	psect	text19
  6271   003496                     __ptext19:
  6272                           	callstack 0
  6273   003496                     ___fleq:
  6274                           	callstack 23
  6275   003496  0E00               	movlw	0
  6276   003498  0100               	movlb	0	; () banked
  6277   00349A  1560               	andwf	___fleq@ff1& (0+255),w,b
  6278   00349C  6F68               	movwf	??___fleq& (0+255),b
  6279   00349E  0E00               	movlw	0
  6280   0034A0  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6281   0034A2  6F69               	movwf	(??___fleq+1)& (0+255),b
  6282   0034A4  0E80               	movlw	128
  6283   0034A6  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6284   0034A8  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6285   0034AA  0E7F               	movlw	127
  6286   0034AC  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6287   0034AE  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6288   0034B0  5168               	movf	??___fleq& (0+255),w,b
  6289   0034B2  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6290   0034B4  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6291   0034B6  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6292   0034B8  A4D8               	btfss	status,2,c
  6293   0034BA  EF61  F01A         	goto	u8701
  6294   0034BE  EF63  F01A         	goto	u8700
  6295   0034C2                     u8701:
  6296   0034C2  EF6B  F01A         	goto	l6991
  6297   0034C6                     u8700:
  6298   0034C6                     
  6299                           ; BSR set to: 0
  6300   0034C6  0E00               	movlw	0
  6301   0034C8  6F60               	movwf	___fleq@ff1& (0+255),b
  6302   0034CA  0E00               	movlw	0
  6303   0034CC  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  6304   0034CE  0E00               	movlw	0
  6305   0034D0  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  6306   0034D2  0E00               	movlw	0
  6307   0034D4  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  6308   0034D6                     l6991:
  6309                           
  6310                           ; BSR set to: 0
  6311   0034D6  0E00               	movlw	0
  6312   0034D8  1564               	andwf	___fleq@ff2& (0+255),w,b
  6313   0034DA  6F68               	movwf	??___fleq& (0+255),b
  6314   0034DC  0E00               	movlw	0
  6315   0034DE  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6316   0034E0  6F69               	movwf	(??___fleq+1)& (0+255),b
  6317   0034E2  0E80               	movlw	128
  6318   0034E4  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6319   0034E6  6F6A               	movwf	(??___fleq+2)& (0+255),b
  6320   0034E8  0E7F               	movlw	127
  6321   0034EA  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6322   0034EC  6F6B               	movwf	(??___fleq+3)& (0+255),b
  6323   0034EE  5168               	movf	??___fleq& (0+255),w,b
  6324   0034F0  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  6325   0034F2  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  6326   0034F4  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  6327   0034F6  A4D8               	btfss	status,2,c
  6328   0034F8  EF80  F01A         	goto	u8711
  6329   0034FC  EF82  F01A         	goto	u8710
  6330   003500                     u8711:
  6331   003500  EF8A  F01A         	goto	l6995
  6332   003504                     u8710:
  6333   003504                     
  6334                           ; BSR set to: 0
  6335   003504  0E00               	movlw	0
  6336   003506  6F64               	movwf	___fleq@ff2& (0+255),b
  6337   003508  0E00               	movlw	0
  6338   00350A  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  6339   00350C  0E00               	movlw	0
  6340   00350E  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  6341   003510  0E00               	movlw	0
  6342   003512  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  6343   003514                     l6995:
  6344                           
  6345                           ; BSR set to: 0
  6346   003514  5164               	movf	___fleq@ff2& (0+255),w,b
  6347   003516  1960               	xorwf	___fleq@ff1& (0+255),w,b
  6348   003518  E10F               	bnz	u8720
  6349   00351A  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  6350   00351C  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6351   00351E  E10C               	bnz	u8720
  6352   003520  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  6353   003522  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6354   003524  E109               	bnz	u8720
  6355   003526  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  6356   003528  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6357   00352A  B4D8               	btfsc	status,2,c
  6358   00352C  EF9A  F01A         	goto	u8721
  6359   003530  EF9C  F01A         	goto	u8720
  6360   003534                     u8721:
  6361   003534  EF9F  F01A         	goto	l6999
  6362   003538                     u8720:
  6363   003538                     
  6364                           ; BSR set to: 0
  6365   003538  90D8               	bcf	status,0,c
  6366   00353A  EFA0  F01A         	goto	l606
  6367   00353E                     l6999:
  6368                           
  6369                           ; BSR set to: 0
  6370   00353E  80D8               	bsf	status,0,c
  6371   003540                     l606:
  6372                           
  6373                           ; BSR set to: 0
  6374   003540  0012               	return		;funcret
  6375   003542                     __end_of___fleq:
  6376                           	callstack 0
  6377                           
  6378 ;; *************** function ___fldiv *****************
  6379 ;; Defined at:
  6380 ;;		line 11 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcdiv.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;  b               4    0[BANK0 ] unsigned char 
  6383 ;;  a               4    4[BANK0 ] unsigned char 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  grs             4   19[BANK0 ] unsigned long 
  6386 ;;  rem             4   12[BANK0 ] unsigned long 
  6387 ;;  new_exp         2   17[BANK0 ] short 
  6388 ;;  aexp            1   24[BANK0 ] unsigned char 
  6389 ;;  bexp            1   23[BANK0 ] unsigned char 
  6390 ;;  sign            1   16[BANK0 ] unsigned char 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  4    0[BANK0 ] unsigned char 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, status,0
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6400 ;;      Params:         0       8       0       0
  6401 ;;      Locals:         0      13       0       0
  6402 ;;      Temps:          0       4       0       0
  6403 ;;      Totals:         0      25       0       0
  6404 ;;Total ram usage:       25 bytes
  6405 ;; Hardware stack levels used: 1
  6406 ;; Hardware stack levels required when called: 3
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_efgtoa
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text20
  6415   001E3A                     __ptext20:
  6416                           	callstack 0
  6417   001E3A                     ___fldiv:
  6418                           	callstack 23
  6419   001E3A  0100               	movlb	0	; () banked
  6420   001E3C  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6421   001E3E  0B80               	andlw	128
  6422   001E40  6F70               	movwf	___fldiv@sign& (0+255),b
  6423   001E42  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6424   001E44  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  6425   001E46  6F77               	movwf	___fldiv@bexp& (0+255),b
  6426   001E48                     
  6427                           ; BSR set to: 0
  6428   001E48  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6429   001E4A  EF29  F00F         	goto	u8281
  6430   001E4E  EF2B  F00F         	goto	u8280
  6431   001E52                     u8281:
  6432   001E52  EF2C  F00F         	goto	l6723
  6433   001E56                     u8280:
  6434   001E56                     
  6435                           ; BSR set to: 0
  6436   001E56  8177               	bsf	___fldiv@bexp& (0+255),0,b
  6437   001E58                     l6723:
  6438                           
  6439                           ; BSR set to: 0
  6440   001E58  5177               	movf	___fldiv@bexp& (0+255),w,b
  6441   001E5A  B4D8               	btfsc	status,2,c
  6442   001E5C  EF32  F00F         	goto	u8291
  6443   001E60  EF34  F00F         	goto	u8290
  6444   001E64                     u8291:
  6445   001E64  EF48  F00F         	goto	l6733
  6446   001E68                     u8290:
  6447   001E68                     
  6448                           ; BSR set to: 0
  6449   001E68  2977               	incf	___fldiv@bexp& (0+255),w,b
  6450   001E6A  A4D8               	btfss	status,2,c
  6451   001E6C  EF3A  F00F         	goto	u8301
  6452   001E70  EF3C  F00F         	goto	u8300
  6453   001E74                     u8301:
  6454   001E74  EF44  F00F         	goto	l6729
  6455   001E78                     u8300:
  6456   001E78                     
  6457                           ; BSR set to: 0
  6458   001E78  0E00               	movlw	0
  6459   001E7A  6F60               	movwf	___fldiv@b& (0+255),b
  6460   001E7C  0E00               	movlw	0
  6461   001E7E  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6462   001E80  0E00               	movlw	0
  6463   001E82  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6464   001E84  0E00               	movlw	0
  6465   001E86  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6466   001E88                     l6729:
  6467                           
  6468                           ; BSR set to: 0
  6469   001E88  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6470   001E8A                     
  6471                           ; BSR set to: 0
  6472   001E8A  6B63               	clrf	(___fldiv@b+3)& (0+255),b
  6473   001E8C  EF50  F00F         	goto	l6735
  6474   001E90                     l6733:
  6475                           
  6476                           ; BSR set to: 0
  6477   001E90  0E00               	movlw	0
  6478   001E92  6F60               	movwf	___fldiv@b& (0+255),b
  6479   001E94  0E00               	movlw	0
  6480   001E96  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6481   001E98  0E00               	movlw	0
  6482   001E9A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6483   001E9C  0E00               	movlw	0
  6484   001E9E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6485   001EA0                     l6735:
  6486                           
  6487                           ; BSR set to: 0
  6488   001EA0  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6489   001EA2  0B80               	andlw	128
  6490   001EA4  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  6491   001EA6                     
  6492                           ; BSR set to: 0
  6493   001EA6  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6494   001EA8  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  6495   001EAA  6F78               	movwf	___fldiv@aexp& (0+255),b
  6496   001EAC                     
  6497                           ; BSR set to: 0
  6498   001EAC  AF66               	btfss	(___fldiv@a+2)& (0+255),7,b
  6499   001EAE  EF5B  F00F         	goto	u8311
  6500   001EB2  EF5D  F00F         	goto	u8310
  6501   001EB6                     u8311:
  6502   001EB6  EF5E  F00F         	goto	l6743
  6503   001EBA                     u8310:
  6504   001EBA                     
  6505                           ; BSR set to: 0
  6506   001EBA  8178               	bsf	___fldiv@aexp& (0+255),0,b
  6507   001EBC                     l6743:
  6508                           
  6509                           ; BSR set to: 0
  6510   001EBC  5178               	movf	___fldiv@aexp& (0+255),w,b
  6511   001EBE  B4D8               	btfsc	status,2,c
  6512   001EC0  EF64  F00F         	goto	u8321
  6513   001EC4  EF66  F00F         	goto	u8320
  6514   001EC8                     u8321:
  6515   001EC8  EF7A  F00F         	goto	l6753
  6516   001ECC                     u8320:
  6517   001ECC                     
  6518                           ; BSR set to: 0
  6519   001ECC  2978               	incf	___fldiv@aexp& (0+255),w,b
  6520   001ECE  A4D8               	btfss	status,2,c
  6521   001ED0  EF6C  F00F         	goto	u8331
  6522   001ED4  EF6E  F00F         	goto	u8330
  6523   001ED8                     u8331:
  6524   001ED8  EF76  F00F         	goto	l6749
  6525   001EDC                     u8330:
  6526   001EDC                     
  6527                           ; BSR set to: 0
  6528   001EDC  0E00               	movlw	0
  6529   001EDE  6F64               	movwf	___fldiv@a& (0+255),b
  6530   001EE0  0E00               	movlw	0
  6531   001EE2  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6532   001EE4  0E00               	movlw	0
  6533   001EE6  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6534   001EE8  0E00               	movlw	0
  6535   001EEA  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6536   001EEC                     l6749:
  6537                           
  6538                           ; BSR set to: 0
  6539   001EEC  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  6540   001EEE                     
  6541                           ; BSR set to: 0
  6542   001EEE  6B67               	clrf	(___fldiv@a+3)& (0+255),b
  6543   001EF0  EF82  F00F         	goto	l6755
  6544   001EF4                     l6753:
  6545                           
  6546                           ; BSR set to: 0
  6547   001EF4  0E00               	movlw	0
  6548   001EF6  6F64               	movwf	___fldiv@a& (0+255),b
  6549   001EF8  0E00               	movlw	0
  6550   001EFA  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6551   001EFC  0E00               	movlw	0
  6552   001EFE  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6553   001F00  0E00               	movlw	0
  6554   001F02  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6555   001F04                     l6755:
  6556                           
  6557                           ; BSR set to: 0
  6558   001F04  5164               	movf	___fldiv@a& (0+255),w,b
  6559   001F06  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6560   001F08  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6561   001F0A  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6562   001F0C  A4D8               	btfss	status,2,c
  6563   001F0E  EF8B  F00F         	goto	u8341
  6564   001F12  EF8D  F00F         	goto	u8340
  6565   001F16                     u8341:
  6566   001F16  EFA5  F00F         	goto	l6767
  6567   001F1A                     u8340:
  6568   001F1A                     
  6569                           ; BSR set to: 0
  6570   001F1A  0E00               	movlw	0
  6571   001F1C  6F60               	movwf	___fldiv@b& (0+255),b
  6572   001F1E  0E00               	movlw	0
  6573   001F20  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6574   001F22  0E00               	movlw	0
  6575   001F24  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6576   001F26  0E00               	movlw	0
  6577   001F28  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6578   001F2A                     
  6579                           ; BSR set to: 0
  6580   001F2A  0E80               	movlw	128
  6581   001F2C  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6582   001F2E  0E7F               	movlw	127
  6583   001F30  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6584   001F32                     l6761:
  6585                           
  6586                           ; BSR set to: 0
  6587   001F32  5170               	movf	___fldiv@sign& (0+255),w,b
  6588   001F34  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6589   001F36                     
  6590                           ; BSR set to: 0
  6591   001F36  C060  F060         	movff	___fldiv@b,?___fldiv
  6592   001F3A  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  6593   001F3E  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  6594   001F42  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  6595   001F46  EFE5  F010         	goto	l929
  6596   001F4A                     l6767:
  6597                           
  6598                           ; BSR set to: 0
  6599   001F4A  5177               	movf	___fldiv@bexp& (0+255),w,b
  6600   001F4C  A4D8               	btfss	status,2,c
  6601   001F4E  EFAB  F00F         	goto	u8351
  6602   001F52  EFAD  F00F         	goto	u8350
  6603   001F56                     u8351:
  6604   001F56  EFB7  F00F         	goto	l6775
  6605   001F5A                     u8350:
  6606   001F5A                     
  6607                           ; BSR set to: 0
  6608   001F5A  0E00               	movlw	0
  6609   001F5C  6F60               	movwf	?___fldiv& (0+255),b
  6610   001F5E  0E00               	movlw	0
  6611   001F60  6F61               	movwf	(?___fldiv+1)& (0+255),b
  6612   001F62  0E00               	movlw	0
  6613   001F64  6F62               	movwf	(?___fldiv+2)& (0+255),b
  6614   001F66  0E00               	movlw	0
  6615   001F68  6F63               	movwf	(?___fldiv+3)& (0+255),b
  6616   001F6A  EFE5  F010         	goto	l929
  6617   001F6E                     l6775:
  6618                           
  6619                           ; BSR set to: 0
  6620   001F6E  5178               	movf	___fldiv@aexp& (0+255),w,b
  6621   001F70  C077  F068         	movff	___fldiv@bexp,??___fldiv
  6622   001F74  6B69               	clrf	(??___fldiv+1)& (0+255),b
  6623   001F76  5F68               	subwf	??___fldiv& (0+255),f,b
  6624   001F78  0E00               	movlw	0
  6625   001F7A  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  6626   001F7C  0E7F               	movlw	127
  6627   001F7E  2568               	addwf	??___fldiv& (0+255),w,b
  6628   001F80  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6629   001F82  0E00               	movlw	0
  6630   001F84  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  6631   001F86  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6632   001F88                     
  6633                           ; BSR set to: 0
  6634   001F88  C060  F06C         	movff	___fldiv@b,___fldiv@rem
  6635   001F8C  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
  6636   001F90  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
  6637   001F94  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
  6638   001F98                     
  6639                           ; BSR set to: 0
  6640   001F98  0E00               	movlw	0
  6641   001F9A  6F60               	movwf	___fldiv@b& (0+255),b
  6642   001F9C  0E00               	movlw	0
  6643   001F9E  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6644   001FA0  0E00               	movlw	0
  6645   001FA2  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6646   001FA4  0E00               	movlw	0
  6647   001FA6  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6648   001FA8                     
  6649                           ; BSR set to: 0
  6650   001FA8  0E00               	movlw	0
  6651   001FAA  6F73               	movwf	___fldiv@grs& (0+255),b
  6652   001FAC  0E00               	movlw	0
  6653   001FAE  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  6654   001FB0  0E00               	movlw	0
  6655   001FB2  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  6656   001FB4  0E00               	movlw	0
  6657   001FB6  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  6658   001FB8                     
  6659                           ; BSR set to: 0
  6660   001FB8  6B78               	clrf	___fldiv@aexp& (0+255),b
  6661   001FBA  EF17  F010         	goto	l931
  6662   001FBE                     l6785:
  6663                           
  6664                           ; BSR set to: 0
  6665   001FBE  5178               	movf	___fldiv@aexp& (0+255),w,b
  6666   001FC0  B4D8               	btfsc	status,2,c
  6667   001FC2  EFE5  F00F         	goto	u8361
  6668   001FC6  EFE7  F00F         	goto	u8360
  6669   001FCA                     u8361:
  6670   001FCA  EFFE  F00F         	goto	l6793
  6671   001FCE                     u8360:
  6672   001FCE                     
  6673                           ; BSR set to: 0
  6674   001FCE  90D8               	bcf	status,0,c
  6675   001FD0  376C               	rlcf	___fldiv@rem& (0+255),f,b
  6676   001FD2  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6677   001FD4  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6678   001FD6  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6679   001FD8  90D8               	bcf	status,0,c
  6680   001FDA  3760               	rlcf	___fldiv@b& (0+255),f,b
  6681   001FDC  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6682   001FDE  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6683   001FE0  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6684   001FE2                     
  6685                           ; BSR set to: 0
  6686   001FE2  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6687   001FE4  EFF6  F00F         	goto	u8371
  6688   001FE8  EFF8  F00F         	goto	u8370
  6689   001FEC                     u8371:
  6690   001FEC  EFF9  F00F         	goto	l934
  6691   001FF0                     u8370:
  6692   001FF0                     
  6693                           ; BSR set to: 0
  6694   001FF0  8160               	bsf	___fldiv@b& (0+255),0,b
  6695   001FF2                     l934:
  6696                           
  6697                           ; BSR set to: 0
  6698   001FF2  90D8               	bcf	status,0,c
  6699   001FF4  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6700   001FF6  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6701   001FF8  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6702   001FFA  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6703   001FFC                     l6793:
  6704                           
  6705                           ; BSR set to: 0
  6706   001FFC  5164               	movf	___fldiv@a& (0+255),w,b
  6707   001FFE  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  6708   002000  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6709   002002  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6710   002004  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6711   002006  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6712   002008  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6713   00200A  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6714   00200C  A0D8               	btfss	status,0,c
  6715   00200E  EF0B  F010         	goto	u8381
  6716   002012  EF0D  F010         	goto	u8380
  6717   002016                     u8381:
  6718   002016  EF16  F010         	goto	l6799
  6719   00201A                     u8380:
  6720   00201A                     
  6721                           ; BSR set to: 0
  6722   00201A  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6723   00201C                     
  6724                           ; BSR set to: 0
  6725   00201C  5164               	movf	___fldiv@a& (0+255),w,b
  6726   00201E  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  6727   002020  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6728   002022  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6729   002024  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6730   002026  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6731   002028  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6732   00202A  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6733   00202C                     l6799:
  6734                           
  6735                           ; BSR set to: 0
  6736   00202C  2B78               	incf	___fldiv@aexp& (0+255),f,b
  6737   00202E                     l931:
  6738                           
  6739                           ; BSR set to: 0
  6740   00202E  0E19               	movlw	25
  6741   002030  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  6742   002032  EF1D  F010         	goto	u8391
  6743   002036  EF1F  F010         	goto	u8390
  6744   00203A                     u8391:
  6745   00203A  EFDF  F00F         	goto	l6785
  6746   00203E                     u8390:
  6747   00203E                     
  6748                           ; BSR set to: 0
  6749   00203E  516C               	movf	___fldiv@rem& (0+255),w,b
  6750   002040  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6751   002042  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6752   002044  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6753   002046  B4D8               	btfsc	status,2,c
  6754   002048  EF28  F010         	goto	u8401
  6755   00204C  EF2A  F010         	goto	u8400
  6756   002050                     u8401:
  6757   002050  EF42  F010         	goto	l6811
  6758   002054                     u8400:
  6759   002054                     
  6760                           ; BSR set to: 0
  6761   002054  8173               	bsf	___fldiv@grs& (0+255),0,b
  6762   002056  EF42  F010         	goto	l6811
  6763   00205A                     l6805:
  6764                           
  6765                           ; BSR set to: 0
  6766   00205A  90D8               	bcf	status,0,c
  6767   00205C  3760               	rlcf	___fldiv@b& (0+255),f,b
  6768   00205E  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6769   002060  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6770   002062  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6771   002064                     
  6772                           ; BSR set to: 0
  6773   002064  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6774   002066  EF37  F010         	goto	u8411
  6775   00206A  EF39  F010         	goto	u8410
  6776   00206E                     u8411:
  6777   00206E  EF3A  F010         	goto	l940
  6778   002072                     u8410:
  6779   002072                     
  6780                           ; BSR set to: 0
  6781   002072  8160               	bsf	___fldiv@b& (0+255),0,b
  6782   002074                     l940:
  6783                           
  6784                           ; BSR set to: 0
  6785   002074  90D8               	bcf	status,0,c
  6786   002076  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6787   002078  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6788   00207A  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6789   00207C  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6790   00207E  0771               	decf	___fldiv@new_exp& (0+255),f,b
  6791   002080  A0D8               	btfss	status,0,c
  6792   002082  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6793   002084                     l6811:
  6794                           
  6795                           ; BSR set to: 0
  6796   002084  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6797   002086  EF47  F010         	goto	u8421
  6798   00208A  EF49  F010         	goto	u8420
  6799   00208E                     u8421:
  6800   00208E  EF2D  F010         	goto	l6805
  6801   002092                     u8420:
  6802   002092                     
  6803                           ; BSR set to: 0
  6804   002092  6B78               	clrf	___fldiv@aexp& (0+255),b
  6805   002094  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6806   002096  EF4F  F010         	goto	u8431
  6807   00209A  EF51  F010         	goto	u8430
  6808   00209E                     u8431:
  6809   00209E  EF75  F010         	goto	l942
  6810   0020A2                     u8430:
  6811   0020A2                     
  6812                           ; BSR set to: 0
  6813   0020A2  0EFF               	movlw	255
  6814   0020A4  1573               	andwf	___fldiv@grs& (0+255),w,b
  6815   0020A6  6F68               	movwf	??___fldiv& (0+255),b
  6816   0020A8  0EFF               	movlw	255
  6817   0020AA  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6818   0020AC  6F69               	movwf	(??___fldiv+1)& (0+255),b
  6819   0020AE  0EFF               	movlw	255
  6820   0020B0  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6821   0020B2  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  6822   0020B4  0E7F               	movlw	127
  6823   0020B6  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6824   0020B8  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  6825   0020BA  5168               	movf	??___fldiv& (0+255),w,b
  6826   0020BC  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  6827   0020BE  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  6828   0020C0  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  6829   0020C2  B4D8               	btfsc	status,2,c
  6830   0020C4  EF66  F010         	goto	u8441
  6831   0020C8  EF68  F010         	goto	u8440
  6832   0020CC                     u8441:
  6833   0020CC  EF6C  F010         	goto	l943
  6834   0020D0                     u8440:
  6835   0020D0                     l6815:
  6836                           
  6837                           ; BSR set to: 0
  6838   0020D0  0E01               	movlw	1
  6839   0020D2  6F78               	movwf	___fldiv@aexp& (0+255),b
  6840   0020D4  EF75  F010         	goto	l942
  6841   0020D8                     l943:
  6842                           
  6843                           ; BSR set to: 0
  6844   0020D8  A160               	btfss	___fldiv@b& (0+255),0,b
  6845   0020DA  EF71  F010         	goto	u8451
  6846   0020DE  EF73  F010         	goto	u8450
  6847   0020E2                     u8451:
  6848   0020E2  EF75  F010         	goto	l942
  6849   0020E6                     u8450:
  6850   0020E6  EF68  F010         	goto	l6815
  6851   0020EA                     l942:
  6852                           
  6853                           ; BSR set to: 0
  6854   0020EA  5178               	movf	___fldiv@aexp& (0+255),w,b
  6855   0020EC  B4D8               	btfsc	status,2,c
  6856   0020EE  EF7B  F010         	goto	u8461
  6857   0020F2  EF7D  F010         	goto	u8460
  6858   0020F6                     u8461:
  6859   0020F6  EFA1  F010         	goto	l6827
  6860   0020FA                     u8460:
  6861   0020FA                     
  6862                           ; BSR set to: 0
  6863   0020FA  0E01               	movlw	1
  6864   0020FC  2760               	addwf	___fldiv@b& (0+255),f,b
  6865   0020FE  0E00               	movlw	0
  6866   002100  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  6867   002102  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  6868   002104  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  6869   002106                     
  6870                           ; BSR set to: 0
  6871   002106  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  6872   002108  EF88  F010         	goto	u8471
  6873   00210C  EF8A  F010         	goto	u8470
  6874   002110                     u8471:
  6875   002110  EFA1  F010         	goto	l6827
  6876   002114                     u8470:
  6877   002114                     
  6878                           ; BSR set to: 0
  6879   002114  C060  F068         	movff	___fldiv@b,??___fldiv
  6880   002118  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
  6881   00211C  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
  6882   002120  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
  6883   002124  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  6884   002126  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  6885   002128  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  6886   00212A  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  6887   00212C  3368               	rrcf	??___fldiv& (0+255),f,b
  6888   00212E  C068  F060         	movff	??___fldiv,___fldiv@b
  6889   002132  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
  6890   002136  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
  6891   00213A  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
  6892   00213E                     
  6893                           ; BSR set to: 0
  6894   00213E  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  6895   002140  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6896   002142                     l6827:
  6897                           
  6898                           ; BSR set to: 0
  6899   002142  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6900   002144  EFAC  F010         	goto	u8481
  6901   002148  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6902   00214A  E108               	bnz	u8480
  6903   00214C  2971               	incf	___fldiv@new_exp& (0+255),w,b
  6904   00214E  A0D8               	btfss	status,0,c
  6905   002150  EFAC  F010         	goto	u8481
  6906   002154  EFAE  F010         	goto	u8480
  6907   002158                     u8481:
  6908   002158  EFB9  F010         	goto	l6831
  6909   00215C                     u8480:
  6910   00215C                     
  6911                           ; BSR set to: 0
  6912   00215C  0E00               	movlw	0
  6913   00215E  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6914   002160  6971               	setf	___fldiv@new_exp& (0+255),b
  6915   002162  0E00               	movlw	0
  6916   002164  6F60               	movwf	___fldiv@b& (0+255),b
  6917   002166  0E00               	movlw	0
  6918   002168  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6919   00216A  0E00               	movlw	0
  6920   00216C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6921   00216E  0E00               	movlw	0
  6922   002170  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6923   002172                     l6831:
  6924                           
  6925                           ; BSR set to: 0
  6926   002172  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6927   002174  EFC6  F010         	goto	u8490
  6928   002178  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6929   00217A  E106               	bnz	u8491
  6930   00217C  0571               	decf	___fldiv@new_exp& (0+255),w,b
  6931   00217E  B0D8               	btfsc	status,0,c
  6932   002180  EFC4  F010         	goto	u8491
  6933   002184  EFC6  F010         	goto	u8490
  6934   002188                     u8491:
  6935   002188  EFD3  F010         	goto	l6837
  6936   00218C                     u8490:
  6937   00218C                     
  6938                           ; BSR set to: 0
  6939   00218C  0E00               	movlw	0
  6940   00218E  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6941   002190  0E00               	movlw	0
  6942   002192  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6943   002194  0E00               	movlw	0
  6944   002196  6F60               	movwf	___fldiv@b& (0+255),b
  6945   002198  0E00               	movlw	0
  6946   00219A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6947   00219C  0E00               	movlw	0
  6948   00219E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6949   0021A0  0E00               	movlw	0
  6950   0021A2  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6951   0021A4                     
  6952                           ; BSR set to: 0
  6953   0021A4  6B70               	clrf	___fldiv@sign& (0+255),b
  6954   0021A6                     l6837:
  6955                           
  6956                           ; BSR set to: 0
  6957   0021A6  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
  6958   0021AA                     
  6959                           ; BSR set to: 0
  6960   0021AA  A177               	btfss	___fldiv@bexp& (0+255),0,b
  6961   0021AC  EFDA  F010         	goto	u8501
  6962   0021B0  EFDC  F010         	goto	u8500
  6963   0021B4                     u8501:
  6964   0021B4  EFDF  F010         	goto	l6843
  6965   0021B8                     u8500:
  6966   0021B8                     
  6967                           ; BSR set to: 0
  6968   0021B8  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6969   0021BA  EFE0  F010         	goto	l6845
  6970   0021BE                     l6843:
  6971                           
  6972                           ; BSR set to: 0
  6973   0021BE  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  6974   0021C0                     l6845:
  6975                           
  6976                           ; BSR set to: 0
  6977   0021C0  90D8               	bcf	status,0,c
  6978   0021C2  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  6979   0021C4  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6980   0021C6  EF99  F00F         	goto	l6761
  6981   0021CA                     l929:
  6982                           
  6983                           ; BSR set to: 0
  6984   0021CA  0012               	return		;funcret
  6985   0021CC                     __end_of___fldiv:
  6986                           	callstack 0
  6987                           
  6988 ;; *************** function _show7Segment *****************
  6989 ;; Defined at:
  6990 ;;		line 733 in file "main.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;		None
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;		None
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  1    wreg      void 
  6997 ;; Registers used:
  6998 ;;		wreg, status,2, status,0, cstack
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7004 ;;      Params:         0       0       0       0
  7005 ;;      Locals:         0       0       0       0
  7006 ;;      Temps:          0       0       0       0
  7007 ;;      Totals:         0       0       0       0
  7008 ;;Total ram usage:        0 bytes
  7009 ;; Hardware stack levels used: 1
  7010 ;; Hardware stack levels required when called: 4
  7011 ;; This function calls:
  7012 ;;		_displayDigits
  7013 ;;		_get7SegmentPattern
  7014 ;; This function is called by:
  7015 ;;		_main
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           	psect	text21
  7020   003912                     __ptext21:
  7021                           	callstack 0
  7022   003912                     _show7Segment:
  7023                           	callstack 26
  7024   003912                     
  7025                           ;main.c: 735:     segPattern0 = get7SegmentPattern( displayDigit0 );
  7026   003912  5038               	movf	_displayDigit0^0,w,c
  7027   003914  EC03  F016         	call	_get7SegmentPattern
  7028   003918  6E3B               	movwf	_segPattern0^0,c
  7029   00391A                     
  7030                           ;main.c: 737:     if( displaySample == 1 && ( fsm_state == 1 || fsm_state == 2 ) ){
  7031   00391A  0434               	decf	_displaySample^0,w,c
  7032   00391C  A4D8               	btfss	status,2,c
  7033   00391E  EF93  F01C         	goto	u9771
  7034   003922  EF95  F01C         	goto	u9770
  7035   003926                     u9771:
  7036   003926  EFAA  F01C         	goto	l7667
  7037   00392A                     u9770:
  7038   00392A  0100               	movlb	0	; () banked
  7039   00392C  05F9               	decf	_fsm_state& (0+255),w,b
  7040   00392E  B4D8               	btfsc	status,2,c
  7041   003930  EF9C  F01C         	goto	u9781
  7042   003934  EF9E  F01C         	goto	u9780
  7043   003938                     u9781:
  7044   003938  EFA7  F01C         	goto	l7665
  7045   00393C                     u9780:
  7046   00393C                     
  7047                           ; BSR set to: 0
  7048   00393C  0E02               	movlw	2
  7049   00393E  19F9               	xorwf	_fsm_state& (0+255),w,b
  7050   003940  A4D8               	btfss	status,2,c
  7051   003942  EFA5  F01C         	goto	u9791
  7052   003946  EFA7  F01C         	goto	u9790
  7053   00394A                     u9791:
  7054   00394A  EFAA  F01C         	goto	l7667
  7055   00394E                     u9790:
  7056   00394E                     l7665:
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;main.c: 738:         segPattern0 = segPattern0 | 0b10000000;
  7060   00394E  503B               	movf	_segPattern0^0,w,c
  7061   003950  0980               	iorlw	128
  7062   003952  6E3B               	movwf	_segPattern0^0,c
  7063   003954                     l7667:
  7064                           
  7065                           ;main.c: 741:     segPattern1 = get7SegmentPattern( displayDigit1 );
  7066   003954  5037               	movf	_displayDigit1^0,w,c
  7067   003956  EC03  F016         	call	_get7SegmentPattern
  7068   00395A  6E3A               	movwf	_segPattern1^0,c
  7069   00395C                     
  7070                           ;main.c: 742:     segPattern2 = get7SegmentPattern( displayDigit2 );
  7071   00395C  5036               	movf	_displayDigit2^0,w,c
  7072   00395E  EC03  F016         	call	_get7SegmentPattern
  7073   003962  6E39               	movwf	_segPattern2^0,c
  7074   003964                     
  7075                           ;main.c: 744:     displayDigits( segPattern0, segPattern1, segPattern2 );
  7076   003964  C03A  F060         	movff	_segPattern1,displayDigits@digit1
  7077   003968  C039  F061         	movff	_segPattern2,displayDigits@digit2
  7078   00396C  503B               	movf	_segPattern0^0,w,c
  7079   00396E  EC1D  F019         	call	_displayDigits
  7080   003972  0012               	return		;funcret
  7081   003974                     __end_of_show7Segment:
  7082                           	callstack 0
  7083                           
  7084 ;; *************** function _get7SegmentPattern *****************
  7085 ;; Defined at:
  7086 ;;		line 516 in file "main.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;  digit           1    wreg     unsigned char 
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;  digit           1    0[BANK0 ] unsigned char 
  7091 ;;  pattern         1    1[BANK0 ] unsigned char 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  1    wreg      unsigned char 
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7101 ;;      Params:         0       0       0       0
  7102 ;;      Locals:         0       2       0       0
  7103 ;;      Temps:          0       0       0       0
  7104 ;;      Totals:         0       2       0       0
  7105 ;;Total ram usage:        2 bytes
  7106 ;; Hardware stack levels used: 1
  7107 ;; Hardware stack levels required when called: 3
  7108 ;; This function calls:
  7109 ;;		Nothing
  7110 ;; This function is called by:
  7111 ;;		_show7Segment
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text22
  7116   002C06                     __ptext22:
  7117                           	callstack 0
  7118   002C06                     _get7SegmentPattern:
  7119                           	callstack 26
  7120                           
  7121                           ;incstack = 0
  7122                           ;get7SegmentPattern@digit stored from wreg
  7123   002C06  0100               	movlb	0	; () banked
  7124   002C08  6F60               	movwf	get7SegmentPattern@digit& (0+255),b
  7125   002C0A                     
  7126                           ;main.c: 519:     uint8_t pattern;;main.c: 521:     switch (digit) {
  7127   002C0A  EF46  F016         	goto	l7497
  7128   002C0E                     l7463:
  7129                           
  7130                           ; BSR set to: 0
  7131   002C0E  0E3F               	movlw	63
  7132   002C10  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7133   002C12  EF8A  F016         	goto	l240
  7134   002C16                     l7465:
  7135                           
  7136                           ; BSR set to: 0
  7137   002C16  0E06               	movlw	6
  7138   002C18  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7139   002C1A  EF8A  F016         	goto	l240
  7140   002C1E                     l7467:
  7141                           
  7142                           ; BSR set to: 0
  7143   002C1E  0E5B               	movlw	91
  7144   002C20  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7145   002C22  EF8A  F016         	goto	l240
  7146   002C26                     l7469:
  7147                           
  7148                           ; BSR set to: 0
  7149   002C26  0E4F               	movlw	79
  7150   002C28  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7151   002C2A  EF8A  F016         	goto	l240
  7152   002C2E                     l7471:
  7153                           
  7154                           ; BSR set to: 0
  7155   002C2E  0E66               	movlw	102
  7156   002C30  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7157   002C32  EF8A  F016         	goto	l240
  7158   002C36                     l7473:
  7159                           
  7160                           ; BSR set to: 0
  7161   002C36  0E6D               	movlw	109
  7162   002C38  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7163   002C3A  EF8A  F016         	goto	l240
  7164   002C3E                     l7475:
  7165                           
  7166                           ; BSR set to: 0
  7167   002C3E  0E7D               	movlw	125
  7168   002C40  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7169   002C42  EF8A  F016         	goto	l240
  7170   002C46                     l7477:
  7171                           
  7172                           ; BSR set to: 0
  7173   002C46  0E07               	movlw	7
  7174   002C48  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7175   002C4A  EF8A  F016         	goto	l240
  7176   002C4E                     l7479:
  7177                           
  7178                           ; BSR set to: 0
  7179   002C4E  0E7F               	movlw	127
  7180   002C50  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7181   002C52  EF8A  F016         	goto	l240
  7182   002C56                     l7481:
  7183                           
  7184                           ; BSR set to: 0
  7185   002C56  0E6F               	movlw	111
  7186   002C58  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7187   002C5A  EF8A  F016         	goto	l240
  7188   002C5E                     l7483:
  7189                           
  7190                           ; BSR set to: 0
  7191   002C5E  0E79               	movlw	121
  7192   002C60  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7193   002C62  EF8A  F016         	goto	l240
  7194   002C66                     l7485:
  7195                           
  7196                           ; BSR set to: 0
  7197   002C66  0E77               	movlw	119
  7198   002C68  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7199   002C6A  EF8A  F016         	goto	l240
  7200   002C6E                     l7487:
  7201                           
  7202                           ; BSR set to: 0
  7203   002C6E  0E39               	movlw	57
  7204   002C70  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7205   002C72  EF8A  F016         	goto	l240
  7206   002C76                     l7491:
  7207                           
  7208                           ; BSR set to: 0
  7209   002C76  0E38               	movlw	56
  7210   002C78  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7211   002C7A  EF8A  F016         	goto	l240
  7212   002C7E                     l7493:
  7213                           
  7214                           ; BSR set to: 0
  7215   002C7E  0E31               	movlw	49
  7216   002C80  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  7217   002C82  EF8A  F016         	goto	l240
  7218   002C86                     l256:
  7219                           
  7220                           ; BSR set to: 0
  7221   002C86  6B61               	clrf	get7SegmentPattern@pattern& (0+255),b
  7222   002C88  EF8A  F016         	goto	l240
  7223   002C8C                     l7497:
  7224   002C8C  0100               	movlb	0	; () banked
  7225   002C8E  5160               	movf	get7SegmentPattern@digit& (0+255),w,b
  7226                           
  7227                           ; Switch size 1, requested type "simple"
  7228                           ; Number of cases is 16, Range of values is 0 to 114
  7229                           ; switch strategies available:
  7230                           ; Name         Instructions Cycles
  7231                           ; simple_byte           49    25 (average)
  7232                           ;	Chosen strategy is simple_byte
  7233   002C90  0A00               	xorlw	0	; case 0
  7234   002C92  B4D8               	btfsc	status,2,c
  7235   002C94  EF07  F016         	goto	l7463
  7236   002C98  0A01               	xorlw	1	; case 1
  7237   002C9A  B4D8               	btfsc	status,2,c
  7238   002C9C  EF0B  F016         	goto	l7465
  7239   002CA0  0A03               	xorlw	3	; case 2
  7240   002CA2  B4D8               	btfsc	status,2,c
  7241   002CA4  EF0F  F016         	goto	l7467
  7242   002CA8  0A01               	xorlw	1	; case 3
  7243   002CAA  B4D8               	btfsc	status,2,c
  7244   002CAC  EF13  F016         	goto	l7469
  7245   002CB0  0A07               	xorlw	7	; case 4
  7246   002CB2  B4D8               	btfsc	status,2,c
  7247   002CB4  EF17  F016         	goto	l7471
  7248   002CB8  0A01               	xorlw	1	; case 5
  7249   002CBA  B4D8               	btfsc	status,2,c
  7250   002CBC  EF1B  F016         	goto	l7473
  7251   002CC0  0A03               	xorlw	3	; case 6
  7252   002CC2  B4D8               	btfsc	status,2,c
  7253   002CC4  EF1F  F016         	goto	l7475
  7254   002CC8  0A01               	xorlw	1	; case 7
  7255   002CCA  B4D8               	btfsc	status,2,c
  7256   002CCC  EF23  F016         	goto	l7477
  7257   002CD0  0A0F               	xorlw	15	; case 8
  7258   002CD2  B4D8               	btfsc	status,2,c
  7259   002CD4  EF27  F016         	goto	l7479
  7260   002CD8  0A01               	xorlw	1	; case 9
  7261   002CDA  B4D8               	btfsc	status,2,c
  7262   002CDC  EF2B  F016         	goto	l7481
  7263   002CE0  0A48               	xorlw	72	; case 65
  7264   002CE2  B4D8               	btfsc	status,2,c
  7265   002CE4  EF33  F016         	goto	l7485
  7266   002CE8  0A02               	xorlw	2	; case 67
  7267   002CEA  B4D8               	btfsc	status,2,c
  7268   002CEC  EF37  F016         	goto	l7487
  7269   002CF0  0A0F               	xorlw	15	; case 76
  7270   002CF2  B4D8               	btfsc	status,2,c
  7271   002CF4  EF3B  F016         	goto	l7491
  7272   002CF8  0A1F               	xorlw	31	; case 83
  7273   002CFA  B4D8               	btfsc	status,2,c
  7274   002CFC  EF1B  F016         	goto	l7473
  7275   002D00  0A0A               	xorlw	10	; case 89
  7276   002D02  B4D8               	btfsc	status,2,c
  7277   002D04  EF2F  F016         	goto	l7483
  7278   002D08  0A2B               	xorlw	43	; case 114
  7279   002D0A  B4D8               	btfsc	status,2,c
  7280   002D0C  EF3F  F016         	goto	l7493
  7281   002D10  EF43  F016         	goto	l256
  7282   002D14                     l240:
  7283                           
  7284                           ; BSR set to: 0
  7285                           ;main.c: 541:     return pattern;
  7286   002D14  5161               	movf	get7SegmentPattern@pattern& (0+255),w,b
  7287   002D16                     
  7288                           ; BSR set to: 0
  7289   002D16  0012               	return		;funcret
  7290   002D18                     __end_of_get7SegmentPattern:
  7291                           	callstack 0
  7292                           
  7293 ;; *************** function _displayDigits *****************
  7294 ;; Defined at:
  7295 ;;		line 544 in file "main.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  digit0          1    wreg     unsigned char 
  7298 ;;  digit1          1    0[BANK0 ] unsigned char 
  7299 ;;  digit2          1    1[BANK0 ] unsigned char 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  digit0          1    4[BANK0 ] unsigned char 
  7302 ;;  i               2    5[BANK0 ] int 
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  1    wreg      void 
  7305 ;; Registers used:
  7306 ;;		wreg, status,2, status,0
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7312 ;;      Params:         0       2       0       0
  7313 ;;      Locals:         0       3       0       0
  7314 ;;      Temps:          0       2       0       0
  7315 ;;      Totals:         0       7       0       0
  7316 ;;Total ram usage:        7 bytes
  7317 ;; Hardware stack levels used: 1
  7318 ;; Hardware stack levels required when called: 3
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_show7Segment
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text23
  7327   00323A                     __ptext23:
  7328                           	callstack 0
  7329   00323A                     _displayDigits:
  7330                           	callstack 26
  7331                           
  7332                           ; BSR set to: 0
  7333                           ;incstack = 0
  7334                           ;displayDigits@digit0 stored from wreg
  7335   00323A  0100               	movlb	0	; () banked
  7336   00323C  6F64               	movwf	displayDigits@digit0& (0+255),b
  7337   00323E                     
  7338                           ;main.c: 545:     int i;;main.c: 546:     for ( i = 0 ; i < 8 ; i++ ){
  7339   00323E  0E00               	movlw	0
  7340   003240  0100               	movlb	0	; () banked
  7341   003242  6F66               	movwf	(displayDigits@i+1)& (0+255),b
  7342   003244  0E00               	movlw	0
  7343   003246  6F65               	movwf	displayDigits@i& (0+255),b
  7344   003248                     l7505:
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;main.c: 548:         PORTCbits.RC5 = (digit0 >> i) & (0x01);
  7348   003248  C065  F062         	movff	displayDigits@i,??_displayDigits
  7349   00324C  C064  F063         	movff	displayDigits@digit0,??_displayDigits+1
  7350   003250  2B62               	incf	??_displayDigits& (0+255),f,b
  7351   003252  EF2D  F019         	goto	u9454
  7352   003256                     u9455:
  7353   003256  90D8               	bcf	status,0,c
  7354   003258  3363               	rrcf	(??_displayDigits+1)& (0+255),f,b
  7355   00325A                     u9454:
  7356   00325A  2F62               	decfsz	??_displayDigits& (0+255),f,b
  7357   00325C  EF2B  F019         	goto	u9455
  7358   003260  0E01               	movlw	1
  7359   003262  0100               	movlb	0	; () banked
  7360   003264  1763               	andwf	(??_displayDigits+1)& (0+255),f,b
  7361   003266  3B63               	swapf	(??_displayDigits+1)& (0+255),f,b
  7362   003268  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  7363   00326A  5082               	movf	130,w,c	;volatile
  7364   00326C  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  7365   00326E  0BDF               	andlw	-33
  7366   003270  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  7367   003272  6E82               	movwf	130,c	;volatile
  7368                           
  7369                           ;main.c: 549:         PORTCbits.RC4 = (digit1 >> i) & (0x01);
  7370   003274  C065  F062         	movff	displayDigits@i,??_displayDigits
  7371   003278  C060  F063         	movff	displayDigits@digit1,??_displayDigits+1
  7372   00327C  2B62               	incf	??_displayDigits& (0+255),f,b
  7373   00327E  EF43  F019         	goto	u9464
  7374   003282                     u9465:
  7375   003282  90D8               	bcf	status,0,c
  7376   003284  3363               	rrcf	(??_displayDigits+1)& (0+255),f,b
  7377   003286                     u9464:
  7378   003286  2F62               	decfsz	??_displayDigits& (0+255),f,b
  7379   003288  EF41  F019         	goto	u9465
  7380   00328C  0E01               	movlw	1
  7381   00328E  0100               	movlb	0	; () banked
  7382   003290  1763               	andwf	(??_displayDigits+1)& (0+255),f,b
  7383   003292  3B63               	swapf	(??_displayDigits+1)& (0+255),f,b
  7384   003294  5082               	movf	130,w,c	;volatile
  7385   003296  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  7386   003298  0BEF               	andlw	-17
  7387   00329A  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  7388   00329C  6E82               	movwf	130,c	;volatile
  7389                           
  7390                           ;main.c: 550:         PORTCbits.RC3 = (digit2 >> i) & (0x01);
  7391   00329E  C065  F062         	movff	displayDigits@i,??_displayDigits
  7392   0032A2  C061  F063         	movff	displayDigits@digit2,??_displayDigits+1
  7393   0032A6  2B62               	incf	??_displayDigits& (0+255),f,b
  7394   0032A8  EF58  F019         	goto	u9474
  7395   0032AC                     u9475:
  7396   0032AC  90D8               	bcf	status,0,c
  7397   0032AE  3363               	rrcf	(??_displayDigits+1)& (0+255),f,b
  7398   0032B0                     u9474:
  7399   0032B0  2F62               	decfsz	??_displayDigits& (0+255),f,b
  7400   0032B2  EF56  F019         	goto	u9475
  7401   0032B6  0E01               	movlw	1
  7402   0032B8  0100               	movlb	0	; () banked
  7403   0032BA  1763               	andwf	(??_displayDigits+1)& (0+255),f,b
  7404   0032BC  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  7405   0032BE  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  7406   0032C0  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  7407   0032C2  5082               	movf	130,w,c	;volatile
  7408   0032C4  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  7409   0032C6  0BF7               	andlw	-9
  7410   0032C8  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  7411   0032CA  6E82               	movwf	130,c	;volatile
  7412   0032CC                     
  7413                           ; BSR set to: 0
  7414                           ;main.c: 553:         PORTCbits.RC6 = 1;
  7415   0032CC  8C82               	bsf	130,6,c	;volatile
  7416   0032CE                     
  7417                           ; BSR set to: 0
  7418                           ;main.c: 554:         _delay((unsigned long)((500)*(2000000/4000000.0)));
  7419   0032CE  0E53               	movlw	83
  7420   0032D0                     u10077:
  7421   0032D0  2EE8               	decfsz	wreg,f,c
  7422   0032D2  D7FE               	bra	u10077
  7423   0032D4  0000               	nop	
  7424   0032D6                     
  7425                           ;main.c: 555:         PORTCbits.RC6 = 0;
  7426   0032D6  9C82               	bcf	130,6,c	;volatile
  7427   0032D8                     
  7428                           ;main.c: 556:         _delay((unsigned long)((500)*(2000000/4000000.0)));
  7429   0032D8  0E53               	movlw	83
  7430   0032DA                     u10087:
  7431   0032DA  2EE8               	decfsz	wreg,f,c
  7432   0032DC  D7FE               	bra	u10087
  7433   0032DE  0000               	nop	
  7434   0032E0                     
  7435                           ;main.c: 557:     }
  7436   0032E0  0100               	movlb	0	; () banked
  7437   0032E2  4B65               	infsnz	displayDigits@i& (0+255),f,b
  7438   0032E4  2B66               	incf	(displayDigits@i+1)& (0+255),f,b
  7439   0032E6                     
  7440                           ; BSR set to: 0
  7441   0032E6  BF66               	btfsc	(displayDigits@i+1)& (0+255),7,b
  7442   0032E8  EF7F  F019         	goto	u9481
  7443   0032EC  5166               	movf	(displayDigits@i+1)& (0+255),w,b
  7444   0032EE  E109               	bnz	u9480
  7445   0032F0  0E08               	movlw	8
  7446   0032F2  5D65               	subwf	displayDigits@i& (0+255),w,b
  7447   0032F4  A0D8               	btfss	status,0,c
  7448   0032F6  EF7F  F019         	goto	u9481
  7449   0032FA  EF81  F019         	goto	u9480
  7450   0032FE                     u9481:
  7451   0032FE  EF24  F019         	goto	l7505
  7452   003302                     u9480:
  7453   003302                     
  7454                           ; BSR set to: 0
  7455                           ;main.c: 560:     PORTCbits.RC7 = 1;
  7456   003302  8E82               	bsf	130,7,c	;volatile
  7457   003304                     
  7458                           ; BSR set to: 0
  7459                           ;main.c: 561:     _delay((unsigned long)((500)*(2000000/4000000.0)));
  7460   003304  0E53               	movlw	83
  7461   003306                     u10097:
  7462   003306  2EE8               	decfsz	wreg,f,c
  7463   003308  D7FE               	bra	u10097
  7464   00330A  0000               	nop	
  7465   00330C                     
  7466                           ;main.c: 562:     PORTCbits.RC7 = 0;
  7467   00330C  9E82               	bcf	130,7,c	;volatile
  7468   00330E  0012               	return		;funcret
  7469   003310                     __end_of_displayDigits:
  7470                           	callstack 0
  7471                           
  7472 ;; *************** function _setupTimer1 *****************
  7473 ;; Defined at:
  7474 ;;		line 473 in file "main.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;		None
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;		None
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      void 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7488 ;;      Params:         0       0       0       0
  7489 ;;      Locals:         0       0       0       0
  7490 ;;      Temps:          0       0       0       0
  7491 ;;      Totals:         0       0       0       0
  7492 ;;Total ram usage:        0 bytes
  7493 ;; Hardware stack levels used: 1
  7494 ;; Hardware stack levels required when called: 3
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_main
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text24
  7503   003DD2                     __ptext24:
  7504                           	callstack 0
  7505   003DD2                     _setupTimer1:
  7506                           	callstack 27
  7507   003DD2                     
  7508                           ;main.c: 474:     T1CON = 0b00110101;
  7509   003DD2  0E35               	movlw	53
  7510   003DD4  6ECD               	movwf	205,c	;volatile
  7511                           
  7512                           ;main.c: 475:     TMR1 = 0;
  7513   003DD6  0E00               	movlw	0
  7514   003DD8  6ECF               	movwf	207,c	;volatile
  7515   003DDA  0E00               	movlw	0
  7516   003DDC  6ECE               	movwf	206,c	;volatile
  7517   003DDE                     
  7518                           ;main.c: 478:     PIR1bits.TMR1IF = 0;
  7519   003DDE  909E               	bcf	158,0,c	;volatile
  7520   003DE0                     
  7521                           ;main.c: 479:     PIE1bits.TMR1IE = 1;
  7522   003DE0  809D               	bsf	157,0,c	;volatile
  7523                           
  7524                           ;main.c: 485:     TMR1 = 0;
  7525   003DE2  0E00               	movlw	0
  7526   003DE4  6ECF               	movwf	207,c	;volatile
  7527   003DE6  0E00               	movlw	0
  7528   003DE8  6ECE               	movwf	206,c	;volatile
  7529   003DEA  0012               	return		;funcret
  7530   003DEC                     __end_of_setupTimer1:
  7531                           	callstack 0
  7532                           
  7533 ;; *************** function _setupI2C *****************
  7534 ;; Defined at:
  7535 ;;		line 488 in file "main.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;		None
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;		None
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7549 ;;      Params:         0       0       0       0
  7550 ;;      Locals:         0       0       0       0
  7551 ;;      Temps:          0       0       0       0
  7552 ;;      Totals:         0       0       0       0
  7553 ;;Total ram usage:        0 bytes
  7554 ;; Hardware stack levels used: 1
  7555 ;; Hardware stack levels required when called: 3
  7556 ;; This function calls:
  7557 ;;		Nothing
  7558 ;; This function is called by:
  7559 ;;		_main
  7560 ;; This function uses a non-reentrant model
  7561 ;;
  7562                           
  7563                           	psect	text25
  7564   003E1A                     __ptext25:
  7565                           	callstack 0
  7566   003E1A                     _setupI2C:
  7567                           	callstack 27
  7568   003E1A                     
  7569                           ;main.c: 489:     TRISBbits.RB4 = 1;
  7570   003E1A  8893               	bsf	147,4,c	;volatile
  7571                           
  7572                           ;main.c: 490:     TRISBbits.RB6 = 1;
  7573   003E1C  8C93               	bsf	147,6,c	;volatile
  7574   003E1E                     
  7575                           ;main.c: 491:     SSPCON1 = 0b00101000;
  7576   003E1E  0E28               	movlw	40
  7577   003E20  6EC6               	movwf	198,c	;volatile
  7578                           
  7579                           ;main.c: 492:     SSPADD = ((2000000 / 4) / 100000) - 1;
  7580   003E22  0E04               	movlw	4
  7581   003E24  6EC8               	movwf	200,c	;volatile
  7582   003E26                     
  7583                           ;main.c: 493:     SSPSTAT = 0x00;
  7584   003E26  6AC7               	clrf	199,c	;volatile
  7585   003E28                     
  7586                           ;main.c: 495:     SSPCON2 = 0b00000000;
  7587   003E28  6AC5               	clrf	197,c	;volatile
  7588   003E2A  0012               	return		;funcret
  7589   003E2C                     __end_of_setupI2C:
  7590                           	callstack 0
  7591                           
  7592 ;; *************** function _setupEUSART *****************
  7593 ;; Defined at:
  7594 ;;		line 630 in file "main.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;		None
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;		None
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  1    wreg      void 
  7601 ;; Registers used:
  7602 ;;		wreg, status,2
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/0
  7605 ;;		On exit  : 0/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7608 ;;      Params:         0       0       0       0
  7609 ;;      Locals:         0       0       0       0
  7610 ;;      Temps:          0       0       0       0
  7611 ;;      Totals:         0       0       0       0
  7612 ;;Total ram usage:        0 bytes
  7613 ;; Hardware stack levels used: 1
  7614 ;; Hardware stack levels required when called: 3
  7615 ;; This function calls:
  7616 ;;		Nothing
  7617 ;; This function is called by:
  7618 ;;		_main
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           	psect	text26
  7623   003DB2                     __ptext26:
  7624                           	callstack 0
  7625   003DB2                     _setupEUSART:
  7626                           	callstack 27
  7627   003DB2                     
  7628                           ;main.c: 634:     BAUDCONbits.BRG16 = 0;
  7629   003DB2  96B8               	bcf	184,3,c	;volatile
  7630                           
  7631                           ;main.c: 635:     BAUDCONbits.ABDEN = 0;
  7632   003DB4  90B8               	bcf	184,0,c	;volatile
  7633                           
  7634                           ;main.c: 636:     BAUDCONbits.CKTXP = 0;
  7635   003DB6  98B8               	bcf	184,4,c	;volatile
  7636                           
  7637                           ;main.c: 637:     BAUDCONbits.ABDOVF = 0;
  7638   003DB8  9EB8               	bcf	184,7,c	;volatile
  7639   003DBA                     
  7640                           ;main.c: 640:     SPBRG = 12;
  7641   003DBA  0E0C               	movlw	12
  7642   003DBC  6EAF               	movwf	175,c	;volatile
  7643   003DBE                     
  7644                           ;main.c: 642:     TXSTAbits.BRGH = 0;
  7645   003DBE  94AC               	bcf	172,2,c	;volatile
  7646   003DC0                     
  7647                           ;main.c: 644:     TXSTAbits.SYNC = 0;
  7648   003DC0  98AC               	bcf	172,4,c	;volatile
  7649   003DC2                     
  7650                           ;main.c: 645:     TXSTAbits.TX9 = 0;
  7651   003DC2  9CAC               	bcf	172,6,c	;volatile
  7652   003DC4                     
  7653                           ;main.c: 646:     RCSTAbits.SPEN = 1;
  7654   003DC4  8EAB               	bsf	171,7,c	;volatile
  7655   003DC6                     
  7656                           ;main.c: 647:     TXSTAbits.TXEN = 1;
  7657   003DC6  8AAC               	bsf	172,5,c	;volatile
  7658   003DC8                     
  7659                           ;main.c: 648:     RCSTAbits.CREN = 0;
  7660   003DC8  98AB               	bcf	171,4,c	;volatile
  7661   003DCA                     
  7662                           ;main.c: 650:     TXSTAbits.SENDB = 0;
  7663   003DCA  96AC               	bcf	172,3,c	;volatile
  7664   003DCC                     
  7665                           ;main.c: 653:     TRISBbits.TRISB7 = 1;
  7666   003DCC  8E93               	bsf	147,7,c	;volatile
  7667   003DCE                     
  7668                           ;main.c: 654:     TRISBbits.TRISB5 = 1;
  7669   003DCE  8A93               	bsf	147,5,c	;volatile
  7670   003DD0  0012               	return		;funcret
  7671   003DD2                     __end_of_setupEUSART:
  7672                           	callstack 0
  7673                           
  7674 ;; *************** function _setupADC *****************
  7675 ;; Defined at:
  7676 ;;		line 467 in file "main.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;		None
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;		None
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  1    wreg      void 
  7683 ;; Registers used:
  7684 ;;		wreg, status,2
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7690 ;;      Params:         0       0       0       0
  7691 ;;      Locals:         0       0       0       0
  7692 ;;      Temps:          0       0       0       0
  7693 ;;      Totals:         0       0       0       0
  7694 ;;Total ram usage:        0 bytes
  7695 ;; Hardware stack levels used: 1
  7696 ;; Hardware stack levels required when called: 3
  7697 ;; This function calls:
  7698 ;;		Nothing
  7699 ;; This function is called by:
  7700 ;;		_main
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text27
  7705   003E74                     __ptext27:
  7706                           	callstack 0
  7707   003E74                     _setupADC:
  7708                           	callstack 27
  7709   003E74                     
  7710                           ;main.c: 468:     ADCON1 = 0b00000000;
  7711   003E74  6AC1               	clrf	193,c	;volatile
  7712   003E76                     
  7713                           ;main.c: 469:     ADCON0 = 0b00001101;
  7714   003E76  0E0D               	movlw	13
  7715   003E78  6EC2               	movwf	194,c	;volatile
  7716                           
  7717                           ;main.c: 470:     ADCON2 = 0b10101111;
  7718   003E7A  0EAF               	movlw	175
  7719   003E7C  6EC0               	movwf	192,c	;volatile
  7720   003E7E  0012               	return		;funcret
  7721   003E80                     __end_of_setupADC:
  7722                           	callstack 0
  7723                           
  7724 ;; *************** function _setDisplayDigits *****************
  7725 ;; Defined at:
  7726 ;;		line 670 in file "main.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;		None
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;		None
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  1    wreg      void 
  7733 ;; Registers used:
  7734 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7740 ;;      Params:         0       0       0       0
  7741 ;;      Locals:         0       0       0       0
  7742 ;;      Temps:          0       0       0       0
  7743 ;;      Totals:         0       0       0       0
  7744 ;;Total ram usage:        0 bytes
  7745 ;; Hardware stack levels used: 1
  7746 ;; Hardware stack levels required when called: 4
  7747 ;; This function calls:
  7748 ;;		___flmul
  7749 ;;		___fltol
  7750 ;;		___lwdiv
  7751 ;;		___lwmod
  7752 ;; This function is called by:
  7753 ;;		_main
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text28
  7758   0021CC                     __ptext28:
  7759                           	callstack 0
  7760   0021CC                     _setDisplayDigits:
  7761                           	callstack 26
  7762   0021CC                     
  7763                           ;main.c: 671:     if (fsm_state == 0) {
  7764   0021CC  0100               	movlb	0	; () banked
  7765   0021CE  51F9               	movf	_fsm_state& (0+255),w,b
  7766   0021D0  A4D8               	btfss	status,2,c
  7767   0021D2  EFED  F010         	goto	u9691
  7768   0021D6  EFEF  F010         	goto	u9690
  7769   0021DA                     u9691:
  7770   0021DA  EFF7  F010         	goto	l7607
  7771   0021DE                     u9690:
  7772   0021DE                     
  7773                           ; BSR set to: 0
  7774                           ;main.c: 673:         displayDigit0 = 11;
  7775   0021DE  0E0B               	movlw	11
  7776   0021E0  6E38               	movwf	_displayDigit0^0,c
  7777                           
  7778                           ;main.c: 674:         displayDigit1 = 'A';
  7779   0021E2  0E41               	movlw	65
  7780   0021E4  6E37               	movwf	_displayDigit1^0,c
  7781                           
  7782                           ;main.c: 675:         displayDigit2 = 11;
  7783   0021E6  0E0B               	movlw	11
  7784   0021E8  6E36               	movwf	_displayDigit2^0,c
  7785                           
  7786                           ;main.c: 677:     } else if (fsm_state == 1) {
  7787   0021EA  EF0C  F012         	goto	l338
  7788   0021EE                     l7607:
  7789                           
  7790                           ; BSR set to: 0
  7791   0021EE  05F9               	decf	_fsm_state& (0+255),w,b
  7792   0021F0  A4D8               	btfss	status,2,c
  7793   0021F2  EFFD  F010         	goto	u9701
  7794   0021F6  EFFF  F010         	goto	u9700
  7795   0021FA                     u9701:
  7796   0021FA  EF5C  F011         	goto	l7621
  7797   0021FE                     u9700:
  7798   0021FE                     
  7799                           ; BSR set to: 0
  7800                           ;main.c: 679:         c_target = (unsigned int) (adc_voltage * 100);
  7801   0021FE  0E00               	movlw	0
  7802   002200  6F72               	movwf	___flmul@a& (0+255),b
  7803   002202  0E00               	movlw	0
  7804   002204  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7805   002206  0EC8               	movlw	200
  7806   002208  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7807   00220A  0E42               	movlw	66
  7808   00220C  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7809   00220E  C0EA  F06E         	movff	_adc_voltage,___flmul@b
  7810   002212  C0EB  F06F         	movff	_adc_voltage+1,___flmul@b+1
  7811   002216  C0EC  F070         	movff	_adc_voltage+2,___flmul@b+2
  7812   00221A  C0ED  F071         	movff	_adc_voltage+3,___flmul@b+3
  7813   00221E  ECE6  F008         	call	___flmul	;wreg free
  7814   002222  C06E  F087         	movff	?___flmul,___fltol@f1
  7815   002226  C06F  F088         	movff	?___flmul+1,___fltol@f1+1
  7816   00222A  C070  F089         	movff	?___flmul+2,___fltol@f1+2
  7817   00222E  C071  F08A         	movff	?___flmul+3,___fltol@f1+3
  7818   002232  EC13  F017         	call	___fltol	;wreg free
  7819   002236  C087  F032         	movff	?___fltol,_c_target
  7820   00223A  C088  F033         	movff	?___fltol+1,_c_target+1
  7821   00223E                     
  7822                           ;main.c: 680:         c_remainder = c_target % 100;
  7823   00223E  C032  F060         	movff	_c_target,___lwmod@dividend
  7824   002242  C033  F061         	movff	_c_target+1,___lwmod@dividend+1
  7825   002246  0E00               	movlw	0
  7826   002248  0100               	movlb	0	; () banked
  7827   00224A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  7828   00224C  0E64               	movlw	100
  7829   00224E  6F62               	movwf	___lwmod@divisor& (0+255),b
  7830   002250  EC24  F01C         	call	___lwmod	;wreg free
  7831   002254  C060  F030         	movff	?___lwmod,_c_remainder
  7832   002258  C061  F031         	movff	?___lwmod+1,_c_remainder+1
  7833   00225C                     
  7834                           ;main.c: 681:         c_number = c_target / 100;
  7835   00225C  C032  F060         	movff	_c_target,___lwdiv@dividend
  7836   002260  C033  F061         	movff	_c_target+1,___lwdiv@dividend+1
  7837   002264  0E00               	movlw	0
  7838   002266  0100               	movlb	0	; () banked
  7839   002268  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7840   00226A  0E64               	movlw	100
  7841   00226C  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7842   00226E  EC76  F01B         	call	___lwdiv	;wreg free
  7843   002272  C060  F02E         	movff	?___lwdiv,_c_number
  7844   002276  C061  F02F         	movff	?___lwdiv+1,_c_number+1
  7845   00227A                     
  7846                           ;main.c: 683:         displayDigit0 = (uint8_t) c_number;
  7847   00227A  C02E  F038         	movff	_c_number,_displayDigit0
  7848   00227E                     
  7849                           ;main.c: 684:         displayDigit1 = (uint8_t) (c_remainder / 10);
  7850   00227E  C030  F060         	movff	_c_remainder,___lwdiv@dividend
  7851   002282  C031  F061         	movff	_c_remainder+1,___lwdiv@dividend+1
  7852   002286  0E00               	movlw	0
  7853   002288  0100               	movlb	0	; () banked
  7854   00228A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7855   00228C  0E0A               	movlw	10
  7856   00228E  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7857   002290  EC76  F01B         	call	___lwdiv	;wreg free
  7858   002294  0100               	movlb	0	; () banked
  7859   002296  5160               	movf	?___lwdiv& (0+255),w,b
  7860   002298  6E37               	movwf	_displayDigit1^0,c
  7861   00229A                     
  7862                           ; BSR set to: 0
  7863                           ;main.c: 685:         displayDigit2 = c_remainder % 10;
  7864   00229A  C030  F060         	movff	_c_remainder,___lwmod@dividend
  7865   00229E  C031  F061         	movff	_c_remainder+1,___lwmod@dividend+1
  7866   0022A2  0E00               	movlw	0
  7867   0022A4  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  7868   0022A6  0E0A               	movlw	10
  7869   0022A8  6F62               	movwf	___lwmod@divisor& (0+255),b
  7870   0022AA  EC24  F01C         	call	___lwmod	;wreg free
  7871   0022AE  0100               	movlb	0	; () banked
  7872   0022B0  5160               	movf	?___lwmod& (0+255),w,b
  7873   0022B2  6E36               	movwf	_displayDigit2^0,c
  7874                           
  7875                           ;main.c: 687:     } else if (fsm_state == 2) {
  7876   0022B4  EF0C  F012         	goto	l338
  7877   0022B8                     l7621:
  7878                           
  7879                           ; BSR set to: 0
  7880   0022B8  0E02               	movlw	2
  7881   0022BA  19F9               	xorwf	_fsm_state& (0+255),w,b
  7882   0022BC  A4D8               	btfss	status,2,c
  7883   0022BE  EF63  F011         	goto	u9711
  7884   0022C2  EF65  F011         	goto	u9710
  7885   0022C6                     u9711:
  7886   0022C6  EFB7  F011         	goto	l7635
  7887   0022CA                     u9710:
  7888   0022CA                     
  7889                           ; BSR set to: 0
  7890                           ;main.c: 689:         c_target = (unsigned int) (adc_voltage * 100);
  7891   0022CA  0E00               	movlw	0
  7892   0022CC  6F72               	movwf	___flmul@a& (0+255),b
  7893   0022CE  0E00               	movlw	0
  7894   0022D0  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7895   0022D2  0EC8               	movlw	200
  7896   0022D4  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7897   0022D6  0E42               	movlw	66
  7898   0022D8  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7899   0022DA  C0EA  F06E         	movff	_adc_voltage,___flmul@b
  7900   0022DE  C0EB  F06F         	movff	_adc_voltage+1,___flmul@b+1
  7901   0022E2  C0EC  F070         	movff	_adc_voltage+2,___flmul@b+2
  7902   0022E6  C0ED  F071         	movff	_adc_voltage+3,___flmul@b+3
  7903   0022EA  ECE6  F008         	call	___flmul	;wreg free
  7904   0022EE  C06E  F087         	movff	?___flmul,___fltol@f1
  7905   0022F2  C06F  F088         	movff	?___flmul+1,___fltol@f1+1
  7906   0022F6  C070  F089         	movff	?___flmul+2,___fltol@f1+2
  7907   0022FA  C071  F08A         	movff	?___flmul+3,___fltol@f1+3
  7908   0022FE  EC13  F017         	call	___fltol	;wreg free
  7909   002302  C087  F032         	movff	?___fltol,_c_target
  7910   002306  C088  F033         	movff	?___fltol+1,_c_target+1
  7911   00230A                     
  7912                           ;main.c: 690:         c_remainder = c_target % 100;
  7913   00230A  C032  F060         	movff	_c_target,___lwmod@dividend
  7914   00230E  C033  F061         	movff	_c_target+1,___lwmod@dividend+1
  7915   002312  0E00               	movlw	0
  7916   002314  0100               	movlb	0	; () banked
  7917   002316  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  7918   002318  0E64               	movlw	100
  7919   00231A  6F62               	movwf	___lwmod@divisor& (0+255),b
  7920   00231C  EC24  F01C         	call	___lwmod	;wreg free
  7921   002320  C060  F030         	movff	?___lwmod,_c_remainder
  7922   002324  C061  F031         	movff	?___lwmod+1,_c_remainder+1
  7923   002328                     
  7924                           ;main.c: 691:         c_number = c_target / 100;
  7925   002328  C032  F060         	movff	_c_target,___lwdiv@dividend
  7926   00232C  C033  F061         	movff	_c_target+1,___lwdiv@dividend+1
  7927   002330  0E00               	movlw	0
  7928   002332  0100               	movlb	0	; () banked
  7929   002334  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7930   002336  0E64               	movlw	100
  7931   002338  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7932   00233A  EC76  F01B         	call	___lwdiv	;wreg free
  7933   00233E  C060  F02E         	movff	?___lwdiv,_c_number
  7934   002342  C061  F02F         	movff	?___lwdiv+1,_c_number+1
  7935   002346                     
  7936                           ;main.c: 693:         displayDigit0 = (uint8_t) c_number;
  7937   002346  C02E  F038         	movff	_c_number,_displayDigit0
  7938   00234A                     
  7939                           ;main.c: 694:         displayDigit1 = (uint8_t) (c_remainder / 10);
  7940   00234A  C030  F060         	movff	_c_remainder,___lwdiv@dividend
  7941   00234E  C031  F061         	movff	_c_remainder+1,___lwdiv@dividend+1
  7942   002352  0E00               	movlw	0
  7943   002354  0100               	movlb	0	; () banked
  7944   002356  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7945   002358  0E0A               	movlw	10
  7946   00235A  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7947   00235C  EC76  F01B         	call	___lwdiv	;wreg free
  7948   002360  0100               	movlb	0	; () banked
  7949   002362  5160               	movf	?___lwdiv& (0+255),w,b
  7950   002364  6E37               	movwf	_displayDigit1^0,c
  7951   002366                     
  7952                           ; BSR set to: 0
  7953                           ;main.c: 695:         displayDigit2 = 'C';
  7954   002366  0E43               	movlw	67
  7955   002368  6E36               	movwf	_displayDigit2^0,c
  7956                           
  7957                           ;main.c: 697:     } else if (fsm_state == 3) {
  7958   00236A  EF0C  F012         	goto	l338
  7959   00236E                     l7635:
  7960                           
  7961                           ; BSR set to: 0
  7962   00236E  0E03               	movlw	3
  7963   002370  19F9               	xorwf	_fsm_state& (0+255),w,b
  7964   002372  A4D8               	btfss	status,2,c
  7965   002374  EFBE  F011         	goto	u9721
  7966   002378  EFC0  F011         	goto	u9720
  7967   00237C                     u9721:
  7968   00237C  EFC8  F011         	goto	l7639
  7969   002380                     u9720:
  7970   002380                     
  7971                           ; BSR set to: 0
  7972                           ;main.c: 699:         displayDigit0 = 11;
  7973   002380  0E0B               	movlw	11
  7974   002382  6E38               	movwf	_displayDigit0^0,c
  7975                           
  7976                           ;main.c: 700:         displayDigit1 = 'C';
  7977   002384  0E43               	movlw	67
  7978   002386  6E37               	movwf	_displayDigit1^0,c
  7979                           
  7980                           ;main.c: 701:         displayDigit2 = 11;
  7981   002388  0E0B               	movlw	11
  7982   00238A  6E36               	movwf	_displayDigit2^0,c
  7983                           
  7984                           ;main.c: 703:     } else if (fsm_state == 4) {
  7985   00238C  EF0C  F012         	goto	l338
  7986   002390                     l7639:
  7987                           
  7988                           ; BSR set to: 0
  7989   002390  0E04               	movlw	4
  7990   002392  19F9               	xorwf	_fsm_state& (0+255),w,b
  7991   002394  A4D8               	btfss	status,2,c
  7992   002396  EFCF  F011         	goto	u9731
  7993   00239A  EFD1  F011         	goto	u9730
  7994   00239E                     u9731:
  7995   00239E  EFD8  F011         	goto	l7645
  7996   0023A2                     u9730:
  7997   0023A2                     
  7998                           ; BSR set to: 0
  7999                           ;main.c: 705:         displayDigit0 = 'S';
  8000   0023A2  0E53               	movlw	83
  8001   0023A4  6E38               	movwf	_displayDigit0^0,c
  8002   0023A6                     
  8003                           ; BSR set to: 0
  8004                           ;main.c: 706:         displayDigit1 = 0;
  8005   0023A6  6A37               	clrf	_displayDigit1^0,c
  8006                           
  8007                           ;main.c: 707:         displayDigit2 = 11;
  8008   0023A8  0E0B               	movlw	11
  8009   0023AA  6E36               	movwf	_displayDigit2^0,c
  8010                           
  8011                           ;main.c: 709:     } else if (fsm_state == 5) {
  8012   0023AC  EF0C  F012         	goto	l338
  8013   0023B0                     l7645:
  8014                           
  8015                           ; BSR set to: 0
  8016   0023B0  0E05               	movlw	5
  8017   0023B2  19F9               	xorwf	_fsm_state& (0+255),w,b
  8018   0023B4  A4D8               	btfss	status,2,c
  8019   0023B6  EFDF  F011         	goto	u9741
  8020   0023BA  EFE1  F011         	goto	u9740
  8021   0023BE                     u9741:
  8022   0023BE  EFE9  F011         	goto	l7649
  8023   0023C2                     u9740:
  8024   0023C2                     
  8025                           ; BSR set to: 0
  8026                           ;main.c: 711:         displayDigit0 = 'S';
  8027   0023C2  0E53               	movlw	83
  8028   0023C4  6E38               	movwf	_displayDigit0^0,c
  8029                           
  8030                           ;main.c: 712:         displayDigit1 = 1;
  8031   0023C6  0E01               	movlw	1
  8032   0023C8  6E37               	movwf	_displayDigit1^0,c
  8033                           
  8034                           ;main.c: 713:         displayDigit2 = 11;
  8035   0023CA  0E0B               	movlw	11
  8036   0023CC  6E36               	movwf	_displayDigit2^0,c
  8037                           
  8038                           ;main.c: 715:     } else if (fsm_state == 6) {
  8039   0023CE  EF0C  F012         	goto	l338
  8040   0023D2                     l7649:
  8041                           
  8042                           ; BSR set to: 0
  8043   0023D2  0E06               	movlw	6
  8044   0023D4  19F9               	xorwf	_fsm_state& (0+255),w,b
  8045   0023D6  A4D8               	btfss	status,2,c
  8046   0023D8  EFF0  F011         	goto	u9751
  8047   0023DC  EFF2  F011         	goto	u9750
  8048   0023E0                     u9751:
  8049   0023E0  EFFA  F011         	goto	l7653
  8050   0023E4                     u9750:
  8051   0023E4                     
  8052                           ; BSR set to: 0
  8053                           ;main.c: 717:         displayDigit0 = 'S';
  8054   0023E4  0E53               	movlw	83
  8055   0023E6  6E38               	movwf	_displayDigit0^0,c
  8056                           
  8057                           ;main.c: 718:         displayDigit1 = 2;
  8058   0023E8  0E02               	movlw	2
  8059   0023EA  6E37               	movwf	_displayDigit1^0,c
  8060                           
  8061                           ;main.c: 719:         displayDigit2 = 11;
  8062   0023EC  0E0B               	movlw	11
  8063   0023EE  6E36               	movwf	_displayDigit2^0,c
  8064                           
  8065                           ;main.c: 721:     } else if (fsm_state == 7) {
  8066   0023F0  EF0C  F012         	goto	l338
  8067   0023F4                     l7653:
  8068                           
  8069                           ; BSR set to: 0
  8070   0023F4  0E07               	movlw	7
  8071   0023F6  19F9               	xorwf	_fsm_state& (0+255),w,b
  8072   0023F8  A4D8               	btfss	status,2,c
  8073   0023FA  EF01  F012         	goto	u9761
  8074   0023FE  EF03  F012         	goto	u9760
  8075   002402                     u9761:
  8076   002402  EF0B  F012         	goto	l336
  8077   002406                     u9760:
  8078   002406                     
  8079                           ; BSR set to: 0
  8080                           ;main.c: 723:         displayDigit0 = 'C';
  8081   002406  0E43               	movlw	67
  8082   002408  6E38               	movwf	_displayDigit0^0,c
  8083                           
  8084                           ;main.c: 724:         displayDigit1 = 'L';
  8085   00240A  0E4C               	movlw	76
  8086   00240C  6E37               	movwf	_displayDigit1^0,c
  8087                           
  8088                           ;main.c: 725:         displayDigit2 = 'r';
  8089   00240E  0E72               	movlw	114
  8090   002410  6E36               	movwf	_displayDigit2^0,c
  8091                           
  8092                           ;main.c: 727:     }
  8093   002412  EF0C  F012         	goto	l338
  8094   002416                     l336:
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;main.c: 729:         __nop();
  8098   002416  0000               	nop	
  8099   002418                     l338:
  8100   002418  0012               	return		;funcret
  8101   00241A                     __end_of_setDisplayDigits:
  8102                           	callstack 0
  8103                           
  8104 ;; *************** function ___lwmod *****************
  8105 ;; Defined at:
  8106 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwmod.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;  dividend        2    0[BANK0 ] unsigned int 
  8109 ;;  divisor         2    2[BANK0 ] unsigned int 
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;  counter         1    4[BANK0 ] unsigned char 
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  2    0[BANK0 ] unsigned int 
  8114 ;; Registers used:
  8115 ;;		wreg, status,2, status,0
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8121 ;;      Params:         0       4       0       0
  8122 ;;      Locals:         0       1       0       0
  8123 ;;      Temps:          0       0       0       0
  8124 ;;      Totals:         0       5       0       0
  8125 ;;Total ram usage:        5 bytes
  8126 ;; Hardware stack levels used: 1
  8127 ;; Hardware stack levels required when called: 3
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_setDisplayDigits
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text29
  8136   003848                     __ptext29:
  8137                           	callstack 0
  8138   003848                     ___lwmod:
  8139                           	callstack 26
  8140   003848  0100               	movlb	0	; () banked
  8141   00384A  5162               	movf	___lwmod@divisor& (0+255),w,b
  8142   00384C  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  8143   00384E  B4D8               	btfsc	status,2,c
  8144   003850  EF2C  F01C         	goto	u9611
  8145   003854  EF2E  F01C         	goto	u9610
  8146   003858                     u9611:
  8147   003858  EF52  F01C         	goto	l848
  8148   00385C                     u9610:
  8149   00385C                     
  8150                           ; BSR set to: 0
  8151   00385C  0E01               	movlw	1
  8152   00385E  6F64               	movwf	___lwmod@counter& (0+255),b
  8153   003860  EF36  F01C         	goto	l7569
  8154   003864                     l7567:
  8155                           
  8156                           ; BSR set to: 0
  8157   003864  90D8               	bcf	status,0,c
  8158   003866  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  8159   003868  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  8160   00386A  2B64               	incf	___lwmod@counter& (0+255),f,b
  8161   00386C                     l7569:
  8162                           
  8163                           ; BSR set to: 0
  8164   00386C  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  8165   00386E  EF3B  F01C         	goto	u9621
  8166   003872  EF3D  F01C         	goto	u9620
  8167   003876                     u9621:
  8168   003876  EF32  F01C         	goto	l7567
  8169   00387A                     u9620:
  8170   00387A                     l7571:
  8171                           
  8172                           ; BSR set to: 0
  8173   00387A  5162               	movf	___lwmod@divisor& (0+255),w,b
  8174   00387C  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  8175   00387E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  8176   003880  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  8177   003882  A0D8               	btfss	status,0,c
  8178   003884  EF46  F01C         	goto	u9631
  8179   003888  EF48  F01C         	goto	u9630
  8180   00388C                     u9631:
  8181   00388C  EF4C  F01C         	goto	l7575
  8182   003890                     u9630:
  8183   003890                     
  8184                           ; BSR set to: 0
  8185   003890  5162               	movf	___lwmod@divisor& (0+255),w,b
  8186   003892  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  8187   003894  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  8188   003896  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  8189   003898                     l7575:
  8190                           
  8191                           ; BSR set to: 0
  8192   003898  90D8               	bcf	status,0,c
  8193   00389A  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  8194   00389C  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  8195   00389E                     
  8196                           ; BSR set to: 0
  8197   00389E  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  8198   0038A0  EF3D  F01C         	goto	l7571
  8199   0038A4                     l848:
  8200                           
  8201                           ; BSR set to: 0
  8202   0038A4  C060  F060         	movff	___lwmod@dividend,?___lwmod
  8203   0038A8  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  8204   0038AC                     
  8205                           ; BSR set to: 0
  8206   0038AC  0012               	return		;funcret
  8207   0038AE                     __end_of___lwmod:
  8208                           	callstack 0
  8209                           
  8210 ;; *************** function ___lwdiv *****************
  8211 ;; Defined at:
  8212 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwdiv.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;  dividend        2    0[BANK0 ] unsigned int 
  8215 ;;  divisor         2    2[BANK0 ] unsigned int 
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;  quotient        2    5[BANK0 ] unsigned int 
  8218 ;;  counter         1    4[BANK0 ] unsigned char 
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  2    0[BANK0 ] unsigned int 
  8221 ;; Registers used:
  8222 ;;		wreg, status,2, status,0
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8228 ;;      Params:         0       4       0       0
  8229 ;;      Locals:         0       3       0       0
  8230 ;;      Temps:          0       0       0       0
  8231 ;;      Totals:         0       7       0       0
  8232 ;;Total ram usage:        7 bytes
  8233 ;; Hardware stack levels used: 1
  8234 ;; Hardware stack levels required when called: 3
  8235 ;; This function calls:
  8236 ;;		Nothing
  8237 ;; This function is called by:
  8238 ;;		_setDisplayDigits
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           	psect	text30
  8243   0036EC                     __ptext30:
  8244                           	callstack 0
  8245   0036EC                     ___lwdiv:
  8246                           	callstack 26
  8247   0036EC  0E00               	movlw	0
  8248   0036EE  0100               	movlb	0	; () banked
  8249   0036F0  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  8250   0036F2  0E00               	movlw	0
  8251   0036F4  6F65               	movwf	___lwdiv@quotient& (0+255),b
  8252   0036F6                     
  8253                           ; BSR set to: 0
  8254   0036F6  5162               	movf	___lwdiv@divisor& (0+255),w,b
  8255   0036F8  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  8256   0036FA  B4D8               	btfsc	status,2,c
  8257   0036FC  EF82  F01B         	goto	u9581
  8258   003700  EF84  F01B         	goto	u9580
  8259   003704                     u9581:
  8260   003704  EFAC  F01B         	goto	l838
  8261   003708                     u9580:
  8262   003708                     
  8263                           ; BSR set to: 0
  8264   003708  0E01               	movlw	1
  8265   00370A  6F64               	movwf	___lwdiv@counter& (0+255),b
  8266   00370C  EF8C  F01B         	goto	l7549
  8267   003710                     l7547:
  8268                           
  8269                           ; BSR set to: 0
  8270   003710  90D8               	bcf	status,0,c
  8271   003712  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  8272   003714  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  8273   003716  2B64               	incf	___lwdiv@counter& (0+255),f,b
  8274   003718                     l7549:
  8275                           
  8276                           ; BSR set to: 0
  8277   003718  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  8278   00371A  EF91  F01B         	goto	u9591
  8279   00371E  EF93  F01B         	goto	u9590
  8280   003722                     u9591:
  8281   003722  EF88  F01B         	goto	l7547
  8282   003726                     u9590:
  8283   003726                     l7551:
  8284                           
  8285                           ; BSR set to: 0
  8286   003726  90D8               	bcf	status,0,c
  8287   003728  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  8288   00372A  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  8289   00372C                     
  8290                           ; BSR set to: 0
  8291   00372C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  8292   00372E  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  8293   003730  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8294   003732  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  8295   003734  A0D8               	btfss	status,0,c
  8296   003736  EF9F  F01B         	goto	u9601
  8297   00373A  EFA1  F01B         	goto	u9600
  8298   00373E                     u9601:
  8299   00373E  EFA6  F01B         	goto	l7559
  8300   003742                     u9600:
  8301   003742                     
  8302                           ; BSR set to: 0
  8303   003742  5162               	movf	___lwdiv@divisor& (0+255),w,b
  8304   003744  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  8305   003746  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  8306   003748  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  8307   00374A                     
  8308                           ; BSR set to: 0
  8309   00374A  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  8310   00374C                     l7559:
  8311                           
  8312                           ; BSR set to: 0
  8313   00374C  90D8               	bcf	status,0,c
  8314   00374E  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  8315   003750  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  8316   003752                     
  8317                           ; BSR set to: 0
  8318   003752  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  8319   003754  EF93  F01B         	goto	l7551
  8320   003758                     l838:
  8321                           
  8322                           ; BSR set to: 0
  8323   003758  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  8324   00375C  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8325   003760                     
  8326                           ; BSR set to: 0
  8327   003760  0012               	return		;funcret
  8328   003762                     __end_of___lwdiv:
  8329                           	callstack 0
  8330                           
  8331 ;; *************** function ___fltol *****************
  8332 ;; Defined at:
  8333 ;;		line 43 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/fltol.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;  f1              4   39[BANK0 ] unsigned int 
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;  exp1            1   48[BANK0 ] unsigned char 
  8338 ;;  sign1           1   47[BANK0 ] unsigned char 
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  4   39[BANK0 ] long 
  8341 ;; Registers used:
  8342 ;;		wreg, status,2, status,0
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8348 ;;      Params:         0       4       0       0
  8349 ;;      Locals:         0       2       0       0
  8350 ;;      Temps:          0       4       0       0
  8351 ;;      Totals:         0      10       0       0
  8352 ;;Total ram usage:       10 bytes
  8353 ;; Hardware stack levels used: 1
  8354 ;; Hardware stack levels required when called: 3
  8355 ;; This function calls:
  8356 ;;		Nothing
  8357 ;; This function is called by:
  8358 ;;		_setDisplayDigits
  8359 ;;		_efgtoa
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text31
  8364   002E26                     __ptext31:
  8365                           	callstack 0
  8366   002E26                     ___fltol:
  8367                           	callstack 23
  8368   002E26  0100               	movlb	0	; () banked
  8369   002E28  3589               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8370   002E2A  358A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8371   002E2C  6F90               	movwf	___fltol@exp1& (0+255),b
  8372   002E2E  5190               	movf	___fltol@exp1& (0+255),w,b
  8373   002E30  A4D8               	btfss	status,2,c
  8374   002E32  EF1D  F017         	goto	u8791
  8375   002E36  EF1F  F017         	goto	u8790
  8376   002E3A                     u8791:
  8377   002E3A  EF29  F017         	goto	l7039
  8378   002E3E                     u8790:
  8379   002E3E                     l7035:
  8380                           
  8381                           ; BSR set to: 0
  8382   002E3E  0E00               	movlw	0
  8383   002E40  6F87               	movwf	?___fltol& (0+255),b
  8384   002E42  0E00               	movlw	0
  8385   002E44  6F88               	movwf	(?___fltol+1)& (0+255),b
  8386   002E46  0E00               	movlw	0
  8387   002E48  6F89               	movwf	(?___fltol+2)& (0+255),b
  8388   002E4A  0E00               	movlw	0
  8389   002E4C  6F8A               	movwf	(?___fltol+3)& (0+255),b
  8390   002E4E  EF96  F017         	goto	l644
  8391   002E52                     l7039:
  8392                           
  8393                           ; BSR set to: 0
  8394   002E52  C087  F08B         	movff	___fltol@f1,??___fltol
  8395   002E56  C088  F08C         	movff	___fltol@f1+1,??___fltol+1
  8396   002E5A  C089  F08D         	movff	___fltol@f1+2,??___fltol+2
  8397   002E5E  C08A  F08E         	movff	___fltol@f1+3,??___fltol+3
  8398   002E62  0E20               	movlw	32
  8399   002E64  EF39  F017         	goto	u8800
  8400   002E68                     u8805:
  8401   002E68  90D8               	bcf	status,0,c
  8402   002E6A  338E               	rrcf	(??___fltol+3)& (0+255),f,b
  8403   002E6C  338D               	rrcf	(??___fltol+2)& (0+255),f,b
  8404   002E6E  338C               	rrcf	(??___fltol+1)& (0+255),f,b
  8405   002E70  338B               	rrcf	??___fltol& (0+255),f,b
  8406   002E72                     u8800:
  8407   002E72  2EE8               	decfsz	wreg,f,c
  8408   002E74  EF34  F017         	goto	u8805
  8409   002E78  518B               	movf	??___fltol& (0+255),w,b
  8410   002E7A  6F8F               	movwf	___fltol@sign1& (0+255),b
  8411   002E7C                     
  8412                           ; BSR set to: 0
  8413   002E7C  8F89               	bsf	(___fltol@f1+2)& (0+255),7,b
  8414   002E7E                     
  8415                           ; BSR set to: 0
  8416   002E7E  0EFF               	movlw	255
  8417   002E80  1787               	andwf	___fltol@f1& (0+255),f,b
  8418   002E82  0EFF               	movlw	255
  8419   002E84  1788               	andwf	(___fltol@f1+1)& (0+255),f,b
  8420   002E86  0EFF               	movlw	255
  8421   002E88  1789               	andwf	(___fltol@f1+2)& (0+255),f,b
  8422   002E8A  0E00               	movlw	0
  8423   002E8C  178A               	andwf	(___fltol@f1+3)& (0+255),f,b
  8424   002E8E                     
  8425                           ; BSR set to: 0
  8426   002E8E  0E96               	movlw	150
  8427   002E90  5F90               	subwf	___fltol@exp1& (0+255),f,b
  8428   002E92                     
  8429                           ; BSR set to: 0
  8430   002E92  BF90               	btfsc	___fltol@exp1& (0+255),7,b
  8431   002E94  EF50  F017         	goto	u8810
  8432   002E98  EF4E  F017         	goto	u8811
  8433   002E9C                     u8811:
  8434   002E9C  EF66  F017         	goto	l7059
  8435   002EA0                     u8810:
  8436   002EA0                     
  8437                           ; BSR set to: 0
  8438   002EA0  5190               	movf	___fltol@exp1& (0+255),w,b
  8439   002EA2  0A80               	xorlw	128
  8440   002EA4  0F97               	addlw	151
  8441   002EA6  B0D8               	btfsc	status,0,c
  8442   002EA8  EF58  F017         	goto	u8821
  8443   002EAC  EF5A  F017         	goto	u8820
  8444   002EB0                     u8821:
  8445   002EB0  EF5C  F017         	goto	l7055
  8446   002EB4                     u8820:
  8447   002EB4  EF1F  F017         	goto	l7035
  8448   002EB8                     l7055:
  8449                           
  8450                           ; BSR set to: 0
  8451   002EB8  90D8               	bcf	status,0,c
  8452   002EBA  338A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8453   002EBC  3389               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8454   002EBE  3388               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8455   002EC0  3387               	rrcf	___fltol@f1& (0+255),f,b
  8456   002EC2                     
  8457                           ; BSR set to: 0
  8458   002EC2  3F90               	incfsz	___fltol@exp1& (0+255),f,b
  8459   002EC4  EF5C  F017         	goto	l7055
  8460   002EC8  EF7E  F017         	goto	l7069
  8461   002ECC                     l7059:
  8462                           
  8463                           ; BSR set to: 0
  8464   002ECC  0E1F               	movlw	31
  8465   002ECE  6590               	cpfsgt	___fltol@exp1& (0+255),b
  8466   002ED0  EF6C  F017         	goto	u8831
  8467   002ED4  EF6E  F017         	goto	u8830
  8468   002ED8                     u8831:
  8469   002ED8  EF76  F017         	goto	l7067
  8470   002EDC                     u8830:
  8471   002EDC  EF1F  F017         	goto	l7035
  8472   002EE0                     l7065:
  8473                           
  8474                           ; BSR set to: 0
  8475   002EE0  90D8               	bcf	status,0,c
  8476   002EE2  3787               	rlcf	___fltol@f1& (0+255),f,b
  8477   002EE4  3788               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8478   002EE6  3789               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8479   002EE8  378A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8480   002EEA  0790               	decf	___fltol@exp1& (0+255),f,b
  8481   002EEC                     l7067:
  8482                           
  8483                           ; BSR set to: 0
  8484   002EEC  5190               	movf	___fltol@exp1& (0+255),w,b
  8485   002EEE  A4D8               	btfss	status,2,c
  8486   002EF0  EF7C  F017         	goto	u8841
  8487   002EF4  EF7E  F017         	goto	u8840
  8488   002EF8                     u8841:
  8489   002EF8  EF70  F017         	goto	l7065
  8490   002EFC                     u8840:
  8491   002EFC                     l7069:
  8492                           
  8493                           ; BSR set to: 0
  8494   002EFC  518F               	movf	___fltol@sign1& (0+255),w,b
  8495   002EFE  B4D8               	btfsc	status,2,c
  8496   002F00  EF84  F017         	goto	u8851
  8497   002F04  EF86  F017         	goto	u8850
  8498   002F08                     u8851:
  8499   002F08  EF8E  F017         	goto	l7073
  8500   002F0C                     u8850:
  8501   002F0C                     
  8502                           ; BSR set to: 0
  8503   002F0C  1F8A               	comf	(___fltol@f1+3)& (0+255),f,b
  8504   002F0E  1F89               	comf	(___fltol@f1+2)& (0+255),f,b
  8505   002F10  1F88               	comf	(___fltol@f1+1)& (0+255),f,b
  8506   002F12  6D87               	negf	___fltol@f1& (0+255),b
  8507   002F14  0E00               	movlw	0
  8508   002F16  2388               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8509   002F18  2389               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8510   002F1A  238A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8511   002F1C                     l7073:
  8512                           
  8513                           ; BSR set to: 0
  8514   002F1C  C087  F087         	movff	___fltol@f1,?___fltol
  8515   002F20  C088  F088         	movff	___fltol@f1+1,?___fltol+1
  8516   002F24  C089  F089         	movff	___fltol@f1+2,?___fltol+2
  8517   002F28  C08A  F08A         	movff	___fltol@f1+3,?___fltol+3
  8518   002F2C                     l644:
  8519                           
  8520                           ; BSR set to: 0
  8521   002F2C  0012               	return		;funcret
  8522   002F2E                     __end_of___fltol:
  8523                           	callstack 0
  8524                           
  8525 ;; *************** function ___flmul *****************
  8526 ;; Defined at:
  8527 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcmul.c"
  8528 ;; Parameters:    Size  Location     Type
  8529 ;;  b               4   14[BANK0 ] long 
  8530 ;;  a               4   18[BANK0 ] long 
  8531 ;; Auto vars:     Size  Location     Type
  8532 ;;  prod            4   33[BANK0 ] struct .
  8533 ;;  grs             4   29[BANK0 ] unsigned long 
  8534 ;;  temp            2   37[BANK0 ] struct .
  8535 ;;  bexp            1   28[BANK0 ] unsigned char 
  8536 ;;  aexp            1   27[BANK0 ] unsigned char 
  8537 ;;  sign            1   26[BANK0 ] unsigned char 
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  4   14[BANK0 ] unsigned char 
  8540 ;; Registers used:
  8541 ;;		wreg, status,2, status,0, prodl, prodh
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8547 ;;      Params:         0       8       0       0
  8548 ;;      Locals:         0      13       0       0
  8549 ;;      Temps:          0       4       0       0
  8550 ;;      Totals:         0      25       0       0
  8551 ;;Total ram usage:       25 bytes
  8552 ;; Hardware stack levels used: 1
  8553 ;; Hardware stack levels required when called: 3
  8554 ;; This function calls:
  8555 ;;		Nothing
  8556 ;; This function is called by:
  8557 ;;		_main
  8558 ;;		_setDisplayDigits
  8559 ;;		_efgtoa
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           	psect	text32
  8564   0011CC                     __ptext32:
  8565                           	callstack 0
  8566   0011CC                     ___flmul:
  8567                           	callstack 23
  8568   0011CC  0100               	movlb	0	; () banked
  8569   0011CE  5171               	movf	(___flmul@b+3)& (0+255),w,b
  8570   0011D0  0B80               	andlw	128
  8571   0011D2  6F7A               	movwf	___flmul@sign& (0+255),b
  8572   0011D4  5171               	movf	(___flmul@b+3)& (0+255),w,b
  8573   0011D6  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  8574   0011D8  6F7C               	movwf	___flmul@bexp& (0+255),b
  8575   0011DA                     
  8576                           ; BSR set to: 0
  8577   0011DA  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
  8578   0011DC  EFF2  F008         	goto	u8511
  8579   0011E0  EFF4  F008         	goto	u8510
  8580   0011E4                     u8511:
  8581   0011E4  EFF5  F008         	goto	l6859
  8582   0011E8                     u8510:
  8583   0011E8                     
  8584                           ; BSR set to: 0
  8585   0011E8  817C               	bsf	___flmul@bexp& (0+255),0,b
  8586   0011EA                     l6859:
  8587                           
  8588                           ; BSR set to: 0
  8589   0011EA  517C               	movf	___flmul@bexp& (0+255),w,b
  8590   0011EC  B4D8               	btfsc	status,2,c
  8591   0011EE  EFFB  F008         	goto	u8521
  8592   0011F2  EFFD  F008         	goto	u8520
  8593   0011F6                     u8521:
  8594   0011F6  EF10  F009         	goto	l6867
  8595   0011FA                     u8520:
  8596   0011FA                     
  8597                           ; BSR set to: 0
  8598   0011FA  297C               	incf	___flmul@bexp& (0+255),w,b
  8599   0011FC  A4D8               	btfss	status,2,c
  8600   0011FE  EF03  F009         	goto	u8531
  8601   001202  EF05  F009         	goto	u8530
  8602   001206                     u8531:
  8603   001206  EF0D  F009         	goto	l6865
  8604   00120A                     u8530:
  8605   00120A                     
  8606                           ; BSR set to: 0
  8607   00120A  0E00               	movlw	0
  8608   00120C  6F6E               	movwf	___flmul@b& (0+255),b
  8609   00120E  0E00               	movlw	0
  8610   001210  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  8611   001212  0E00               	movlw	0
  8612   001214  6F70               	movwf	(___flmul@b+2)& (0+255),b
  8613   001216  0E00               	movlw	0
  8614   001218  6F71               	movwf	(___flmul@b+3)& (0+255),b
  8615   00121A                     l6865:
  8616                           
  8617                           ; BSR set to: 0
  8618   00121A  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  8619   00121C  EF18  F009         	goto	l6869
  8620   001220                     l6867:
  8621                           
  8622                           ; BSR set to: 0
  8623   001220  0E00               	movlw	0
  8624   001222  6F6E               	movwf	___flmul@b& (0+255),b
  8625   001224  0E00               	movlw	0
  8626   001226  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  8627   001228  0E00               	movlw	0
  8628   00122A  6F70               	movwf	(___flmul@b+2)& (0+255),b
  8629   00122C  0E00               	movlw	0
  8630   00122E  6F71               	movwf	(___flmul@b+3)& (0+255),b
  8631   001230                     l6869:
  8632                           
  8633                           ; BSR set to: 0
  8634   001230  5175               	movf	(___flmul@a+3)& (0+255),w,b
  8635   001232  0B80               	andlw	128
  8636   001234  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  8637   001236                     
  8638                           ; BSR set to: 0
  8639   001236  5175               	movf	(___flmul@a+3)& (0+255),w,b
  8640   001238  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  8641   00123A  6F7B               	movwf	___flmul@aexp& (0+255),b
  8642   00123C                     
  8643                           ; BSR set to: 0
  8644   00123C  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
  8645   00123E  EF23  F009         	goto	u8541
  8646   001242  EF25  F009         	goto	u8540
  8647   001246                     u8541:
  8648   001246  EF26  F009         	goto	l6877
  8649   00124A                     u8540:
  8650   00124A                     
  8651                           ; BSR set to: 0
  8652   00124A  817B               	bsf	___flmul@aexp& (0+255),0,b
  8653   00124C                     l6877:
  8654                           
  8655                           ; BSR set to: 0
  8656   00124C  517B               	movf	___flmul@aexp& (0+255),w,b
  8657   00124E  B4D8               	btfsc	status,2,c
  8658   001250  EF2C  F009         	goto	u8551
  8659   001254  EF2E  F009         	goto	u8550
  8660   001258                     u8551:
  8661   001258  EF41  F009         	goto	l6885
  8662   00125C                     u8550:
  8663   00125C                     
  8664                           ; BSR set to: 0
  8665   00125C  297B               	incf	___flmul@aexp& (0+255),w,b
  8666   00125E  A4D8               	btfss	status,2,c
  8667   001260  EF34  F009         	goto	u8561
  8668   001264  EF36  F009         	goto	u8560
  8669   001268                     u8561:
  8670   001268  EF3E  F009         	goto	l6883
  8671   00126C                     u8560:
  8672   00126C                     
  8673                           ; BSR set to: 0
  8674   00126C  0E00               	movlw	0
  8675   00126E  6F72               	movwf	___flmul@a& (0+255),b
  8676   001270  0E00               	movlw	0
  8677   001272  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8678   001274  0E00               	movlw	0
  8679   001276  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8680   001278  0E00               	movlw	0
  8681   00127A  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8682   00127C                     l6883:
  8683                           
  8684                           ; BSR set to: 0
  8685   00127C  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  8686   00127E  EF49  F009         	goto	l961
  8687   001282                     l6885:
  8688                           
  8689                           ; BSR set to: 0
  8690   001282  0E00               	movlw	0
  8691   001284  6F72               	movwf	___flmul@a& (0+255),b
  8692   001286  0E00               	movlw	0
  8693   001288  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8694   00128A  0E00               	movlw	0
  8695   00128C  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8696   00128E  0E00               	movlw	0
  8697   001290  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8698   001292                     l961:
  8699                           
  8700                           ; BSR set to: 0
  8701   001292  517B               	movf	___flmul@aexp& (0+255),w,b
  8702   001294  B4D8               	btfsc	status,2,c
  8703   001296  EF4F  F009         	goto	u8571
  8704   00129A  EF51  F009         	goto	u8570
  8705   00129E                     u8571:
  8706   00129E  EF59  F009         	goto	l6889
  8707   0012A2                     u8570:
  8708   0012A2                     
  8709                           ; BSR set to: 0
  8710   0012A2  517C               	movf	___flmul@bexp& (0+255),w,b
  8711   0012A4  A4D8               	btfss	status,2,c
  8712   0012A6  EF57  F009         	goto	u8581
  8713   0012AA  EF59  F009         	goto	u8580
  8714   0012AE                     u8581:
  8715   0012AE  EF63  F009         	goto	l6893
  8716   0012B2                     u8580:
  8717   0012B2                     l6889:
  8718                           
  8719                           ; BSR set to: 0
  8720   0012B2  0E00               	movlw	0
  8721   0012B4  6F6E               	movwf	?___flmul& (0+255),b
  8722   0012B6  0E00               	movlw	0
  8723   0012B8  6F6F               	movwf	(?___flmul+1)& (0+255),b
  8724   0012BA  0E00               	movlw	0
  8725   0012BC  6F70               	movwf	(?___flmul+2)& (0+255),b
  8726   0012BE  0E00               	movlw	0
  8727   0012C0  6F71               	movwf	(?___flmul+3)& (0+255),b
  8728   0012C2  EFF9  F00A         	goto	l965
  8729   0012C6                     l6893:
  8730                           
  8731                           ; BSR set to: 0
  8732   0012C6  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8733   0012C8  036E               	mulwf	___flmul@b& (0+255),b
  8734   0012CA  CFF3 F085          	movff	prodl,___flmul@temp
  8735   0012CE  CFF4 F086          	movff	prodh,___flmul@temp+1
  8736   0012D2                     
  8737                           ; BSR set to: 0
  8738   0012D2  5185               	movf	___flmul@temp& (0+255),w,b
  8739   0012D4  6F7D               	movwf	___flmul@grs& (0+255),b
  8740   0012D6  6B7E               	clrf	(___flmul@grs+1)& (0+255),b
  8741   0012D8  6B7F               	clrf	(___flmul@grs+2)& (0+255),b
  8742   0012DA  6B80               	clrf	(___flmul@grs+3)& (0+255),b
  8743   0012DC                     
  8744                           ; BSR set to: 0
  8745   0012DC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8746   0012DE  6F81               	movwf	___flmul@prod& (0+255),b
  8747   0012E0  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  8748   0012E2  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  8749   0012E4  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  8750   0012E6  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8751   0012E8  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8752   0012EA  CFF3 F085          	movff	prodl,___flmul@temp
  8753   0012EE  CFF4 F086          	movff	prodh,___flmul@temp+1
  8754   0012F2                     
  8755                           ; BSR set to: 0
  8756   0012F2  5185               	movf	___flmul@temp& (0+255),w,b
  8757   0012F4  277D               	addwf	___flmul@grs& (0+255),f,b
  8758   0012F6  0E00               	movlw	0
  8759   0012F8  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8760   0012FA  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8761   0012FC  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8762   0012FE                     
  8763                           ; BSR set to: 0
  8764   0012FE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8765   001300  2781               	addwf	___flmul@prod& (0+255),f,b
  8766   001302  0E00               	movlw	0
  8767   001304  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8768   001306  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8769   001308  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8770   00130A  5172               	movf	___flmul@a& (0+255),w,b
  8771   00130C  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8772   00130E  CFF3 F085          	movff	prodl,___flmul@temp
  8773   001312  CFF4 F086          	movff	prodh,___flmul@temp+1
  8774   001316                     
  8775                           ; BSR set to: 0
  8776   001316  5185               	movf	___flmul@temp& (0+255),w,b
  8777   001318  277D               	addwf	___flmul@grs& (0+255),f,b
  8778   00131A  0E00               	movlw	0
  8779   00131C  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8780   00131E  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8781   001320  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8782   001322                     
  8783                           ; BSR set to: 0
  8784   001322  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8785   001324  2781               	addwf	___flmul@prod& (0+255),f,b
  8786   001326  0E00               	movlw	0
  8787   001328  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8788   00132A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8789   00132C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8790   00132E                     
  8791                           ; BSR set to: 0
  8792   00132E  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
  8793   001332  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
  8794   001336  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
  8795   00133A  6B7D               	clrf	___flmul@grs& (0+255),b
  8796   00133C                     
  8797                           ; BSR set to: 0
  8798   00133C  5172               	movf	___flmul@a& (0+255),w,b
  8799   00133E  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8800   001340  CFF3 F085          	movff	prodl,___flmul@temp
  8801   001344  CFF4 F086          	movff	prodh,___flmul@temp+1
  8802   001348                     
  8803                           ; BSR set to: 0
  8804   001348  5185               	movf	___flmul@temp& (0+255),w,b
  8805   00134A  277D               	addwf	___flmul@grs& (0+255),f,b
  8806   00134C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8807   00134E  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8808   001350  0E00               	movlw	0
  8809   001352  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8810   001354  0E00               	movlw	0
  8811   001356  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8812   001358                     
  8813                           ; BSR set to: 0
  8814   001358  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8815   00135A  036E               	mulwf	___flmul@b& (0+255),b
  8816   00135C  CFF3 F085          	movff	prodl,___flmul@temp
  8817   001360  CFF4 F086          	movff	prodh,___flmul@temp+1
  8818   001364                     
  8819                           ; BSR set to: 0
  8820   001364  5185               	movf	___flmul@temp& (0+255),w,b
  8821   001366  277D               	addwf	___flmul@grs& (0+255),f,b
  8822   001368  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8823   00136A  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8824   00136C  0E00               	movlw	0
  8825   00136E  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8826   001370  0E00               	movlw	0
  8827   001372  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8828   001374                     
  8829                           ; BSR set to: 0
  8830   001374  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
  8831   001378  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
  8832   00137C  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
  8833   001380  6B7D               	clrf	___flmul@grs& (0+255),b
  8834   001382  5172               	movf	___flmul@a& (0+255),w,b
  8835   001384  036E               	mulwf	___flmul@b& (0+255),b
  8836   001386  CFF3 F085          	movff	prodl,___flmul@temp
  8837   00138A  CFF4 F086          	movff	prodh,___flmul@temp+1
  8838   00138E                     
  8839                           ; BSR set to: 0
  8840   00138E  5185               	movf	___flmul@temp& (0+255),w,b
  8841   001390  277D               	addwf	___flmul@grs& (0+255),f,b
  8842   001392  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8843   001394  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8844   001396  0E00               	movlw	0
  8845   001398  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8846   00139A  0E00               	movlw	0
  8847   00139C  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8848   00139E                     
  8849                           ; BSR set to: 0
  8850   00139E  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8851   0013A0  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8852   0013A2  CFF3 F085          	movff	prodl,___flmul@temp
  8853   0013A6  CFF4 F086          	movff	prodh,___flmul@temp+1
  8854   0013AA  5185               	movf	___flmul@temp& (0+255),w,b
  8855   0013AC  2781               	addwf	___flmul@prod& (0+255),f,b
  8856   0013AE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8857   0013B0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8858   0013B2  0E00               	movlw	0
  8859   0013B4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8860   0013B6  0E00               	movlw	0
  8861   0013B8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8862   0013BA                     
  8863                           ; BSR set to: 0
  8864   0013BA  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8865   0013BC  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8866   0013BE  CFF3 F085          	movff	prodl,___flmul@temp
  8867   0013C2  CFF4 F086          	movff	prodh,___flmul@temp+1
  8868   0013C6                     
  8869                           ; BSR set to: 0
  8870   0013C6  5185               	movf	___flmul@temp& (0+255),w,b
  8871   0013C8  2781               	addwf	___flmul@prod& (0+255),f,b
  8872   0013CA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8873   0013CC  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8874   0013CE  0E00               	movlw	0
  8875   0013D0  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8876   0013D2  0E00               	movlw	0
  8877   0013D4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8878   0013D6  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8879   0013D8  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8880   0013DA  CFF3 F085          	movff	prodl,___flmul@temp
  8881   0013DE  CFF4 F086          	movff	prodh,___flmul@temp+1
  8882   0013E2                     
  8883                           ; BSR set to: 0
  8884   0013E2  5185               	movf	___flmul@temp& (0+255),w,b
  8885   0013E4  6F76               	movwf	??___flmul& (0+255),b
  8886   0013E6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8887   0013E8  6F77               	movwf	(??___flmul+1)& (0+255),b
  8888   0013EA  6B78               	clrf	(??___flmul+2)& (0+255),b
  8889   0013EC  6B79               	clrf	(??___flmul+3)& (0+255),b
  8890   0013EE  C078  F079         	movff	??___flmul+2,??___flmul+3
  8891   0013F2  C077  F078         	movff	??___flmul+1,??___flmul+2
  8892   0013F6  C076  F077         	movff	??___flmul,??___flmul+1
  8893   0013FA  6B76               	clrf	??___flmul& (0+255),b
  8894   0013FC  5176               	movf	??___flmul& (0+255),w,b
  8895   0013FE  2781               	addwf	___flmul@prod& (0+255),f,b
  8896   001400  5177               	movf	(??___flmul+1)& (0+255),w,b
  8897   001402  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8898   001404  5178               	movf	(??___flmul+2)& (0+255),w,b
  8899   001406  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8900   001408  5179               	movf	(??___flmul+3)& (0+255),w,b
  8901   00140A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8902   00140C                     
  8903                           ; BSR set to: 0
  8904   00140C  C07D  F076         	movff	___flmul@grs,??___flmul
  8905   001410  C07E  F077         	movff	___flmul@grs+1,??___flmul+1
  8906   001414  C07F  F078         	movff	___flmul@grs+2,??___flmul+2
  8907   001418  C080  F079         	movff	___flmul@grs+3,??___flmul+3
  8908   00141C  0E19               	movlw	25
  8909   00141E  EF16  F00A         	goto	u8590
  8910   001422                     u8595:
  8911   001422  90D8               	bcf	status,0,c
  8912   001424  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  8913   001426  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  8914   001428  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  8915   00142A  3376               	rrcf	??___flmul& (0+255),f,b
  8916   00142C                     u8590:
  8917   00142C  2EE8               	decfsz	wreg,f,c
  8918   00142E  EF11  F00A         	goto	u8595
  8919   001432  5176               	movf	??___flmul& (0+255),w,b
  8920   001434  2781               	addwf	___flmul@prod& (0+255),f,b
  8921   001436  5177               	movf	(??___flmul+1)& (0+255),w,b
  8922   001438  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8923   00143A  5178               	movf	(??___flmul+2)& (0+255),w,b
  8924   00143C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8925   00143E  5179               	movf	(??___flmul+3)& (0+255),w,b
  8926   001440  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8927   001442                     
  8928                           ; BSR set to: 0
  8929   001442  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
  8930   001446  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
  8931   00144A  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
  8932   00144E  6B7D               	clrf	___flmul@grs& (0+255),b
  8933   001450                     
  8934                           ; BSR set to: 0
  8935   001450  517B               	movf	___flmul@aexp& (0+255),w,b
  8936   001452  C07C  F076         	movff	___flmul@bexp,??___flmul
  8937   001456  6B77               	clrf	(??___flmul+1)& (0+255),b
  8938   001458  2776               	addwf	??___flmul& (0+255),f,b
  8939   00145A  0E00               	movlw	0
  8940   00145C  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  8941   00145E  0E82               	movlw	130
  8942   001460  2576               	addwf	??___flmul& (0+255),w,b
  8943   001462  6F85               	movwf	___flmul@temp& (0+255),b
  8944   001464  0EFF               	movlw	255
  8945   001466  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  8946   001468  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  8947   00146A  EF4C  F00A         	goto	l6941
  8948   00146E                     l6935:
  8949                           
  8950                           ; BSR set to: 0
  8951   00146E  90D8               	bcf	status,0,c
  8952   001470  3781               	rlcf	___flmul@prod& (0+255),f,b
  8953   001472  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8954   001474  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8955   001476  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8956   001478                     
  8957                           ; BSR set to: 0
  8958   001478  AF80               	btfss	(___flmul@grs+3)& (0+255),7,b
  8959   00147A  EF41  F00A         	goto	u8601
  8960   00147E  EF43  F00A         	goto	u8600
  8961   001482                     u8601:
  8962   001482  EF44  F00A         	goto	l968
  8963   001486                     u8600:
  8964   001486                     
  8965                           ; BSR set to: 0
  8966   001486  8181               	bsf	___flmul@prod& (0+255),0,b
  8967   001488                     l968:
  8968                           
  8969                           ; BSR set to: 0
  8970   001488  90D8               	bcf	status,0,c
  8971   00148A  377D               	rlcf	___flmul@grs& (0+255),f,b
  8972   00148C  377E               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8973   00148E  377F               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8974   001490  3780               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8975   001492  0785               	decf	___flmul@temp& (0+255),f,b
  8976   001494  A0D8               	btfss	status,0,c
  8977   001496  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  8978   001498                     l6941:
  8979                           
  8980                           ; BSR set to: 0
  8981   001498  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  8982   00149A  EF51  F00A         	goto	u8611
  8983   00149E  EF53  F00A         	goto	u8610
  8984   0014A2                     u8611:
  8985   0014A2  EF37  F00A         	goto	l6935
  8986   0014A6                     u8610:
  8987   0014A6                     
  8988                           ; BSR set to: 0
  8989   0014A6  6B7B               	clrf	___flmul@aexp& (0+255),b
  8990   0014A8  AF80               	btfss	(___flmul@grs+3)& (0+255),7,b
  8991   0014AA  EF59  F00A         	goto	u8621
  8992   0014AE  EF5B  F00A         	goto	u8620
  8993   0014B2                     u8621:
  8994   0014B2  EF7F  F00A         	goto	l970
  8995   0014B6                     u8620:
  8996   0014B6                     
  8997                           ; BSR set to: 0
  8998   0014B6  0EFF               	movlw	255
  8999   0014B8  157D               	andwf	___flmul@grs& (0+255),w,b
  9000   0014BA  6F76               	movwf	??___flmul& (0+255),b
  9001   0014BC  0EFF               	movlw	255
  9002   0014BE  157E               	andwf	(___flmul@grs+1)& (0+255),w,b
  9003   0014C0  6F77               	movwf	(??___flmul+1)& (0+255),b
  9004   0014C2  0EFF               	movlw	255
  9005   0014C4  157F               	andwf	(___flmul@grs+2)& (0+255),w,b
  9006   0014C6  6F78               	movwf	(??___flmul+2)& (0+255),b
  9007   0014C8  0E7F               	movlw	127
  9008   0014CA  1580               	andwf	(___flmul@grs+3)& (0+255),w,b
  9009   0014CC  6F79               	movwf	(??___flmul+3)& (0+255),b
  9010   0014CE  5176               	movf	??___flmul& (0+255),w,b
  9011   0014D0  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  9012   0014D2  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  9013   0014D4  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  9014   0014D6  B4D8               	btfsc	status,2,c
  9015   0014D8  EF70  F00A         	goto	u8631
  9016   0014DC  EF72  F00A         	goto	u8630
  9017   0014E0                     u8631:
  9018   0014E0  EF76  F00A         	goto	l971
  9019   0014E4                     u8630:
  9020   0014E4                     l6945:
  9021                           
  9022                           ; BSR set to: 0
  9023   0014E4  0E01               	movlw	1
  9024   0014E6  6F7B               	movwf	___flmul@aexp& (0+255),b
  9025   0014E8  EF7F  F00A         	goto	l970
  9026   0014EC                     l971:
  9027                           
  9028                           ; BSR set to: 0
  9029   0014EC  A181               	btfss	___flmul@prod& (0+255),0,b
  9030   0014EE  EF7B  F00A         	goto	u8641
  9031   0014F2  EF7D  F00A         	goto	u8640
  9032   0014F6                     u8641:
  9033   0014F6  EF7F  F00A         	goto	l970
  9034   0014FA                     u8640:
  9035   0014FA  EF72  F00A         	goto	l6945
  9036   0014FE                     l970:
  9037                           
  9038                           ; BSR set to: 0
  9039   0014FE  517B               	movf	___flmul@aexp& (0+255),w,b
  9040   001500  B4D8               	btfsc	status,2,c
  9041   001502  EF85  F00A         	goto	u8651
  9042   001506  EF87  F00A         	goto	u8650
  9043   00150A                     u8651:
  9044   00150A  EFAB  F00A         	goto	l6957
  9045   00150E                     u8650:
  9046   00150E                     
  9047                           ; BSR set to: 0
  9048   00150E  0E01               	movlw	1
  9049   001510  2781               	addwf	___flmul@prod& (0+255),f,b
  9050   001512  0E00               	movlw	0
  9051   001514  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9052   001516  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9053   001518  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9054   00151A                     
  9055                           ; BSR set to: 0
  9056   00151A  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  9057   00151C  EF92  F00A         	goto	u8661
  9058   001520  EF94  F00A         	goto	u8660
  9059   001524                     u8661:
  9060   001524  EFAB  F00A         	goto	l6957
  9061   001528                     u8660:
  9062   001528                     
  9063                           ; BSR set to: 0
  9064   001528  C081  F076         	movff	___flmul@prod,??___flmul
  9065   00152C  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  9066   001530  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  9067   001534  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  9068   001538  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  9069   00153A  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  9070   00153C  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  9071   00153E  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  9072   001540  3376               	rrcf	??___flmul& (0+255),f,b
  9073   001542  C076  F081         	movff	??___flmul,___flmul@prod
  9074   001546  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  9075   00154A  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  9076   00154E  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  9077   001552                     
  9078                           ; BSR set to: 0
  9079   001552  4B85               	infsnz	___flmul@temp& (0+255),f,b
  9080   001554  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  9081   001556                     l6957:
  9082                           
  9083                           ; BSR set to: 0
  9084   001556  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9085   001558  EFB6  F00A         	goto	u8671
  9086   00155C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9087   00155E  E108               	bnz	u8670
  9088   001560  2985               	incf	___flmul@temp& (0+255),w,b
  9089   001562  A0D8               	btfss	status,0,c
  9090   001564  EFB6  F00A         	goto	u8671
  9091   001568  EFB8  F00A         	goto	u8670
  9092   00156C                     u8671:
  9093   00156C  EFC2  F00A         	goto	l6961
  9094   001570                     u8670:
  9095   001570                     
  9096                           ; BSR set to: 0
  9097   001570  0E00               	movlw	0
  9098   001572  6F81               	movwf	___flmul@prod& (0+255),b
  9099   001574  0E00               	movlw	0
  9100   001576  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  9101   001578  0E80               	movlw	128
  9102   00157A  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  9103   00157C  0E7F               	movlw	127
  9104   00157E  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9105   001580  EFEF  F00A         	goto	l6975
  9106   001584                     l6961:
  9107                           
  9108                           ; BSR set to: 0
  9109   001584  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9110   001586  EFCF  F00A         	goto	u8680
  9111   00158A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  9112   00158C  E106               	bnz	u8681
  9113   00158E  0585               	decf	___flmul@temp& (0+255),w,b
  9114   001590  B0D8               	btfsc	status,0,c
  9115   001592  EFCD  F00A         	goto	u8681
  9116   001596  EFCF  F00A         	goto	u8680
  9117   00159A                     u8681:
  9118   00159A  EFDA  F00A         	goto	l978
  9119   00159E                     u8680:
  9120   00159E                     
  9121                           ; BSR set to: 0
  9122   00159E  0E00               	movlw	0
  9123   0015A0  6F81               	movwf	___flmul@prod& (0+255),b
  9124   0015A2  0E00               	movlw	0
  9125   0015A4  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  9126   0015A6  0E00               	movlw	0
  9127   0015A8  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  9128   0015AA  0E00               	movlw	0
  9129   0015AC  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9130   0015AE                     
  9131                           ; BSR set to: 0
  9132   0015AE  6B7A               	clrf	___flmul@sign& (0+255),b
  9133   0015B0  EFEF  F00A         	goto	l6975
  9134   0015B4                     l978:
  9135                           
  9136                           ; BSR set to: 0
  9137   0015B4  C085  F07C         	movff	___flmul@temp,___flmul@bexp
  9138   0015B8                     
  9139                           ; BSR set to: 0
  9140   0015B8  0EFF               	movlw	255
  9141   0015BA  1781               	andwf	___flmul@prod& (0+255),f,b
  9142   0015BC  0EFF               	movlw	255
  9143   0015BE  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  9144   0015C0  0E7F               	movlw	127
  9145   0015C2  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  9146   0015C4  0E00               	movlw	0
  9147   0015C6  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  9148   0015C8                     
  9149                           ; BSR set to: 0
  9150   0015C8  A17C               	btfss	___flmul@bexp& (0+255),0,b
  9151   0015CA  EFE9  F00A         	goto	u8691
  9152   0015CE  EFEB  F00A         	goto	u8690
  9153   0015D2                     u8691:
  9154   0015D2  EFEC  F00A         	goto	l6973
  9155   0015D6                     u8690:
  9156   0015D6                     
  9157                           ; BSR set to: 0
  9158   0015D6  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  9159   0015D8                     l6973:
  9160                           
  9161                           ; BSR set to: 0
  9162   0015D8  90D8               	bcf	status,0,c
  9163   0015DA  317C               	rrcf	___flmul@bexp& (0+255),w,b
  9164   0015DC  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  9165   0015DE                     l6975:
  9166                           
  9167                           ; BSR set to: 0
  9168   0015DE  517A               	movf	___flmul@sign& (0+255),w,b
  9169   0015E0  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9170   0015E2                     
  9171                           ; BSR set to: 0
  9172   0015E2  C081  F06E         	movff	___flmul@prod,?___flmul
  9173   0015E6  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  9174   0015EA  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  9175   0015EE  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  9176   0015F2                     l965:
  9177                           
  9178                           ; BSR set to: 0
  9179   0015F2  0012               	return		;funcret
  9180   0015F4                     __end_of___flmul:
  9181                           	callstack 0
  9182                           
  9183 ;; *************** function _setButtonInterrupt *****************
  9184 ;; Defined at:
  9185 ;;		line 499 in file "main.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;		None
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;		None
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  1    wreg      void 
  9192 ;; Registers used:
  9193 ;;		None
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9199 ;;      Params:         0       0       0       0
  9200 ;;      Locals:         0       0       0       0
  9201 ;;      Temps:          0       0       0       0
  9202 ;;      Totals:         0       0       0       0
  9203 ;;Total ram usage:        0 bytes
  9204 ;; Hardware stack levels used: 1
  9205 ;; Hardware stack levels required when called: 3
  9206 ;; This function calls:
  9207 ;;		Nothing
  9208 ;; This function is called by:
  9209 ;;		_main
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           	psect	text33
  9214   003E2C                     __ptext33:
  9215                           	callstack 0
  9216   003E2C                     _setButtonInterrupt:
  9217                           	callstack 27
  9218   003E2C                     
  9219                           ;main.c: 501:     INTCON2bits.INTEDG1 = 1;
  9220   003E2C  8AF1               	bsf	241,5,c	;volatile
  9221                           
  9222                           ;main.c: 502:     INTCON2bits.INTEDG2 = 1;
  9223   003E2E  88F1               	bsf	241,4,c	;volatile
  9224                           
  9225                           ;main.c: 504:     INTCON3bits.INT1IE = 1;
  9226   003E30  86F0               	bsf	240,3,c	;volatile
  9227                           
  9228                           ;main.c: 505:     INTCON3bits.INT2IE = 1;
  9229   003E32  88F0               	bsf	240,4,c	;volatile
  9230                           
  9231                           ;main.c: 507:     INTCON3bits.INT1IP = 0;
  9232   003E34  9CF0               	bcf	240,6,c	;volatile
  9233                           
  9234                           ;main.c: 508:     INTCON3bits.INT2IP = 0;
  9235   003E36  9EF0               	bcf	240,7,c	;volatile
  9236                           
  9237                           ;main.c: 511:     INTCON3bits.INT1IF = 0;
  9238   003E38  90F0               	bcf	240,0,c	;volatile
  9239                           
  9240                           ;main.c: 512:     INTCON3bits.INT2IF = 0;
  9241   003E3A  92F0               	bcf	240,1,c	;volatile
  9242   003E3C  0012               	return		;funcret
  9243   003E3E                     __end_of_setButtonInterrupt:
  9244                           	callstack 0
  9245                           
  9246 ;; *************** function _adcSampling *****************
  9247 ;; Defined at:
  9248 ;;		line 139 in file "main.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;		None
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;		None
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  1    wreg      void 
  9255 ;; Registers used:
  9256 ;;		wreg, status,2
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9262 ;;      Params:         0       0       0       0
  9263 ;;      Locals:         0       0       0       0
  9264 ;;      Temps:          0       2       0       0
  9265 ;;      Totals:         0       2       0       0
  9266 ;;Total ram usage:        2 bytes
  9267 ;; Hardware stack levels used: 1
  9268 ;; Hardware stack levels required when called: 3
  9269 ;; This function calls:
  9270 ;;		Nothing
  9271 ;; This function is called by:
  9272 ;;		_main
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           	psect	text34
  9277   003D40                     __ptext34:
  9278                           	callstack 0
  9279   003D40                     _adcSampling:
  9280                           	callstack 27
  9281   003D40                     
  9282                           ;main.c: 141:     sampling = 1;
  9283   003D40  0E01               	movlw	1
  9284   003D42  0100               	movlb	0	; () banked
  9285   003D44  6FFE               	movwf	_sampling& (0+255),b
  9286   003D46                     
  9287                           ; BSR set to: 0
  9288                           ;main.c: 144:     ADCON0bits.GO = 1;
  9289   003D46  82C2               	bsf	194,1,c	;volatile
  9290   003D48                     l159:
  9291   003D48  B2C2               	btfsc	194,1,c	;volatile
  9292   003D4A  EFA9  F01E         	goto	u9651
  9293   003D4E  EFAB  F01E         	goto	u9650
  9294   003D52                     u9651:
  9295   003D52  EFA4  F01E         	goto	l159
  9296   003D56                     u9650:
  9297   003D56                     
  9298                           ;main.c: 148:     adcResult = ((uint16_t)ADRESH << 8) | ADRESL;
  9299   003D56  50C4               	movf	196,w,c	;volatile
  9300   003D58  0100               	movlb	0	; () banked
  9301   003D5A  6F60               	movwf	??_adcSampling& (0+255),b
  9302   003D5C  50C3               	movf	195,w,c	;volatile
  9303   003D5E  6FF6               	movwf	_adcResult& (0+255),b
  9304   003D60  C060  F0F7         	movff	??_adcSampling,_adcResult+1
  9305   003D64                     
  9306                           ; BSR set to: 0
  9307   003D64  0012               	return		;funcret
  9308   003D66                     __end_of_adcSampling:
  9309                           	callstack 0
  9310                           
  9311 ;; *************** function ___xxtofl *****************
  9312 ;; Defined at:
  9313 ;;		line 10 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/xxtofl.c"
  9314 ;; Parameters:    Size  Location     Type
  9315 ;;  sign            1    wreg     unsigned char 
  9316 ;;  val             4    0[BANK0 ] long 
  9317 ;; Auto vars:     Size  Location     Type
  9318 ;;  sign            1    8[BANK0 ] unsigned char 
  9319 ;;  arg             4   10[BANK0 ] unsigned long 
  9320 ;;  exp             1    9[BANK0 ] unsigned char 
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  4    0[BANK0 ] unsigned char 
  9323 ;; Registers used:
  9324 ;;		wreg, status,2, status,0
  9325 ;; Tracked objects:
  9326 ;;		On entry : 0/0
  9327 ;;		On exit  : 0/0
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9330 ;;      Params:         0       4       0       0
  9331 ;;      Locals:         0       6       0       0
  9332 ;;      Temps:          0       4       0       0
  9333 ;;      Totals:         0      14       0       0
  9334 ;;Total ram usage:       14 bytes
  9335 ;; Hardware stack levels used: 1
  9336 ;; Hardware stack levels required when called: 3
  9337 ;; This function calls:
  9338 ;;		Nothing
  9339 ;; This function is called by:
  9340 ;;		_main
  9341 ;; This function uses a non-reentrant model
  9342 ;;
  9343                           
  9344                           	psect	text35
  9345   002A4E                     __ptext35:
  9346                           	callstack 0
  9347   002A4E                     ___xxtofl:
  9348                           	callstack 27
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;incstack = 0
  9352                           ;___xxtofl@sign stored from wreg
  9353   002A4E  0100               	movlb	0	; () banked
  9354   002A50  6F68               	movwf	___xxtofl@sign& (0+255),b
  9355   002A52  0100               	movlb	0	; () banked
  9356   002A54  5168               	movf	___xxtofl@sign& (0+255),w,b
  9357   002A56  B4D8               	btfsc	status,2,c
  9358   002A58  EF30  F015         	goto	u9801
  9359   002A5C  EF32  F015         	goto	u9800
  9360   002A60                     u9801:
  9361   002A60  EF54  F015         	goto	l1002
  9362   002A64                     u9800:
  9363   002A64                     
  9364                           ; BSR set to: 0
  9365   002A64  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  9366   002A66  EF39  F015         	goto	u9810
  9367   002A6A  EF37  F015         	goto	u9811
  9368   002A6E                     u9811:
  9369   002A6E  EF54  F015         	goto	l1002
  9370   002A72                     u9810:
  9371   002A72                     
  9372                           ; BSR set to: 0
  9373   002A72  C060  F064         	movff	___xxtofl@val,??___xxtofl
  9374   002A76  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  9375   002A7A  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  9376   002A7E  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  9377   002A82  1F64               	comf	??___xxtofl& (0+255),f,b
  9378   002A84  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  9379   002A86  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  9380   002A88  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  9381   002A8A  2B64               	incf	??___xxtofl& (0+255),f,b
  9382   002A8C  0E00               	movlw	0
  9383   002A8E  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  9384   002A90  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  9385   002A92  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  9386   002A94  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  9387   002A98  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  9388   002A9C  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  9389   002AA0  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  9390   002AA4  EF5C  F015         	goto	l7769
  9391   002AA8                     l1002:
  9392                           
  9393                           ; BSR set to: 0
  9394   002AA8  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  9395   002AAC  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9396   002AB0  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9397   002AB4  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9398   002AB8                     l7769:
  9399                           
  9400                           ; BSR set to: 0
  9401   002AB8  5160               	movf	___xxtofl@val& (0+255),w,b
  9402   002ABA  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  9403   002ABC  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  9404   002ABE  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  9405   002AC0  A4D8               	btfss	status,2,c
  9406   002AC2  EF65  F015         	goto	u9821
  9407   002AC6  EF67  F015         	goto	u9820
  9408   002ACA                     u9821:
  9409   002ACA  EF71  F015         	goto	l7775
  9410   002ACE                     u9820:
  9411   002ACE                     
  9412                           ; BSR set to: 0
  9413   002ACE  0E00               	movlw	0
  9414   002AD0  6F60               	movwf	?___xxtofl& (0+255),b
  9415   002AD2  0E00               	movlw	0
  9416   002AD4  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  9417   002AD6  0E00               	movlw	0
  9418   002AD8  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  9419   002ADA  0E00               	movlw	0
  9420   002ADC  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  9421   002ADE  EF02  F016         	goto	l1005
  9422   002AE2                     l7775:
  9423                           
  9424                           ; BSR set to: 0
  9425   002AE2  0E96               	movlw	150
  9426   002AE4  6F69               	movwf	___xxtofl@exp& (0+255),b
  9427   002AE6  EF7B  F015         	goto	l7779
  9428   002AEA                     l7777:
  9429                           
  9430                           ; BSR set to: 0
  9431   002AEA  2B69               	incf	___xxtofl@exp& (0+255),f,b
  9432   002AEC  90D8               	bcf	status,0,c
  9433   002AEE  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9434   002AF0  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9435   002AF2  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9436   002AF4  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  9437   002AF6                     l7779:
  9438                           
  9439                           ; BSR set to: 0
  9440   002AF6  0E00               	movlw	0
  9441   002AF8  156A               	andwf	___xxtofl@arg& (0+255),w,b
  9442   002AFA  6F64               	movwf	??___xxtofl& (0+255),b
  9443   002AFC  0E00               	movlw	0
  9444   002AFE  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9445   002B00  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  9446   002B02  0E00               	movlw	0
  9447   002B04  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9448   002B06  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  9449   002B08  0EFE               	movlw	254
  9450   002B0A  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9451   002B0C  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  9452   002B0E  5164               	movf	??___xxtofl& (0+255),w,b
  9453   002B10  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9454   002B12  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9455   002B14  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9456   002B16  A4D8               	btfss	status,2,c
  9457   002B18  EF90  F015         	goto	u9831
  9458   002B1C  EF92  F015         	goto	u9830
  9459   002B20                     u9831:
  9460   002B20  EF75  F015         	goto	l7777
  9461   002B24                     u9830:
  9462   002B24  EFA0  F015         	goto	l1009
  9463   002B28                     l7781:
  9464                           
  9465                           ; BSR set to: 0
  9466   002B28  2B69               	incf	___xxtofl@exp& (0+255),f,b
  9467   002B2A                     
  9468                           ; BSR set to: 0
  9469   002B2A  0E01               	movlw	1
  9470   002B2C  276A               	addwf	___xxtofl@arg& (0+255),f,b
  9471   002B2E  0E00               	movlw	0
  9472   002B30  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  9473   002B32  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  9474   002B34  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  9475   002B36                     
  9476                           ; BSR set to: 0
  9477   002B36  90D8               	bcf	status,0,c
  9478   002B38  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9479   002B3A  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9480   002B3C  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9481   002B3E  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  9482   002B40                     l1009:
  9483                           
  9484                           ; BSR set to: 0
  9485   002B40  0E00               	movlw	0
  9486   002B42  156A               	andwf	___xxtofl@arg& (0+255),w,b
  9487   002B44  6F64               	movwf	??___xxtofl& (0+255),b
  9488   002B46  0E00               	movlw	0
  9489   002B48  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9490   002B4A  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  9491   002B4C  0E00               	movlw	0
  9492   002B4E  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9493   002B50  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  9494   002B52  0EFF               	movlw	255
  9495   002B54  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9496   002B56  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  9497   002B58  5164               	movf	??___xxtofl& (0+255),w,b
  9498   002B5A  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9499   002B5C  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9500   002B5E  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9501   002B60  A4D8               	btfss	status,2,c
  9502   002B62  EFB5  F015         	goto	u9841
  9503   002B66  EFB7  F015         	goto	u9840
  9504   002B6A                     u9841:
  9505   002B6A  EF94  F015         	goto	l7781
  9506   002B6E                     u9840:
  9507   002B6E  EFBF  F015         	goto	l7789
  9508   002B72                     l7787:
  9509                           
  9510                           ; BSR set to: 0
  9511   002B72  0769               	decf	___xxtofl@exp& (0+255),f,b
  9512   002B74  90D8               	bcf	status,0,c
  9513   002B76  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  9514   002B78  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  9515   002B7A  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  9516   002B7C  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  9517   002B7E                     l7789:
  9518                           
  9519                           ; BSR set to: 0
  9520   002B7E  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  9521   002B80  EFC4  F015         	goto	u9851
  9522   002B84  EFC6  F015         	goto	u9850
  9523   002B88                     u9851:
  9524   002B88  EFCE  F015         	goto	l1016
  9525   002B8C                     u9850:
  9526   002B8C                     
  9527                           ; BSR set to: 0
  9528   002B8C  0E02               	movlw	2
  9529   002B8E  6169               	cpfslt	___xxtofl@exp& (0+255),b
  9530   002B90  EFCC  F015         	goto	u9861
  9531   002B94  EFCE  F015         	goto	u9860
  9532   002B98                     u9861:
  9533   002B98  EFB9  F015         	goto	l7787
  9534   002B9C                     u9860:
  9535   002B9C                     l1016:
  9536                           
  9537                           ; BSR set to: 0
  9538   002B9C  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  9539   002B9E  EFD3  F015         	goto	u9871
  9540   002BA2  EFD5  F015         	goto	u9870
  9541   002BA6                     u9871:
  9542   002BA6  EFD6  F015         	goto	l7795
  9543   002BAA                     u9870:
  9544   002BAA                     
  9545                           ; BSR set to: 0
  9546   002BAA  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  9547   002BAC                     l7795:
  9548                           
  9549                           ; BSR set to: 0
  9550   002BAC  90D8               	bcf	status,0,c
  9551   002BAE  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  9552   002BB0                     
  9553                           ; BSR set to: 0
  9554   002BB0  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  9555   002BB4  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  9556   002BB6  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  9557   002BB8  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  9558   002BBA  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  9559   002BBE  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  9560   002BC0  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  9561   002BC2  6B64               	clrf	??___xxtofl& (0+255),b
  9562   002BC4  5164               	movf	??___xxtofl& (0+255),w,b
  9563   002BC6  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  9564   002BC8  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  9565   002BCA  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  9566   002BCC  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  9567   002BCE  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  9568   002BD0  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  9569   002BD2  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  9570   002BD4                     
  9571                           ; BSR set to: 0
  9572   002BD4  5168               	movf	___xxtofl@sign& (0+255),w,b
  9573   002BD6  B4D8               	btfsc	status,2,c
  9574   002BD8  EFF0  F015         	goto	u9881
  9575   002BDC  EFF2  F015         	goto	u9880
  9576   002BE0                     u9881:
  9577   002BE0  EFFA  F015         	goto	l7805
  9578   002BE4                     u9880:
  9579   002BE4                     
  9580                           ; BSR set to: 0
  9581   002BE4  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  9582   002BE6  EFF9  F015         	goto	u9890
  9583   002BEA  EFF7  F015         	goto	u9891
  9584   002BEE                     u9891:
  9585   002BEE  EFFA  F015         	goto	l7805
  9586   002BF2                     u9890:
  9587   002BF2                     
  9588                           ; BSR set to: 0
  9589   002BF2  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  9590   002BF4                     l7805:
  9591                           
  9592                           ; BSR set to: 0
  9593   002BF4  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  9594   002BF8  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  9595   002BFC  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  9596   002C00  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  9597   002C04                     l1005:
  9598                           
  9599                           ; BSR set to: 0
  9600   002C04  0012               	return		;funcret
  9601   002C06                     __end_of___xxtofl:
  9602                           	callstack 0
  9603                           
  9604 ;; *************** function _EUSART_TransmitString *****************
  9605 ;; Defined at:
  9606 ;;		line 663 in file "main.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;  a               2    1[BANK0 ] PTR unsigned char 
  9609 ;;		 -> STR_7(3), STR_5(7), STR_4(9), STR_3(3), 
  9610 ;;		 -> uart_buffer(10), STR_1(9), 
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;  i               2    5[BANK0 ] int 
  9613 ;; Return value:  Size  Location     Type
  9614 ;;                  1    wreg      void 
  9615 ;; Registers used:
  9616 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9617 ;; Tracked objects:
  9618 ;;		On entry : 0/0
  9619 ;;		On exit  : 0/0
  9620 ;;		Unchanged: 0/0
  9621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9622 ;;      Params:         0       2       0       0
  9623 ;;      Locals:         0       2       0       0
  9624 ;;      Temps:          0       2       0       0
  9625 ;;      Totals:         0       6       0       0
  9626 ;;Total ram usage:        6 bytes
  9627 ;; Hardware stack levels used: 1
  9628 ;; Hardware stack levels required when called: 4
  9629 ;; This function calls:
  9630 ;;		_EUSART_TransmitChar
  9631 ;; This function is called by:
  9632 ;;		_main
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           	psect	text36
  9637   0035EA                     __ptext36:
  9638                           	callstack 0
  9639   0035EA                     _EUSART_TransmitString:
  9640                           	callstack 26
  9641   0035EA                     
  9642                           ;main.c: 664:     int i;;main.c: 665:     for( i= 0; a[i] !='\0'; i++ ){
  9643   0035EA  0E00               	movlw	0
  9644   0035EC  0100               	movlb	0	; () banked
  9645   0035EE  6F66               	movwf	(EUSART_TransmitString@i+1)& (0+255),b
  9646   0035F0  0E00               	movlw	0
  9647   0035F2  6F65               	movwf	EUSART_TransmitString@i& (0+255),b
  9648   0035F4  EF18  F01B         	goto	l7601
  9649   0035F8                     l7597:
  9650                           
  9651                           ;main.c: 666:        EUSART_TransmitChar(a[i]);
  9652   0035F8  0100               	movlb	0	; () banked
  9653   0035FA  5165               	movf	EUSART_TransmitString@i& (0+255),w,b
  9654   0035FC  2561               	addwf	EUSART_TransmitString@a& (0+255),w,b
  9655   0035FE  6F63               	movwf	??_EUSART_TransmitString& (0+255),b
  9656   003600  5166               	movf	(EUSART_TransmitString@i+1)& (0+255),w,b
  9657   003602  2162               	addwfc	(EUSART_TransmitString@a+1)& (0+255),w,b
  9658   003604  6F64               	movwf	(??_EUSART_TransmitString+1)& (0+255),b
  9659   003606  C063  FFF6         	movff	??_EUSART_TransmitString,tblptrl
  9660   00360A  C064  FFF7         	movff	??_EUSART_TransmitString+1,tblptrh
  9661   00360E  6AF8               	clrf	tblptru,c
  9662   003610  0E02               	movlw	(high __ramtop+-1)
  9663   003612  64F7               	cpfsgt	tblptrh,c
  9664   003614  D003               	bra	u9667
  9665   003616  0008               	tblrd		*
  9666   003618  50F5               	movf	tablat,w,c
  9667   00361A  D005               	bra	u9660
  9668   00361C                     u9667:
  9669   00361C  CFF6 FFE1          	movff	tblptrl,fsr1l
  9670   003620  CFF7 FFE2          	movff	tblptrh,fsr1h
  9671   003624  50E7               	movf	indf1,w,c
  9672   003626                     u9660:
  9673   003626  ECF6  F01E         	call	_EUSART_TransmitChar
  9674   00362A                     
  9675                           ;main.c: 667:     }
  9676   00362A  0100               	movlb	0	; () banked
  9677   00362C  4B65               	infsnz	EUSART_TransmitString@i& (0+255),f,b
  9678   00362E  2B66               	incf	(EUSART_TransmitString@i+1)& (0+255),f,b
  9679   003630                     l7601:
  9680                           
  9681                           ; BSR set to: 0
  9682   003630  5165               	movf	EUSART_TransmitString@i& (0+255),w,b
  9683   003632  2561               	addwf	EUSART_TransmitString@a& (0+255),w,b
  9684   003634  6F63               	movwf	??_EUSART_TransmitString& (0+255),b
  9685   003636  5166               	movf	(EUSART_TransmitString@i+1)& (0+255),w,b
  9686   003638  2162               	addwfc	(EUSART_TransmitString@a+1)& (0+255),w,b
  9687   00363A  6F64               	movwf	(??_EUSART_TransmitString+1)& (0+255),b
  9688   00363C  C063  FFF6         	movff	??_EUSART_TransmitString,tblptrl
  9689   003640  C064  FFF7         	movff	??_EUSART_TransmitString+1,tblptrh
  9690   003644  6AF8               	clrf	tblptru,c
  9691   003646  0E02               	movlw	(high __ramtop+-1)
  9692   003648  64F7               	cpfsgt	tblptrh,c
  9693   00364A  D003               	bra	u9677
  9694   00364C  0008               	tblrd		*
  9695   00364E  50F5               	movf	tablat,w,c
  9696   003650  D005               	bra	u9670
  9697   003652                     u9677:
  9698   003652  CFF6 FFE1          	movff	tblptrl,fsr1l
  9699   003656  CFF7 FFE2          	movff	tblptrh,fsr1h
  9700   00365A  50E7               	movf	indf1,w,c
  9701   00365C                     u9670:
  9702   00365C  0900               	iorlw	0
  9703   00365E  A4D8               	btfss	status,2,c
  9704   003660  EF34  F01B         	goto	u9681
  9705   003664  EF36  F01B         	goto	u9680
  9706   003668                     u9681:
  9707   003668  EFFC  F01A         	goto	l7597
  9708   00366C                     u9680:
  9709   00366C  0012               	return		;funcret
  9710   00366E                     __end_of_EUSART_TransmitString:
  9711                           	callstack 0
  9712                           
  9713 ;; *************** function _EUSART_TransmitChar *****************
  9714 ;; Defined at:
  9715 ;;		line 658 in file "main.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;  data            1    wreg     unsigned char 
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;  data            1    0[BANK0 ] unsigned char 
  9720 ;; Return value:  Size  Location     Type
  9721 ;;                  1    wreg      void 
  9722 ;; Registers used:
  9723 ;;		wreg
  9724 ;; Tracked objects:
  9725 ;;		On entry : 0/0
  9726 ;;		On exit  : 0/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9729 ;;      Params:         0       0       0       0
  9730 ;;      Locals:         0       1       0       0
  9731 ;;      Temps:          0       0       0       0
  9732 ;;      Totals:         0       1       0       0
  9733 ;;Total ram usage:        1 bytes
  9734 ;; Hardware stack levels used: 1
  9735 ;; Hardware stack levels required when called: 3
  9736 ;; This function calls:
  9737 ;;		Nothing
  9738 ;; This function is called by:
  9739 ;;		_EUSART_TransmitString
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           
  9743                           	psect	text37
  9744   003DEC                     __ptext37:
  9745                           	callstack 0
  9746   003DEC                     _EUSART_TransmitChar:
  9747                           	callstack 26
  9748                           
  9749                           ;incstack = 0
  9750                           ;EUSART_TransmitChar@data stored from wreg
  9751   003DEC  0100               	movlb	0	; () banked
  9752   003DEE  6F60               	movwf	EUSART_TransmitChar@data& (0+255),b
  9753   003DF0                     l310:
  9754   003DF0  A2AC               	btfss	172,1,c	;volatile
  9755   003DF2  EFFD  F01E         	goto	u9571
  9756   003DF6  EFFF  F01E         	goto	u9570
  9757   003DFA                     u9571:
  9758   003DFA  EFF8  F01E         	goto	l310
  9759   003DFE                     u9570:
  9760   003DFE                     
  9761                           ;main.c: 660:     TXREG = data;
  9762   003DFE  C060  FFAD         	movff	EUSART_TransmitChar@data,4013	;volatile
  9763   003E02  0012               	return		;funcret
  9764   003E04                     __end_of_EUSART_TransmitChar:
  9765                           	callstack 0
  9766                           
  9767 ;; *************** function _EEPROMWrite *****************
  9768 ;; Defined at:
  9769 ;;		line 598 in file "main.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;  address         2    2[BANK0 ] unsigned short 
  9772 ;;  data            1    4[BANK0 ] unsigned char 
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;		None
  9775 ;; Return value:  Size  Location     Type
  9776 ;;                  1    wreg      void 
  9777 ;; Registers used:
  9778 ;;		wreg, status,2, cstack
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/0
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9784 ;;      Params:         0       3       0       0
  9785 ;;      Locals:         0       0       0       0
  9786 ;;      Temps:          0       1       0       0
  9787 ;;      Totals:         0       4       0       0
  9788 ;;Total ram usage:        4 bytes
  9789 ;; Hardware stack levels used: 1
  9790 ;; Hardware stack levels required when called: 4
  9791 ;; This function calls:
  9792 ;;		_I2CStart
  9793 ;;		_I2CStop
  9794 ;;		_I2CWrite
  9795 ;;		_getHighByte
  9796 ;;		_getLowByte
  9797 ;; This function is called by:
  9798 ;;		_main
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           	psect	text38
  9803   003AD2                     __ptext38:
  9804                           	callstack 0
  9805   003AD2                     _EEPROMWrite:
  9806                           	callstack 26
  9807   003AD2                     
  9808                           ;main.c: 599:     I2CStart();
  9809   003AD2  EC28  F01F         	call	_I2CStart	;wreg free
  9810   003AD6                     
  9811                           ;main.c: 600:     I2CWrite(0b10100000);
  9812   003AD6  0EA0               	movlw	160
  9813   003AD8  ECB3  F01E         	call	_I2CWrite
  9814   003ADC                     
  9815                           ;main.c: 602:     address_low_byte = getLowByte(address);
  9816   003ADC  C062  F060         	movff	EEPROMWrite@address,getLowByte@number
  9817   003AE0  C063  F061         	movff	EEPROMWrite@address+1,getLowByte@number+1
  9818   003AE4  EC40  F01F         	call	_getLowByte	;wreg free
  9819   003AE8  6E3D               	movwf	_address_low_byte^0,c
  9820   003AEA                     
  9821                           ;main.c: 603:     address_high_byte = getHighByte(address);
  9822   003AEA  C062  F060         	movff	EEPROMWrite@address,getHighByte@number
  9823   003AEE  C063  F061         	movff	EEPROMWrite@address+1,getHighByte@number+1
  9824   003AF2  EC43  F01F         	call	_getHighByte	;wreg free
  9825   003AF6  6E3C               	movwf	_address_high_byte^0,c
  9826   003AF8                     
  9827                           ;main.c: 605:     I2CWrite(address_low_byte);
  9828   003AF8  503D               	movf	_address_low_byte^0,w,c
  9829   003AFA  ECB3  F01E         	call	_I2CWrite
  9830   003AFE                     
  9831                           ;main.c: 606:     I2CWrite(address_high_byte);
  9832   003AFE  503C               	movf	_address_high_byte^0,w,c
  9833   003B00  ECB3  F01E         	call	_I2CWrite
  9834   003B04                     
  9835                           ;main.c: 607:     I2CWrite(data);
  9836   003B04  0100               	movlb	0	; () banked
  9837   003B06  5164               	movf	EEPROMWrite@data& (0+255),w,b
  9838   003B08  ECB3  F01E         	call	_I2CWrite
  9839   003B0C                     
  9840                           ;main.c: 608:     I2CStop();
  9841   003B0C  EC1F  F01F         	call	_I2CStop	;wreg free
  9842   003B10                     
  9843                           ;main.c: 610:     _delay((unsigned long)((5)*(2000000/4000.0)));
  9844   003B10  0E04               	movlw	4
  9845   003B12  0100               	movlb	0	; () banked
  9846   003B14  6F65               	movwf	??_EEPROMWrite& (0+255),b
  9847   003B16  0E3D               	movlw	61
  9848   003B18                     u10107:
  9849   003B18  2EE8               	decfsz	wreg,f,c
  9850   003B1A  D7FE               	bra	u10107
  9851   003B1C  2F65               	decfsz	??_EEPROMWrite& (0+255),f,b
  9852   003B1E  D7FC               	bra	u10107
  9853   003B20  D000               	nop2	
  9854   003B22  0012               	return		;funcret
  9855   003B24                     __end_of_EEPROMWrite:
  9856                           	callstack 0
  9857                           
  9858 ;; *************** function _EEPROMRead *****************
  9859 ;; Defined at:
  9860 ;;		line 613 in file "main.c"
  9861 ;; Parameters:    Size  Location     Type
  9862 ;;  address         2    2[BANK0 ] unsigned short 
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;  data            1    4[BANK0 ] unsigned char 
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  1    wreg      unsigned char 
  9867 ;; Registers used:
  9868 ;;		wreg, status,2, cstack
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9874 ;;      Params:         0       2       0       0
  9875 ;;      Locals:         0       1       0       0
  9876 ;;      Temps:          0       0       0       0
  9877 ;;      Totals:         0       3       0       0
  9878 ;;Total ram usage:        3 bytes
  9879 ;; Hardware stack levels used: 1
  9880 ;; Hardware stack levels required when called: 4
  9881 ;; This function calls:
  9882 ;;		_I2CRead
  9883 ;;		_I2CRestart
  9884 ;;		_I2CStart
  9885 ;;		_I2CStop
  9886 ;;		_I2CWrite
  9887 ;;		_getHighByte
  9888 ;;		_getLowByte
  9889 ;; This function is called by:
  9890 ;;		_main
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text39
  9895   003B24                     __ptext39:
  9896                           	callstack 0
  9897   003B24                     _EEPROMRead:
  9898                           	callstack 26
  9899   003B24                     
  9900                           ;main.c: 614:     uint8_t data;;main.c: 616:     address_low_byte = getLowByte(address);
  9901   003B24  C062  F060         	movff	EEPROMRead@address,getLowByte@number
  9902   003B28  C063  F061         	movff	EEPROMRead@address+1,getLowByte@number+1
  9903   003B2C  EC40  F01F         	call	_getLowByte	;wreg free
  9904   003B30  6E3D               	movwf	_address_low_byte^0,c
  9905                           
  9906                           ;main.c: 617:     address_high_byte = getHighByte(address);
  9907   003B32  C062  F060         	movff	EEPROMRead@address,getHighByte@number
  9908   003B36  C063  F061         	movff	EEPROMRead@address+1,getHighByte@number+1
  9909   003B3A  EC43  F01F         	call	_getHighByte	;wreg free
  9910   003B3E  6E3C               	movwf	_address_high_byte^0,c
  9911   003B40                     
  9912                           ;main.c: 619:     I2CStart();
  9913   003B40  EC28  F01F         	call	_I2CStart	;wreg free
  9914   003B44                     
  9915                           ;main.c: 620:     I2CWrite(0b10100000);
  9916   003B44  0EA0               	movlw	160
  9917   003B46  ECB3  F01E         	call	_I2CWrite
  9918   003B4A                     
  9919                           ;main.c: 621:     I2CWrite(address_low_byte);
  9920   003B4A  503D               	movf	_address_low_byte^0,w,c
  9921   003B4C  ECB3  F01E         	call	_I2CWrite
  9922   003B50                     
  9923                           ;main.c: 622:     I2CWrite(address_high_byte);
  9924   003B50  503C               	movf	_address_high_byte^0,w,c
  9925   003B52  ECB3  F01E         	call	_I2CWrite
  9926   003B56                     
  9927                           ;main.c: 623:     I2CRestart();
  9928   003B56  EC31  F01F         	call	_I2CRestart	;wreg free
  9929   003B5A                     
  9930                           ;main.c: 624:     I2CWrite(0b10100000 | 1);
  9931   003B5A  0EA1               	movlw	161
  9932   003B5C  ECB3  F01E         	call	_I2CWrite
  9933                           
  9934                           ;main.c: 625:     data = I2CRead(1);
  9935   003B60  0E01               	movlw	1
  9936   003B62  EC84  F01E         	call	_I2CRead
  9937   003B66  0100               	movlb	0	; () banked
  9938   003B68  6F64               	movwf	EEPROMRead@data& (0+255),b
  9939   003B6A                     
  9940                           ; BSR set to: 0
  9941                           ;main.c: 626:     I2CStop();
  9942   003B6A  EC1F  F01F         	call	_I2CStop	;wreg free
  9943                           
  9944                           ;main.c: 627:     return data;
  9945   003B6E  0100               	movlb	0	; () banked
  9946   003B70  5164               	movf	EEPROMRead@data& (0+255),w,b
  9947   003B72                     
  9948                           ; BSR set to: 0
  9949   003B72  0012               	return		;funcret
  9950   003B74                     __end_of_EEPROMRead:
  9951                           	callstack 0
  9952                           
  9953 ;; *************** function _getLowByte *****************
  9954 ;; Defined at:
  9955 ;;		line 131 in file "main.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;  number          2    0[BANK0 ] unsigned short 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;		None
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  1    wreg      unsigned char 
  9962 ;; Registers used:
  9963 ;;		wreg, status,2
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9969 ;;      Params:         0       2       0       0
  9970 ;;      Locals:         0       0       0       0
  9971 ;;      Temps:          0       0       0       0
  9972 ;;      Totals:         0       2       0       0
  9973 ;;Total ram usage:        2 bytes
  9974 ;; Hardware stack levels used: 1
  9975 ;; Hardware stack levels required when called: 3
  9976 ;; This function calls:
  9977 ;;		Nothing
  9978 ;; This function is called by:
  9979 ;;		_main
  9980 ;;		_EEPROMWrite
  9981 ;;		_EEPROMRead
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           	psect	text40
  9986   003E80                     __ptext40:
  9987                           	callstack 0
  9988   003E80                     _getLowByte:
  9989                           	callstack 27
  9990   003E80                     
  9991                           ;main.c: 132:     return ( number & 0xFF);
  9992   003E80  0100               	movlb	0	; () banked
  9993   003E82  5160               	movf	getLowByte@number& (0+255),w,b
  9994   003E84                     
  9995                           ; BSR set to: 0
  9996   003E84  0012               	return		;funcret
  9997   003E86                     __end_of_getLowByte:
  9998                           	callstack 0
  9999                           
 10000 ;; *************** function _getHighByte *****************
 10001 ;; Defined at:
 10002 ;;		line 135 in file "main.c"
 10003 ;; Parameters:    Size  Location     Type
 10004 ;;  number          2    0[BANK0 ] unsigned short 
 10005 ;; Auto vars:     Size  Location     Type
 10006 ;;		None
 10007 ;; Return value:  Size  Location     Type
 10008 ;;                  1    wreg      unsigned char 
 10009 ;; Registers used:
 10010 ;;		wreg, status,2
 10011 ;; Tracked objects:
 10012 ;;		On entry : 0/0
 10013 ;;		On exit  : 0/0
 10014 ;;		Unchanged: 0/0
 10015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10016 ;;      Params:         0       2       0       0
 10017 ;;      Locals:         0       0       0       0
 10018 ;;      Temps:          0       0       0       0
 10019 ;;      Totals:         0       2       0       0
 10020 ;;Total ram usage:        2 bytes
 10021 ;; Hardware stack levels used: 1
 10022 ;; Hardware stack levels required when called: 3
 10023 ;; This function calls:
 10024 ;;		Nothing
 10025 ;; This function is called by:
 10026 ;;		_main
 10027 ;;		_EEPROMWrite
 10028 ;;		_EEPROMRead
 10029 ;; This function uses a non-reentrant model
 10030 ;;
 10031                           
 10032                           	psect	text41
 10033   003E86                     __ptext41:
 10034                           	callstack 0
 10035   003E86                     _getHighByte:
 10036                           	callstack 27
 10037   003E86                     
 10038                           ;main.c: 136:     return ((number >> 8) & 0xFF);
 10039   003E86  0100               	movlb	0	; () banked
 10040   003E88  5161               	movf	(getHighByte@number+1)& (0+255),w,b
 10041   003E8A                     
 10042                           ; BSR set to: 0
 10043   003E8A  0012               	return		;funcret
 10044   003E8C                     __end_of_getHighByte:
 10045                           	callstack 0
 10046                           
 10047 ;; *************** function _I2CWrite *****************
 10048 ;; Defined at:
 10049 ;;		line 581 in file "main.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;  data            1    wreg     unsigned char 
 10052 ;; Auto vars:     Size  Location     Type
 10053 ;;  data            1    0[BANK0 ] unsigned char 
 10054 ;; Return value:  Size  Location     Type
 10055 ;;                  1    wreg      void 
 10056 ;; Registers used:
 10057 ;;		wreg
 10058 ;; Tracked objects:
 10059 ;;		On entry : 0/0
 10060 ;;		On exit  : 0/0
 10061 ;;		Unchanged: 0/0
 10062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10063 ;;      Params:         0       0       0       0
 10064 ;;      Locals:         0       1       0       0
 10065 ;;      Temps:          0       0       0       0
 10066 ;;      Totals:         0       1       0       0
 10067 ;;Total ram usage:        1 bytes
 10068 ;; Hardware stack levels used: 1
 10069 ;; Hardware stack levels required when called: 3
 10070 ;; This function calls:
 10071 ;;		Nothing
 10072 ;; This function is called by:
 10073 ;;		_EEPROMWrite
 10074 ;;		_EEPROMRead
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           	psect	text42
 10079   003D66                     __ptext42:
 10080                           	callstack 0
 10081   003D66                     _I2CWrite:
 10082                           	callstack 26
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;incstack = 0
 10086                           ;I2CWrite@data stored from wreg
 10087   003D66  0100               	movlb	0	; () banked
 10088   003D68  6F60               	movwf	I2CWrite@data& (0+255),b
 10089   003D6A                     
 10090                           ;main.c: 582:     SSPBUF = data;
 10091   003D6A  C060  FFC9         	movff	I2CWrite@data,4041	;volatile
 10092   003D6E                     l283:
 10093   003D6E  B0C7               	btfsc	199,0,c	;volatile
 10094   003D70  EFBC  F01E         	goto	u9521
 10095   003D74  EFBE  F01E         	goto	u9520
 10096   003D78                     u9521:
 10097   003D78  EFB7  F01E         	goto	l283
 10098   003D7C                     u9520:
 10099   003D7C                     l286:
 10100   003D7C  BCC5               	btfsc	197,6,c	;volatile
 10101   003D7E  EFC3  F01E         	goto	u9531
 10102   003D82  EFC5  F01E         	goto	u9530
 10103   003D86                     u9531:
 10104   003D86  EFBE  F01E         	goto	l286
 10105   003D8A                     u9530:
 10106   003D8A  0012               	return		;funcret
 10107   003D8C                     __end_of_I2CWrite:
 10108                           	callstack 0
 10109                           
 10110 ;; *************** function _I2CStop *****************
 10111 ;; Defined at:
 10112 ;;		line 571 in file "main.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;		None
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      void 
 10119 ;; Registers used:
 10120 ;;		None
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10126 ;;      Params:         0       0       0       0
 10127 ;;      Locals:         0       0       0       0
 10128 ;;      Temps:          0       0       0       0
 10129 ;;      Totals:         0       0       0       0
 10130 ;;Total ram usage:        0 bytes
 10131 ;; Hardware stack levels used: 1
 10132 ;; Hardware stack levels required when called: 3
 10133 ;; This function calls:
 10134 ;;		Nothing
 10135 ;; This function is called by:
 10136 ;;		_EEPROMWrite
 10137 ;;		_EEPROMRead
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           	psect	text43
 10142   003E3E                     __ptext43:
 10143                           	callstack 0
 10144   003E3E                     _I2CStop:
 10145                           	callstack 26
 10146   003E3E                     
 10147                           ;main.c: 572:     SSPCON2bits.PEN = 1;
 10148   003E3E  84C5               	bsf	197,2,c	;volatile
 10149   003E40                     l271:
 10150   003E40  B4C5               	btfsc	197,2,c	;volatile
 10151   003E42  EF25  F01F         	goto	u9501
 10152   003E46  EF27  F01F         	goto	u9500
 10153   003E4A                     u9501:
 10154   003E4A  EF20  F01F         	goto	l271
 10155   003E4E                     u9500:
 10156   003E4E  0012               	return		;funcret
 10157   003E50                     __end_of_I2CStop:
 10158                           	callstack 0
 10159                           
 10160 ;; *************** function _I2CStart *****************
 10161 ;; Defined at:
 10162 ;;		line 566 in file "main.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;		None
 10165 ;; Auto vars:     Size  Location     Type
 10166 ;;		None
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  1    wreg      void 
 10169 ;; Registers used:
 10170 ;;		None
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10176 ;;      Params:         0       0       0       0
 10177 ;;      Locals:         0       0       0       0
 10178 ;;      Temps:          0       0       0       0
 10179 ;;      Totals:         0       0       0       0
 10180 ;;Total ram usage:        0 bytes
 10181 ;; Hardware stack levels used: 1
 10182 ;; Hardware stack levels required when called: 3
 10183 ;; This function calls:
 10184 ;;		Nothing
 10185 ;; This function is called by:
 10186 ;;		_EEPROMWrite
 10187 ;;		_EEPROMRead
 10188 ;; This function uses a non-reentrant model
 10189 ;;
 10190                           
 10191                           	psect	text44
 10192   003E50                     __ptext44:
 10193                           	callstack 0
 10194   003E50                     _I2CStart:
 10195                           	callstack 26
 10196   003E50                     
 10197                           ;main.c: 567:     SSPCON2bits.SEN = 1;
 10198   003E50  80C5               	bsf	197,0,c	;volatile
 10199   003E52                     l265:
 10200   003E52  B0C5               	btfsc	197,0,c	;volatile
 10201   003E54  EF2E  F01F         	goto	u9491
 10202   003E58  EF30  F01F         	goto	u9490
 10203   003E5C                     u9491:
 10204   003E5C  EF29  F01F         	goto	l265
 10205   003E60                     u9490:
 10206   003E60  0012               	return		;funcret
 10207   003E62                     __end_of_I2CStart:
 10208                           	callstack 0
 10209                           
 10210 ;; *************** function _I2CRestart *****************
 10211 ;; Defined at:
 10212 ;;		line 576 in file "main.c"
 10213 ;; Parameters:    Size  Location     Type
 10214 ;;		None
 10215 ;; Auto vars:     Size  Location     Type
 10216 ;;		None
 10217 ;; Return value:  Size  Location     Type
 10218 ;;                  1    wreg      void 
 10219 ;; Registers used:
 10220 ;;		None
 10221 ;; Tracked objects:
 10222 ;;		On entry : 0/0
 10223 ;;		On exit  : 0/0
 10224 ;;		Unchanged: 0/0
 10225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10226 ;;      Params:         0       0       0       0
 10227 ;;      Locals:         0       0       0       0
 10228 ;;      Temps:          0       0       0       0
 10229 ;;      Totals:         0       0       0       0
 10230 ;;Total ram usage:        0 bytes
 10231 ;; Hardware stack levels used: 1
 10232 ;; Hardware stack levels required when called: 3
 10233 ;; This function calls:
 10234 ;;		Nothing
 10235 ;; This function is called by:
 10236 ;;		_EEPROMRead
 10237 ;; This function uses a non-reentrant model
 10238 ;;
 10239                           
 10240                           	psect	text45
 10241   003E62                     __ptext45:
 10242                           	callstack 0
 10243   003E62                     _I2CRestart:
 10244                           	callstack 26
 10245   003E62                     
 10246                           ;main.c: 577:     SSPCON2bits.RSEN = 1;
 10247   003E62  82C5               	bsf	197,1,c	;volatile
 10248   003E64                     l277:
 10249   003E64  B2C5               	btfsc	197,1,c	;volatile
 10250   003E66  EF37  F01F         	goto	u9511
 10251   003E6A  EF39  F01F         	goto	u9510
 10252   003E6E                     u9511:
 10253   003E6E  EF32  F01F         	goto	l277
 10254   003E72                     u9510:
 10255   003E72  0012               	return		;funcret
 10256   003E74                     __end_of_I2CRestart:
 10257                           	callstack 0
 10258                           
 10259 ;; *************** function _I2CRead *****************
 10260 ;; Defined at:
 10261 ;;		line 587 in file "main.c"
 10262 ;; Parameters:    Size  Location     Type
 10263 ;;  ack             1    wreg     unsigned char 
 10264 ;; Auto vars:     Size  Location     Type
 10265 ;;  ack             1    0[BANK0 ] unsigned char 
 10266 ;; Return value:  Size  Location     Type
 10267 ;;                  1    wreg      unsigned char 
 10268 ;; Registers used:
 10269 ;;		wreg, status,2
 10270 ;; Tracked objects:
 10271 ;;		On entry : 0/0
 10272 ;;		On exit  : 0/0
 10273 ;;		Unchanged: 0/0
 10274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10275 ;;      Params:         0       0       0       0
 10276 ;;      Locals:         0       1       0       0
 10277 ;;      Temps:          0       0       0       0
 10278 ;;      Totals:         0       1       0       0
 10279 ;;Total ram usage:        1 bytes
 10280 ;; Hardware stack levels used: 1
 10281 ;; Hardware stack levels required when called: 3
 10282 ;; This function calls:
 10283 ;;		Nothing
 10284 ;; This function is called by:
 10285 ;;		_EEPROMRead
 10286 ;; This function uses a non-reentrant model
 10287 ;;
 10288                           
 10289                           	psect	text46
 10290   003D08                     __ptext46:
 10291                           	callstack 0
 10292   003D08                     _I2CRead:
 10293                           	callstack 26
 10294                           
 10295                           ;incstack = 0
 10296                           ;I2CRead@ack stored from wreg
 10297   003D08  0100               	movlb	0	; () banked
 10298   003D0A  6F60               	movwf	I2CRead@ack& (0+255),b
 10299   003D0C                     
 10300                           ;main.c: 588:     SSPCON2bits.RCEN = 1;
 10301   003D0C  86C5               	bsf	197,3,c	;volatile
 10302   003D0E                     l292:
 10303   003D0E  A0C7               	btfss	199,0,c	;volatile
 10304   003D10  EF8C  F01E         	goto	u9541
 10305   003D14  EF8E  F01E         	goto	u9540
 10306   003D18                     u9541:
 10307   003D18  EF87  F01E         	goto	l292
 10308   003D1C                     u9540:
 10309   003D1C                     
 10310                           ;main.c: 590:     received_data = SSPBUF;
 10311   003D1C  CFC9 F03E          	movff	4041,_received_data	;volatile
 10312   003D20                     
 10313                           ;main.c: 592:     SSPCON2bits.ACKDT = ack;
 10314   003D20  0100               	movlb	0	; () banked
 10315   003D22  B160               	btfsc	I2CRead@ack& (0+255),0,b
 10316   003D24  D002               	bra	u9555
 10317   003D26  9AC5               	bcf	197,5,c	;volatile
 10318   003D28  D001               	bra	u9556
 10319   003D2A                     u9555:
 10320   003D2A  8AC5               	bsf	197,5,c	;volatile
 10321   003D2C                     u9556:
 10322   003D2C                     
 10323                           ;main.c: 593:     SSPCON2bits.ACKEN = 1;
 10324   003D2C  88C5               	bsf	197,4,c	;volatile
 10325   003D2E                     l295:
 10326   003D2E  B8C5               	btfsc	197,4,c	;volatile
 10327   003D30  EF9C  F01E         	goto	u9561
 10328   003D34  EF9E  F01E         	goto	u9560
 10329   003D38                     u9561:
 10330   003D38  EF97  F01E         	goto	l295
 10331   003D3C                     u9560:
 10332   003D3C                     
 10333                           ;main.c: 595:     return received_data;
 10334   003D3C  503E               	movf	_received_data^0,w,c
 10335   003D3E  0012               	return		;funcret
 10336   003D40                     __end_of_I2CRead:
 10337                           	callstack 0
 10338                           
 10339 ;; *************** function _ISR *****************
 10340 ;; Defined at:
 10341 ;;		line 177 in file "main.c"
 10342 ;; Parameters:    Size  Location     Type
 10343 ;;		None
 10344 ;; Auto vars:     Size  Location     Type
 10345 ;;		None
 10346 ;; Return value:  Size  Location     Type
 10347 ;;                  1    wreg      void 
 10348 ;; Registers used:
 10349 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10350 ;; Tracked objects:
 10351 ;;		On entry : 0/0
 10352 ;;		On exit  : 0/0
 10353 ;;		Unchanged: 0/0
 10354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10355 ;;      Params:         0       0       0       0
 10356 ;;      Locals:         0       0       0       0
 10357 ;;      Temps:          8       0       0       0
 10358 ;;      Totals:         8       0       0       0
 10359 ;;Total ram usage:        8 bytes
 10360 ;; Hardware stack levels used: 1
 10361 ;; Hardware stack levels required when called: 2
 10362 ;; This function calls:
 10363 ;;		i2_EUSART_TransmitString
 10364 ;;		i2_adcSampling
 10365 ;;		i2_setDisplayDigits
 10366 ;;		i2_show7Segment
 10367 ;; This function is called by:
 10368 ;;		Interrupt level 2
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           	psect	intcode
 10373   000008                     __pintcode:
 10374                           	callstack 0
 10375   000008                     _ISR:
 10376                           	callstack 20
 10377                           
 10378                           ;incstack = 0
 10379   000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10380   00000A  CFE1 F024          	movff	fsr1l,??_ISR
 10381   00000E  CFE2 F025          	movff	fsr1h,??_ISR+1
 10382   000012  CFF3 F026          	movff	prodl,??_ISR+2
 10383   000016  CFF4 F027          	movff	prodh,??_ISR+3
 10384   00001A  CFF6 F028          	movff	tblptrl,??_ISR+4
 10385   00001E  CFF7 F029          	movff	tblptrh,??_ISR+5
 10386   000022  CFF8 F02A          	movff	tblptru,??_ISR+6
 10387   000026  CFF5 F02B          	movff	tablat,??_ISR+7
 10388   00002A                     
 10389                           ;main.c: 179:     if ( PIR1bits.TMR1IF) {
 10390   00002A  A09E               	btfss	158,0,c	;volatile
 10391   00002C  EF1A  F000         	goto	i2u542_41
 10392   000030  EF1C  F000         	goto	i2u542_40
 10393   000034                     i2u542_41:
 10394   000034  EF4B  F000         	goto	i2l4809
 10395   000038                     i2u542_40:
 10396   000038                     
 10397                           ;main.c: 180:         PIR1bits.TMR1IF = 0;
 10398   000038  909E               	bcf	158,0,c	;volatile
 10399   00003A                     
 10400                           ;main.c: 182:         TMR1 = 0;
 10401   00003A  0E00               	movlw	0
 10402   00003C  6ECF               	movwf	207,c	;volatile
 10403   00003E  0E00               	movlw	0
 10404   000040  6ECE               	movwf	206,c	;volatile
 10405   000042                     
 10406                           ;main.c: 184:         if (fsm_state == 1 || fsm_state == 2 ) {
 10407   000042  0100               	movlb	0	; () banked
 10408   000044  05F9               	decf	_fsm_state& (0+255),w,b
 10409   000046  B4D8               	btfsc	status,2,c
 10410   000048  EF28  F000         	goto	i2u543_41
 10411   00004C  EF2A  F000         	goto	i2u543_40
 10412   000050                     i2u543_41:
 10413   000050  EF33  F000         	goto	i2l4797
 10414   000054                     i2u543_40:
 10415   000054                     
 10416                           ; BSR set to: 0
 10417   000054  0E02               	movlw	2
 10418   000056  19F9               	xorwf	_fsm_state& (0+255),w,b
 10419   000058  A4D8               	btfss	status,2,c
 10420   00005A  EF31  F000         	goto	i2u544_41
 10421   00005E  EF33  F000         	goto	i2u544_40
 10422   000062                     i2u544_41:
 10423   000062  EF41  F000         	goto	i2l4805
 10424   000066                     i2u544_40:
 10425   000066                     i2l4797:
 10426                           
 10427                           ; BSR set to: 0
 10428                           ;main.c: 186:             overflowCount++;
 10429   000066  2A3F               	incf	_overflowCount^0,f,c
 10430   000068                     
 10431                           ; BSR set to: 0
 10432                           ;main.c: 188:             if (overflowCount >= 57) {
 10433   000068  0E38               	movlw	56
 10434   00006A  643F               	cpfsgt	_overflowCount^0,c
 10435   00006C  EF3A  F000         	goto	i2u545_41
 10436   000070  EF3C  F000         	goto	i2u545_40
 10437   000074                     i2u545_41:
 10438   000074  EF4B  F000         	goto	i2l4809
 10439   000078                     i2u545_40:
 10440   000078                     
 10441                           ; BSR set to: 0
 10442                           ;main.c: 189:                 overflowCount = 0;
 10443   000078  6A3F               	clrf	_overflowCount^0,c
 10444   00007A                     
 10445                           ; BSR set to: 0
 10446                           ;main.c: 192:                 adcSampling();
 10447   00007A  ECC6  F01E         	call	i2_adcSampling	;wreg free
 10448   00007E  EF4B  F000         	goto	i2l4809
 10449   000082                     i2l4805:
 10450                           
 10451                           ; BSR set to: 0
 10452   000082  0E07               	movlw	7
 10453   000084  19F9               	xorwf	_fsm_state& (0+255),w,b
 10454   000086  A4D8               	btfss	status,2,c
 10455   000088  EF48  F000         	goto	i2u546_41
 10456   00008C  EF4A  F000         	goto	i2u546_40
 10457   000090                     i2u546_41:
 10458   000090  EF4B  F000         	goto	i2l4809
 10459   000094                     i2u546_40:
 10460   000094                     
 10461                           ; BSR set to: 0
 10462                           ;main.c: 197:             LATAbits.LA5 ^= 1;
 10463   000094  7A89               	btg	137,5,c	;volatile
 10464   000096                     i2l4809:
 10465                           
 10466                           ;main.c: 202:     if ( INTCON3bits.INT1IF || INTCON3bits.INT2IF ) {
 10467   000096  B0F0               	btfsc	240,0,c	;volatile
 10468   000098  EF50  F000         	goto	i2u547_41
 10469   00009C  EF52  F000         	goto	i2u547_40
 10470   0000A0                     i2u547_41:
 10471   0000A0  EF59  F000         	goto	i2l4813
 10472   0000A4                     i2u547_40:
 10473   0000A4  A2F0               	btfss	240,1,c	;volatile
 10474   0000A6  EF57  F000         	goto	i2u548_41
 10475   0000AA  EF59  F000         	goto	i2u548_40
 10476   0000AE                     i2u548_41:
 10477   0000AE  EF21  F001         	goto	i2l200
 10478   0000B2                     i2u548_40:
 10479   0000B2                     i2l4813:
 10480                           
 10481                           ;main.c: 204:         button_counter++;
 10482   0000B2  4A2C               	infsnz	_button_counter^0,f,c
 10483   0000B4  2A2D               	incf	(_button_counter+1)^0,f,c
 10484   0000B6                     
 10485                           ;main.c: 206:         if( INTCON3bits.INT2IF && button_counter > 800 ){
 10486   0000B6  A2F0               	btfss	240,1,c	;volatile
 10487   0000B8  EF60  F000         	goto	i2u549_41
 10488   0000BC  EF62  F000         	goto	i2u549_40
 10489   0000C0                     i2u549_41:
 10490   0000C0  EFCD  F000         	goto	i2l177
 10491   0000C4                     i2u549_40:
 10492   0000C4  0E21               	movlw	33
 10493   0000C6  5C2C               	subwf	_button_counter^0,w,c
 10494   0000C8  0E03               	movlw	3
 10495   0000CA  582D               	subwfb	(_button_counter+1)^0,w,c
 10496   0000CC  A0D8               	btfss	status,0,c
 10497   0000CE  EF6B  F000         	goto	i2u550_41
 10498   0000D2  EF6D  F000         	goto	i2u550_40
 10499   0000D6                     i2u550_41:
 10500   0000D6  EFCD  F000         	goto	i2l177
 10501   0000DA                     i2u550_40:
 10502   0000DA                     
 10503                           ;main.c: 208:             INTCON3bits.INT2IF = 0;
 10504   0000DA  92F0               	bcf	240,1,c	;volatile
 10505   0000DC                     
 10506                           ;main.c: 210:             displayAddress = 1;
 10507   0000DC  0E01               	movlw	1
 10508   0000DE  6E35               	movwf	_displayAddress^0,c
 10509                           
 10510                           ;main.c: 212:             displaySample = 1;
 10511   0000E0  0E01               	movlw	1
 10512   0000E2  6E34               	movwf	_displaySample^0,c
 10513                           
 10514                           ;main.c: 213:             button_counter = 0;
 10515   0000E4  0E00               	movlw	0
 10516   0000E6  6E2D               	movwf	(_button_counter+1)^0,c
 10517   0000E8  0E00               	movlw	0
 10518   0000EA  6E2C               	movwf	_button_counter^0,c
 10519                           
 10520                           ;main.c: 215:             switch(fsm_state){
 10521   0000EC  EFA9  F000         	goto	i2l4837
 10522   0000F0                     i2l4823:
 10523                           
 10524                           ; BSR set to: 0
 10525                           ;main.c: 217:                     fsm_state = 1;
 10526   0000F0  0E01               	movlw	1
 10527   0000F2  6FF9               	movwf	_fsm_state& (0+255),b
 10528                           
 10529                           ;main.c: 218:                     address_index = 0;
 10530   0000F4  0E00               	movlw	0
 10531   0000F6  6FF3               	movwf	(_address_index+1)& (0+255),b
 10532   0000F8  0E00               	movlw	0
 10533   0000FA  6FF2               	movwf	_address_index& (0+255),b
 10534                           
 10535                           ;main.c: 219:                     if( turnOnDisplay == 0 ){
 10536   0000FC  51FA               	movf	_turnOnDisplay& (0+255),w,b
 10537   0000FE  A4D8               	btfss	status,2,c
 10538   000100  EF84  F000         	goto	i2u551_41
 10539   000104  EF86  F000         	goto	i2u551_40
 10540   000108                     i2u551_41:
 10541   000108  EF05  F001         	goto	i2l4855
 10542   00010C                     i2u551_40:
 10543   00010C                     
 10544                           ; BSR set to: 0
 10545                           ;main.c: 220:                         adcSampling();
 10546   00010C  ECC6  F01E         	call	i2_adcSampling	;wreg free
 10547   000110  EF05  F001         	goto	i2l4855
 10548   000114                     i2l4827:
 10549                           
 10550                           ; BSR set to: 0
 10551                           ;main.c: 225:                     fsm_state = 2;
 10552   000114  0E02               	movlw	2
 10553   000116  6FF9               	movwf	_fsm_state& (0+255),b
 10554                           
 10555                           ;main.c: 226:                     address_index = 0;
 10556   000118  0E00               	movlw	0
 10557   00011A  6FF3               	movwf	(_address_index+1)& (0+255),b
 10558   00011C  0E00               	movlw	0
 10559   00011E  6FF2               	movwf	_address_index& (0+255),b
 10560                           
 10561                           ;main.c: 227:                     break;
 10562   000120  EF05  F001         	goto	i2l4855
 10563   000124                     i2l4829:
 10564                           
 10565                           ; BSR set to: 0
 10566                           ;main.c: 230:                     fsm_state = 3;
 10567   000124  0E03               	movlw	3
 10568   000126  6FF9               	movwf	_fsm_state& (0+255),b
 10569                           
 10570                           ;main.c: 231:                     address_index = 0;
 10571   000128  0E00               	movlw	0
 10572   00012A  6FF3               	movwf	(_address_index+1)& (0+255),b
 10573   00012C  0E00               	movlw	0
 10574   00012E  6FF2               	movwf	_address_index& (0+255),b
 10575   000130                     
 10576                           ; BSR set to: 0
 10577                           ;main.c: 232:                     EUSART_TransmitString("START \r\n");
 10578   000130  0E01               	movlw	low STR_1
 10579   000132  6E02               	movwf	i2EUSART_TransmitString@a^0,c
 10580   000134  5002               	movf	i2EUSART_TransmitString@a^0,w,c
 10581   000136  A4D8               	btfss	status,2,c
 10582   000138  0E03               	movlw	high __smallconst
 10583   00013A  6E03               	movwf	(i2EUSART_TransmitString@a+1)^0,c
 10584   00013C  EC37  F01B         	call	i2_EUSART_TransmitString	;wreg free
 10585                           
 10586                           ;main.c: 233:                     break;
 10587   000140  EF05  F001         	goto	i2l4855
 10588   000144                     i2l4833:
 10589                           
 10590                           ; BSR set to: 0
 10591                           ;main.c: 236:                     fsm_state = 4;
 10592   000144  0E04               	movlw	4
 10593   000146  6FF9               	movwf	_fsm_state& (0+255),b
 10594                           
 10595                           ;main.c: 237:                     break;
 10596   000148  EF05  F001         	goto	i2l4855
 10597   00014C                     i2l185:
 10598                           
 10599                           ; BSR set to: 0
 10600                           ;main.c: 240:                     fsm_state = 0;
 10601   00014C  6BF9               	clrf	_fsm_state& (0+255),b
 10602                           
 10603                           ;main.c: 241:                     break;
 10604   00014E  EF05  F001         	goto	i2l4855
 10605   000152                     i2l4837:
 10606   000152  0100               	movlb	0	; () banked
 10607   000154  51F9               	movf	_fsm_state& (0+255),w,b
 10608                           
 10609                           ; Switch size 1, requested type "simple"
 10610                           ; Number of cases is 8, Range of values is 0 to 7
 10611                           ; switch strategies available:
 10612                           ; Name         Instructions Cycles
 10613                           ; simple_byte           25    13 (average)
 10614                           ;	Chosen strategy is simple_byte
 10615   000156  0A00               	xorlw	0	; case 0
 10616   000158  B4D8               	btfsc	status,2,c
 10617   00015A  EF78  F000         	goto	i2l4823
 10618   00015E  0A01               	xorlw	1	; case 1
 10619   000160  B4D8               	btfsc	status,2,c
 10620   000162  EF8A  F000         	goto	i2l4827
 10621   000166  0A03               	xorlw	3	; case 2
 10622   000168  B4D8               	btfsc	status,2,c
 10623   00016A  EF92  F000         	goto	i2l4829
 10624   00016E  0A01               	xorlw	1	; case 3
 10625   000170  B4D8               	btfsc	status,2,c
 10626   000172  EFA2  F000         	goto	i2l4833
 10627   000176  0A07               	xorlw	7	; case 4
 10628   000178  B4D8               	btfsc	status,2,c
 10629   00017A  EFA6  F000         	goto	i2l185
 10630   00017E  0A01               	xorlw	1	; case 5
 10631   000180  B4D8               	btfsc	status,2,c
 10632   000182  EFA6  F000         	goto	i2l185
 10633   000186  0A03               	xorlw	3	; case 6
 10634   000188  B4D8               	btfsc	status,2,c
 10635   00018A  EFA6  F000         	goto	i2l185
 10636   00018E  0A01               	xorlw	1	; case 7
 10637   000190  B4D8               	btfsc	status,2,c
 10638   000192  EFA6  F000         	goto	i2l185
 10639   000196  EF05  F001         	goto	i2l4855
 10640   00019A                     i2l177:
 10641   00019A  A0F0               	btfss	240,0,c	;volatile
 10642   00019C  EFD2  F000         	goto	i2u552_41
 10643   0001A0  EFD4  F000         	goto	i2u552_40
 10644   0001A4                     i2u552_41:
 10645   0001A4  EF05  F001         	goto	i2l4855
 10646   0001A8                     i2u552_40:
 10647   0001A8  0E21               	movlw	33
 10648   0001AA  5C2C               	subwf	_button_counter^0,w,c
 10649   0001AC  0E03               	movlw	3
 10650   0001AE  582D               	subwfb	(_button_counter+1)^0,w,c
 10651   0001B0  A0D8               	btfss	status,0,c
 10652   0001B2  EFDD  F000         	goto	i2u553_41
 10653   0001B6  EFDF  F000         	goto	i2u553_40
 10654   0001BA                     i2u553_41:
 10655   0001BA  EF05  F001         	goto	i2l4855
 10656   0001BE                     i2u553_40:
 10657   0001BE                     
 10658                           ;main.c: 260:             INTCON3bits.INT1IF = 0;
 10659   0001BE  90F0               	bcf	240,0,c	;volatile
 10660                           
 10661                           ;main.c: 262:             displayAddress = 0;
 10662   0001C0  6A35               	clrf	_displayAddress^0,c
 10663   0001C2                     
 10664                           ;main.c: 263:             displaySample = 1;
 10665   0001C2  0E01               	movlw	1
 10666   0001C4  6E34               	movwf	_displaySample^0,c
 10667                           
 10668                           ;main.c: 264:             button_counter = 0;
 10669   0001C6  0E00               	movlw	0
 10670   0001C8  6E2D               	movwf	(_button_counter+1)^0,c
 10671   0001CA  0E00               	movlw	0
 10672   0001CC  6E2C               	movwf	_button_counter^0,c
 10673                           
 10674                           ;main.c: 267:             switch(fsm_state){
 10675   0001CE  EFF5  F000         	goto	i2l4853
 10676   0001D2                     i2l4845:
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;main.c: 269:                     fsm_state = 5;
 10680   0001D2  0E05               	movlw	5
 10681   0001D4  6FF9               	movwf	_fsm_state& (0+255),b
 10682                           
 10683                           ;main.c: 270:                     break;
 10684   0001D6  EF05  F001         	goto	i2l4855
 10685   0001DA                     i2l4847:
 10686                           
 10687                           ; BSR set to: 0
 10688                           ;main.c: 273:                     fsm_state = 6;
 10689   0001DA  0E06               	movlw	6
 10690   0001DC  6FF9               	movwf	_fsm_state& (0+255),b
 10691                           
 10692                           ;main.c: 274:                     break;
 10693   0001DE  EF05  F001         	goto	i2l4855
 10694   0001E2                     i2l4849:
 10695                           
 10696                           ; BSR set to: 0
 10697                           ;main.c: 277:                     fsm_state = 7;
 10698   0001E2  0E07               	movlw	7
 10699   0001E4  6FF9               	movwf	_fsm_state& (0+255),b
 10700                           
 10701                           ;main.c: 278:                     break;
 10702   0001E6  EF05  F001         	goto	i2l4855
 10703   0001EA                     i2l4853:
 10704   0001EA  0100               	movlb	0	; () banked
 10705   0001EC  51F9               	movf	_fsm_state& (0+255),w,b
 10706                           
 10707                           ; Switch size 1, requested type "simple"
 10708                           ; Number of cases is 3, Range of values is 4 to 6
 10709                           ; switch strategies available:
 10710                           ; Name         Instructions Cycles
 10711                           ; simple_byte           10     6 (average)
 10712                           ;	Chosen strategy is simple_byte
 10713   0001EE  0A04               	xorlw	4	; case 4
 10714   0001F0  B4D8               	btfsc	status,2,c
 10715   0001F2  EFE9  F000         	goto	i2l4845
 10716   0001F6  0A01               	xorlw	1	; case 5
 10717   0001F8  B4D8               	btfsc	status,2,c
 10718   0001FA  EFED  F000         	goto	i2l4847
 10719   0001FE  0A03               	xorlw	3	; case 6
 10720   000200  B4D8               	btfsc	status,2,c
 10721   000202  EFF1  F000         	goto	i2l4849
 10722   000206  EF05  F001         	goto	i2l4855
 10723   00020A                     i2l4855:
 10724                           
 10725                           ;main.c: 285:         if( turnOnDisplay == 1 && button_counter < 10 ){
 10726   00020A  0100               	movlb	0	; () banked
 10727   00020C  05FA               	decf	_turnOnDisplay& (0+255),w,b
 10728   00020E  A4D8               	btfss	status,2,c
 10729   000210  EF0C  F001         	goto	i2u554_41
 10730   000214  EF0E  F001         	goto	i2u554_40
 10731   000218                     i2u554_41:
 10732   000218  EF1F  F001         	goto	i2l4863
 10733   00021C                     i2u554_40:
 10734   00021C                     
 10735                           ; BSR set to: 0
 10736   00021C  502D               	movf	(_button_counter+1)^0,w,c
 10737   00021E  E107               	bnz	i2u555_41
 10738   000220  0E0A               	movlw	10
 10739   000222  5C2C               	subwf	_button_counter^0,w,c
 10740   000224  B0D8               	btfsc	status,0,c
 10741   000226  EF17  F001         	goto	i2u555_41
 10742   00022A  EF19  F001         	goto	i2u555_40
 10743   00022E                     i2u555_41:
 10744   00022E  EF1F  F001         	goto	i2l4863
 10745   000232                     i2u555_40:
 10746   000232                     
 10747                           ; BSR set to: 0
 10748                           ;main.c: 286:             setDisplayDigits();
 10749   000232  EC0D  F012         	call	i2_setDisplayDigits	;wreg free
 10750   000236                     
 10751                           ;main.c: 287:             show7Segment();
 10752   000236  ECBA  F01C         	call	i2_show7Segment	;wreg free
 10753                           
 10754                           ;main.c: 288:         }else{
 10755   00023A  EF21  F001         	goto	i2l200
 10756   00023E                     i2l4863:
 10757                           
 10758                           ; BSR set to: 0
 10759                           ;main.c: 289:             turnOnDisplay = 1;
 10760   00023E  0E01               	movlw	1
 10761   000240  6FFA               	movwf	_turnOnDisplay& (0+255),b
 10762   000242                     i2l200:
 10763   000242  C02B  FFF5         	movff	??_ISR+7,tablat
 10764   000246  C02A  FFF8         	movff	??_ISR+6,tblptru
 10765   00024A  C029  FFF7         	movff	??_ISR+5,tblptrh
 10766   00024E  C028  FFF6         	movff	??_ISR+4,tblptrl
 10767   000252  C027  FFF4         	movff	??_ISR+3,prodh
 10768   000256  C026  FFF3         	movff	??_ISR+2,prodl
 10769   00025A  C025  FFE2         	movff	??_ISR+1,fsr1h
 10770   00025E  C024  FFE1         	movff	??_ISR,fsr1l
 10771   000262  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10772   000264  0011               	retfie		f
 10773   000266                     __end_of_ISR:
 10774                           	callstack 0
 10775                           
 10776 ;; *************** function i2_show7Segment *****************
 10777 ;; Defined at:
 10778 ;;		line 733 in file "main.c"
 10779 ;; Parameters:    Size  Location     Type
 10780 ;;		None
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;		None
 10783 ;; Return value:  Size  Location     Type
 10784 ;;                  1    wreg      void 
 10785 ;; Registers used:
 10786 ;;		wreg, status,2, status,0, cstack
 10787 ;; Tracked objects:
 10788 ;;		On entry : 0/0
 10789 ;;		On exit  : 0/0
 10790 ;;		Unchanged: 0/0
 10791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10792 ;;      Params:         0       0       0       0
 10793 ;;      Locals:         0       0       0       0
 10794 ;;      Temps:          0       0       0       0
 10795 ;;      Totals:         0       0       0       0
 10796 ;;Total ram usage:        0 bytes
 10797 ;; Hardware stack levels used: 1
 10798 ;; Hardware stack levels required when called: 1
 10799 ;; This function calls:
 10800 ;;		i2_displayDigits
 10801 ;;		i2_get7SegmentPattern
 10802 ;; This function is called by:
 10803 ;;		_ISR
 10804 ;; This function uses a non-reentrant model
 10805 ;;
 10806                           
 10807                           	psect	text48
 10808   003974                     __ptext48:
 10809                           	callstack 0
 10810   003974                     i2_show7Segment:
 10811                           	callstack 20
 10812   003974                     
 10813                           ;main.c: 735:     segPattern0 = get7SegmentPattern( displayDigit0 );
 10814   003974  5038               	movf	_displayDigit0^0,w,c
 10815   003976  EC8C  F016         	call	i2_get7SegmentPattern
 10816   00397A  6E3B               	movwf	_segPattern0^0,c
 10817   00397C                     
 10818                           ;main.c: 737:     if( displaySample == 1 && ( fsm_state == 1 || fsm_state == 2 ) ){
 10819   00397C  0434               	decf	_displaySample^0,w,c
 10820   00397E  A4D8               	btfss	status,2,c
 10821   003980  EFC4  F01C         	goto	i2u539_41
 10822   003984  EFC6  F01C         	goto	i2u539_40
 10823   003988                     i2u539_41:
 10824   003988  EFDB  F01C         	goto	i2l4781
 10825   00398C                     i2u539_40:
 10826   00398C  0100               	movlb	0	; () banked
 10827   00398E  05F9               	decf	_fsm_state& (0+255),w,b
 10828   003990  B4D8               	btfsc	status,2,c
 10829   003992  EFCD  F01C         	goto	i2u540_41
 10830   003996  EFCF  F01C         	goto	i2u540_40
 10831   00399A                     i2u540_41:
 10832   00399A  EFD8  F01C         	goto	i2l4779
 10833   00399E                     i2u540_40:
 10834   00399E                     
 10835                           ; BSR set to: 0
 10836   00399E  0E02               	movlw	2
 10837   0039A0  19F9               	xorwf	_fsm_state& (0+255),w,b
 10838   0039A2  A4D8               	btfss	status,2,c
 10839   0039A4  EFD6  F01C         	goto	i2u541_41
 10840   0039A8  EFD8  F01C         	goto	i2u541_40
 10841   0039AC                     i2u541_41:
 10842   0039AC  EFDB  F01C         	goto	i2l4781
 10843   0039B0                     i2u541_40:
 10844   0039B0                     i2l4779:
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;main.c: 738:         segPattern0 = segPattern0 | 0b10000000;
 10848   0039B0  503B               	movf	_segPattern0^0,w,c
 10849   0039B2  0980               	iorlw	128
 10850   0039B4  6E3B               	movwf	_segPattern0^0,c
 10851   0039B6                     i2l4781:
 10852                           
 10853                           ;main.c: 741:     segPattern1 = get7SegmentPattern( displayDigit1 );
 10854   0039B6  5037               	movf	_displayDigit1^0,w,c
 10855   0039B8  EC8C  F016         	call	i2_get7SegmentPattern
 10856   0039BC  6E3A               	movwf	_segPattern1^0,c
 10857   0039BE                     
 10858                           ;main.c: 742:     segPattern2 = get7SegmentPattern( displayDigit2 );
 10859   0039BE  5036               	movf	_displayDigit2^0,w,c
 10860   0039C0  EC8C  F016         	call	i2_get7SegmentPattern
 10861   0039C4  6E39               	movwf	_segPattern2^0,c
 10862   0039C6                     
 10863                           ;main.c: 744:     displayDigits( segPattern0, segPattern1, segPattern2 );
 10864   0039C6  C03A  F001         	movff	_segPattern1,i2displayDigits@digit1
 10865   0039CA  C039  F002         	movff	_segPattern2,i2displayDigits@digit2
 10866   0039CE  503B               	movf	_segPattern0^0,w,c
 10867   0039D0  EC88  F019         	call	i2_displayDigits
 10868   0039D4  0012               	return		;funcret
 10869   0039D6                     __end_ofi2_show7Segment:
 10870                           	callstack 0
 10871                           
 10872 ;; *************** function i2_get7SegmentPattern *****************
 10873 ;; Defined at:
 10874 ;;		line 516 in file "main.c"
 10875 ;; Parameters:    Size  Location     Type
 10876 ;;  digit           1    wreg     unsigned char 
 10877 ;; Auto vars:     Size  Location     Type
 10878 ;;  digit           1    0[COMRAM] unsigned char 
 10879 ;;  pattern         1    1[COMRAM] unsigned char 
 10880 ;; Return value:  Size  Location     Type
 10881 ;;                  1    wreg      unsigned char 
 10882 ;; Registers used:
 10883 ;;		wreg, status,2, status,0
 10884 ;; Tracked objects:
 10885 ;;		On entry : 0/0
 10886 ;;		On exit  : 0/0
 10887 ;;		Unchanged: 0/0
 10888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10889 ;;      Params:         0       0       0       0
 10890 ;;      Locals:         2       0       0       0
 10891 ;;      Temps:          0       0       0       0
 10892 ;;      Totals:         2       0       0       0
 10893 ;;Total ram usage:        2 bytes
 10894 ;; Hardware stack levels used: 1
 10895 ;; This function calls:
 10896 ;;		Nothing
 10897 ;; This function is called by:
 10898 ;;		i2_show7Segment
 10899 ;; This function uses a non-reentrant model
 10900 ;;
 10901                           
 10902                           	psect	text49
 10903   002D18                     __ptext49:
 10904                           	callstack 0
 10905   002D18                     i2_get7SegmentPattern:
 10906                           	callstack 20
 10907                           
 10908                           ;incstack = 0
 10909                           ;i2get7SegmentPattern@digit stored from wreg
 10910   002D18  6E01               	movwf	i2get7SegmentPattern@digit^0,c
 10911   002D1A                     
 10912                           ;main.c: 519:     uint8_t pattern;;main.c: 521:     switch (digit) {
 10913   002D1A  EFCE  F016         	goto	i2l4243
 10914   002D1E                     i2l4209:
 10915   002D1E  0E3F               	movlw	63
 10916   002D20  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10917   002D22  EF11  F017         	goto	i2l240
 10918   002D26                     i2l4211:
 10919   002D26  0E06               	movlw	6
 10920   002D28  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10921   002D2A  EF11  F017         	goto	i2l240
 10922   002D2E                     i2l4213:
 10923   002D2E  0E5B               	movlw	91
 10924   002D30  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10925   002D32  EF11  F017         	goto	i2l240
 10926   002D36                     i2l4215:
 10927   002D36  0E4F               	movlw	79
 10928   002D38  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10929   002D3A  EF11  F017         	goto	i2l240
 10930   002D3E                     i2l4217:
 10931   002D3E  0E66               	movlw	102
 10932   002D40  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10933   002D42  EF11  F017         	goto	i2l240
 10934   002D46                     i2l4219:
 10935   002D46  0E6D               	movlw	109
 10936   002D48  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10937   002D4A  EF11  F017         	goto	i2l240
 10938   002D4E                     i2l4221:
 10939   002D4E  0E7D               	movlw	125
 10940   002D50  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10941   002D52  EF11  F017         	goto	i2l240
 10942   002D56                     i2l4223:
 10943   002D56  0E07               	movlw	7
 10944   002D58  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10945   002D5A  EF11  F017         	goto	i2l240
 10946   002D5E                     i2l4225:
 10947   002D5E  0E7F               	movlw	127
 10948   002D60  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10949   002D62  EF11  F017         	goto	i2l240
 10950   002D66                     i2l4227:
 10951   002D66  0E6F               	movlw	111
 10952   002D68  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10953   002D6A  EF11  F017         	goto	i2l240
 10954   002D6E                     i2l4229:
 10955   002D6E  0E79               	movlw	121
 10956   002D70  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10957   002D72  EF11  F017         	goto	i2l240
 10958   002D76                     i2l4231:
 10959   002D76  0E77               	movlw	119
 10960   002D78  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10961   002D7A  EF11  F017         	goto	i2l240
 10962   002D7E                     i2l4233:
 10963   002D7E  0E39               	movlw	57
 10964   002D80  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10965   002D82  EF11  F017         	goto	i2l240
 10966   002D86                     i2l4237:
 10967   002D86  0E38               	movlw	56
 10968   002D88  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10969   002D8A  EF11  F017         	goto	i2l240
 10970   002D8E                     i2l4239:
 10971   002D8E  0E31               	movlw	49
 10972   002D90  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10973   002D92  EF11  F017         	goto	i2l240
 10974   002D96                     i2l256:
 10975   002D96  6A02               	clrf	i2get7SegmentPattern@pattern^0,c
 10976   002D98  EF11  F017         	goto	i2l240
 10977   002D9C                     i2l4243:
 10978   002D9C  5001               	movf	i2get7SegmentPattern@digit^0,w,c
 10979                           
 10980                           ; Switch size 1, requested type "simple"
 10981                           ; Number of cases is 16, Range of values is 0 to 114
 10982                           ; switch strategies available:
 10983                           ; Name         Instructions Cycles
 10984                           ; simple_byte           49    25 (average)
 10985                           ;	Chosen strategy is simple_byte
 10986   002D9E  0A00               	xorlw	0	; case 0
 10987   002DA0  B4D8               	btfsc	status,2,c
 10988   002DA2  EF8F  F016         	goto	i2l4209
 10989   002DA6  0A01               	xorlw	1	; case 1
 10990   002DA8  B4D8               	btfsc	status,2,c
 10991   002DAA  EF93  F016         	goto	i2l4211
 10992   002DAE  0A03               	xorlw	3	; case 2
 10993   002DB0  B4D8               	btfsc	status,2,c
 10994   002DB2  EF97  F016         	goto	i2l4213
 10995   002DB6  0A01               	xorlw	1	; case 3
 10996   002DB8  B4D8               	btfsc	status,2,c
 10997   002DBA  EF9B  F016         	goto	i2l4215
 10998   002DBE  0A07               	xorlw	7	; case 4
 10999   002DC0  B4D8               	btfsc	status,2,c
 11000   002DC2  EF9F  F016         	goto	i2l4217
 11001   002DC6  0A01               	xorlw	1	; case 5
 11002   002DC8  B4D8               	btfsc	status,2,c
 11003   002DCA  EFA3  F016         	goto	i2l4219
 11004   002DCE  0A03               	xorlw	3	; case 6
 11005   002DD0  B4D8               	btfsc	status,2,c
 11006   002DD2  EFA7  F016         	goto	i2l4221
 11007   002DD6  0A01               	xorlw	1	; case 7
 11008   002DD8  B4D8               	btfsc	status,2,c
 11009   002DDA  EFAB  F016         	goto	i2l4223
 11010   002DDE  0A0F               	xorlw	15	; case 8
 11011   002DE0  B4D8               	btfsc	status,2,c
 11012   002DE2  EFAF  F016         	goto	i2l4225
 11013   002DE6  0A01               	xorlw	1	; case 9
 11014   002DE8  B4D8               	btfsc	status,2,c
 11015   002DEA  EFB3  F016         	goto	i2l4227
 11016   002DEE  0A48               	xorlw	72	; case 65
 11017   002DF0  B4D8               	btfsc	status,2,c
 11018   002DF2  EFBB  F016         	goto	i2l4231
 11019   002DF6  0A02               	xorlw	2	; case 67
 11020   002DF8  B4D8               	btfsc	status,2,c
 11021   002DFA  EFBF  F016         	goto	i2l4233
 11022   002DFE  0A0F               	xorlw	15	; case 76
 11023   002E00  B4D8               	btfsc	status,2,c
 11024   002E02  EFC3  F016         	goto	i2l4237
 11025   002E06  0A1F               	xorlw	31	; case 83
 11026   002E08  B4D8               	btfsc	status,2,c
 11027   002E0A  EFA3  F016         	goto	i2l4219
 11028   002E0E  0A0A               	xorlw	10	; case 89
 11029   002E10  B4D8               	btfsc	status,2,c
 11030   002E12  EFB7  F016         	goto	i2l4229
 11031   002E16  0A2B               	xorlw	43	; case 114
 11032   002E18  B4D8               	btfsc	status,2,c
 11033   002E1A  EFC7  F016         	goto	i2l4239
 11034   002E1E  EFCB  F016         	goto	i2l256
 11035   002E22                     i2l240:
 11036                           
 11037                           ;main.c: 541:     return pattern;
 11038   002E22  5002               	movf	i2get7SegmentPattern@pattern^0,w,c
 11039   002E24  0012               	return		;funcret
 11040   002E26                     __end_ofi2_get7SegmentPattern:
 11041                           	callstack 0
 11042                           
 11043 ;; *************** function i2_displayDigits *****************
 11044 ;; Defined at:
 11045 ;;		line 544 in file "main.c"
 11046 ;; Parameters:    Size  Location     Type
 11047 ;;  digit0          1    wreg     unsigned char 
 11048 ;;  digit1          1    0[COMRAM] unsigned char 
 11049 ;;  digit2          1    1[COMRAM] unsigned char 
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;  digit0          1    4[COMRAM] unsigned char 
 11052 ;;  i               2    5[COMRAM] int 
 11053 ;; Return value:  Size  Location     Type
 11054 ;;                  1    wreg      void 
 11055 ;; Registers used:
 11056 ;;		wreg, status,2, status,0
 11057 ;; Tracked objects:
 11058 ;;		On entry : 0/0
 11059 ;;		On exit  : 0/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11062 ;;      Params:         2       0       0       0
 11063 ;;      Locals:         3       0       0       0
 11064 ;;      Temps:          2       0       0       0
 11065 ;;      Totals:         7       0       0       0
 11066 ;;Total ram usage:        7 bytes
 11067 ;; Hardware stack levels used: 1
 11068 ;; This function calls:
 11069 ;;		Nothing
 11070 ;; This function is called by:
 11071 ;;		i2_show7Segment
 11072 ;; This function uses a non-reentrant model
 11073 ;;
 11074                           
 11075                           	psect	text50
 11076   003310                     __ptext50:
 11077                           	callstack 0
 11078   003310                     i2_displayDigits:
 11079                           	callstack 20
 11080                           
 11081                           ;incstack = 0
 11082                           ;i2displayDigits@digit0 stored from wreg
 11083   003310  6E05               	movwf	i2displayDigits@digit0^0,c
 11084   003312                     
 11085                           ;main.c: 545:     int i;;main.c: 546:     for ( i = 0 ; i < 8 ; i++ ){
 11086   003312  0E00               	movlw	0
 11087   003314  6E07               	movwf	(i2displayDigits@i+1)^0,c
 11088   003316  0E00               	movlw	0
 11089   003318  6E06               	movwf	i2displayDigits@i^0,c
 11090   00331A                     i2l4251:
 11091                           
 11092                           ;main.c: 548:         PORTCbits.RC5 = (digit0 >> i) & (0x01);
 11093   00331A  C006  F003         	movff	i2displayDigits@i,??i2_displayDigits
 11094   00331E  C005  F004         	movff	i2displayDigits@digit0,??i2_displayDigits+1
 11095   003322  2A03               	incf	??i2_displayDigits^0,f,c
 11096   003324  EF96  F019         	goto	i2u465_44
 11097   003328                     i2u465_45:
 11098   003328  90D8               	bcf	status,0,c
 11099   00332A  3204               	rrcf	(??i2_displayDigits+1)^0,f,c
 11100   00332C                     i2u465_44:
 11101   00332C  2E03               	decfsz	??i2_displayDigits^0,f,c
 11102   00332E  EF94  F019         	goto	i2u465_45
 11103   003332  0E01               	movlw	1
 11104   003334  1604               	andwf	(??i2_displayDigits+1)^0,f,c
 11105   003336  3A04               	swapf	(??i2_displayDigits+1)^0,f,c
 11106   003338  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 11107   00333A  5082               	movf	130,w,c	;volatile
 11108   00333C  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 11109   00333E  0BDF               	andlw	-33
 11110   003340  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 11111   003342  6E82               	movwf	130,c	;volatile
 11112                           
 11113                           ;main.c: 549:         PORTCbits.RC4 = (digit1 >> i) & (0x01);
 11114   003344  C006  F003         	movff	i2displayDigits@i,??i2_displayDigits
 11115   003348  C001  F004         	movff	i2displayDigits@digit1,??i2_displayDigits+1
 11116   00334C  2A03               	incf	??i2_displayDigits^0,f,c
 11117   00334E  EFAB  F019         	goto	i2u466_44
 11118   003352                     i2u466_45:
 11119   003352  90D8               	bcf	status,0,c
 11120   003354  3204               	rrcf	(??i2_displayDigits+1)^0,f,c
 11121   003356                     i2u466_44:
 11122   003356  2E03               	decfsz	??i2_displayDigits^0,f,c
 11123   003358  EFA9  F019         	goto	i2u466_45
 11124   00335C  0E01               	movlw	1
 11125   00335E  1604               	andwf	(??i2_displayDigits+1)^0,f,c
 11126   003360  3A04               	swapf	(??i2_displayDigits+1)^0,f,c
 11127   003362  5082               	movf	130,w,c	;volatile
 11128   003364  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 11129   003366  0BEF               	andlw	-17
 11130   003368  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 11131   00336A  6E82               	movwf	130,c	;volatile
 11132                           
 11133                           ;main.c: 550:         PORTCbits.RC3 = (digit2 >> i) & (0x01);
 11134   00336C  C006  F003         	movff	i2displayDigits@i,??i2_displayDigits
 11135   003370  C002  F004         	movff	i2displayDigits@digit2,??i2_displayDigits+1
 11136   003374  2A03               	incf	??i2_displayDigits^0,f,c
 11137   003376  EFBF  F019         	goto	i2u467_44
 11138   00337A                     i2u467_45:
 11139   00337A  90D8               	bcf	status,0,c
 11140   00337C  3204               	rrcf	(??i2_displayDigits+1)^0,f,c
 11141   00337E                     i2u467_44:
 11142   00337E  2E03               	decfsz	??i2_displayDigits^0,f,c
 11143   003380  EFBD  F019         	goto	i2u467_45
 11144   003384  0E01               	movlw	1
 11145   003386  1604               	andwf	(??i2_displayDigits+1)^0,f,c
 11146   003388  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 11147   00338A  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 11148   00338C  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 11149   00338E  5082               	movf	130,w,c	;volatile
 11150   003390  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 11151   003392  0BF7               	andlw	-9
 11152   003394  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 11153   003396  6E82               	movwf	130,c	;volatile
 11154   003398                     
 11155                           ;main.c: 553:         PORTCbits.RC6 = 1;
 11156   003398  8C82               	bsf	130,6,c	;volatile
 11157   00339A                     
 11158                           ;main.c: 554:         _delay((unsigned long)((500)*(2000000/4000000.0)));
 11159   00339A  0E53               	movlw	83
 11160   00339C                     i2u1011_47:
 11161   00339C  2EE8               	decfsz	wreg,f,c
 11162   00339E  D7FE               	bra	i2u1011_47
 11163   0033A0  0000               	nop	
 11164   0033A2                     
 11165                           ;main.c: 555:         PORTCbits.RC6 = 0;
 11166   0033A2  9C82               	bcf	130,6,c	;volatile
 11167   0033A4                     
 11168                           ;main.c: 556:         _delay((unsigned long)((500)*(2000000/4000000.0)));
 11169   0033A4  0E53               	movlw	83
 11170   0033A6                     i2u1012_47:
 11171   0033A6  2EE8               	decfsz	wreg,f,c
 11172   0033A8  D7FE               	bra	i2u1012_47
 11173   0033AA  0000               	nop	
 11174   0033AC                     
 11175                           ;main.c: 557:     }
 11176   0033AC  4A06               	infsnz	i2displayDigits@i^0,f,c
 11177   0033AE  2A07               	incf	(i2displayDigits@i+1)^0,f,c
 11178   0033B0  BE07               	btfsc	(i2displayDigits@i+1)^0,7,c
 11179   0033B2  EFE4  F019         	goto	i2u468_41
 11180   0033B6  5007               	movf	(i2displayDigits@i+1)^0,w,c
 11181   0033B8  E109               	bnz	i2u468_40
 11182   0033BA  0E08               	movlw	8
 11183   0033BC  5C06               	subwf	i2displayDigits@i^0,w,c
 11184   0033BE  A0D8               	btfss	status,0,c
 11185   0033C0  EFE4  F019         	goto	i2u468_41
 11186   0033C4  EFE6  F019         	goto	i2u468_40
 11187   0033C8                     i2u468_41:
 11188   0033C8  EF8D  F019         	goto	i2l4251
 11189   0033CC                     i2u468_40:
 11190   0033CC                     
 11191                           ;main.c: 560:     PORTCbits.RC7 = 1;
 11192   0033CC  8E82               	bsf	130,7,c	;volatile
 11193   0033CE                     
 11194                           ;main.c: 561:     _delay((unsigned long)((500)*(2000000/4000000.0)));
 11195   0033CE  0E53               	movlw	83
 11196   0033D0                     i2u1013_47:
 11197   0033D0  2EE8               	decfsz	wreg,f,c
 11198   0033D2  D7FE               	bra	i2u1013_47
 11199   0033D4  0000               	nop	
 11200   0033D6                     
 11201                           ;main.c: 562:     PORTCbits.RC7 = 0;
 11202   0033D6  9E82               	bcf	130,7,c	;volatile
 11203   0033D8  0012               	return		;funcret
 11204   0033DA                     __end_ofi2_displayDigits:
 11205                           	callstack 0
 11206                           
 11207 ;; *************** function i2_setDisplayDigits *****************
 11208 ;; Defined at:
 11209 ;;		line 670 in file "main.c"
 11210 ;; Parameters:    Size  Location     Type
 11211 ;;		None
 11212 ;; Auto vars:     Size  Location     Type
 11213 ;;		None
 11214 ;; Return value:  Size  Location     Type
 11215 ;;                  1    wreg      void 
 11216 ;; Registers used:
 11217 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11218 ;; Tracked objects:
 11219 ;;		On entry : 0/0
 11220 ;;		On exit  : 0/0
 11221 ;;		Unchanged: 0/0
 11222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11223 ;;      Params:         0       0       0       0
 11224 ;;      Locals:         0       0       0       0
 11225 ;;      Temps:          0       0       0       0
 11226 ;;      Totals:         0       0       0       0
 11227 ;;Total ram usage:        0 bytes
 11228 ;; Hardware stack levels used: 1
 11229 ;; Hardware stack levels required when called: 1
 11230 ;; This function calls:
 11231 ;;		i2___flmul
 11232 ;;		i2___fltol
 11233 ;;		i2___lwdiv
 11234 ;;		i2___lwmod
 11235 ;; This function is called by:
 11236 ;;		_ISR
 11237 ;; This function uses a non-reentrant model
 11238 ;;
 11239                           
 11240                           	psect	text51
 11241   00241A                     __ptext51:
 11242                           	callstack 0
 11243   00241A                     i2_setDisplayDigits:
 11244                           	callstack 20
 11245   00241A                     
 11246                           ;main.c: 671:     if (fsm_state == 0) {
 11247   00241A  0100               	movlb	0	; () banked
 11248   00241C  51F9               	movf	_fsm_state& (0+255),w,b
 11249   00241E  A4D8               	btfss	status,2,c
 11250   002420  EF14  F012         	goto	i2u531_41
 11251   002424  EF16  F012         	goto	i2u531_40
 11252   002428                     i2u531_41:
 11253   002428  EF1E  F012         	goto	i2l4721
 11254   00242C                     i2u531_40:
 11255   00242C                     
 11256                           ; BSR set to: 0
 11257                           ;main.c: 673:         displayDigit0 = 11;
 11258   00242C  0E0B               	movlw	11
 11259   00242E  6E38               	movwf	_displayDigit0^0,c
 11260                           
 11261                           ;main.c: 674:         displayDigit1 = 'A';
 11262   002430  0E41               	movlw	65
 11263   002432  6E37               	movwf	_displayDigit1^0,c
 11264                           
 11265                           ;main.c: 675:         displayDigit2 = 11;
 11266   002434  0E0B               	movlw	11
 11267   002436  6E36               	movwf	_displayDigit2^0,c
 11268                           
 11269                           ;main.c: 677:     } else if (fsm_state == 1) {
 11270   002438  EF2A  F013         	goto	i2l338
 11271   00243C                     i2l4721:
 11272                           
 11273                           ; BSR set to: 0
 11274   00243C  05F9               	decf	_fsm_state& (0+255),w,b
 11275   00243E  A4D8               	btfss	status,2,c
 11276   002440  EF24  F012         	goto	i2u532_41
 11277   002444  EF26  F012         	goto	i2u532_40
 11278   002448                     i2u532_41:
 11279   002448  EF7E  F012         	goto	i2l4735
 11280   00244C                     i2u532_40:
 11281   00244C                     
 11282                           ; BSR set to: 0
 11283                           ;main.c: 679:         c_target = (unsigned int) (adc_voltage * 100);
 11284   00244C  0E00               	movlw	0
 11285   00244E  6E05               	movwf	i2___flmul@a^0,c
 11286   002450  0E00               	movlw	0
 11287   002452  6E06               	movwf	(i2___flmul@a+1)^0,c
 11288   002454  0EC8               	movlw	200
 11289   002456  6E07               	movwf	(i2___flmul@a+2)^0,c
 11290   002458  0E42               	movlw	66
 11291   00245A  6E08               	movwf	(i2___flmul@a+3)^0,c
 11292   00245C  C0EA  F001         	movff	_adc_voltage,i2___flmul@b
 11293   002460  C0EB  F002         	movff	_adc_voltage+1,i2___flmul@b+1
 11294   002464  C0EC  F003         	movff	_adc_voltage+2,i2___flmul@b+2
 11295   002468  C0ED  F004         	movff	_adc_voltage+3,i2___flmul@b+3
 11296   00246C  ECFA  F00A         	call	i2___flmul	;wreg free
 11297   002470  C001  F01A         	movff	?i2___flmul,i2___fltol@f1
 11298   002474  C002  F01B         	movff	?i2___flmul+1,i2___fltol@f1+1
 11299   002478  C003  F01C         	movff	?i2___flmul+2,i2___fltol@f1+2
 11300   00247C  C004  F01D         	movff	?i2___flmul+3,i2___fltol@f1+3
 11301   002480  EC1A  F018         	call	i2___fltol	;wreg free
 11302   002484  C01A  F032         	movff	?i2___fltol,_c_target
 11303   002488  C01B  F033         	movff	?i2___fltol+1,_c_target+1
 11304   00248C                     
 11305                           ;main.c: 680:         c_remainder = c_target % 100;
 11306   00248C  C032  F001         	movff	_c_target,i2___lwmod@dividend
 11307   002490  C033  F002         	movff	_c_target+1,i2___lwmod@dividend+1
 11308   002494  0E00               	movlw	0
 11309   002496  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 11310   002498  0E64               	movlw	100
 11311   00249A  6E03               	movwf	i2___lwmod@divisor^0,c
 11312   00249C  EC57  F01C         	call	i2___lwmod	;wreg free
 11313   0024A0  C001  F030         	movff	?i2___lwmod,_c_remainder
 11314   0024A4  C002  F031         	movff	?i2___lwmod+1,_c_remainder+1
 11315   0024A8                     
 11316                           ;main.c: 681:         c_number = c_target / 100;
 11317   0024A8  C032  F001         	movff	_c_target,i2___lwdiv@dividend
 11318   0024AC  C033  F002         	movff	_c_target+1,i2___lwdiv@dividend+1
 11319   0024B0  0E00               	movlw	0
 11320   0024B2  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 11321   0024B4  0E64               	movlw	100
 11322   0024B6  6E03               	movwf	i2___lwdiv@divisor^0,c
 11323   0024B8  ECB1  F01B         	call	i2___lwdiv	;wreg free
 11324   0024BC  C001  F02E         	movff	?i2___lwdiv,_c_number
 11325   0024C0  C002  F02F         	movff	?i2___lwdiv+1,_c_number+1
 11326   0024C4                     
 11327                           ;main.c: 683:         displayDigit0 = (uint8_t) c_number;
 11328   0024C4  C02E  F038         	movff	_c_number,_displayDigit0
 11329   0024C8                     
 11330                           ;main.c: 684:         displayDigit1 = (uint8_t) (c_remainder / 10);
 11331   0024C8  C030  F001         	movff	_c_remainder,i2___lwdiv@dividend
 11332   0024CC  C031  F002         	movff	_c_remainder+1,i2___lwdiv@dividend+1
 11333   0024D0  0E00               	movlw	0
 11334   0024D2  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 11335   0024D4  0E0A               	movlw	10
 11336   0024D6  6E03               	movwf	i2___lwdiv@divisor^0,c
 11337   0024D8  ECB1  F01B         	call	i2___lwdiv	;wreg free
 11338   0024DC  5001               	movf	?i2___lwdiv^0,w,c
 11339   0024DE  6E37               	movwf	_displayDigit1^0,c
 11340   0024E0                     
 11341                           ;main.c: 685:         displayDigit2 = c_remainder % 10;
 11342   0024E0  C030  F001         	movff	_c_remainder,i2___lwmod@dividend
 11343   0024E4  C031  F002         	movff	_c_remainder+1,i2___lwmod@dividend+1
 11344   0024E8  0E00               	movlw	0
 11345   0024EA  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 11346   0024EC  0E0A               	movlw	10
 11347   0024EE  6E03               	movwf	i2___lwmod@divisor^0,c
 11348   0024F0  EC57  F01C         	call	i2___lwmod	;wreg free
 11349   0024F4  5001               	movf	?i2___lwmod^0,w,c
 11350   0024F6  6E36               	movwf	_displayDigit2^0,c
 11351                           
 11352                           ;main.c: 687:     } else if (fsm_state == 2) {
 11353   0024F8  EF2A  F013         	goto	i2l338
 11354   0024FC                     i2l4735:
 11355                           
 11356                           ; BSR set to: 0
 11357   0024FC  0E02               	movlw	2
 11358   0024FE  19F9               	xorwf	_fsm_state& (0+255),w,b
 11359   002500  A4D8               	btfss	status,2,c
 11360   002502  EF85  F012         	goto	i2u533_41
 11361   002506  EF87  F012         	goto	i2u533_40
 11362   00250A                     i2u533_41:
 11363   00250A  EFD5  F012         	goto	i2l4749
 11364   00250E                     i2u533_40:
 11365   00250E                     
 11366                           ; BSR set to: 0
 11367                           ;main.c: 689:         c_target = (unsigned int) (adc_voltage * 100);
 11368   00250E  0E00               	movlw	0
 11369   002510  6E05               	movwf	i2___flmul@a^0,c
 11370   002512  0E00               	movlw	0
 11371   002514  6E06               	movwf	(i2___flmul@a+1)^0,c
 11372   002516  0EC8               	movlw	200
 11373   002518  6E07               	movwf	(i2___flmul@a+2)^0,c
 11374   00251A  0E42               	movlw	66
 11375   00251C  6E08               	movwf	(i2___flmul@a+3)^0,c
 11376   00251E  C0EA  F001         	movff	_adc_voltage,i2___flmul@b
 11377   002522  C0EB  F002         	movff	_adc_voltage+1,i2___flmul@b+1
 11378   002526  C0EC  F003         	movff	_adc_voltage+2,i2___flmul@b+2
 11379   00252A  C0ED  F004         	movff	_adc_voltage+3,i2___flmul@b+3
 11380   00252E  ECFA  F00A         	call	i2___flmul	;wreg free
 11381   002532  C001  F01A         	movff	?i2___flmul,i2___fltol@f1
 11382   002536  C002  F01B         	movff	?i2___flmul+1,i2___fltol@f1+1
 11383   00253A  C003  F01C         	movff	?i2___flmul+2,i2___fltol@f1+2
 11384   00253E  C004  F01D         	movff	?i2___flmul+3,i2___fltol@f1+3
 11385   002542  EC1A  F018         	call	i2___fltol	;wreg free
 11386   002546  C01A  F032         	movff	?i2___fltol,_c_target
 11387   00254A  C01B  F033         	movff	?i2___fltol+1,_c_target+1
 11388   00254E                     
 11389                           ;main.c: 690:         c_remainder = c_target % 100;
 11390   00254E  C032  F001         	movff	_c_target,i2___lwmod@dividend
 11391   002552  C033  F002         	movff	_c_target+1,i2___lwmod@dividend+1
 11392   002556  0E00               	movlw	0
 11393   002558  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 11394   00255A  0E64               	movlw	100
 11395   00255C  6E03               	movwf	i2___lwmod@divisor^0,c
 11396   00255E  EC57  F01C         	call	i2___lwmod	;wreg free
 11397   002562  C001  F030         	movff	?i2___lwmod,_c_remainder
 11398   002566  C002  F031         	movff	?i2___lwmod+1,_c_remainder+1
 11399   00256A                     
 11400                           ;main.c: 691:         c_number = c_target / 100;
 11401   00256A  C032  F001         	movff	_c_target,i2___lwdiv@dividend
 11402   00256E  C033  F002         	movff	_c_target+1,i2___lwdiv@dividend+1
 11403   002572  0E00               	movlw	0
 11404   002574  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 11405   002576  0E64               	movlw	100
 11406   002578  6E03               	movwf	i2___lwdiv@divisor^0,c
 11407   00257A  ECB1  F01B         	call	i2___lwdiv	;wreg free
 11408   00257E  C001  F02E         	movff	?i2___lwdiv,_c_number
 11409   002582  C002  F02F         	movff	?i2___lwdiv+1,_c_number+1
 11410   002586                     
 11411                           ;main.c: 693:         displayDigit0 = (uint8_t) c_number;
 11412   002586  C02E  F038         	movff	_c_number,_displayDigit0
 11413   00258A                     
 11414                           ;main.c: 694:         displayDigit1 = (uint8_t) (c_remainder / 10);
 11415   00258A  C030  F001         	movff	_c_remainder,i2___lwdiv@dividend
 11416   00258E  C031  F002         	movff	_c_remainder+1,i2___lwdiv@dividend+1
 11417   002592  0E00               	movlw	0
 11418   002594  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 11419   002596  0E0A               	movlw	10
 11420   002598  6E03               	movwf	i2___lwdiv@divisor^0,c
 11421   00259A  ECB1  F01B         	call	i2___lwdiv	;wreg free
 11422   00259E  5001               	movf	?i2___lwdiv^0,w,c
 11423   0025A0  6E37               	movwf	_displayDigit1^0,c
 11424   0025A2                     
 11425                           ;main.c: 695:         displayDigit2 = 'C';
 11426   0025A2  0E43               	movlw	67
 11427   0025A4  6E36               	movwf	_displayDigit2^0,c
 11428                           
 11429                           ;main.c: 697:     } else if (fsm_state == 3) {
 11430   0025A6  EF2A  F013         	goto	i2l338
 11431   0025AA                     i2l4749:
 11432                           
 11433                           ; BSR set to: 0
 11434   0025AA  0E03               	movlw	3
 11435   0025AC  19F9               	xorwf	_fsm_state& (0+255),w,b
 11436   0025AE  A4D8               	btfss	status,2,c
 11437   0025B0  EFDC  F012         	goto	i2u534_41
 11438   0025B4  EFDE  F012         	goto	i2u534_40
 11439   0025B8                     i2u534_41:
 11440   0025B8  EFE6  F012         	goto	i2l4753
 11441   0025BC                     i2u534_40:
 11442   0025BC                     
 11443                           ; BSR set to: 0
 11444                           ;main.c: 699:         displayDigit0 = 11;
 11445   0025BC  0E0B               	movlw	11
 11446   0025BE  6E38               	movwf	_displayDigit0^0,c
 11447                           
 11448                           ;main.c: 700:         displayDigit1 = 'C';
 11449   0025C0  0E43               	movlw	67
 11450   0025C2  6E37               	movwf	_displayDigit1^0,c
 11451                           
 11452                           ;main.c: 701:         displayDigit2 = 11;
 11453   0025C4  0E0B               	movlw	11
 11454   0025C6  6E36               	movwf	_displayDigit2^0,c
 11455                           
 11456                           ;main.c: 703:     } else if (fsm_state == 4) {
 11457   0025C8  EF2A  F013         	goto	i2l338
 11458   0025CC                     i2l4753:
 11459                           
 11460                           ; BSR set to: 0
 11461   0025CC  0E04               	movlw	4
 11462   0025CE  19F9               	xorwf	_fsm_state& (0+255),w,b
 11463   0025D0  A4D8               	btfss	status,2,c
 11464   0025D2  EFED  F012         	goto	i2u535_41
 11465   0025D6  EFEF  F012         	goto	i2u535_40
 11466   0025DA                     i2u535_41:
 11467   0025DA  EFF6  F012         	goto	i2l4759
 11468   0025DE                     i2u535_40:
 11469   0025DE                     
 11470                           ; BSR set to: 0
 11471                           ;main.c: 705:         displayDigit0 = 'S';
 11472   0025DE  0E53               	movlw	83
 11473   0025E0  6E38               	movwf	_displayDigit0^0,c
 11474   0025E2                     
 11475                           ; BSR set to: 0
 11476                           ;main.c: 706:         displayDigit1 = 0;
 11477   0025E2  6A37               	clrf	_displayDigit1^0,c
 11478                           
 11479                           ;main.c: 707:         displayDigit2 = 11;
 11480   0025E4  0E0B               	movlw	11
 11481   0025E6  6E36               	movwf	_displayDigit2^0,c
 11482                           
 11483                           ;main.c: 709:     } else if (fsm_state == 5) {
 11484   0025E8  EF2A  F013         	goto	i2l338
 11485   0025EC                     i2l4759:
 11486                           
 11487                           ; BSR set to: 0
 11488   0025EC  0E05               	movlw	5
 11489   0025EE  19F9               	xorwf	_fsm_state& (0+255),w,b
 11490   0025F0  A4D8               	btfss	status,2,c
 11491   0025F2  EFFD  F012         	goto	i2u536_41
 11492   0025F6  EFFF  F012         	goto	i2u536_40
 11493   0025FA                     i2u536_41:
 11494   0025FA  EF07  F013         	goto	i2l4763
 11495   0025FE                     i2u536_40:
 11496   0025FE                     
 11497                           ; BSR set to: 0
 11498                           ;main.c: 711:         displayDigit0 = 'S';
 11499   0025FE  0E53               	movlw	83
 11500   002600  6E38               	movwf	_displayDigit0^0,c
 11501                           
 11502                           ;main.c: 712:         displayDigit1 = 1;
 11503   002602  0E01               	movlw	1
 11504   002604  6E37               	movwf	_displayDigit1^0,c
 11505                           
 11506                           ;main.c: 713:         displayDigit2 = 11;
 11507   002606  0E0B               	movlw	11
 11508   002608  6E36               	movwf	_displayDigit2^0,c
 11509                           
 11510                           ;main.c: 715:     } else if (fsm_state == 6) {
 11511   00260A  EF2A  F013         	goto	i2l338
 11512   00260E                     i2l4763:
 11513                           
 11514                           ; BSR set to: 0
 11515   00260E  0E06               	movlw	6
 11516   002610  19F9               	xorwf	_fsm_state& (0+255),w,b
 11517   002612  A4D8               	btfss	status,2,c
 11518   002614  EF0E  F013         	goto	i2u537_41
 11519   002618  EF10  F013         	goto	i2u537_40
 11520   00261C                     i2u537_41:
 11521   00261C  EF18  F013         	goto	i2l4767
 11522   002620                     i2u537_40:
 11523   002620                     
 11524                           ; BSR set to: 0
 11525                           ;main.c: 717:         displayDigit0 = 'S';
 11526   002620  0E53               	movlw	83
 11527   002622  6E38               	movwf	_displayDigit0^0,c
 11528                           
 11529                           ;main.c: 718:         displayDigit1 = 2;
 11530   002624  0E02               	movlw	2
 11531   002626  6E37               	movwf	_displayDigit1^0,c
 11532                           
 11533                           ;main.c: 719:         displayDigit2 = 11;
 11534   002628  0E0B               	movlw	11
 11535   00262A  6E36               	movwf	_displayDigit2^0,c
 11536                           
 11537                           ;main.c: 721:     } else if (fsm_state == 7) {
 11538   00262C  EF2A  F013         	goto	i2l338
 11539   002630                     i2l4767:
 11540                           
 11541                           ; BSR set to: 0
 11542   002630  0E07               	movlw	7
 11543   002632  19F9               	xorwf	_fsm_state& (0+255),w,b
 11544   002634  A4D8               	btfss	status,2,c
 11545   002636  EF1F  F013         	goto	i2u538_41
 11546   00263A  EF21  F013         	goto	i2u538_40
 11547   00263E                     i2u538_41:
 11548   00263E  EF29  F013         	goto	i2l336
 11549   002642                     i2u538_40:
 11550   002642                     
 11551                           ; BSR set to: 0
 11552                           ;main.c: 723:         displayDigit0 = 'C';
 11553   002642  0E43               	movlw	67
 11554   002644  6E38               	movwf	_displayDigit0^0,c
 11555                           
 11556                           ;main.c: 724:         displayDigit1 = 'L';
 11557   002646  0E4C               	movlw	76
 11558   002648  6E37               	movwf	_displayDigit1^0,c
 11559                           
 11560                           ;main.c: 725:         displayDigit2 = 'r';
 11561   00264A  0E72               	movlw	114
 11562   00264C  6E36               	movwf	_displayDigit2^0,c
 11563                           
 11564                           ;main.c: 727:     }
 11565   00264E  EF2A  F013         	goto	i2l338
 11566   002652                     i2l336:
 11567                           
 11568                           ; BSR set to: 0
 11569                           ;main.c: 729:         __nop();
 11570   002652  0000               	nop	
 11571   002654                     i2l338:
 11572   002654  0012               	return		;funcret
 11573   002656                     __end_ofi2_setDisplayDigits:
 11574                           	callstack 0
 11575                           
 11576 ;; *************** function i2___lwmod *****************
 11577 ;; Defined at:
 11578 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwmod.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;  dividend        2    0[COMRAM] unsigned int 
 11581 ;;  divisor         2    2[COMRAM] unsigned int 
 11582 ;; Auto vars:     Size  Location     Type
 11583 ;;  counter         1    4[COMRAM] unsigned char 
 11584 ;; Return value:  Size  Location     Type
 11585 ;;                  2    0[COMRAM] unsigned int 
 11586 ;; Registers used:
 11587 ;;		wreg, status,2, status,0
 11588 ;; Tracked objects:
 11589 ;;		On entry : 0/0
 11590 ;;		On exit  : 0/0
 11591 ;;		Unchanged: 0/0
 11592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11593 ;;      Params:         4       0       0       0
 11594 ;;      Locals:         1       0       0       0
 11595 ;;      Temps:          0       0       0       0
 11596 ;;      Totals:         5       0       0       0
 11597 ;;Total ram usage:        5 bytes
 11598 ;; Hardware stack levels used: 1
 11599 ;; This function calls:
 11600 ;;		Nothing
 11601 ;; This function is called by:
 11602 ;;		i2_setDisplayDigits
 11603 ;; This function uses a non-reentrant model
 11604 ;;
 11605                           
 11606                           	psect	text52
 11607   0038AE                     __ptext52:
 11608                           	callstack 0
 11609   0038AE                     i2___lwmod:
 11610                           	callstack 20
 11611   0038AE  5003               	movf	i2___lwmod@divisor^0,w,c
 11612   0038B0  1004               	iorwf	(i2___lwmod@divisor+1)^0,w,c
 11613   0038B2  B4D8               	btfsc	status,2,c
 11614   0038B4  EF5E  F01C         	goto	i2u480_41
 11615   0038B8  EF60  F01C         	goto	i2u480_40
 11616   0038BC                     i2u480_41:
 11617   0038BC  EF84  F01C         	goto	i2l848
 11618   0038C0                     i2u480_40:
 11619   0038C0  0E01               	movlw	1
 11620   0038C2  6E05               	movwf	i2___lwmod@counter^0,c
 11621   0038C4  EF68  F01C         	goto	i2l4345
 11622   0038C8                     i2l4343:
 11623   0038C8  90D8               	bcf	status,0,c
 11624   0038CA  3603               	rlcf	i2___lwmod@divisor^0,f,c
 11625   0038CC  3604               	rlcf	(i2___lwmod@divisor+1)^0,f,c
 11626   0038CE  2A05               	incf	i2___lwmod@counter^0,f,c
 11627   0038D0                     i2l4345:
 11628   0038D0  AE04               	btfss	(i2___lwmod@divisor+1)^0,7,c
 11629   0038D2  EF6D  F01C         	goto	i2u481_41
 11630   0038D6  EF6F  F01C         	goto	i2u481_40
 11631   0038DA                     i2u481_41:
 11632   0038DA  EF64  F01C         	goto	i2l4343
 11633   0038DE                     i2u481_40:
 11634   0038DE                     i2l4347:
 11635   0038DE  5003               	movf	i2___lwmod@divisor^0,w,c
 11636   0038E0  5C01               	subwf	i2___lwmod@dividend^0,w,c
 11637   0038E2  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
 11638   0038E4  5802               	subwfb	(i2___lwmod@dividend+1)^0,w,c
 11639   0038E6  A0D8               	btfss	status,0,c
 11640   0038E8  EF78  F01C         	goto	i2u482_41
 11641   0038EC  EF7A  F01C         	goto	i2u482_40
 11642   0038F0                     i2u482_41:
 11643   0038F0  EF7E  F01C         	goto	i2l4351
 11644   0038F4                     i2u482_40:
 11645   0038F4  5003               	movf	i2___lwmod@divisor^0,w,c
 11646   0038F6  5E01               	subwf	i2___lwmod@dividend^0,f,c
 11647   0038F8  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
 11648   0038FA  5A02               	subwfb	(i2___lwmod@dividend+1)^0,f,c
 11649   0038FC                     i2l4351:
 11650   0038FC  90D8               	bcf	status,0,c
 11651   0038FE  3204               	rrcf	(i2___lwmod@divisor+1)^0,f,c
 11652   003900  3203               	rrcf	i2___lwmod@divisor^0,f,c
 11653   003902  2E05               	decfsz	i2___lwmod@counter^0,f,c
 11654   003904  EF6F  F01C         	goto	i2l4347
 11655   003908                     i2l848:
 11656   003908  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
 11657   00390C  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 11658   003910  0012               	return		;funcret
 11659   003912                     __end_ofi2___lwmod:
 11660                           	callstack 0
 11661                           
 11662 ;; *************** function i2___lwdiv *****************
 11663 ;; Defined at:
 11664 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwdiv.c"
 11665 ;; Parameters:    Size  Location     Type
 11666 ;;  dividend        2    0[COMRAM] unsigned int 
 11667 ;;  divisor         2    2[COMRAM] unsigned int 
 11668 ;; Auto vars:     Size  Location     Type
 11669 ;;  quotient        2    4[COMRAM] unsigned int 
 11670 ;;  counter         1    6[COMRAM] unsigned char 
 11671 ;; Return value:  Size  Location     Type
 11672 ;;                  2    0[COMRAM] unsigned int 
 11673 ;; Registers used:
 11674 ;;		wreg, status,2, status,0
 11675 ;; Tracked objects:
 11676 ;;		On entry : 0/0
 11677 ;;		On exit  : 0/0
 11678 ;;		Unchanged: 0/0
 11679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11680 ;;      Params:         4       0       0       0
 11681 ;;      Locals:         3       0       0       0
 11682 ;;      Temps:          0       0       0       0
 11683 ;;      Totals:         7       0       0       0
 11684 ;;Total ram usage:        7 bytes
 11685 ;; Hardware stack levels used: 1
 11686 ;; This function calls:
 11687 ;;		Nothing
 11688 ;; This function is called by:
 11689 ;;		i2_setDisplayDigits
 11690 ;; This function uses a non-reentrant model
 11691 ;;
 11692                           
 11693                           	psect	text53
 11694   003762                     __ptext53:
 11695                           	callstack 0
 11696   003762                     i2___lwdiv:
 11697                           	callstack 20
 11698   003762  0E00               	movlw	0
 11699   003764  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
 11700   003766  0E00               	movlw	0
 11701   003768  6E05               	movwf	i2___lwdiv@quotient^0,c
 11702   00376A  5003               	movf	i2___lwdiv@divisor^0,w,c
 11703   00376C  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 11704   00376E  B4D8               	btfsc	status,2,c
 11705   003770  EFBC  F01B         	goto	i2u477_41
 11706   003774  EFBE  F01B         	goto	i2u477_40
 11707   003778                     i2u477_41:
 11708   003778  EFE6  F01B         	goto	i2l838
 11709   00377C                     i2u477_40:
 11710   00377C  0E01               	movlw	1
 11711   00377E  6E07               	movwf	i2___lwdiv@counter^0,c
 11712   003780  EFC6  F01B         	goto	i2l4325
 11713   003784                     i2l4323:
 11714   003784  90D8               	bcf	status,0,c
 11715   003786  3603               	rlcf	i2___lwdiv@divisor^0,f,c
 11716   003788  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 11717   00378A  2A07               	incf	i2___lwdiv@counter^0,f,c
 11718   00378C                     i2l4325:
 11719   00378C  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 11720   00378E  EFCB  F01B         	goto	i2u478_41
 11721   003792  EFCD  F01B         	goto	i2u478_40
 11722   003796                     i2u478_41:
 11723   003796  EFC2  F01B         	goto	i2l4323
 11724   00379A                     i2u478_40:
 11725   00379A                     i2l4327:
 11726   00379A  90D8               	bcf	status,0,c
 11727   00379C  3605               	rlcf	i2___lwdiv@quotient^0,f,c
 11728   00379E  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 11729   0037A0  5003               	movf	i2___lwdiv@divisor^0,w,c
 11730   0037A2  5C01               	subwf	i2___lwdiv@dividend^0,w,c
 11731   0037A4  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 11732   0037A6  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 11733   0037A8  A0D8               	btfss	status,0,c
 11734   0037AA  EFD9  F01B         	goto	i2u479_41
 11735   0037AE  EFDB  F01B         	goto	i2u479_40
 11736   0037B2                     i2u479_41:
 11737   0037B2  EFE0  F01B         	goto	i2l4335
 11738   0037B6                     i2u479_40:
 11739   0037B6  5003               	movf	i2___lwdiv@divisor^0,w,c
 11740   0037B8  5E01               	subwf	i2___lwdiv@dividend^0,f,c
 11741   0037BA  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 11742   0037BC  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 11743   0037BE  8005               	bsf	i2___lwdiv@quotient^0,0,c
 11744   0037C0                     i2l4335:
 11745   0037C0  90D8               	bcf	status,0,c
 11746   0037C2  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 11747   0037C4  3203               	rrcf	i2___lwdiv@divisor^0,f,c
 11748   0037C6  2E07               	decfsz	i2___lwdiv@counter^0,f,c
 11749   0037C8  EFCD  F01B         	goto	i2l4327
 11750   0037CC                     i2l838:
 11751   0037CC  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 11752   0037D0  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 11753   0037D4  0012               	return		;funcret
 11754   0037D6                     __end_ofi2___lwdiv:
 11755                           	callstack 0
 11756                           
 11757 ;; *************** function i2___fltol *****************
 11758 ;; Defined at:
 11759 ;;		line 43 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/fltol.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;  f1              4   25[COMRAM] unsigned int 
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;  exp1            1   34[COMRAM] unsigned char 
 11764 ;;  sign1           1   33[COMRAM] unsigned char 
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  4   25[COMRAM] long 
 11767 ;; Registers used:
 11768 ;;		wreg, status,2, status,0
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11774 ;;      Params:         4       0       0       0
 11775 ;;      Locals:         2       0       0       0
 11776 ;;      Temps:          4       0       0       0
 11777 ;;      Totals:        10       0       0       0
 11778 ;;Total ram usage:       10 bytes
 11779 ;; Hardware stack levels used: 1
 11780 ;; This function calls:
 11781 ;;		Nothing
 11782 ;; This function is called by:
 11783 ;;		i2_setDisplayDigits
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787                           	psect	text54
 11788   003034                     __ptext54:
 11789                           	callstack 0
 11790   003034                     i2___fltol:
 11791                           	callstack 20
 11792   003034  341C               	rlcf	(i2___fltol@f1+2)^0,w,c
 11793   003036  341D               	rlcf	(i2___fltol@f1+3)^0,w,c
 11794   003038  6E23               	movwf	i2___fltol@exp1^0,c
 11795   00303A  5023               	movf	i2___fltol@exp1^0,w,c
 11796   00303C  A4D8               	btfss	status,2,c
 11797   00303E  EF23  F018         	goto	i2u470_41
 11798   003042  EF25  F018         	goto	i2u470_40
 11799   003046                     i2u470_41:
 11800   003046  EF2F  F018         	goto	i2l4279
 11801   00304A                     i2u470_40:
 11802   00304A                     i2l4275:
 11803   00304A  0E00               	movlw	0
 11804   00304C  6E1A               	movwf	?i2___fltol^0,c
 11805   00304E  0E00               	movlw	0
 11806   003050  6E1B               	movwf	(?i2___fltol+1)^0,c
 11807   003052  0E00               	movlw	0
 11808   003054  6E1C               	movwf	(?i2___fltol+2)^0,c
 11809   003056  0E00               	movlw	0
 11810   003058  6E1D               	movwf	(?i2___fltol+3)^0,c
 11811   00305A  EF9C  F018         	goto	i2l644
 11812   00305E                     i2l4279:
 11813   00305E  C01A  F01E         	movff	i2___fltol@f1,??i2___fltol
 11814   003062  C01B  F01F         	movff	i2___fltol@f1+1,??i2___fltol+1
 11815   003066  C01C  F020         	movff	i2___fltol@f1+2,??i2___fltol+2
 11816   00306A  C01D  F021         	movff	i2___fltol@f1+3,??i2___fltol+3
 11817   00306E  0E20               	movlw	32
 11818   003070  EF3F  F018         	goto	i2u471_40
 11819   003074                     i2u471_45:
 11820   003074  90D8               	bcf	status,0,c
 11821   003076  3221               	rrcf	(??i2___fltol+3)^0,f,c
 11822   003078  3220               	rrcf	(??i2___fltol+2)^0,f,c
 11823   00307A  321F               	rrcf	(??i2___fltol+1)^0,f,c
 11824   00307C  321E               	rrcf	??i2___fltol^0,f,c
 11825   00307E                     i2u471_40:
 11826   00307E  2EE8               	decfsz	wreg,f,c
 11827   003080  EF3A  F018         	goto	i2u471_45
 11828   003084  501E               	movf	??i2___fltol^0,w,c
 11829   003086  6E22               	movwf	i2___fltol@sign1^0,c
 11830   003088  8E1C               	bsf	(i2___fltol@f1+2)^0,7,c
 11831   00308A  0EFF               	movlw	255
 11832   00308C  161A               	andwf	i2___fltol@f1^0,f,c
 11833   00308E  0EFF               	movlw	255
 11834   003090  161B               	andwf	(i2___fltol@f1+1)^0,f,c
 11835   003092  0EFF               	movlw	255
 11836   003094  161C               	andwf	(i2___fltol@f1+2)^0,f,c
 11837   003096  0E00               	movlw	0
 11838   003098  161D               	andwf	(i2___fltol@f1+3)^0,f,c
 11839   00309A  0E96               	movlw	150
 11840   00309C  5E23               	subwf	i2___fltol@exp1^0,f,c
 11841   00309E  BE23               	btfsc	i2___fltol@exp1^0,7,c
 11842   0030A0  EF56  F018         	goto	i2u472_40
 11843   0030A4  EF54  F018         	goto	i2u472_41
 11844   0030A8                     i2u472_41:
 11845   0030A8  EF6C  F018         	goto	i2l4299
 11846   0030AC                     i2u472_40:
 11847   0030AC  5023               	movf	i2___fltol@exp1^0,w,c
 11848   0030AE  0A80               	xorlw	128
 11849   0030B0  0F97               	addlw	151
 11850   0030B2  B0D8               	btfsc	status,0,c
 11851   0030B4  EF5E  F018         	goto	i2u473_41
 11852   0030B8  EF60  F018         	goto	i2u473_40
 11853   0030BC                     i2u473_41:
 11854   0030BC  EF62  F018         	goto	i2l4295
 11855   0030C0                     i2u473_40:
 11856   0030C0  EF25  F018         	goto	i2l4275
 11857   0030C4                     i2l4295:
 11858   0030C4  90D8               	bcf	status,0,c
 11859   0030C6  321D               	rrcf	(i2___fltol@f1+3)^0,f,c
 11860   0030C8  321C               	rrcf	(i2___fltol@f1+2)^0,f,c
 11861   0030CA  321B               	rrcf	(i2___fltol@f1+1)^0,f,c
 11862   0030CC  321A               	rrcf	i2___fltol@f1^0,f,c
 11863   0030CE  3E23               	incfsz	i2___fltol@exp1^0,f,c
 11864   0030D0  EF62  F018         	goto	i2l4295
 11865   0030D4  EF84  F018         	goto	i2l4309
 11866   0030D8                     i2l4299:
 11867   0030D8  0E1F               	movlw	31
 11868   0030DA  6423               	cpfsgt	i2___fltol@exp1^0,c
 11869   0030DC  EF72  F018         	goto	i2u474_41
 11870   0030E0  EF74  F018         	goto	i2u474_40
 11871   0030E4                     i2u474_41:
 11872   0030E4  EF7C  F018         	goto	i2l4307
 11873   0030E8                     i2u474_40:
 11874   0030E8  EF25  F018         	goto	i2l4275
 11875   0030EC                     i2l4305:
 11876   0030EC  90D8               	bcf	status,0,c
 11877   0030EE  361A               	rlcf	i2___fltol@f1^0,f,c
 11878   0030F0  361B               	rlcf	(i2___fltol@f1+1)^0,f,c
 11879   0030F2  361C               	rlcf	(i2___fltol@f1+2)^0,f,c
 11880   0030F4  361D               	rlcf	(i2___fltol@f1+3)^0,f,c
 11881   0030F6  0623               	decf	i2___fltol@exp1^0,f,c
 11882   0030F8                     i2l4307:
 11883   0030F8  5023               	movf	i2___fltol@exp1^0,w,c
 11884   0030FA  A4D8               	btfss	status,2,c
 11885   0030FC  EF82  F018         	goto	i2u475_41
 11886   003100  EF84  F018         	goto	i2u475_40
 11887   003104                     i2u475_41:
 11888   003104  EF76  F018         	goto	i2l4305
 11889   003108                     i2u475_40:
 11890   003108                     i2l4309:
 11891   003108  5022               	movf	i2___fltol@sign1^0,w,c
 11892   00310A  B4D8               	btfsc	status,2,c
 11893   00310C  EF8A  F018         	goto	i2u476_41
 11894   003110  EF8C  F018         	goto	i2u476_40
 11895   003114                     i2u476_41:
 11896   003114  EF94  F018         	goto	i2l4313
 11897   003118                     i2u476_40:
 11898   003118  1E1D               	comf	(i2___fltol@f1+3)^0,f,c
 11899   00311A  1E1C               	comf	(i2___fltol@f1+2)^0,f,c
 11900   00311C  1E1B               	comf	(i2___fltol@f1+1)^0,f,c
 11901   00311E  6C1A               	negf	i2___fltol@f1^0,c
 11902   003120  0E00               	movlw	0
 11903   003122  221B               	addwfc	(i2___fltol@f1+1)^0,f,c
 11904   003124  221C               	addwfc	(i2___fltol@f1+2)^0,f,c
 11905   003126  221D               	addwfc	(i2___fltol@f1+3)^0,f,c
 11906   003128                     i2l4313:
 11907   003128  C01A  F01A         	movff	i2___fltol@f1,?i2___fltol
 11908   00312C  C01B  F01B         	movff	i2___fltol@f1+1,?i2___fltol+1
 11909   003130  C01C  F01C         	movff	i2___fltol@f1+2,?i2___fltol+2
 11910   003134  C01D  F01D         	movff	i2___fltol@f1+3,?i2___fltol+3
 11911   003138                     i2l644:
 11912   003138  0012               	return		;funcret
 11913   00313A                     __end_ofi2___fltol:
 11914                           	callstack 0
 11915                           
 11916 ;; *************** function i2___flmul *****************
 11917 ;; Defined at:
 11918 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcmul.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;  b               4    0[COMRAM] long 
 11921 ;;  a               4    4[COMRAM] long 
 11922 ;; Auto vars:     Size  Location     Type
 11923 ;;  prod            4   19[COMRAM] struct .
 11924 ;;  grs             4   13[COMRAM] unsigned long 
 11925 ;;  temp            2   23[COMRAM] struct .
 11926 ;;  bexp            1   18[COMRAM] unsigned char 
 11927 ;;  aexp            1   17[COMRAM] unsigned char 
 11928 ;;  sign            1   12[COMRAM] unsigned char 
 11929 ;; Return value:  Size  Location     Type
 11930 ;;                  4    0[COMRAM] unsigned char 
 11931 ;; Registers used:
 11932 ;;		wreg, status,2, status,0, prodl, prodh
 11933 ;; Tracked objects:
 11934 ;;		On entry : 0/0
 11935 ;;		On exit  : 0/0
 11936 ;;		Unchanged: 0/0
 11937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11938 ;;      Params:         8       0       0       0
 11939 ;;      Locals:        13       0       0       0
 11940 ;;      Temps:          4       0       0       0
 11941 ;;      Totals:        25       0       0       0
 11942 ;;Total ram usage:       25 bytes
 11943 ;; Hardware stack levels used: 1
 11944 ;; This function calls:
 11945 ;;		Nothing
 11946 ;; This function is called by:
 11947 ;;		i2_setDisplayDigits
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           
 11951                           	psect	text55
 11952   0015F4                     __ptext55:
 11953                           	callstack 0
 11954   0015F4                     i2___flmul:
 11955                           	callstack 20
 11956   0015F4  5004               	movf	(i2___flmul@b+3)^0,w,c
 11957   0015F6  0B80               	andlw	128
 11958   0015F8  6E0D               	movwf	i2___flmul@sign^0,c
 11959   0015FA  5004               	movf	(i2___flmul@b+3)^0,w,c
 11960   0015FC  2404               	addwf	(i2___flmul@b+3)^0,w,c
 11961   0015FE  6E13               	movwf	i2___flmul@bexp^0,c
 11962   001600  AE03               	btfss	(i2___flmul@b+2)^0,7,c
 11963   001602  EF05  F00B         	goto	i2u483_41
 11964   001606  EF07  F00B         	goto	i2u483_40
 11965   00160A                     i2u483_41:
 11966   00160A  EF08  F00B         	goto	i2l4361
 11967   00160E                     i2u483_40:
 11968   00160E  8013               	bsf	i2___flmul@bexp^0,0,c
 11969   001610                     i2l4361:
 11970   001610  5013               	movf	i2___flmul@bexp^0,w,c
 11971   001612  B4D8               	btfsc	status,2,c
 11972   001614  EF0E  F00B         	goto	i2u484_41
 11973   001618  EF10  F00B         	goto	i2u484_40
 11974   00161C                     i2u484_41:
 11975   00161C  EF23  F00B         	goto	i2l4369
 11976   001620                     i2u484_40:
 11977   001620  2813               	incf	i2___flmul@bexp^0,w,c
 11978   001622  A4D8               	btfss	status,2,c
 11979   001624  EF16  F00B         	goto	i2u485_41
 11980   001628  EF18  F00B         	goto	i2u485_40
 11981   00162C                     i2u485_41:
 11982   00162C  EF20  F00B         	goto	i2l4367
 11983   001630                     i2u485_40:
 11984   001630  0E00               	movlw	0
 11985   001632  6E01               	movwf	i2___flmul@b^0,c
 11986   001634  0E00               	movlw	0
 11987   001636  6E02               	movwf	(i2___flmul@b+1)^0,c
 11988   001638  0E00               	movlw	0
 11989   00163A  6E03               	movwf	(i2___flmul@b+2)^0,c
 11990   00163C  0E00               	movlw	0
 11991   00163E  6E04               	movwf	(i2___flmul@b+3)^0,c
 11992   001640                     i2l4367:
 11993   001640  8E03               	bsf	(i2___flmul@b+2)^0,7,c
 11994   001642  EF2B  F00B         	goto	i2l4371
 11995   001646                     i2l4369:
 11996   001646  0E00               	movlw	0
 11997   001648  6E01               	movwf	i2___flmul@b^0,c
 11998   00164A  0E00               	movlw	0
 11999   00164C  6E02               	movwf	(i2___flmul@b+1)^0,c
 12000   00164E  0E00               	movlw	0
 12001   001650  6E03               	movwf	(i2___flmul@b+2)^0,c
 12002   001652  0E00               	movlw	0
 12003   001654  6E04               	movwf	(i2___flmul@b+3)^0,c
 12004   001656                     i2l4371:
 12005   001656  5008               	movf	(i2___flmul@a+3)^0,w,c
 12006   001658  0B80               	andlw	128
 12007   00165A  1A0D               	xorwf	i2___flmul@sign^0,f,c
 12008   00165C  5008               	movf	(i2___flmul@a+3)^0,w,c
 12009   00165E  2408               	addwf	(i2___flmul@a+3)^0,w,c
 12010   001660  6E12               	movwf	i2___flmul@aexp^0,c
 12011   001662  AE07               	btfss	(i2___flmul@a+2)^0,7,c
 12012   001664  EF36  F00B         	goto	i2u486_41
 12013   001668  EF38  F00B         	goto	i2u486_40
 12014   00166C                     i2u486_41:
 12015   00166C  EF39  F00B         	goto	i2l4379
 12016   001670                     i2u486_40:
 12017   001670  8012               	bsf	i2___flmul@aexp^0,0,c
 12018   001672                     i2l4379:
 12019   001672  5012               	movf	i2___flmul@aexp^0,w,c
 12020   001674  B4D8               	btfsc	status,2,c
 12021   001676  EF3F  F00B         	goto	i2u487_41
 12022   00167A  EF41  F00B         	goto	i2u487_40
 12023   00167E                     i2u487_41:
 12024   00167E  EF54  F00B         	goto	i2l4387
 12025   001682                     i2u487_40:
 12026   001682  2812               	incf	i2___flmul@aexp^0,w,c
 12027   001684  A4D8               	btfss	status,2,c
 12028   001686  EF47  F00B         	goto	i2u488_41
 12029   00168A  EF49  F00B         	goto	i2u488_40
 12030   00168E                     i2u488_41:
 12031   00168E  EF51  F00B         	goto	i2l4385
 12032   001692                     i2u488_40:
 12033   001692  0E00               	movlw	0
 12034   001694  6E05               	movwf	i2___flmul@a^0,c
 12035   001696  0E00               	movlw	0
 12036   001698  6E06               	movwf	(i2___flmul@a+1)^0,c
 12037   00169A  0E00               	movlw	0
 12038   00169C  6E07               	movwf	(i2___flmul@a+2)^0,c
 12039   00169E  0E00               	movlw	0
 12040   0016A0  6E08               	movwf	(i2___flmul@a+3)^0,c
 12041   0016A2                     i2l4385:
 12042   0016A2  8E07               	bsf	(i2___flmul@a+2)^0,7,c
 12043   0016A4  EF5C  F00B         	goto	i2l961
 12044   0016A8                     i2l4387:
 12045   0016A8  0E00               	movlw	0
 12046   0016AA  6E05               	movwf	i2___flmul@a^0,c
 12047   0016AC  0E00               	movlw	0
 12048   0016AE  6E06               	movwf	(i2___flmul@a+1)^0,c
 12049   0016B0  0E00               	movlw	0
 12050   0016B2  6E07               	movwf	(i2___flmul@a+2)^0,c
 12051   0016B4  0E00               	movlw	0
 12052   0016B6  6E08               	movwf	(i2___flmul@a+3)^0,c
 12053   0016B8                     i2l961:
 12054   0016B8  5012               	movf	i2___flmul@aexp^0,w,c
 12055   0016BA  B4D8               	btfsc	status,2,c
 12056   0016BC  EF62  F00B         	goto	i2u489_41
 12057   0016C0  EF64  F00B         	goto	i2u489_40
 12058   0016C4                     i2u489_41:
 12059   0016C4  EF6C  F00B         	goto	i2l4391
 12060   0016C8                     i2u489_40:
 12061   0016C8  5013               	movf	i2___flmul@bexp^0,w,c
 12062   0016CA  A4D8               	btfss	status,2,c
 12063   0016CC  EF6A  F00B         	goto	i2u490_41
 12064   0016D0  EF6C  F00B         	goto	i2u490_40
 12065   0016D4                     i2u490_41:
 12066   0016D4  EF76  F00B         	goto	i2l4395
 12067   0016D8                     i2u490_40:
 12068   0016D8                     i2l4391:
 12069   0016D8  0E00               	movlw	0
 12070   0016DA  6E01               	movwf	?i2___flmul^0,c
 12071   0016DC  0E00               	movlw	0
 12072   0016DE  6E02               	movwf	(?i2___flmul+1)^0,c
 12073   0016E0  0E00               	movlw	0
 12074   0016E2  6E03               	movwf	(?i2___flmul+2)^0,c
 12075   0016E4  0E00               	movlw	0
 12076   0016E6  6E04               	movwf	(?i2___flmul+3)^0,c
 12077   0016E8  EF0C  F00D         	goto	i2l965
 12078   0016EC                     i2l4395:
 12079   0016EC  5007               	movf	(i2___flmul@a+2)^0,w,c
 12080   0016EE  0201               	mulwf	i2___flmul@b^0,c
 12081   0016F0  CFF3 F018          	movff	prodl,i2___flmul@temp
 12082   0016F4  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12083   0016F8  5018               	movf	i2___flmul@temp^0,w,c
 12084   0016FA  6E0E               	movwf	i2___flmul@grs^0,c
 12085   0016FC  6A0F               	clrf	(i2___flmul@grs+1)^0,c
 12086   0016FE  6A10               	clrf	(i2___flmul@grs+2)^0,c
 12087   001700  6A11               	clrf	(i2___flmul@grs+3)^0,c
 12088   001702  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12089   001704  6E14               	movwf	i2___flmul@prod^0,c
 12090   001706  6A15               	clrf	(i2___flmul@prod+1)^0,c
 12091   001708  6A16               	clrf	(i2___flmul@prod+2)^0,c
 12092   00170A  6A17               	clrf	(i2___flmul@prod+3)^0,c
 12093   00170C  5006               	movf	(i2___flmul@a+1)^0,w,c
 12094   00170E  0202               	mulwf	(i2___flmul@b+1)^0,c
 12095   001710  CFF3 F018          	movff	prodl,i2___flmul@temp
 12096   001714  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12097   001718  5018               	movf	i2___flmul@temp^0,w,c
 12098   00171A  260E               	addwf	i2___flmul@grs^0,f,c
 12099   00171C  0E00               	movlw	0
 12100   00171E  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 12101   001720  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 12102   001722  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 12103   001724  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12104   001726  2614               	addwf	i2___flmul@prod^0,f,c
 12105   001728  0E00               	movlw	0
 12106   00172A  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12107   00172C  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12108   00172E  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12109   001730  5005               	movf	i2___flmul@a^0,w,c
 12110   001732  0203               	mulwf	(i2___flmul@b+2)^0,c
 12111   001734  CFF3 F018          	movff	prodl,i2___flmul@temp
 12112   001738  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12113   00173C  5018               	movf	i2___flmul@temp^0,w,c
 12114   00173E  260E               	addwf	i2___flmul@grs^0,f,c
 12115   001740  0E00               	movlw	0
 12116   001742  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 12117   001744  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 12118   001746  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 12119   001748  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12120   00174A  2614               	addwf	i2___flmul@prod^0,f,c
 12121   00174C  0E00               	movlw	0
 12122   00174E  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12123   001750  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12124   001752  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12125   001754  C010  F011         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 12126   001758  C00F  F010         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 12127   00175C  C00E  F00F         	movff	i2___flmul@grs,i2___flmul@grs+1
 12128   001760  6A0E               	clrf	i2___flmul@grs^0,c
 12129   001762  5005               	movf	i2___flmul@a^0,w,c
 12130   001764  0202               	mulwf	(i2___flmul@b+1)^0,c
 12131   001766  CFF3 F018          	movff	prodl,i2___flmul@temp
 12132   00176A  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12133   00176E  5018               	movf	i2___flmul@temp^0,w,c
 12134   001770  260E               	addwf	i2___flmul@grs^0,f,c
 12135   001772  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12136   001774  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 12137   001776  0E00               	movlw	0
 12138   001778  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 12139   00177A  0E00               	movlw	0
 12140   00177C  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 12141   00177E  5006               	movf	(i2___flmul@a+1)^0,w,c
 12142   001780  0201               	mulwf	i2___flmul@b^0,c
 12143   001782  CFF3 F018          	movff	prodl,i2___flmul@temp
 12144   001786  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12145   00178A  5018               	movf	i2___flmul@temp^0,w,c
 12146   00178C  260E               	addwf	i2___flmul@grs^0,f,c
 12147   00178E  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12148   001790  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 12149   001792  0E00               	movlw	0
 12150   001794  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 12151   001796  0E00               	movlw	0
 12152   001798  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 12153   00179A  C010  F011         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 12154   00179E  C00F  F010         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 12155   0017A2  C00E  F00F         	movff	i2___flmul@grs,i2___flmul@grs+1
 12156   0017A6  6A0E               	clrf	i2___flmul@grs^0,c
 12157   0017A8  5005               	movf	i2___flmul@a^0,w,c
 12158   0017AA  0201               	mulwf	i2___flmul@b^0,c
 12159   0017AC  CFF3 F018          	movff	prodl,i2___flmul@temp
 12160   0017B0  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12161   0017B4  5018               	movf	i2___flmul@temp^0,w,c
 12162   0017B6  260E               	addwf	i2___flmul@grs^0,f,c
 12163   0017B8  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12164   0017BA  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 12165   0017BC  0E00               	movlw	0
 12166   0017BE  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 12167   0017C0  0E00               	movlw	0
 12168   0017C2  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 12169   0017C4  5007               	movf	(i2___flmul@a+2)^0,w,c
 12170   0017C6  0202               	mulwf	(i2___flmul@b+1)^0,c
 12171   0017C8  CFF3 F018          	movff	prodl,i2___flmul@temp
 12172   0017CC  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12173   0017D0  5018               	movf	i2___flmul@temp^0,w,c
 12174   0017D2  2614               	addwf	i2___flmul@prod^0,f,c
 12175   0017D4  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12176   0017D6  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12177   0017D8  0E00               	movlw	0
 12178   0017DA  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12179   0017DC  0E00               	movlw	0
 12180   0017DE  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12181   0017E0  5006               	movf	(i2___flmul@a+1)^0,w,c
 12182   0017E2  0203               	mulwf	(i2___flmul@b+2)^0,c
 12183   0017E4  CFF3 F018          	movff	prodl,i2___flmul@temp
 12184   0017E8  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12185   0017EC  5018               	movf	i2___flmul@temp^0,w,c
 12186   0017EE  2614               	addwf	i2___flmul@prod^0,f,c
 12187   0017F0  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12188   0017F2  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12189   0017F4  0E00               	movlw	0
 12190   0017F6  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12191   0017F8  0E00               	movlw	0
 12192   0017FA  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12193   0017FC  5007               	movf	(i2___flmul@a+2)^0,w,c
 12194   0017FE  0203               	mulwf	(i2___flmul@b+2)^0,c
 12195   001800  CFF3 F018          	movff	prodl,i2___flmul@temp
 12196   001804  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 12197   001808  5018               	movf	i2___flmul@temp^0,w,c
 12198   00180A  6E09               	movwf	??i2___flmul^0,c
 12199   00180C  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12200   00180E  6E0A               	movwf	(??i2___flmul+1)^0,c
 12201   001810  6A0B               	clrf	(??i2___flmul+2)^0,c
 12202   001812  6A0C               	clrf	(??i2___flmul+3)^0,c
 12203   001814  C00B  F00C         	movff	??i2___flmul+2,??i2___flmul+3
 12204   001818  C00A  F00B         	movff	??i2___flmul+1,??i2___flmul+2
 12205   00181C  C009  F00A         	movff	??i2___flmul,??i2___flmul+1
 12206   001820  6A09               	clrf	??i2___flmul^0,c
 12207   001822  5009               	movf	??i2___flmul^0,w,c
 12208   001824  2614               	addwf	i2___flmul@prod^0,f,c
 12209   001826  500A               	movf	(??i2___flmul+1)^0,w,c
 12210   001828  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12211   00182A  500B               	movf	(??i2___flmul+2)^0,w,c
 12212   00182C  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12213   00182E  500C               	movf	(??i2___flmul+3)^0,w,c
 12214   001830  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12215   001832  C00E  F009         	movff	i2___flmul@grs,??i2___flmul
 12216   001836  C00F  F00A         	movff	i2___flmul@grs+1,??i2___flmul+1
 12217   00183A  C010  F00B         	movff	i2___flmul@grs+2,??i2___flmul+2
 12218   00183E  C011  F00C         	movff	i2___flmul@grs+3,??i2___flmul+3
 12219   001842  0E19               	movlw	25
 12220   001844  EF29  F00C         	goto	i2u491_40
 12221   001848                     i2u491_45:
 12222   001848  90D8               	bcf	status,0,c
 12223   00184A  320C               	rrcf	(??i2___flmul+3)^0,f,c
 12224   00184C  320B               	rrcf	(??i2___flmul+2)^0,f,c
 12225   00184E  320A               	rrcf	(??i2___flmul+1)^0,f,c
 12226   001850  3209               	rrcf	??i2___flmul^0,f,c
 12227   001852                     i2u491_40:
 12228   001852  2EE8               	decfsz	wreg,f,c
 12229   001854  EF24  F00C         	goto	i2u491_45
 12230   001858  5009               	movf	??i2___flmul^0,w,c
 12231   00185A  2614               	addwf	i2___flmul@prod^0,f,c
 12232   00185C  500A               	movf	(??i2___flmul+1)^0,w,c
 12233   00185E  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12234   001860  500B               	movf	(??i2___flmul+2)^0,w,c
 12235   001862  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12236   001864  500C               	movf	(??i2___flmul+3)^0,w,c
 12237   001866  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12238   001868  C010  F011         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 12239   00186C  C00F  F010         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 12240   001870  C00E  F00F         	movff	i2___flmul@grs,i2___flmul@grs+1
 12241   001874  6A0E               	clrf	i2___flmul@grs^0,c
 12242   001876  5012               	movf	i2___flmul@aexp^0,w,c
 12243   001878  C013  F009         	movff	i2___flmul@bexp,??i2___flmul
 12244   00187C  6A0A               	clrf	(??i2___flmul+1)^0,c
 12245   00187E  2609               	addwf	??i2___flmul^0,f,c
 12246   001880  0E00               	movlw	0
 12247   001882  220A               	addwfc	(??i2___flmul+1)^0,f,c
 12248   001884  0E82               	movlw	130
 12249   001886  2409               	addwf	??i2___flmul^0,w,c
 12250   001888  6E18               	movwf	i2___flmul@temp^0,c
 12251   00188A  0EFF               	movlw	255
 12252   00188C  200A               	addwfc	(??i2___flmul+1)^0,w,c
 12253   00188E  6E19               	movwf	(i2___flmul@temp+1)^0,c
 12254   001890  EF5F  F00C         	goto	i2l4443
 12255   001894                     i2l4437:
 12256   001894  90D8               	bcf	status,0,c
 12257   001896  3614               	rlcf	i2___flmul@prod^0,f,c
 12258   001898  3615               	rlcf	(i2___flmul@prod+1)^0,f,c
 12259   00189A  3616               	rlcf	(i2___flmul@prod+2)^0,f,c
 12260   00189C  3617               	rlcf	(i2___flmul@prod+3)^0,f,c
 12261   00189E  AE11               	btfss	(i2___flmul@grs+3)^0,7,c
 12262   0018A0  EF54  F00C         	goto	i2u492_41
 12263   0018A4  EF56  F00C         	goto	i2u492_40
 12264   0018A8                     i2u492_41:
 12265   0018A8  EF57  F00C         	goto	i2l968
 12266   0018AC                     i2u492_40:
 12267   0018AC  8014               	bsf	i2___flmul@prod^0,0,c
 12268   0018AE                     i2l968:
 12269   0018AE  90D8               	bcf	status,0,c
 12270   0018B0  360E               	rlcf	i2___flmul@grs^0,f,c
 12271   0018B2  360F               	rlcf	(i2___flmul@grs+1)^0,f,c
 12272   0018B4  3610               	rlcf	(i2___flmul@grs+2)^0,f,c
 12273   0018B6  3611               	rlcf	(i2___flmul@grs+3)^0,f,c
 12274   0018B8  0618               	decf	i2___flmul@temp^0,f,c
 12275   0018BA  A0D8               	btfss	status,0,c
 12276   0018BC  0619               	decf	(i2___flmul@temp+1)^0,f,c
 12277   0018BE                     i2l4443:
 12278   0018BE  AE16               	btfss	(i2___flmul@prod+2)^0,7,c
 12279   0018C0  EF64  F00C         	goto	i2u493_41
 12280   0018C4  EF66  F00C         	goto	i2u493_40
 12281   0018C8                     i2u493_41:
 12282   0018C8  EF4A  F00C         	goto	i2l4437
 12283   0018CC                     i2u493_40:
 12284   0018CC  6A12               	clrf	i2___flmul@aexp^0,c
 12285   0018CE  AE11               	btfss	(i2___flmul@grs+3)^0,7,c
 12286   0018D0  EF6C  F00C         	goto	i2u494_41
 12287   0018D4  EF6E  F00C         	goto	i2u494_40
 12288   0018D8                     i2u494_41:
 12289   0018D8  EF92  F00C         	goto	i2l970
 12290   0018DC                     i2u494_40:
 12291   0018DC  0EFF               	movlw	255
 12292   0018DE  140E               	andwf	i2___flmul@grs^0,w,c
 12293   0018E0  6E09               	movwf	??i2___flmul^0,c
 12294   0018E2  0EFF               	movlw	255
 12295   0018E4  140F               	andwf	(i2___flmul@grs+1)^0,w,c
 12296   0018E6  6E0A               	movwf	(??i2___flmul+1)^0,c
 12297   0018E8  0EFF               	movlw	255
 12298   0018EA  1410               	andwf	(i2___flmul@grs+2)^0,w,c
 12299   0018EC  6E0B               	movwf	(??i2___flmul+2)^0,c
 12300   0018EE  0E7F               	movlw	127
 12301   0018F0  1411               	andwf	(i2___flmul@grs+3)^0,w,c
 12302   0018F2  6E0C               	movwf	(??i2___flmul+3)^0,c
 12303   0018F4  5009               	movf	??i2___flmul^0,w,c
 12304   0018F6  100A               	iorwf	(??i2___flmul+1)^0,w,c
 12305   0018F8  100B               	iorwf	(??i2___flmul+2)^0,w,c
 12306   0018FA  100C               	iorwf	(??i2___flmul+3)^0,w,c
 12307   0018FC  B4D8               	btfsc	status,2,c
 12308   0018FE  EF83  F00C         	goto	i2u495_41
 12309   001902  EF85  F00C         	goto	i2u495_40
 12310   001906                     i2u495_41:
 12311   001906  EF89  F00C         	goto	i2l971
 12312   00190A                     i2u495_40:
 12313   00190A                     i2l4447:
 12314   00190A  0E01               	movlw	1
 12315   00190C  6E12               	movwf	i2___flmul@aexp^0,c
 12316   00190E  EF92  F00C         	goto	i2l970
 12317   001912                     i2l971:
 12318   001912  A014               	btfss	i2___flmul@prod^0,0,c
 12319   001914  EF8E  F00C         	goto	i2u496_41
 12320   001918  EF90  F00C         	goto	i2u496_40
 12321   00191C                     i2u496_41:
 12322   00191C  EF92  F00C         	goto	i2l970
 12323   001920                     i2u496_40:
 12324   001920  EF85  F00C         	goto	i2l4447
 12325   001924                     i2l970:
 12326   001924  5012               	movf	i2___flmul@aexp^0,w,c
 12327   001926  B4D8               	btfsc	status,2,c
 12328   001928  EF98  F00C         	goto	i2u497_41
 12329   00192C  EF9A  F00C         	goto	i2u497_40
 12330   001930                     i2u497_41:
 12331   001930  EFBE  F00C         	goto	i2l4459
 12332   001934                     i2u497_40:
 12333   001934  0E01               	movlw	1
 12334   001936  2614               	addwf	i2___flmul@prod^0,f,c
 12335   001938  0E00               	movlw	0
 12336   00193A  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 12337   00193C  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 12338   00193E  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 12339   001940  A017               	btfss	(i2___flmul@prod+3)^0,0,c
 12340   001942  EFA5  F00C         	goto	i2u498_41
 12341   001946  EFA7  F00C         	goto	i2u498_40
 12342   00194A                     i2u498_41:
 12343   00194A  EFBE  F00C         	goto	i2l4459
 12344   00194E                     i2u498_40:
 12345   00194E  C014  F009         	movff	i2___flmul@prod,??i2___flmul
 12346   001952  C015  F00A         	movff	i2___flmul@prod+1,??i2___flmul+1
 12347   001956  C016  F00B         	movff	i2___flmul@prod+2,??i2___flmul+2
 12348   00195A  C017  F00C         	movff	i2___flmul@prod+3,??i2___flmul+3
 12349   00195E  340C               	rlcf	(??i2___flmul+3)^0,w,c
 12350   001960  320C               	rrcf	(??i2___flmul+3)^0,f,c
 12351   001962  320B               	rrcf	(??i2___flmul+2)^0,f,c
 12352   001964  320A               	rrcf	(??i2___flmul+1)^0,f,c
 12353   001966  3209               	rrcf	??i2___flmul^0,f,c
 12354   001968  C009  F014         	movff	??i2___flmul,i2___flmul@prod
 12355   00196C  C00A  F015         	movff	??i2___flmul+1,i2___flmul@prod+1
 12356   001970  C00B  F016         	movff	??i2___flmul+2,i2___flmul@prod+2
 12357   001974  C00C  F017         	movff	??i2___flmul+3,i2___flmul@prod+3
 12358   001978  4A18               	infsnz	i2___flmul@temp^0,f,c
 12359   00197A  2A19               	incf	(i2___flmul@temp+1)^0,f,c
 12360   00197C                     i2l4459:
 12361   00197C  BE19               	btfsc	(i2___flmul@temp+1)^0,7,c
 12362   00197E  EFC9  F00C         	goto	i2u499_41
 12363   001982  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12364   001984  E108               	bnz	i2u499_40
 12365   001986  2818               	incf	i2___flmul@temp^0,w,c
 12366   001988  A0D8               	btfss	status,0,c
 12367   00198A  EFC9  F00C         	goto	i2u499_41
 12368   00198E  EFCB  F00C         	goto	i2u499_40
 12369   001992                     i2u499_41:
 12370   001992  EFD5  F00C         	goto	i2l4463
 12371   001996                     i2u499_40:
 12372   001996  0E00               	movlw	0
 12373   001998  6E14               	movwf	i2___flmul@prod^0,c
 12374   00199A  0E00               	movlw	0
 12375   00199C  6E15               	movwf	(i2___flmul@prod+1)^0,c
 12376   00199E  0E80               	movlw	128
 12377   0019A0  6E16               	movwf	(i2___flmul@prod+2)^0,c
 12378   0019A2  0E7F               	movlw	127
 12379   0019A4  6E17               	movwf	(i2___flmul@prod+3)^0,c
 12380   0019A6  EF02  F00D         	goto	i2l4477
 12381   0019AA                     i2l4463:
 12382   0019AA  BE19               	btfsc	(i2___flmul@temp+1)^0,7,c
 12383   0019AC  EFE2  F00C         	goto	i2u500_40
 12384   0019B0  5019               	movf	(i2___flmul@temp+1)^0,w,c
 12385   0019B2  E106               	bnz	i2u500_41
 12386   0019B4  0418               	decf	i2___flmul@temp^0,w,c
 12387   0019B6  B0D8               	btfsc	status,0,c
 12388   0019B8  EFE0  F00C         	goto	i2u500_41
 12389   0019BC  EFE2  F00C         	goto	i2u500_40
 12390   0019C0                     i2u500_41:
 12391   0019C0  EFED  F00C         	goto	i2l978
 12392   0019C4                     i2u500_40:
 12393   0019C4  0E00               	movlw	0
 12394   0019C6  6E14               	movwf	i2___flmul@prod^0,c
 12395   0019C8  0E00               	movlw	0
 12396   0019CA  6E15               	movwf	(i2___flmul@prod+1)^0,c
 12397   0019CC  0E00               	movlw	0
 12398   0019CE  6E16               	movwf	(i2___flmul@prod+2)^0,c
 12399   0019D0  0E00               	movlw	0
 12400   0019D2  6E17               	movwf	(i2___flmul@prod+3)^0,c
 12401   0019D4  6A0D               	clrf	i2___flmul@sign^0,c
 12402   0019D6  EF02  F00D         	goto	i2l4477
 12403   0019DA                     i2l978:
 12404   0019DA  C018  F013         	movff	i2___flmul@temp,i2___flmul@bexp
 12405   0019DE  0EFF               	movlw	255
 12406   0019E0  1614               	andwf	i2___flmul@prod^0,f,c
 12407   0019E2  0EFF               	movlw	255
 12408   0019E4  1615               	andwf	(i2___flmul@prod+1)^0,f,c
 12409   0019E6  0E7F               	movlw	127
 12410   0019E8  1616               	andwf	(i2___flmul@prod+2)^0,f,c
 12411   0019EA  0E00               	movlw	0
 12412   0019EC  1617               	andwf	(i2___flmul@prod+3)^0,f,c
 12413   0019EE  A013               	btfss	i2___flmul@bexp^0,0,c
 12414   0019F0  EFFC  F00C         	goto	i2u501_41
 12415   0019F4  EFFE  F00C         	goto	i2u501_40
 12416   0019F8                     i2u501_41:
 12417   0019F8  EFFF  F00C         	goto	i2l4475
 12418   0019FC                     i2u501_40:
 12419   0019FC  8E16               	bsf	(i2___flmul@prod+2)^0,7,c
 12420   0019FE                     i2l4475:
 12421   0019FE  90D8               	bcf	status,0,c
 12422   001A00  3013               	rrcf	i2___flmul@bexp^0,w,c
 12423   001A02  6E17               	movwf	(i2___flmul@prod+3)^0,c
 12424   001A04                     i2l4477:
 12425   001A04  500D               	movf	i2___flmul@sign^0,w,c
 12426   001A06  1217               	iorwf	(i2___flmul@prod+3)^0,f,c
 12427   001A08  C014  F001         	movff	i2___flmul@prod,?i2___flmul
 12428   001A0C  C015  F002         	movff	i2___flmul@prod+1,?i2___flmul+1
 12429   001A10  C016  F003         	movff	i2___flmul@prod+2,?i2___flmul+2
 12430   001A14  C017  F004         	movff	i2___flmul@prod+3,?i2___flmul+3
 12431   001A18                     i2l965:
 12432   001A18  0012               	return		;funcret
 12433   001A1A                     __end_ofi2___flmul:
 12434                           	callstack 0
 12435                           
 12436 ;; *************** function i2_adcSampling *****************
 12437 ;; Defined at:
 12438 ;;		line 139 in file "main.c"
 12439 ;; Parameters:    Size  Location     Type
 12440 ;;		None
 12441 ;; Auto vars:     Size  Location     Type
 12442 ;;		None
 12443 ;; Return value:  Size  Location     Type
 12444 ;;                  1    wreg      void 
 12445 ;; Registers used:
 12446 ;;		wreg, status,2
 12447 ;; Tracked objects:
 12448 ;;		On entry : 0/0
 12449 ;;		On exit  : 0/0
 12450 ;;		Unchanged: 0/0
 12451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12452 ;;      Params:         0       0       0       0
 12453 ;;      Locals:         0       0       0       0
 12454 ;;      Temps:          2       0       0       0
 12455 ;;      Totals:         2       0       0       0
 12456 ;;Total ram usage:        2 bytes
 12457 ;; Hardware stack levels used: 1
 12458 ;; This function calls:
 12459 ;;		Nothing
 12460 ;; This function is called by:
 12461 ;;		_ISR
 12462 ;; This function uses a non-reentrant model
 12463 ;;
 12464                           
 12465                           	psect	text56
 12466   003D8C                     __ptext56:
 12467                           	callstack 0
 12468   003D8C                     i2_adcSampling:
 12469                           	callstack 21
 12470   003D8C                     
 12471                           ;main.c: 141:     sampling = 1;
 12472   003D8C  0E01               	movlw	1
 12473   003D8E  0100               	movlb	0	; () banked
 12474   003D90  6FFE               	movwf	_sampling& (0+255),b
 12475   003D92                     
 12476                           ; BSR set to: 0
 12477                           ;main.c: 144:     ADCON0bits.GO = 1;
 12478   003D92  82C2               	bsf	194,1,c	;volatile
 12479   003D94                     i2l159:
 12480   003D94  B2C2               	btfsc	194,1,c	;volatile
 12481   003D96  EFCF  F01E         	goto	i2u527_41
 12482   003D9A  EFD1  F01E         	goto	i2u527_40
 12483   003D9E                     i2u527_41:
 12484   003D9E  EFCA  F01E         	goto	i2l159
 12485   003DA2                     i2u527_40:
 12486   003DA2                     
 12487                           ;main.c: 148:     adcResult = ((uint16_t)ADRESH << 8) | ADRESL;
 12488   003DA2  50C4               	movf	196,w,c	;volatile
 12489   003DA4  6E01               	movwf	??i2_adcSampling^0,c
 12490   003DA6  50C3               	movf	195,w,c	;volatile
 12491   003DA8  0100               	movlb	0	; () banked
 12492   003DAA  6FF6               	movwf	_adcResult& (0+255),b
 12493   003DAC  C001  F0F7         	movff	??i2_adcSampling,_adcResult+1
 12494   003DB0                     
 12495                           ; BSR set to: 0
 12496   003DB0  0012               	return		;funcret
 12497   003DB2                     __end_ofi2_adcSampling:
 12498                           	callstack 0
 12499                           
 12500 ;; *************** function i2_EUSART_TransmitString *****************
 12501 ;; Defined at:
 12502 ;;		line 663 in file "main.c"
 12503 ;; Parameters:    Size  Location     Type
 12504 ;;  a               2    1[COMRAM] PTR unsigned char 
 12505 ;;		 -> STR_7(3), STR_5(7), STR_4(9), STR_3(3), 
 12506 ;;		 -> uart_buffer(10), STR_1(9), 
 12507 ;; Auto vars:     Size  Location     Type
 12508 ;;  i               2    5[COMRAM] int 
 12509 ;; Return value:  Size  Location     Type
 12510 ;;                  1    wreg      void 
 12511 ;; Registers used:
 12512 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12513 ;; Tracked objects:
 12514 ;;		On entry : 0/0
 12515 ;;		On exit  : 0/0
 12516 ;;		Unchanged: 0/0
 12517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12518 ;;      Params:         2       0       0       0
 12519 ;;      Locals:         2       0       0       0
 12520 ;;      Temps:          2       0       0       0
 12521 ;;      Totals:         6       0       0       0
 12522 ;;Total ram usage:        6 bytes
 12523 ;; Hardware stack levels used: 1
 12524 ;; Hardware stack levels required when called: 1
 12525 ;; This function calls:
 12526 ;;		i2_EUSART_TransmitChar
 12527 ;; This function is called by:
 12528 ;;		_ISR
 12529 ;; This function uses a non-reentrant model
 12530 ;;
 12531                           
 12532                           	psect	text57
 12533   00366E                     __ptext57:
 12534                           	callstack 0
 12535   00366E                     i2_EUSART_TransmitString:
 12536                           	callstack 20
 12537   00366E                     
 12538                           ;main.c: 664:     int i;;main.c: 665:     for( i= 0; a[i] !='\0'; i++ ){
 12539   00366E  0E00               	movlw	0
 12540   003670  6E07               	movwf	(i2EUSART_TransmitString@i+1)^0,c
 12541   003672  0E00               	movlw	0
 12542   003674  6E06               	movwf	i2EUSART_TransmitString@i^0,c
 12543   003676  EF57  F01B         	goto	i2l4715
 12544   00367A                     i2l4711:
 12545                           
 12546                           ;main.c: 666:        EUSART_TransmitChar(a[i]);
 12547   00367A  5006               	movf	i2EUSART_TransmitString@i^0,w,c
 12548   00367C  2402               	addwf	i2EUSART_TransmitString@a^0,w,c
 12549   00367E  6E04               	movwf	??i2_EUSART_TransmitString^0,c
 12550   003680  5007               	movf	(i2EUSART_TransmitString@i+1)^0,w,c
 12551   003682  2003               	addwfc	(i2EUSART_TransmitString@a+1)^0,w,c
 12552   003684  6E05               	movwf	(??i2_EUSART_TransmitString+1)^0,c
 12553   003686  C004  FFF6         	movff	??i2_EUSART_TransmitString,tblptrl
 12554   00368A  C005  FFF7         	movff	??i2_EUSART_TransmitString+1,tblptrh
 12555   00368E  6AF8               	clrf	tblptru,c
 12556   003690  0E02               	movlw	(high __ramtop+-1)
 12557   003692  64F7               	cpfsgt	tblptrh,c
 12558   003694  D003               	bra	i2u528_47
 12559   003696  0008               	tblrd		*
 12560   003698  50F5               	movf	tablat,w,c
 12561   00369A  D005               	bra	i2u528_40
 12562   00369C                     i2u528_47:
 12563   00369C  CFF6 FFE1          	movff	tblptrl,fsr1l
 12564   0036A0  CFF7 FFE2          	movff	tblptrh,fsr1h
 12565   0036A4  50E7               	movf	indf1,w,c
 12566   0036A6                     i2u528_40:
 12567   0036A6  EC02  F01F         	call	i2_EUSART_TransmitChar
 12568   0036AA                     
 12569                           ;main.c: 667:     }
 12570   0036AA  4A06               	infsnz	i2EUSART_TransmitString@i^0,f,c
 12571   0036AC  2A07               	incf	(i2EUSART_TransmitString@i+1)^0,f,c
 12572   0036AE                     i2l4715:
 12573   0036AE  5006               	movf	i2EUSART_TransmitString@i^0,w,c
 12574   0036B0  2402               	addwf	i2EUSART_TransmitString@a^0,w,c
 12575   0036B2  6E04               	movwf	??i2_EUSART_TransmitString^0,c
 12576   0036B4  5007               	movf	(i2EUSART_TransmitString@i+1)^0,w,c
 12577   0036B6  2003               	addwfc	(i2EUSART_TransmitString@a+1)^0,w,c
 12578   0036B8  6E05               	movwf	(??i2_EUSART_TransmitString+1)^0,c
 12579   0036BA  C004  FFF6         	movff	??i2_EUSART_TransmitString,tblptrl
 12580   0036BE  C005  FFF7         	movff	??i2_EUSART_TransmitString+1,tblptrh
 12581   0036C2  6AF8               	clrf	tblptru,c
 12582   0036C4  0E02               	movlw	(high __ramtop+-1)
 12583   0036C6  64F7               	cpfsgt	tblptrh,c
 12584   0036C8  D003               	bra	i2u529_47
 12585   0036CA  0008               	tblrd		*
 12586   0036CC  50F5               	movf	tablat,w,c
 12587   0036CE  D005               	bra	i2u529_40
 12588   0036D0                     i2u529_47:
 12589   0036D0  CFF6 FFE1          	movff	tblptrl,fsr1l
 12590   0036D4  CFF7 FFE2          	movff	tblptrh,fsr1h
 12591   0036D8  50E7               	movf	indf1,w,c
 12592   0036DA                     i2u529_40:
 12593   0036DA  0900               	iorlw	0
 12594   0036DC  A4D8               	btfss	status,2,c
 12595   0036DE  EF73  F01B         	goto	i2u530_41
 12596   0036E2  EF75  F01B         	goto	i2u530_40
 12597   0036E6                     i2u530_41:
 12598   0036E6  EF3D  F01B         	goto	i2l4711
 12599   0036EA                     i2u530_40:
 12600   0036EA  0012               	return		;funcret
 12601   0036EC                     __end_ofi2_EUSART_TransmitString:
 12602                           	callstack 0
 12603                           
 12604 ;; *************** function i2_EUSART_TransmitChar *****************
 12605 ;; Defined at:
 12606 ;;		line 658 in file "main.c"
 12607 ;; Parameters:    Size  Location     Type
 12608 ;;  data            1    wreg     unsigned char 
 12609 ;; Auto vars:     Size  Location     Type
 12610 ;;  data            1    0[COMRAM] unsigned char 
 12611 ;; Return value:  Size  Location     Type
 12612 ;;                  1    wreg      void 
 12613 ;; Registers used:
 12614 ;;		wreg
 12615 ;; Tracked objects:
 12616 ;;		On entry : 0/0
 12617 ;;		On exit  : 0/0
 12618 ;;		Unchanged: 0/0
 12619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12620 ;;      Params:         0       0       0       0
 12621 ;;      Locals:         1       0       0       0
 12622 ;;      Temps:          0       0       0       0
 12623 ;;      Totals:         1       0       0       0
 12624 ;;Total ram usage:        1 bytes
 12625 ;; Hardware stack levels used: 1
 12626 ;; This function calls:
 12627 ;;		Nothing
 12628 ;; This function is called by:
 12629 ;;		i2_EUSART_TransmitString
 12630 ;; This function uses a non-reentrant model
 12631 ;;
 12632                           
 12633                           	psect	text58
 12634   003E04                     __ptext58:
 12635                           	callstack 0
 12636   003E04                     i2_EUSART_TransmitChar:
 12637                           	callstack 20
 12638                           
 12639                           ;incstack = 0
 12640                           ;i2EUSART_TransmitChar@data stored from wreg
 12641   003E04  6E01               	movwf	i2EUSART_TransmitChar@data^0,c
 12642   003E06                     i2l310:
 12643   003E06  A2AC               	btfss	172,1,c	;volatile
 12644   003E08  EF08  F01F         	goto	i2u469_41
 12645   003E0C  EF0A  F01F         	goto	i2u469_40
 12646   003E10                     i2u469_41:
 12647   003E10  EF03  F01F         	goto	i2l310
 12648   003E14                     i2u469_40:
 12649   003E14                     
 12650                           ;main.c: 660:     TXREG = data;
 12651   003E14  C001  FFAD         	movff	i2EUSART_TransmitChar@data,4013	;volatile
 12652   003E18  0012               	return		;funcret
 12653   003E1A                     __end_ofi2_EUSART_TransmitChar:
 12654                           	callstack 0
 12655                           
 12656                           	psect	rparam
 12657   000001                     ___rparam_used  equ	1
 12658   000000                     ___param_bank   equ	0
 12659   000000                     __Lparam        equ	__Lrparam
 12660   000000                     __Hparam        equ	__Hrparam
 12661                           
 12662                           	psect	temp
 12663   00004E                     btemp:
 12664                           	callstack 0
 12665   00004E                     	ds	1
 12666   00004E                     int$flags       set	btemp
 12667   00004F                     wtemp8          set	btemp+1
 12668   00004F                     ttemp5          set	btemp+1
 12669   000052                     ttemp6          set	btemp+4
 12670   000056                     ttemp7          set	btemp+8
 12671                           
 12672                           	psect	config
 12673                           
 12674                           ;Config register CONFIG1L @ 0x300000
 12675                           ;	CPU System Clock Selection bits
 12676                           ;	CPUDIV = NOCLKDIV, No CPU System Clock divide
 12677                           ;	USB Clock Selection bit
 12678                           ;	USBDIV = OFF, USB clock comes directly from the OSC1/OSC2 oscillator block; no divide
 12679   300000                     	org	3145728
 12680   300000  00                 	db	0
 12681                           
 12682                           ;Config register CONFIG1H @ 0x300001
 12683                           ;	Oscillator Selection bits
 12684                           ;	FOSC = IRC, Internal RC oscillator
 12685                           ;	4 X PLL Enable bit
 12686                           ;	PLLEN = OFF, PLL is under software control
 12687                           ;	Primary Clock Enable bit
 12688                           ;	PCLKEN = ON, Primary clock enabled
 12689                           ;	Fail-Safe Clock Monitor Enable
 12690                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 12691                           ;	Internal/External Oscillator Switchover bit
 12692                           ;	IESO = ON, Oscillator Switchover mode enabled
 12693   300001                     	org	3145729
 12694   300001  E8                 	db	232
 12695                           
 12696                           ;Config register CONFIG2L @ 0x300002
 12697                           ;	Power-up Timer Enable bit
 12698                           ;	PWRTEN = OFF, PWRT disabled
 12699                           ;	Brown-out Reset Enable bits
 12700                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12701                           ;	Brown-out Reset Voltage bits
 12702                           ;	BORV = 19, VBOR set to 1.9 V nominal
 12703   300002                     	org	3145730
 12704   300002  1F                 	db	31
 12705                           
 12706                           ;Config register CONFIG2H @ 0x300003
 12707                           ;	Watchdog Timer Enable bit
 12708                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 12709                           ;	Watchdog Timer Postscale Select bits
 12710                           ;	WDTPS = 32768, 1:32768
 12711   300003                     	org	3145731
 12712   300003  1E                 	db	30
 12713                           
 12714                           ; Padding undefined space
 12715   300004                     	org	3145732
 12716   300004  FF                 	db	255
 12717                           
 12718                           ;Config register CONFIG3H @ 0x300005
 12719                           ;	HFINTOSC Fast Start-up bit
 12720                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 12721                           ;	MCLR Pin Enable bit
 12722                           ;	MCLRE = ON, MCLR pin enabled; RA3 input pin disabled
 12723   300005                     	org	3145733
 12724   300005  88                 	db	136
 12725                           
 12726                           ;Config register CONFIG4L @ 0x300006
 12727                           ;	Stack Full/Underflow Reset Enable bit
 12728                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12729                           ;	Single-Supply ICSP Enable bit
 12730                           ;	LVP = OFF, Single-Supply ICSP disabled
 12731                           ;	Boot Block Size Select bit
 12732                           ;	BBSIZ = OFF, 1kW boot block size
 12733                           ;	Extended Instruction Set Enable bit
 12734                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12735                           ;	Background Debugger Enable bit
 12736                           ;	DEBUG = 0x1, unprogrammed default
 12737   300006                     	org	3145734
 12738   300006  81                 	db	129
 12739                           
 12740                           ; Padding undefined space
 12741   300007                     	org	3145735
 12742   300007  FF                 	db	255
 12743                           
 12744                           ;Config register CONFIG5L @ 0x300008
 12745                           ;	Code Protection bit
 12746                           ;	CP0 = OFF, Block 0 not code-protected
 12747                           ;	Code Protection bit
 12748                           ;	CP1 = OFF, Block 1 not code-protected
 12749   300008                     	org	3145736
 12750   300008  03                 	db	3
 12751                           
 12752                           ;Config register CONFIG5H @ 0x300009
 12753                           ;	Boot Block Code Protection bit
 12754                           ;	CPB = OFF, Boot block not code-protected
 12755                           ;	Data EEPROM Code Protection bit
 12756                           ;	CPD = OFF, Data EEPROM not code-protected
 12757   300009                     	org	3145737
 12758   300009  C0                 	db	192
 12759                           
 12760                           ;Config register CONFIG6L @ 0x30000A
 12761                           ;	Table Write Protection bit
 12762                           ;	WRT0 = OFF, Block 0 not write-protected
 12763                           ;	Table Write Protection bit
 12764                           ;	WRT1 = OFF, Block 1 not write-protected
 12765   30000A                     	org	3145738
 12766   30000A  03                 	db	3
 12767                           
 12768                           ;Config register CONFIG6H @ 0x30000B
 12769                           ;	Configuration Register Write Protection bit
 12770                           ;	WRTC = OFF, Configuration registers not write-protected
 12771                           ;	Boot Block Write Protection bit
 12772                           ;	WRTB = OFF, Boot block not write-protected
 12773                           ;	Data EEPROM Write Protection bit
 12774                           ;	WRTD = OFF, Data EEPROM not write-protected
 12775   30000B                     	org	3145739
 12776   30000B  E0                 	db	224
 12777                           
 12778                           ;Config register CONFIG7L @ 0x30000C
 12779                           ;	Table Read Protection bit
 12780                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
 12781                           ;	Table Read Protection bit
 12782                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
 12783   30000C                     	org	3145740
 12784   30000C  03                 	db	3
 12785                           
 12786                           ;Config register CONFIG7H @ 0x30000D
 12787                           ;	Boot Block Table Read Protection bit
 12788                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
 12789   30000D                     	org	3145741
 12790   30000D  40                 	db	64
 12791                           tosu	equ	0xFFF
 12792                           tosh	equ	0xFFE
 12793                           tosl	equ	0xFFD
 12794                           stkptr	equ	0xFFC
 12795                           pclatu	equ	0xFFB
 12796                           pclath	equ	0xFFA
 12797                           pcl	equ	0xFF9
 12798                           tblptru	equ	0xFF8
 12799                           tblptrh	equ	0xFF7
 12800                           tblptrl	equ	0xFF6
 12801                           tablat	equ	0xFF5
 12802                           prodh	equ	0xFF4
 12803                           prodl	equ	0xFF3
 12804                           indf0	equ	0xFEF
 12805                           postinc0	equ	0xFEE
 12806                           postdec0	equ	0xFED
 12807                           preinc0	equ	0xFEC
 12808                           plusw0	equ	0xFEB
 12809                           fsr0h	equ	0xFEA
 12810                           fsr0l	equ	0xFE9
 12811                           wreg	equ	0xFE8
 12812                           indf1	equ	0xFE7
 12813                           postinc1	equ	0xFE6
 12814                           postdec1	equ	0xFE5
 12815                           preinc1	equ	0xFE4
 12816                           plusw1	equ	0xFE3
 12817                           fsr1h	equ	0xFE2
 12818                           fsr1l	equ	0xFE1
 12819                           bsr	equ	0xFE0
 12820                           indf2	equ	0xFDF
 12821                           postinc2	equ	0xFDE
 12822                           postdec2	equ	0xFDD
 12823                           preinc2	equ	0xFDC
 12824                           plusw2	equ	0xFDB
 12825                           fsr2h	equ	0xFDA
 12826                           fsr2l	equ	0xFD9
 12827                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    0
    Data        4
    BSS         139
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      77
    BANK0           160    130     159
    BANK1           256     14      94
    BANK2           256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    EUSART_TransmitString@a	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[9]), STR_3(CODE[3]), STR_4(CODE[9]), STR_5(CODE[7]), 
		 -> STR_7(CODE[3]), uart_buffer(COMRAM[10]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S1626$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    S1626$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_11(CODE[4]), STR_8(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    i2_show7Segment->i2_displayDigits
    i2_setDisplayDigits->i2___fltol
    i2___fltol->i2___flmul
    i2_EUSART_TransmitString->i2_EUSART_TransmitChar

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _show7Segment->_displayDigits
    _setDisplayDigits->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _EUSART_TransmitString->_EUSART_TransmitChar
    _EEPROMWrite->_getHighByte
    _EEPROMWrite->_getLowByte
    _EEPROMRead->_getHighByte
    _EEPROMRead->_getLowByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   36134
                                            128 BANK0      2     2      0
                                             12 BANK1      2     2      0
                         _EEPROMRead
                        _EEPROMWrite
              _EUSART_TransmitString
                            ___flmul
                           ___xxtofl
                        _adcSampling
                        _getHighByte
                         _getLowByte
                 _setButtonInterrupt
                   _setDisplayDigits
                           _setupADC
                        _setupEUSART
                           _setupI2C
                        _setupTimer1
                       _show7Segment
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   25760
                                            122 BANK0      6     0      6
                                              0 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   25266
                                            116 BANK0      6     1      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     8      5   24912
                                            104 BANK0     12     7      5
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   8     5      3     372
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   23050
                                             51 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     164
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     3      6    1458
                                             16 BANK0      9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     670
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     464
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     308
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     144
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     690
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     282
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4302
                                             39 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4188
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      96
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     420
                                             39 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     204
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2466
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (1) _show7Segment                                         0     0      0     600
                      _displayDigits
                 _get7SegmentPattern
 ---------------------------------------------------------------------------------
 (2) _get7SegmentPattern                                   2     2      0     213
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _displayDigits                                        7     5      2     387
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _setupTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupEUSART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setDisplayDigits                                     0     0      0    4512
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     360
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     390
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     504
                                             39 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3258
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _setButtonInterrupt                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcSampling                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     744
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _EUSART_TransmitString                                6     4      2     285
                                              1 BANK0      6     4      2
                _EUSART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _EUSART_TransmitChar                                  1     1      0      69
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROMWrite                                          4     1      3     351
                                              2 BANK0      4     1      3
                           _I2CStart
                            _I2CStop
                           _I2CWrite
                        _getHighByte
                         _getLowByte
 ---------------------------------------------------------------------------------
 (1) _EEPROMRead                                           3     1      2     408
                                              2 BANK0      3     1      2
                            _I2CRead
                         _I2CRestart
                           _I2CStart
                            _I2CStop
                           _I2CWrite
                        _getHighByte
                         _getLowByte
 ---------------------------------------------------------------------------------
 (1) _getLowByte                                           2     0      2      60
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getHighByte                                          2     0      2      60
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2CWrite                                             1     1      0      69
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2CStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CRestart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CRead                                              1     1      0      69
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  8     8      0    2411
                                             35 COMRAM     8     8      0
            i2_EUSART_TransmitString
                      i2_adcSampling
                 i2_setDisplayDigits
                     i2_show7Segment
 ---------------------------------------------------------------------------------
 (10) i2_show7Segment                                      0     0      0     255
                    i2_displayDigits
               i2_get7SegmentPattern
 ---------------------------------------------------------------------------------
 (11) i2_get7SegmentPattern                                2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) i2_displayDigits                                     7     5      2     187
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) i2_setDisplayDigits                                  0     0      0    2036
                          i2___flmul
                          i2___fltol
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     165
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     170
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) i2___fltol                                          10     6      4     231
                                             25 COMRAM    10     6      4
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___flmul                                          25    17      8    1470
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (10) i2_adcSampling                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) i2_EUSART_TransmitString                             6     4      2     120
                                              1 COMRAM     6     4      2
              i2_EUSART_TransmitChar
 ---------------------------------------------------------------------------------
 (11) i2_EUSART_TransmitChar                               1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMRead
     _I2CRead
     _I2CRestart
     _I2CStart
     _I2CStop
     _I2CWrite
     _getHighByte
     _getLowByte
   _EEPROMWrite
     _I2CStart
     _I2CStop
     _I2CWrite
     _getHighByte
     _getLowByte
   _EUSART_TransmitString
     _EUSART_TransmitChar
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _adcSampling
   _getHighByte
   _getLowByte
   _setButtonInterrupt
   _setDisplayDigits
     ___flmul
     ___fltol
       ___flmul (ARG)
     ___lwdiv
     ___lwmod
   _setupADC
   _setupEUSART
   _setupI2C
   _setupTimer1
   _show7Segment
     _displayDigits
     _get7SegmentPattern
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width

 _ISR (ROOT)
   i2_EUSART_TransmitString
     i2_EUSART_TransmitChar
   i2_adcSampling
   i2_setDisplayDigits
     i2___flmul
     i2___fltol
       i2___flmul (ARG)
     i2___lwdiv
     i2___lwmod
   i2_show7Segment
     i2_displayDigits
     i2_get7SegmentPattern

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             767      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256     14      94     36.7%
BITBANK0           160      0       0      0.0%
BANK0              160    130     159     99.4%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     43      77     81.9%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlll        43      0       0      0.0%
BITBIGSFRlh         35      0       0      0.0%
BITBIGSFRllh        10      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     324      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Dec 29 13:23:25 2024

                   ___fldiv@aexp 0078                     ___fldiv@bexp 0077                     ___fldiv@sign 0070  
          i2_EUSART_TransmitChar 3E04                      _SSPSTATbits 0FC7                 _address_low_byte 003D  
             i2___lwdiv@dividend 0001                              l301 3B22                              l310 3DF0  
                            l304 3B72                              l232 3E2A                              l240 2D14  
                            l153 3E84                              l313 3E02                              l162 3D64  
                            l226 3E7E                              l235 3E3C                              l307 3DD0  
                            l219 1E16                              l156 3E8A                              l229 3DEA  
                            l261 3302                              l262 330E                              l271 3E40  
                            l319 366C                              l159 3D48                              l280 3E72  
                            l336 2416                              l256 2C86                              l344 3972  
                            l265 3E52                              l257 2D16                              l274 3E4E  
                            l338 2418                              l283 3D6E                              l292 3D0E  
                            l268 3E60                              l612 2FEC                              l277 3E64  
                            l621 3D06                              l294 3D1C                              l286 3D7C  
                            l606 3540                              l295 3D2E                              l297 3D3C  
                            l289 3D8A                              l617 3032                              l298 3D3E  
                            l644 2F2C                              l901 10E6                              l902 10D4  
                            l931 202E                              l940 2074                              l908 118E  
                            l845 3760                              l941 2092                              l917 3C4C  
                            l838 3758                              l942 20EA                              l934 1FF2  
                            l855 38AC                              l943 20D8                              l848 38A4  
                            l961 1292                              l929 21CA                              l970 14FE  
                            l971 14EC                              l875 0EFE                              l892 1018  
                            l884 11CA                              l876 0EEC                              l965 15F2  
                            l877 0EB2                              l968 1488                              l969 14A6  
                            l889 10A6                              l978 15B4                              _ISR 0008  
                            _pad 37D6                  __end_of_I2CRead 3D40                  __end_of_I2CStop 3E50  
                            wreg 0FE8                      i2___flmul@a 0005                      i2___flmul@b 0001  
                 ?_displayDigits 0060                     ___flmul@aexp 007B                     ___flmul@bexp 007C  
                   ___flmul@sign 007A                     ___flmul@temp 0085                     ___flmul@prod 0081  
                           ?_ISR 0001                     ___fltol@exp1 0090                             l1002 2AA8  
                           l1100 0AF4                             l1005 2C04                             l1016 2B9C  
                           l1200 3C04                             l1112 35E0                             l1009 2B40  
                           l1025 3C90                             l1203 3E90                             l1052 37EE  
                           l1116 35E8                             l1070 06AE                             l1126 2916  
                           l1143 3BBC                             l1160 286A                             l1056 3846  
                           l1072 04EE                             l1136 2A4C                             l1153 3238  
                           l1209 3CCC                             l1163 27AE                             l1067 0D12  
                           l1180 3AD0                             l1174 3A2C                             l1192 3494  
                           l7011 2FAC                             l7003 2F2E                             l7021 3030  
                           l7013 2FBA                             l7005 2F5E                             l7101 31DA  
                           ?_pad 0070                             l7015 2FCC                             l7007 2F6E  
                           l7103 31EC                             l7111 3C92                             l7041 2E7C  
                           l7033 2E26                             l7017 2FDA                             l7009 2F9C  
                           l7025 3CCE                             l7113 3C9A                             l7043 2E7E  
                           l7035 2E3E                             l7019 302A                             l7027 3CE6  
                           l7107 3230                             l7131 26F0                             l7123 2656  
                           l7115 39D6                             l7211 047E                             l7203 043C  
                           l7045 2E8E                             l7029 3CF6                             l7141 280E  
                           l7125 2676                             l7117 39E6                             l6501 33DA  
                           l7301 09D4                             l7213 0486                             l7205 0464  
                           l7221 049E                             l7071 2F0C                             l7055 2EB8  
                           l7047 2E92                             l7039 2E52                             l7143 2822  
                           l7135 2762                             l7127 26CE                             l7119 39FA  
                           l7151 3A80                             l6511 345E                             l6503 33EE  
                           l7311 0A34                             l7303 09D8                             l7231 0536  
                           l7223 04B6                             l7207 0474                             l7073 2F1C  
                           l7065 2EE0                             l7057 2EC2                             l7049 2EA0  
                           l6601 0EC0                             l6521 0D32                             l7145 284A  
                           l7137 279E                             l7129 26E2                             l7153 3A94  
                           l7161 3AB4                             l6505 3400                             l7081 37FA  
                           l7321 0ACC                             l7313 0A3C                             l7305 0A0C  
                           l7241 0630                             l7233 0576                             l7209 0478  
                           l7401 2898                             l7067 2EEC                             l7059 2ECC  
                           l6611 0EEA                             l6603 0ECC                             l6523 0D42  
                           l6531 0D6A                             l6515 0D14                             l7091 315A  
                           l7147 285A                             l7139 27D2                             l7155 3AA0  
                           l6507 340A                             l7083 380E                             l7331 0B28  
                           l7323 0AEC                             l7315 0A3E                             l7307 0A20  
                           l7251 06C4                             l7243 0638                             l7235 05AA  
                           l7227 04FE                             l7171 036A                             l7163 0320  
                           l7411 28EA                             l7403 28A4                             l7069 2EFC  
                           l6701 11AA                             l6621 0F40                             l6613 0F0C  
                           l6605 0ED0                             l6541 0D9A                             l6533 0D7A  
                           l6525 0D52                             l6517 0D22                             l7093 319A  
                           l7157 3AA4                             l6509 3428                             l7085 3814  
                           l7077 37D6                             l7341 0B50                             l7333 0B2E  
                           l7325 0B06                             l7317 0A46                             l7309 0A24  
                           l7261 06F6                             l7253 06D0                             l7237 05E8  
                           l7229 0502                             l7181 03A8                             l7173 0374  
                           l7165 0334                             l7421 291C                             l7413 28F6  
                           l7405 28A8                             l7511 32D6                             l6703 11B8  
                           l6631 0F7A                             l6623 0F4E                             l6615 0F1C  
                           l6607 0EDE                             l6551 0DDA                             l6543 0DA8  
                           l6535 0D80                             l6527 0D62                             l6519 0D30  
                           l7095 31C2                             l7159 3AB0                             l6711 3BCC  
                           l7087 3832                             l7079 37E6                             l7351 0B84  
                           l7335 0B36                             l7327 0B14                             l7343 0B56  
                           l7319 0A52                             l7271 073E                             l7263 0704  
                           l7255 06D8                             l7239 05FC                             l7247 067A  
                           l7191 03F0                             l7183 03B0                             l7175 037C  
                           l7167 0342                             l7431 29AE                             l7423 293A  
                           l7415 2908                             l7407 28CA                             l7601 3630  
                           l7521 330C                             l7513 32D8                             l7505 3248  
                           l6801 203E                             l6721 1E56                             l6705 11BA  
                           l6641 0FE6                             l6633 0F7C                             l6625 0F5C  
                           l6609 0EE0                             l6561 0E12                             l6553 0DDC  
                           l6545 0DAA                             l6537 0D92                             l6529 0D64  
                           l7097 31CE                             l7089 313A                             l6713 3BDE  
                           l7361 0C3C                             l7353 0BDC                             l7345 0B68  
                           l7337 0B46                             l7329 0B24                             l7281 0854  
                           l7273 074E                             l7265 071C                             l7257 06E0  
                           l7249 06B6                             l7193 03F6                             l7177 038C  
                           l7185 03B4                             l7169 0346                             l7441 2A00  
                           l7433 29C4                             l7425 295A                             l7417 290E  
                           l7409 28D2                             l7531 3D0C                             l7523 3E50  
                           l7611 223E                             l7603 21CC                             l7515 32E0  
                           l7507 32CC                             l6803 2054                             l6811 2084  
                           l6731 1E8A                             l6723 1E58                             l6651 103E  
                           l6643 0FE8                             l6635 0F86                             l6627 0F68  
                           l6619 0F30                             l6571 0E26                             l6563 0E16  
                           l6547 0DBA                             l6555 0DE2                             l6539 0D94  
                           l6715 3BE4                             l7371 0CAC                             l7363 0C58  
                           l7355 0C12                             l7347 0B7A                             l7339 0B4A  
                           l7291 08F4                             l7275 0762                             l7283 085A  
                           l7267 072E                             l7259 06E4                             l7195 03FE  
                           l7187 03DC                             l7179 039C                             l7435 29D2  
                           l7427 2984                             l7443 2A18                             l7533 3D20  
                           l7525 3E3E                             l7453 3E80                             l6901 12FE  
                           l7541 36EC                             l7613 225C                             l7621 22B8  
                           l7605 21DE                             l7701 3DC2                             l7517 32E6  
                           l7509 32CE                             l7461 2C0A                             l6821 2106  
                           l6813 20A2                             l6805 205A                             l6741 1EBA  
                           l6725 1E68                             l6733 1E90                             l6717 1E3A  
                           l6661 106C                             l6645 0FF8                             l6629 0F6C  
                           l6637 0F8C                             l6581 0E3A                             l6573 0E2A  
                           l6565 0E1A                             l6557 0DF2                             l6549 0DCA  
                           l6709 3BBE                             l7373 0CC4                             l7365 0C60  
                           l7357 0C1A                             l7349 0B7E                             l7293 0928  
                           l7285 0878                             l7277 07C6                             l7269 0736  
                           l7197 0412                             l7189 03EC                             l7535 3D2C  
                           l7527 3E62                             l6911 1348                             l6903 1316  
                           l7551 3726                             l7543 36F6                             l7631 234A  
                           l7623 22CA                             l7615 227A                             l7607 21EE  
                           l7711 3DCC                             l7703 3DC4                             l7519 3304  
                           l7471 2C2E                             l7463 2C0E                             l6831 2172  
                           l6823 2114                             l6815 20D0                             l6807 2064  
                           l6751 1EEE                             l6743 1EBC                             l6735 1EA0  
                           l6727 1E78                             l6719 1E48                             l6663 107A  
                           l6655 1052                             l6671 1098                             l6639 0FB2  
                           l6647 1008                             l6591 0E4E                             l6583 0E3E  
                           l6575 0E2E                             l6567 0E1E                             l6559 0E04  
                           l7375 0CD4                             l7367 0C6E                             l7359 0C1E  
                           l7295 0936                             l7287 08AC                             l7279 081E  
                           l7199 041C                             l7391 3594                             l7383 3542  
                           l7447 2A26                             l7529 3D6A                             l7457 3E86  
                           l7721 3AEA                             l7537 3DF0                             l7801 2BE4  
                           l6921 139E                             l6913 1358                             l6905 1322  
                           l7561 3752                             l7553 372C                             l7545 3708  
                           l7641 23A2                             l7633 2366                             l7625 230A  
                           l7617 227E                             l7609 21FE                             l7713 3DCE  
                           l7705 3DC6                             l7481 2C56                             l7473 2C36  
                           l7465 2C16                             l6841 21B8                             l6833 218C  
                           l6825 213E                             l6809 2072                             l6761 1F32  
                           l6745 1ECC                             l6753 1EF4                             l6737 1EA6  
                           l6729 1E88                             l6681 1102                             l6673 10B6  
                           l6665 1082                             l6657 105C                             l6649 102E  
                           l6585 0E42                             l6577 0E32                             l6569 0E22  
                           l6593 0E52                             l7377 0CEA                             l7369 0C9E  
                           l7297 0946                             l7289 08E0                             l7393 35B2  
                           l7385 354C                             l7731 3B10                             l7723 3AF8  
                           l7715 3AD2                             l7539 3DFE                             l7803 2BF2  
                           l6931 1442                             l6923 13BA                             l6915 1364  
                           l6907 132E                             l7555 3742                             l7547 3710  
                           l7571 387A                             l7563 3848                             l7651 23E4  
                           l7643 23A6                             l7627 2328                             l7635 236E  
                           l7619 229A                             l7707 3DC8                             l7491 2C76  
                           l7483 2C5E                             l7475 2C3E                             l7467 2C1E  
                           l6843 21BE                             l6835 21A4                             l6819 20FA  
                           l6827 2142                             l6771 1F5A                             l6763 1F36  
                           l6755 1F04                             l6747 1EDC                             l6739 1EAC  
                           l6691 116C                             l6683 1110                             l6675 10CC  
                           l6667 1086                             l6659 106A                             l6595 0E7E  
                           l6587 0E46                             l6579 0E36                             l7379 0CF2  
                           l7299 097A                             l7387 356E                             l7395 35BA  
                           l7811 1A26                             l7725 3AFE                             l7717 3AD6  
                           l7805 2BF4                             l6941 1498                             l6933 1450  
                           l6925 13C6                             l6917 1374                             l6909 133C  
                           l6861 11FA                             l6853 11CC                             l7557 374A  
                           l7549 3718                             l7573 3890                             l7565 385C  
                           l7653 23F4                             l7645 23B0                             l7637 2380  
                           l7629 2346                             l7709 3DCA                             l7493 2C7E  
                           l7485 2C66                             l7477 2C46                             l7469 2C26  
                           l7661 392A                             l6845 21C0                             l6837 21A6  
                           l6829 215C                             l6781 1FA8                             l6757 1F1A  
                           l6749 1EEC                             l6693 118C                             l6685 114A  
                           l6669 1096                             l6597 0E9A                             l6589 0E4A  
                           l7389 3576                             l7397 286C                             l7581 3B7C  
                           l7741 3C82                             l7733 3C4E                             l7901 1BC0  
                           l7821 1A4C                             l7813 1A40                             l7751 3B4A  
                           l7727 3B04                             l7719 3ADC                             l7591 3D46  
                           l6951 151A                             l6943 14B6                             l6935 146E  
                           l6927 13E2                             l6919 138E                             l6871 1236  
                           l6863 120A                             l6855 11DA                             l7559 374C  
                           l7575 3898                             l7567 3864                             l7655 2406  
                           l7647 23C2                             l7639 2390                             l7487 2C6E  
                           l7479 2C4E                             l7671 3964                             l7663 393C  
                           l6839 21AA                             l6791 1FF0                             l6783 1FB8  
                           l6775 1F6E                             l6759 1F2A                             l6767 1F4A  
                           l6695 119C                             l6679 10F6                             l6687 114C  
                           l6599 0EAA                             l7399 2890                             l7583 3B96  
                           l7735 3C58                             l7911 1C5E                             l7903 1C08  
                           l7831 1A66                             l7823 1A50                             l7815 1A44  
                           l7753 3B50                             l7745 3B24                             l7729 3B0C  
                           l7593 3D56                             l6961 1584                             l6953 1528  
                           l6945 14E4                             l6937 1478                             l6929 140C  
                           l6881 126C                             l6873 123C                             l6865 121A  
                           l6857 11E8                             l7577 389E                             l7569 386C  
                           l7649 23D2                             l7673 3E74                             l7681 3DE0  
                           l7497 2C8C                             l7665 394E                             l7657 3912  
                           l6793 1FFC                             l6785 1FBE                             l6777 1F88  
                           l6769 1F5A                             l6697 11A2                             l6689 115C  
                           l7585 3BB2                             l7737 3C60                             l7921 1C8A  
                           l7913 1C62                             l7905 1C26                             l7841 1A70  
                           l7833 1A68                             l7825 1A60                             l7817 1A48  
                           l7809 1A1A                             l7755 3B56                             l7747 3B40  
                           l7595 35EA                             l7771 2ACE                             l7763 2A52  
                           l7691 3E2C                             l6971 15D6                             l6963 159E  
                           l6955 1552                             l6939 1486                             l6883 127C  
                           l6875 124A                             l6867 1220                             l6859 11EA  
                           l7675 3E76                             l7683 3E1A                             l7499 323E  
                           l7667 3954                             l7659 391A                             l6795 201A  
                           l6787 1FCE                             l6779 1F98                             l6699 11A4  
                           l7579 3B74                             l7739 3C68                             l7931 1CD8  
                           l7923 1C9A                             l7907 1C32                             l7915 1C64  
                           l7851 1A7C                             l7843 1A72                             l7835 1A6A  
                           l7827 1A62                             l7819 1A4A                             l7757 3B5A  
                           l7749 3B44                             l7597 35F8                             l7781 2B28  
                           l7765 2A64                             l7589 3D40                             l6973 15D8  
                           l6965 15AE                             l6949 150E                             l6957 1556  
                           l6893 12C6                             l6885 1282                             l6877 124C  
                           l6869 1230                             l7693 3DB2                             l7685 3E1E  
                           l7677 3DD2                             l7669 395C                             l6797 201C  
                           l6789 1FE2                             l6981 3C06                             l7941 1D14  
                           l7933 1CE8                             l7925 1CA4                             l7917 1C76  
                           l7909 1C44                             l7861 1A9A                             l7853 1A80  
                           l7845 1A74                             l7837 1A6C                             l7829 1A64  
                           l7759 3B6A                             l7599 362A                             l7791 2B8C  
                           l7783 2B2A                             l7775 2AE2                             l7767 2A72  
                           l6967 15B8                             l6975 15DE                             l6959 1570  
                           l6895 12D2                             l6887 12A2                             l6879 125C  
                           l7695 3DBA                             l7687 3E26                             l7679 3DDE  
                           l6799 202C                             l6991 34D6                             l6983 3C18  
                           l7951 1DA4                             l7943 1D26                             l7935 1CEC  
                           l7927 1CBA                             l7919 1C78                             l7871 1B0A  
                           l7863 1AAA                             l7855 1A82                             l7847 1A76  
                           l7839 1A6E                             l7793 2BAA                             l7785 2B36  
                           l7777 2AEA                             l7769 2AB8                             l6977 15E2  
                           l6969 15C8                             l6897 12DC                             l6889 12B2  
                           l7697 3DBE                             l7689 3E28                             l6993 3504  
                           l7961 1DEA                             l7945 1D32                             l7953 1DBA  
                           l7937 1D00                             l7929 1CCA                             l7881 1B46  
                           l7873 1B1A                             l7865 1AAC                             l7857 1A84  
                           l7849 1A78                             l7795 2BAC                             l7787 2B72  
                           l7779 2AF6                             l6899 12F2                             l7699 3DC0  
                           l6995 3514                             l6987 3496                             l7971 1E18  
                           l7963 1DEC                             l7947 1D7A                             l7939 1D10  
                           l7955 1DC6                             l7891 1B92                             l7883 1B56  
                           l7875 1B20                             l7867 1AF4                             l7859 1A88  
                           l7797 2BB0                             l7789 2B7E                             l6997 3538  
                           l6989 34C6                             l7965 1DF0                             l7957 1DD6  
                           l7949 1D98                             l7893 1B96                             l7885 1B6E  
                           l7877 1B30                             l7869 1AFA                             l7799 2BD4  
                           l6999 353E                             l7967 1DF4                             l7959 1DD8  
                           l7887 1B70                             l7879 1B40                             l7895 1B9C  
                           l7969 1E0E                             l7897 1BAC                             l7889 1B78  
                           l7899 1BBE                             STR_1 0301                             STR_2 0311  
                           STR_3 030E                             STR_4 0301                             STR_5 030A  
                           STR_6 0311                             STR_7 030E                             STR_8 0316  
                           u8000 0EC0                             u8001 0EBC                             u8010 0EDE  
                           u8011 0EDA                             u8100 102E                             u8020 0EFE  
                           u8101 102A                             u8021 0EFA                             u8110 103E  
                           u8030 0F0C                             u8111 103A                             u8031 0F08  
                           u8200 1110                             u8120 106A                             u8040 0F1C  
                           u8201 110C                             u8121 1066                             u8041 0F18  
                           u8210 114A                             u8130 107A                             u8050 0F4E  
                           u9010 275E                             u8211 1146                             u8131 1076  
                           u8051 0F4A                             u9011 275A                             u8300 1E78  
                           u8220 115C                             u8140 1096                             u8060 0F5C  
                           u9020 2782                             u9100 039C                             u8301 1E74  
                           u8221 1158                             u8141 1092                             u8061 0F58  
                           u9005 2704                             u9101 0398                             u8310 1EBA  
                           u8230 116C                             u8150 10A6                             u8070 0F7A  
                           u9030 279E                             u9006 270E                             u9110 03DC  
                           u8311 1EB6                             u8231 1168                             u8151 10A2  
                           u8071 0F76                             u9031 279A                             u9007 271E  
                           u9111 03D8                             u8400 2054                             u8320 1ECC  
                           u8240 118C                             u8160 10B6                             u8080 0FB2  
                           u9040 27F2                             u9200 06AE                             u9120 03EC  
                           u8401 2050                             u8321 1EC8                             u8241 1188  
                           u8161 10B2                             u8081 0FAE                             u9025 2778  
                           u9201 06AA                             u9121 03E8                             u8410 2072  
                           u8330 1EDC                             u8250 119C                             u8170 10CC  
                           u8090 0FF8                             u9050 280E                             u9210 06C4  
                           u9130 0464                             u8411 206E                             u8331 1ED8  
                           u8251 1198                             u8171 10C8                             u8091 0FF4  
                           u9051 280A                             u9211 06C0                             u9131 0460  
                           u8500 21B8                             u8420 2092                             u8340 1F1A  
                           u8260 11B8                             u8180 10E2                             u9060 284A  
                           u9300 0A20                             u9220 06F6                             u9140 0474  
                           u8501 21B4                             u8421 208E                             u8341 1F16  
                           u8261 11B4                             u8181 10DE                             u9061 2846  
                           u9045 27E8                             u9301 0A1C                             u9221 06F2  
                           u9141 0470                             u8510 11E8                             u8430 20A2  
                           u8350 1F5A                             u8190 10F6                             u9070 3AD0  
                           u8270 3C04                             u9310 0ACC                             u9230 0704  
                           u9150 04EA                             u8511 11E4                             u8431 209E  
                           u8351 1F56                             u8191 10F2                             u9071 3ACC  
                           u8271 3C00                             u9311 0AC8                             u9231 0700  
                           u9151 04E6                             u8600 1486                             u8520 11FA  
                           u8440 20D0                             u8360 1FCE                             u8280 1E56  
                           u9320 0B06                             u9240 072E                             u9160 0576  
                           u9080 0342                             u9400 356E                             u8601 1482  
                           u8521 11F6                             u8441 20CC                             u8361 1FCA  
                           u8281 1E52                             u9321 0B02                             u9241 072A  
                           u9161 0572                             u9081 033E                             u9401 356A  
                           u8610 14A6                             u8530 120A                             u8450 20E6  
                           u8370 1FF0                             u8290 1E68                             u9330 0B14  
                           u9250 0878                             u9170 05AA                             u9090 038C  
                           u9410 35E0                             u8611 14A2                             u8531 1206  
                           u8451 20E2                             u8371 1FEC                             u8291 1E64  
                           u9331 0B10                             u9251 0874                             u9171 05A6  
                           u9091 0388                             u9411 35DC                             u9500 3E4E  
                           u8620 14B6                             u8540 124A                             u8460 20FA  
                           u8380 201A                             u8700 34C6                             u7900 0D52  
                           u9340 0B68                             u9260 08E0                             u9180 05E8  
                           u9420 2890                             u9501 3E4A                             u8621 14B2  
                           u8541 1246                             u8461 20F6                             u8381 2016  
                           u8701 34C2                             u7901 0D4E                             u9341 0B64  
                           u9261 08DC                             u9181 05E4                             u9421 288C  
                           u9510 3E72                             u8630 14E4                             u8550 125C  
                           u8470 2114                             u8390 203E                             u8710 3504  
                           u7910 0D92                             u9350 0C3C                             u9270 0928  
                           u9190 0676                             u9430 28CA                             u9511 3E6E  
                           u8631 14E0                             u8551 1258                             u8471 2110  
                           u8391 203A                             u8711 3500                             u7911 0D8E  
                           u9351 0C38                             u9271 0924                             u9191 0672  
                           u9431 28C6                             u9520 3D7C                             u8640 14FA  
                           u8560 126C                             u8800 2E72                             u9600 3742  
                           u8480 215C                             u8720 3538                             u7920 0DA8  
                           u7840 33EE                             u9360 0C58                             u9280 0936  
                           u9440 2956                             u9521 3D78                             u8641 14F6  
                           u8561 1268                             u9601 373E                             u8481 2158  
                           u8721 3534                             u7921 0DA4                             u7841 33EA  
                           u9361 0C54                             u9281 0932                             u9441 2952  
                           u9530 3D8A                             u8650 150E                             u8570 12A2  
                           u8810 2EA0                             u9610 385C                             u8490 218C  
                           u8730 2F5E                             u7930 0DBA                             u7850 3400  
                           u9370 0CBE                             u9290 09D4                             u9531 3D86  
                           u8651 150A                             u8571 129E                             u8811 2E9C  
                           u9611 3858                             u8491 2188                             u8731 2F5A  
                           u7931 0DB6                             u7851 33FC                             u9371 0CB8  
                           u9291 09D0                             u9540 3D1C                             u8660 1528  
                           u8580 12B2                             u8820 2EB4                             u9620 387A  
                           u9700 21FE                             u8740 2F9C                             u7940 0DCA  
                           u8900 31C2                             u7860 3428                             u9380 0CC0  
                           u9541 3D18                             u8661 1524                             u8581 12AE  
                           u8821 2EB0                             u8805 2E68                             u9621 3876  
                           u9701 21FA                             u8741 2F98                             u7941 0DC6  
                           u8901 31BE                             u7861 3424                             u8670 1570  
                           u8590 142C                             u8830 2EDC                             u9630 3890  
                           u9710 22CA                             u9454 325A                             u8750 2FBA  
                           u7950 0E04                             u8910 31EC                             u7870 345E  
                           u9390 0CD4                             u8671 156C                             u8831 2ED8  
                           u9631 388C                             u9711 22C6                             u9455 3256  
                           u8751 2FB6                             u7951 0E00                             u8911 31E8  
                           u7871 345A                             u9391 0CD0                             u9560 3D3C  
                           u9800 2A64                             u8680 159E                             u8840 2EFC  
                           u9720 2380                             u9480 3302                             u9464 3286  
                           u8760 2FDA                             u7960 0E12                             u7880 0D30  
                           u9640 3BB2                             u9561 3D38                             u9801 2A60  
                           u8681 159A                             u8841 2EF8                             u9721 237C  
                           u9481 32FE                             u9465 3282                             u8761 2FD6  
                           u7961 0E0E                             u7881 0D2C                             u9641 3BAE  
                           u9490 3E60                             u9570 3DFE                             u9810 2A72  
                           u9650 3D56                             u8690 15D6                             u8850 2F0C  
                           u9730 23A2                             u9474 32B0                             u8770 302A  
                           u7970 0E7E                             u7890 0D42                             u8930 3226  
                           u9555 3D2A                             u9491 3E5C                             u9571 3DFA  
                           u9811 2A6E                             u9651 3D52                             u8691 15D2  
                           u8595 1422                             u8851 2F08                             u9731 239E  
                           u9475 32AC                             u8771 3026                             u7971 0E7A  
                           u7891 0D3E                             u8931 3220                             u9556 3D2C  
                           u9660 3626                             u9820 2ACE                             u9580 3708  
                           u9740 23C2                             u8780 3CE6                             u7980 0E96  
                           u8940 3228                             u8860 37E6                             u9900 1A9A  
                           u9821 2ACA                             u9581 3704                             u9741 23BE  
                           u8781 3CE2                             u7981 0E90                             u8925 31FE  
                           u8861 37E2                             u9901 1A96                             u9670 365C  
                           u9830 2B24                             u8790 2E3E                             u9590 3726  
                           u9750 23E4                             u7990 0E98                             u8870 3832  
                           u8950 3CCC                             u9910 1AAA                             u9831 2B20  
                           u8791 2E3A                             u9591 3722                             u9751 23E0  
                           u8871 382E                             u8951 3CC8                             u9911 1AA6  
                           u9680 366C                             u9840 2B6E                             u9760 2406  
                           u8880 317C                             u8960 39E6                             u9920 1B6E  
                           u9681 3668                             u9841 2B6A                             u9761 2402  
                           u8961 39E2                             u9921 1B6A                             u9850 2B8C  
                           u9690 21DE                             u9770 392A                             u8890 319A  
                           u8970 26A0                             u9930 1BAC                             u9667 361C  
                           u9851 2B88                             u9691 21DA                             u9771 3926  
                           u8891 3196                             u9931 1BA8                             u9860 2B9C  
                           u9780 393C                             u8980 26CE                             u9940 1BBE  
                           u9677 3652                             u9861 2B98                             u9781 3938  
                           u8885 3170                             u8981 26CA                             u9941 1BBA  
                           u9870 2BAA                             u9790 394E                             u8990 26F0  
                           u9950 1C76                             u9871 2BA6                             u9791 394A  
                           u8991 26EC                             u8975 2696                             u9951 1C72  
                           u9880 2BE4                             u9960 1C8A                             u9881 2BE0  
                           u9961 1C86                             _TMR1 0FCE                             u9890 2BF2  
                           u9970 1CBA                             u9891 2BEE                             u9971 1CB6  
                           u9980 1D26                             u9981 1D22                             u9990 1DD6  
                           u9991 1DD2                   i2_show7Segment 3974          i2_EUSART_TransmitString 366E  
                           _dbuf 0100                             _labs 39D6                             _main 1A1A  
                           _prec 00F0                             pad@i 0077                             pad@p 0074  
                           fsr1h 0FE2               i2___lwdiv@quotient 0005                             fsr2h 0FDA  
                           indf1 0FE7                             indf2 0FDF                             fsr1l 0FE1  
                           fsr2l 0FD9                             btemp 004E                 __end_of_I2CStart 3E62  
               __end_of_I2CWrite 3D8C                    ___fpclassifyf 313A                             prodh 0FF4  
                           prodl 0FF3                             start 0266                     i2___fltol@f1 001A  
                ___fldiv@new_exp 0071                     ___param_bank 0000                            ??_ISR 0024  
            displayDigits@digit0 0064              displayDigits@digit1 0060              displayDigits@digit2 0061  
                          ??_pad 0076                    ___fltol@sign1 008F                            ?_labs 0060  
                __end_of___fladd 11CC                            ?_main 0001                  __end_of___fldiv 21CC  
                __end_of___flneg 3D08                            STR_11 031A                  __end_of___flmul 15F4  
                __end_of___flsub 3C4E                  __end_of___fltol 2F2E                            u10000 1DEA  
                          u10001 1DE6                            _ANSEL 0F7E                            u10017 1A32  
                          u10107 3B18                            u10027 1A52                            u10037 1B84  
                          u10047 1C50                            u10057 1E00                            u10067 1E24  
                          u10077 32D0                            u10087 32DA                  EEPROMWrite@data 0064  
                          u10097 3306                            _T1CON 0FCD                  __end_of___lwdiv 3762  
                          i2l200 0242                  __end_of___lwmod 38AE                            i2l310 3E06  
                          i2l240 2E22                            i2l313 3E18                            i2l162 3DB0  
                          i2l261 33CC                            i2l262 33D8                            i2l319 36EA  
                          i2l159 3D94                            i2l336 2652                            i2l256 2D96  
                          i2l344 39D4                            i2l257 2E24                            i2l185 014C  
                          i2l177 019A                            i2l338 2654                            i2l644 3138  
                          i2l845 37D4                            i2l838 37CC                            i2l855 3910  
                          i2l848 3908                            i2l961 16B8                            i2l970 1924  
                          i2l971 1912                            i2l965 1A18                            i2l968 18AE  
                          i2l969 18CC                            i2l978 19DA                     vfpfcnvrt@fmt 00CA  
                          _SPBRG 0FAF                            _TRISA 0F92                            _TXREG 0FAD  
       i2EUSART_TransmitString@a 0002         i2EUSART_TransmitString@i 0006                            _flags 00F8  
            read_prec_or_width@c 0065              read_prec_or_width@n 0066                            _fputc 33DA  
                          _fputs 3BBE                            labs@a 0060                            pad@fp 0070  
                          _width 00EE                            _putch 3E90           __end_ofi2_show7Segment 39D6  
                          tablat 0FF5                            ttemp5 004F                            ttemp6 0052  
                          ttemp7 0056                            status 0FD8                            wtemp8 004F  
                __end_of_sprintf 3C92                   ?___fpclassifyf 0060                    i2___flmul@grs 000E  
                  i2_adcSampling 3D8C                  __initialization 3A2E           ?i2_EUSART_TransmitChar 0001  
                   __end_of_labs 3A2E                     __end_of_main 1E3A                ??i2_displayDigits 0003  
                      ??_I2CRead 0060                        ??_I2CStop 0060                           ??_labs 0064  
                         ??_main 00E0                    __activetblptr 0002                  ??_displayDigits 0062  
      i2get7SegmentPattern@digit 0001       __end_of_read_prec_or_width 35EA                           _ADCON0 0FC2  
                         _ADCON1 0FC1                           _ADCON2 0FC0                           ?_fputc 0060  
                         ?_fputs 0069                           _ADRESH 0FC4                           _ADRESL 0FC3  
      ??i2_EUSART_TransmitString 0004               _get7SegmentPattern 2C06                           ?_putch 0001  
                   ??_I2CRestart 0060                  ?i2_show7Segment 0001                           i2l4211 2D26  
                         i2l4221 2D4E                           i2l4213 2D2E                           i2l4311 3118  
                         i2l4231 2D76                           i2l4223 2D56                           i2l4215 2D36  
                         i2l4207 2D1A                           i2l4401 1718                           i2l4313 3128  
                         i2l4305 30EC                           i2l4321 377C                           i2l4233 2D7E  
                         i2l4225 2D5E                           i2l4217 2D3E                           i2l4209 2D1E  
                         i2l4411 1762                           i2l4403 1724                           i2l4307 30F8  
                         i2l4331 37B6                           i2l4323 3784                           i2l4251 331A  
                         i2l4227 2D66                           i2l4219 2D46                           i2l4243 2D9C  
                         i2l4421 17B4                           i2l4413 176E                           i2l4405 173C  
                         i2l4309 3108                           i2l4333 37BE                           i2l4325 378C  
                         i2l4317 3762                           i2l4341 38C0                           i2l4261 33AC  
                         i2l4253 3398                           i2l4245 3312                           i2l4237 2D86  
                         i2l4229 2D6E                           i2l4271 3E14                           i2l4431 1832  
                         i2l4423 17C4                           i2l4415 177E                           i2l4407 1748  
                         i2l4335 37C0                           i2l4327 379A                           i2l4319 376A  
                         i2l4351 38FC                           i2l4343 38C8                           i2l4263 33B0  
                         i2l4255 339A                           i2l4239 2D8E                           i2l4441 18AC  
                         i2l4433 1868                           i2l4425 17E0                           i2l4417 178A  
                         i2l4409 1754                           i2l4361 1610                           i2l4281 3088  
                         i2l4273 3034                           i2l4337 37C6                           i2l4329 37A0  
                         i2l4353 3902                           i2l4345 38D0                           i2l4265 33CE  
                         i2l4257 33A2                           i2l4451 1934                           i2l4443 18BE  
                         i2l4435 1876                           i2l4427 17EC                           i2l4419 179A  
                         i2l4371 1656                           i2l4363 1620                           i2l4355 15F4  
                         i2l4283 308A                           i2l4275 304A                           i2l4347 38DE  
                         i2l4339 38AE                           i2l4267 33D6                           i2l4259 33A4  
                         i2l4269 3E06                           i2l4461 1996                           i2l4453 1940  
                         i2l4445 18DC                           i2l4437 1894                           i2l4429 1808  
                         i2l4381 1682                           i2l4373 165C                           i2l4365 1630  
                         i2l4357 1600                           i2l4285 309A                           i2l4349 38F4  
                         i2l4711 367A                           i2l4703 3D8C                           i2l4471 19EE  
                         i2l4463 19AA                           i2l4455 194E                           i2l4447 190A  
                         i2l4439 189E                           i2l4391 16D8                           i2l4383 1692  
                         i2l4375 1662                           i2l4367 1640                           i2l4359 160E  
                         i2l4295 30C4                           i2l4287 309E                           i2l4279 305E  
                         i2l4713 36AA                           i2l4705 3D92                           i2l4473 19FC  
                         i2l4465 19C4                           i2l4457 1978                           i2l4385 16A2  
                         i2l4377 1670                           i2l4369 1646                           i2l4297 30CE  
                         i2l4289 30AC                           i2l4721 243C                           i2l4801 0078  
                         i2l4715 36AE                           i2l4707 3DA2                           i2l4475 19FE  
                         i2l4467 19D4                           i2l4459 197C                           i2l4395 16EC  
                         i2l4387 16A8                           i2l4379 1672                           i2l4299 30D8  
                         i2l4731 24C8                           i2l4723 244C                           i2l4811 00A4  
                         i2l4803 007A                           i2l4709 366E                           i2l4469 19DE  
                         i2l4477 1A04                           i2l4397 16F8                           i2l4389 16C8  
                         i2l4741 256A                           i2l4733 24E0                           i2l4725 248C  
                         i2l4717 241A                           i2l4821 00DC                           i2l4813 00B2  
                         i2l4805 0082                           i2l4479 1A08                           i2l4399 1702  
                         i2l4751 25BC                           i2l4743 2586                           i2l4727 24A8  
                         i2l4735 24FC                           i2l4719 242C                           i2l4831 0130  
                         i2l4823 00F0                           i2l4815 00B6                           i2l4807 0094  
                         i2l4761 25FE                           i2l4753 25CC                           i2l4745 258A  
                         i2l4737 250E                           i2l4729 24C4                           i2l4841 01BE  
                         i2l4833 0144                           i2l4825 010C                           i2l4817 00C4  
                         i2l4809 0096                           i2l4763 260E                           i2l4755 25DE  
                         i2l4747 25A2                           i2l4739 254E                           i2l4771 3974  
                         i2l4843 01C2                           i2l4827 0114                           i2l4819 00DA  
                         i2l4765 2620                           i2l4757 25E2                           i2l4749 25AA  
                         i2l4781 39B6                           i2l4773 397C                           i2l4861 0236  
                         i2l4845 01D2                           i2l4853 01EA                           i2l4829 0124  
                         i2l4837 0152                           i2l4767 2630                           i2l4759 25EC  
                         i2l4783 39BE                           i2l4775 398C                           i2l4863 023E  
                         i2l4847 01DA                           i2l4839 01A8                           i2l4855 020A  
                         i2l4791 003A                           i2l4769 2642                           i2l4785 39C6  
                         i2l4777 399E                           i2l4857 021C                           i2l4849 01E2  
                         i2l4793 0042                           i2l4779 39B0                           i2l4859 0232  
                         i2l4795 0054                           i2l4787 002A                           i2l4797 0066  
                         i2l4789 0038                           i2l4799 0068                   ?i2_adcSampling 0001  
                         _SSPADD 0FC8                           _SSPBUF 0FC9                 __end_of___xxtofl 2C06  
            ?_get7SegmentPattern 0001               _setButtonInterrupt 3E2C                     vfprintf@cfmt 00D9  
                         ___flge 2F2E                           ___fleq 3496                        ??___fladd 0068  
                      ??___fldiv 0068                        ??___flneg 0064                        ??___flmul 0076  
                      ??___flsub 008F                        ??___fltol 008B                           _efgtoa 0320  
                      ??___lwdiv 0064                        ??___lwmod 0064              _EUSART_TransmitChar 3DEC  
                         _floorf 2656                 _setDisplayDigits 21CC              ?_setButtonInterrupt 0001  
                         _memcpy 3A80             read_prec_or_width@ap 0061                           clear_0 3A54  
                         clear_1 3A60                           clear_2 3A6C                           isa$std 0001  
                         pad@buf 0072               __end_of_I2CRestart 3E74                     ?_setupEUSART 0001  
                         _strcpy 3C92             ??_get7SegmentPattern 0060                     ??_EEPROMRead 0064  
                         fputc@c 0060                           fputs@c 006D                           fputs@i 006E  
                   __pdataCOMRAM 004A                           fputs@s 0069                __end_ofi2___flmul 1A1A  
              __end_ofi2___fltol 313A                 __end_of_setupI2C 3E2C                 __end_of_setupADC 3E80  
                ___fpclassifyf@e 0068                        ?_I2CStart 0001                  ___fpclassifyf@u 006A  
                ___fpclassifyf@x 0060                        ?_I2CWrite 0001                __end_ofi2___lwdiv 37D6  
                   __mediumconst 0000                __end_ofi2___lwmod 3912                           tblptrh 0FF7  
                         tblptrl 0FF6                           tblptru 0FF8      i2get7SegmentPattern@pattern 0002  
                         putch@c 0001                 __end_of_vfprintf 3BBE                     ?_setupTimer1 0001  
                      ??_sprintf 00E0          ??_EUSART_TransmitString 0063                   i2___flmul@aexp 0012  
                 i2___flmul@bexp 0013             ?_EUSART_TransmitChar 0001                   i2___flmul@sign 000D  
                 i2___flmul@temp 0018                   i2___flmul@prod 0014             ??_setButtonInterrupt 0060  
               i2displayDigits@i 0006                       ___flge@ff1 0087                       ___flge@ff2 008B  
                ??___fpclassifyf 0064                     ___xxtofl@arg 006A                     ___xxtofl@exp 0069  
                   ___xxtofl@val 0060                       ___fleq@ff1 0060                       ___fleq@ff2 0064  
                     __accesstop 0060          __end_of__initialization 3A72                   i2___fltol@exp1 0023  
                  _adc_step_size 004A                       ___flneg@f1 0060                    ___rparam_used 0001  
                     ___fltol@f1 0087               __end_of_EEPROMRead 3B74               i2___lwmod@dividend 0001  
                 __pcstackCOMRAM 0001       __end_ofi2_setDisplayDigits 2656                    __end_of_fputc 3496  
                  __end_of_fputs 3C06                    __end_of_putch 3E92                    _turnOnDisplay 00FA  
                     ??_I2CStart 0060                       ??_I2CWrite 0060                          ??_fputc 0064  
          ??_EUSART_TransmitChar 0060                          ??_fputs 006D          EUSART_TransmitChar@data 0060  
                        ??_putch 0060                  ??i2_adcSampling 0001                       __pbssBANK0 00E2  
                     __pbssBANK1 0100                    ??_adcSampling 0060                       I2CRead@ack 0060  
                        ?___flge 0087                          ?___fleq 0060                          ?_efgtoa 0093  
                        ?_floorf 0079                          _I2CRead 3D08                          ?_memcpy 0060  
                     _getLowByte 3E80                          _I2CStop 3E3E                          ?_strcpy 0060  
                      ?___xxtofl 0060                          _SSPCON1 0FC6                          _SSPCON2 0FC5  
                  ?_show7Segment 0001                    _address_index 00F2                          _SSPSTAT 0FC7  
                i2_displayDigits 3310          ??i2_EUSART_TransmitChar 0001                          __Hparam 0000  
                        __Lparam 0000              __end_of_adcSampling 3D66                        ?_setupI2C 0001  
                      ?_setupADC 0001     __end_ofi2_get7SegmentPattern 2E26                          ___fladd 0D14  
                        ___fldiv 1E3A                          ___flneg 3CCE                          ___flmul 11CC  
                        ___flsub 3C06                          ___fltol 2E26                   displayDigits@i 0065  
                        ___lwdiv 36EC                          ___lwmod 3848                        ?_vfprintf 00D4  
                   __psmallconst 0300                          __pcinit 3A2E                        _ANSELbits 0F7E  
                        __ramtop 0300                          __ptext0 1A1A                          __ptext1 3C4E  
                        __ptext2 3B74                          __ptext3 286C                          __ptext4 3542  
                        __ptext5 0320                          __ptext6 3C92                          __ptext7 37D6  
                        __ptext8 3BBE                          __ptext9 33DA            read_prec_or_width@fmt 0060  
                     ??___xxtofl 0064                 ??i2_show7Segment 0008                     I2CWrite@data 0060  
                        efgtoa@c 0099                          efgtoa@d 00A7                          efgtoa@e 00AB  
                        efgtoa@f 0095                          efgtoa@g 00BE                          efgtoa@h 00B5  
                        efgtoa@i 00B3                          efgtoa@l 00B9                          efgtoa@m 00A9  
                        efgtoa@n 00C2                          efgtoa@p 009E                          efgtoa@t 00A0  
                        efgtoa@u 00C4                          efgtoa@w 00AD                   ??_show7Segment 0067  
                  _received_data 003E                          _sprintf 3C4E             end_of_initialization 3A72  
                        floorf@e 0087                          floorf@m 0083                          floorf@u 0089  
                        floorf@x 0079         __end_of_setDisplayDigits 241A                          memcpy@d 0067  
                        memcpy@n 0064                          memcpy@s 0069                          fputc@fp 0062  
                  __Lmediumconst 0000                          fputs@fp 006B                    ??_EEPROMWrite 0065  
                      i2u1011_47 339C                        i2u1012_47 33A6                        i2u1013_47 33D0  
             _read_prec_or_width 3542                __end_of_vfpfcnvrt 2A4E                       ??_setupI2C 0060  
                     ??_setupADC 0060                       efgtoa@mode 00A5                       efgtoa@sign 00BD  
                      _RCSTAbits 0FAB                          postdec1 0FE5                          postdec2 0FDD  
            ?_read_prec_or_width 0060                    ??_getHighByte 0062                          postinc0 0FEE  
                        postinc1 0FE6                          postinc2 0FDE                 vfpfcnvrt@convarg 00CE  
                     ??_vfprintf 00D9                      ?_getLowByte 0060                          strcpy@d 0064  
                      _PORTCbits 0F82                      ___fladd@grs 006F            __end_of_displayDigits 3310  
                  ___xxtofl@sign 0068                        _TRISBbits 0F93                        _TRISCbits 0F94  
        __end_ofi2_displayDigits 33DA             ??_read_prec_or_width 0063                      ___fldiv@grs 0073  
                    ___fldiv@rem 006C                  i2___fltol@sign1 0022                        i2___flmul 15F4  
                      i2___fltol 3034                i2___lwdiv@divisor 0003                        i2___lwdiv 3762  
                      i2___lwmod 38AE                i2___lwdiv@counter 0007    __end_of_EUSART_TransmitString 366E  
                    ___flmul@grs 007D                      _adcSampling 3D40                        _TXSTAbits 0FAC  
            __end_of_EEPROMWrite 3B24                   __end_of___flge 3034                   __end_of___fleq 3542  
                    vfpfcnvrt@ap 00CB                      vfpfcnvrt@cp 00D3                      vfpfcnvrt@fp 00C8  
                    _BAUDCONbits 0FB8                    __pidataCOMRAM 3E8C                   __end_of_efgtoa 0D14  
                 __end_of_floorf 286C                   __end_of_memcpy 3AD2                       floorf@F521 00E2  
            __end_of_getHighByte 3E8C                   __end_of_strcpy 3CCE               i2_setDisplayDigits 241A  
            start_initialization 3A2E         ?i2_EUSART_TransmitString 0002                      _adc_voltage 00EA  
                    __end_of_ISR 0266                  _eeprom_data_ctl 00FB                  _eeprom_data_lsb 00FD  
                _eeprom_data_msb 00FC                      __end_of_pad 3848                       ?i2___flmul 0001  
                     ?i2___fltol 001A             i2_get7SegmentPattern 2D18                       ?i2___lwdiv 0001  
                     ?i2___lwmod 0001              ?i2_setDisplayDigits 0001                 getLowByte@number 0060  
          __end_of___fpclassifyf 323A                      vfprintf@fmt 00D6                         ??___flge 008F  
                       ??___fleq 0068             __end_of_show7Segment 3974                         ??_efgtoa 009A  
           ??i2_setDisplayDigits 0024                         ??_floorf 007D                         ?_I2CRead 0001  
                       ??_memcpy 0066                      _c_remainder 0030                         ?_I2CStop 0001  
                       ??_strcpy 0063                        ___fladd@a 0064                        ___fladd@b 0060  
    __end_of_EUSART_TransmitChar 3E04                        ___fldiv@a 0064                        ___fldiv@b 0060  
                      ___flmul@a 0072                        ___flmul@b 006E                      __pbssCOMRAM 002C  
                      ___flsub@a 008B                        ___flsub@b 0087                        _adcResult 00F6  
                  __pcstackBANK0 0060                    __pcstackBANK1 0150                i2___lwmod@divisor 0003  
              i2___lwmod@counter 0005                 ?i2_displayDigits 0001            ?i2_get7SegmentPattern 0001  
                 _button_counter 002C            __end_ofi2_adcSampling 3DB2                      _EEPROMWrite 3AD2  
                    _efgtoa$1751 00A2                        _main$2067 015C                        _main$2068 015D  
               ___lwdiv@dividend 0060    __end_ofi2_EUSART_TransmitChar 3E1A                        __pintcode 0008  
                       ?___fladd 0060                         ?___fldiv 0060                         ?___flneg 0060  
              getHighByte@number 0060                         ?___flmul 006E                         ?___flsub 0087  
                       ?___fltol 0087        i2EUSART_TransmitChar@data 0001                      _getHighByte 3E86  
                       ?___lwdiv 0060                         ?___lwmod 0060  __end_ofi2_EUSART_TransmitString 36EC  
                    __smallconst 0300                         _I2CStart 3E50                         _I2CWrite 3D66  
                      _fsm_state 00F9                 ___lwdiv@quotient 0065                         ?_sprintf 00DA  
                    ??i2___flmul 0009                      ??i2___fltol 001E               EEPROMWrite@address 0062  
                    ??i2___lwdiv 0005                      ??i2___lwmod 0005           EUSART_TransmitString@a 0061  
         EUSART_TransmitString@i 0065                ?_setDisplayDigits 0001                         _LATAbits 0F89  
                       _LATCbits 0F8B                      _eeprom_data 00F4               ??_setDisplayDigits 0091  
                       _PIE1bits 0F9D                         i2u500_40 19C4                         i2u500_41 19C0  
                       i2u501_40 19FC                         i2u501_41 19F8                         _PIR1bits 0F9E  
                       i2u530_40 36EA                         i2u530_41 36E6                         i2u531_40 242C  
                       i2u531_41 2428                         i2u532_40 244C                         i2u540_40 399E  
                       i2u532_41 2448                         i2u540_41 399A                         i2u533_40 250E  
                       i2u541_40 39B0                         i2u533_41 250A                         i2u541_41 39AC  
                       i2u470_40 304A                         i2u534_40 25BC                         i2u550_40 00DA  
                       i2u542_40 0038                         i2u470_41 3046                         i2u534_41 25B8  
                       i2u550_41 00D6                         i2u542_41 0034                         i2u527_40 3DA2  
                       i2u471_40 307E                         i2u535_40 25DE                         i2u551_40 010C  
                       i2u543_40 0054                         i2u527_41 3D9E                         i2u535_41 25DA  
                       i2u551_41 0108                         i2u543_41 0050                         i2u471_45 3074  
                       i2u528_40 36A6                         i2u472_40 30AC                         i2u480_40 38C0  
                       i2u536_40 25FE                         i2u552_40 01A8                         i2u544_40 0066  
                       i2u472_41 30A8                         i2u480_41 38BC                         i2u536_41 25FA  
                       i2u552_41 01A4                         i2u544_41 0062                         i2u528_47 369C  
                       i2u529_40 36DA                         i2u473_40 30C0                         i2u481_40 38DE  
                       i2u537_40 2620                         i2u553_40 01BE                         i2u545_40 0078  
                       i2u473_41 30BC                         i2u481_41 38DA                         i2u537_41 261C  
                       i2u553_41 01BA                         i2u545_41 0074                         i2u465_44 332C  
                       i2u465_45 3328                         i2u529_47 36D0                         i2u490_40 16D8  
                       i2u474_40 30E8                         i2u482_40 38F4                         i2u538_40 2642  
                       i2u554_40 021C                         i2u546_40 0094                         i2u490_41 16D4  
                       i2u474_41 30E4                         i2u482_41 38F0                         i2u538_41 263E  
                       i2u554_41 0218                         i2u546_41 0090                         i2u466_44 3356  
                       i2u466_45 3352                         i2u491_40 1852                         i2u483_40 160E  
                       i2u475_40 3108                         i2u539_40 398C                         i2u555_40 0232  
                       i2u547_40 00A4                         i2u483_41 160A                         i2u475_41 3104  
                       i2u539_41 3988                         i2u555_41 022E                         i2u547_41 00A0  
                       i2u467_44 337E                         i2u491_45 1848                         i2u467_45 337A  
                       i2u492_40 18AC                         i2u484_40 1620                         i2u476_40 3118  
                       i2u468_40 33CC                         i2u548_40 00B2                         i2u492_41 18A8  
                       i2u484_41 161C                         i2u476_41 3114                         i2u468_41 33C8  
                       i2u548_41 00AE                         i2u469_40 3E14                         i2u493_40 18CC  
                       i2u485_40 1630                         i2u477_40 377C                         i2u549_40 00C4  
                       i2u469_41 3E10                         i2u493_41 18C8                         i2u485_41 162C  
                       i2u477_41 3778                         i2u549_41 00C0                         i2u494_40 18DC  
                       i2u486_40 1670                         i2u478_40 379A                         i2u494_41 18D8  
                       i2u486_41 166C                         i2u478_41 3796                         i2u495_40 190A  
                       i2u487_40 1682                         i2u479_40 37B6                         i2u495_41 1906  
                       i2u487_41 167E                         i2u479_41 37B2                         i2u496_40 1920  
                       i2u488_40 1692                         i2u496_41 191C                         i2u488_41 168E  
                       i2u497_40 1934                         i2u489_40 16C8                         i2u497_41 1930  
                       i2u489_41 16C4                         i2u498_40 194E                         i2u498_41 194A  
                       i2u499_40 1996                         i2u499_41 1992                     ??_getLowByte 0062  
                      _vfpfcnvrt 286C                    ??_setupEUSART 0060                       _ADCON0bits 0FC2  
         ??i2_get7SegmentPattern 0001                    ??_setupTimer1 0060        get7SegmentPattern@pattern 0061  
                     vfpfcnvrt@c 00D2                      _INTCON2bits 0FF1                      _INTCON3bits 0FF0  
                      copy_data0 3A42                       _I2CRestart 3E62                     ?_adcSampling 0001  
             __end_of_getLowByte 3E86                EEPROMRead@address 0062          get7SegmentPattern@digit 0060  
                       __Hrparam 0000                        memcpy@tmp 0066                       vfprintf@ap 00D7  
                       __Lrparam 0000                       vfprintf@fp 00D4                       ?_vfpfcnvrt 00C8  
             ___fpclassifyf@F465 00E6                       sprintf@fmt 00DB                       _EEPROMRead 3B24  
                       _c_target 0032                         ___xxtofl 2A4E                         _c_number 002E  
                ___lwdiv@divisor 0062                  ___lwdiv@counter 0064              __end_of_setupEUSART 3DD2  
                       __ptext10 3E90                         __ptext11 3A80                         __ptext20 1E3A  
                       __ptext12 39D6                         __ptext21 3912                         __ptext13 2656  
                       __ptext30 36EC                         __ptext22 2C06                         __ptext14 313A  
                       __ptext31 2E26                         __ptext23 323A                         __ptext15 3C06  
                       __ptext40 3E80                         __ptext32 11CC                         __ptext24 3DD2  
                       __ptext16 0D14                         __ptext41 3E86                         __ptext33 3E2C  
                       __ptext25 3E1A                         __ptext17 3CCE                         __ptext50 3310  
                       __ptext42 3D66                         __ptext34 3D40                         __ptext26 3DB2  
                       __ptext18 2F2E                         __ptext51 241A                         __ptext43 3E3E  
                       __ptext35 2A4E                         __ptext27 3E74                         __ptext19 3496  
                       __ptext52 38AE                         __ptext44 3E50                         __ptext36 35EA  
                       __ptext28 21CC                         __ptext53 3762                         __ptext45 3E62  
                       __ptext37 3DEC                         __ptext29 3848                         __ptext54 3034  
                       __ptext46 3D08                         __ptext38 3AD2                         __ptext55 15F4  
                       __ptext39 3B24                         __ptext56 3D8C                         __ptext48 3974  
                       __ptext57 366E                         __ptext49 2D18                         __ptext58 3E04  
                   _show7Segment 3912                      _segPattern0 003B                      _segPattern1 003A  
                    _segPattern2 0039                       strcpy@dest 0060              __end_of_setupTimer1 3DEC  
          _EUSART_TransmitString 35EA                         _sampling 00FE                         efgtoa@fp 0093  
                       efgtoa@ne 009C                         efgtoa@pp 00A4                         efgtoa@ou 00AF  
                       _setupI2C 3E1A                         _setupADC 3E74                         isa$xinst 0000  
                       int$flags 004E            i2displayDigits@digit0 0005            i2displayDigits@digit1 0001  
          i2displayDigits@digit2 0002                         _vfprintf 3B74       __end_of_get7SegmentPattern 2D18  
                     _INTCONbits 0FF2                         memcpy@d1 0060                         memcpy@s1 0062  
     __end_of_setButtonInterrupt 3E3E                      ?_I2CRestart 0001                         intlevel2 0000  
                      sprintf@ap 0150                 ___lwmod@dividend 0060                     ?_EEPROMWrite 0062  
                      strcpy@src 0062                   _displayAddress 0035                       _OSCCONbits 0FD3  
                    efgtoa@nmode 00A6                    _overflowCount 003F                     ?_getHighByte 0060  
                    ??_vfpfcnvrt 00CD                      _setupEUSART 3DB2                      _uart_buffer 0040  
                       sprintf@f 0151                         sprintf@s 00DA                      ?_EEPROMRead 0062  
                ___lwmod@divisor 0062                  ___lwmod@counter 0064                    _displayDigit0 0038  
                  _displayDigit1 0037                    _displayDigit2 0036                    _displayDigits 323A  
                    _SSPCON2bits 0FC5                   EEPROMRead@data 0064                    _displaySample 0034  
                    _setupTimer1 3DD2                    ___fladd@signs 006C                _address_high_byte 003C  
                   ___fladd@aexp 006D                     ___fladd@bexp 006E           ?_EUSART_TransmitString 0061  
