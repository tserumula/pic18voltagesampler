

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Dec 29 13:23:03 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78   000000                     
    79                           ; Generated 12/10/2023 GMT
    80                           ; 
    81                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F14K50 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113   000FE0                     bsr             equ	4064
   114   000FE9                     fsr0            equ	4073
   115   000FEA                     fsr0h           equ	4074
   116   000FE9                     fsr0l           equ	4073
   117   000FE1                     fsr1            equ	4065
   118   000FE2                     fsr1h           equ	4066
   119   000FE1                     fsr1l           equ	4065
   120   000FD9                     fsr2            equ	4057
   121   000FDA                     fsr2h           equ	4058
   122   000FD9                     fsr2l           equ	4057
   123   000FEF                     indf0           equ	4079
   124   000FE7                     indf1           equ	4071
   125   000FDF                     indf2           equ	4063
   126   000FF2                     intcon          equ	4082
   127   000000                     nvmcon          equ	0
   128   000FF9                     pcl             equ	4089
   129   000FFA                     pclath          equ	4090
   130   000FFB                     pclatu          equ	4091
   131   000FEB                     plusw0          equ	4075
   132   000FE3                     plusw1          equ	4067
   133   000FDB                     plusw2          equ	4059
   134   000FED                     postdec0        equ	4077
   135   000FE5                     postdec1        equ	4069
   136   000FDD                     postdec2        equ	4061
   137   000FEE                     postinc0        equ	4078
   138   000FE6                     postinc1        equ	4070
   139   000FDE                     postinc2        equ	4062
   140   000FEC                     preinc0         equ	4076
   141   000FE4                     preinc1         equ	4068
   142   000FDC                     preinc2         equ	4060
   143   000FF3                     prod            equ	4083
   144   000FF4                     prodh           equ	4084
   145   000FF3                     prodl           equ	4083
   146   000FD8                     status          equ	4056
   147   000FF5                     tablat          equ	4085
   148   000FF6                     tblptr          equ	4086
   149   000FF7                     tblptrh         equ	4087
   150   000FF6                     tblptrl         equ	4086
   151   000FF8                     tblptru         equ	4088
   152   000FFD                     tosl            equ	4093
   153   000FE8                     wreg            equ	4072
   154   000F53                     UEP0            equ	3923	;# 
   155   000F54                     UEP1            equ	3924	;# 
   156   000F55                     UEP2            equ	3925	;# 
   157   000F56                     UEP3            equ	3926	;# 
   158   000F57                     UEP4            equ	3927	;# 
   159   000F58                     UEP5            equ	3928	;# 
   160   000F59                     UEP6            equ	3929	;# 
   161   000F5A                     UEP7            equ	3930	;# 
   162   000F5B                     UEIE            equ	3931	;# 
   163   000F5C                     UADDR           equ	3932	;# 
   164   000F5D                     UFRML           equ	3933	;# 
   165   000F5E                     UFRMH           equ	3934	;# 
   166   000F5F                     UEIR            equ	3935	;# 
   167   000F60                     UIE             equ	3936	;# 
   168   000F61                     UCFG            equ	3937	;# 
   169   000F62                     UIR             equ	3938	;# 
   170   000F63                     USTAT           equ	3939	;# 
   171   000F64                     UCON            equ	3940	;# 
   172   000F68                     SRCON0          equ	3944	;# 
   173   000F69                     SRCON1          equ	3945	;# 
   174   000F6B                     CM2CON0         equ	3947	;# 
   175   000F6C                     CM2CON1         equ	3948	;# 
   176   000F6D                     CM1CON0         equ	3949	;# 
   177   000F6F                     SSPMSK          equ	3951	;# 
   178   000F6F                     SSPMASK         equ	3951	;# 
   179   000F76                     SLRCON          equ	3958	;# 
   180   000F77                     WPUA            equ	3959	;# 
   181   000F78                     WPUB            equ	3960	;# 
   182   000F79                     IOCA            equ	3961	;# 
   183   000F7A                     IOCB            equ	3962	;# 
   184   000F7E                     ANSEL           equ	3966	;# 
   185   000F7F                     ANSELH          equ	3967	;# 
   186   000F80                     PORTA           equ	3968	;# 
   187   000F81                     PORTB           equ	3969	;# 
   188   000F82                     PORTC           equ	3970	;# 
   189   000F89                     LATA            equ	3977	;# 
   190   000F8A                     LATB            equ	3978	;# 
   191   000F8B                     LATC            equ	3979	;# 
   192   000F92                     TRISA           equ	3986	;# 
   193   000F92                     DDRA            equ	3986	;# 
   194   000F93                     TRISB           equ	3987	;# 
   195   000F93                     DDRB            equ	3987	;# 
   196   000F94                     TRISC           equ	3988	;# 
   197   000F94                     DDRC            equ	3988	;# 
   198   000F9B                     OSCTUNE         equ	3995	;# 
   199   000F9D                     PIE1            equ	3997	;# 
   200   000F9E                     PIR1            equ	3998	;# 
   201   000F9F                     IPR1            equ	3999	;# 
   202   000FA0                     PIE2            equ	4000	;# 
   203   000FA1                     PIR2            equ	4001	;# 
   204   000FA2                     IPR2            equ	4002	;# 
   205   000FA6                     EECON1          equ	4006	;# 
   206   000FA7                     EECON2          equ	4007	;# 
   207   000FA8                     EEDATA          equ	4008	;# 
   208   000FA9                     EEADR           equ	4009	;# 
   209   000FAB                     RCSTA           equ	4011	;# 
   210   000FAB                     RCSTA1          equ	4011	;# 
   211   000FAC                     TXSTA           equ	4012	;# 
   212   000FAC                     TXSTA1          equ	4012	;# 
   213   000FAD                     TXREG           equ	4013	;# 
   214   000FAD                     TXREG1          equ	4013	;# 
   215   000FAE                     RCREG           equ	4014	;# 
   216   000FAE                     RCREG1          equ	4014	;# 
   217   000FAF                     SPBRG           equ	4015	;# 
   218   000FAF                     SPBRG1          equ	4015	;# 
   219   000FB0                     SPBRGH          equ	4016	;# 
   220   000FB1                     T3CON           equ	4017	;# 
   221   000FB2                     TMR3            equ	4018	;# 
   222   000FB2                     TMR3L           equ	4018	;# 
   223   000FB3                     TMR3H           equ	4019	;# 
   224   000FB6                     ECCP1AS         equ	4022	;# 
   225   000FB7                     PWM1CON         equ	4023	;# 
   226   000FB8                     BAUDCON         equ	4024	;# 
   227   000FB8                     BAUDCTL         equ	4024	;# 
   228   000FB9                     PSTRCON         equ	4025	;# 
   229   000FBA                     REFCON0         equ	4026	;# 
   230   000FBA                     VREFCON0        equ	4026	;# 
   231   000FBB                     REFCON1         equ	4027	;# 
   232   000FBB                     VREFCON1        equ	4027	;# 
   233   000FBC                     REFCON2         equ	4028	;# 
   234   000FBC                     VREFCON2        equ	4028	;# 
   235   000FBD                     CCP1CON         equ	4029	;# 
   236   000FBE                     CCPR1           equ	4030	;# 
   237   000FBE                     CCPR1L          equ	4030	;# 
   238   000FBF                     CCPR1H          equ	4031	;# 
   239   000FC0                     ADCON2          equ	4032	;# 
   240   000FC1                     ADCON1          equ	4033	;# 
   241   000FC2                     ADCON0          equ	4034	;# 
   242   000FC3                     ADRES           equ	4035	;# 
   243   000FC3                     ADRESL          equ	4035	;# 
   244   000FC4                     ADRESH          equ	4036	;# 
   245   000FC5                     SSPCON2         equ	4037	;# 
   246   000FC6                     SSPCON1         equ	4038	;# 
   247   000FC7                     SSPSTAT         equ	4039	;# 
   248   000FC8                     SSPADD          equ	4040	;# 
   249   000FC9                     SSPBUF          equ	4041	;# 
   250   000FCA                     T2CON           equ	4042	;# 
   251   000FCB                     PR2             equ	4043	;# 
   252   000FCB                     MEMCON          equ	4043	;# 
   253   000FCC                     TMR2            equ	4044	;# 
   254   000FCD                     T1CON           equ	4045	;# 
   255   000FCE                     TMR1            equ	4046	;# 
   256   000FCE                     TMR1L           equ	4046	;# 
   257   000FCF                     TMR1H           equ	4047	;# 
   258   000FD0                     RCON            equ	4048	;# 
   259   000FD1                     WDTCON          equ	4049	;# 
   260   000FD2                     OSCCON2         equ	4050	;# 
   261   000FD3                     OSCCON          equ	4051	;# 
   262   000FD5                     T0CON           equ	4053	;# 
   263   000FD6                     TMR0            equ	4054	;# 
   264   000FD6                     TMR0L           equ	4054	;# 
   265   000FD7                     TMR0H           equ	4055	;# 
   266   000FD8                     STATUS          equ	4056	;# 
   267   000FD9                     FSR2            equ	4057	;# 
   268   000FD9                     FSR2L           equ	4057	;# 
   269   000FDA                     FSR2H           equ	4058	;# 
   270   000FDB                     PLUSW2          equ	4059	;# 
   271   000FDC                     PREINC2         equ	4060	;# 
   272   000FDD                     POSTDEC2        equ	4061	;# 
   273   000FDE                     POSTINC2        equ	4062	;# 
   274   000FDF                     INDF2           equ	4063	;# 
   275   000FE0                     BSR             equ	4064	;# 
   276   000FE1                     FSR1            equ	4065	;# 
   277   000FE1                     FSR1L           equ	4065	;# 
   278   000FE2                     FSR1H           equ	4066	;# 
   279   000FE3                     PLUSW1          equ	4067	;# 
   280   000FE4                     PREINC1         equ	4068	;# 
   281   000FE5                     POSTDEC1        equ	4069	;# 
   282   000FE6                     POSTINC1        equ	4070	;# 
   283   000FE7                     INDF1           equ	4071	;# 
   284   000FE8                     WREG            equ	4072	;# 
   285   000FE9                     FSR0            equ	4073	;# 
   286   000FE9                     FSR0L           equ	4073	;# 
   287   000FEA                     FSR0H           equ	4074	;# 
   288   000FEB                     PLUSW0          equ	4075	;# 
   289   000FEC                     PREINC0         equ	4076	;# 
   290   000FED                     POSTDEC0        equ	4077	;# 
   291   000FEE                     POSTINC0        equ	4078	;# 
   292   000FEF                     INDF0           equ	4079	;# 
   293   000FF0                     INTCON3         equ	4080	;# 
   294   000FF1                     INTCON2         equ	4081	;# 
   295   000FF2                     INTCON          equ	4082	;# 
   296   000FF3                     PROD            equ	4083	;# 
   297   000FF3                     PRODL           equ	4083	;# 
   298   000FF4                     PRODH           equ	4084	;# 
   299   000FF5                     TABLAT          equ	4085	;# 
   300   000FF6                     TBLPTR          equ	4086	;# 
   301   000FF6                     TBLPTRL         equ	4086	;# 
   302   000FF7                     TBLPTRH         equ	4087	;# 
   303   000FF8                     TBLPTRU         equ	4088	;# 
   304   000FF9                     PCLAT           equ	4089	;# 
   305   000FF9                     PC              equ	4089	;# 
   306   000FF9                     PCL             equ	4089	;# 
   307   000FFA                     PCLATH          equ	4090	;# 
   308   000FFB                     PCLATU          equ	4091	;# 
   309   000FFC                     STKPTR          equ	4092	;# 
   310   000FFD                     TOS             equ	4093	;# 
   311   000FFD                     TOSL            equ	4093	;# 
   312   000FFE                     TOSH            equ	4094	;# 
   313   000FFF                     TOSU            equ	4095	;# 
   314                           
   315                           	psect	idataCOMRAM
   316   003234                     __pidataCOMRAM:
   317                           	callstack 0
   318                           
   319                           ;initializer for _adc_step_size
   320                           ;main.c: 88: uint16_t adcResult = 0;;main.c: 90: uint8_t overflowCount = 0;;main.c: 91: 
      +                          uint8_t sampling = 0;;main.c: 93: uint8_t eeprom_data_lsb = 0;;main.c: 94: uint8_t eepro
      +                          m_data_msb = 0;;main.c: 95: uint8_t eeprom_data_ctl = 0;;main.c: 96: uint16_t eeprom_dat
      +                          a = 0;;main.c: 98: uint8_t received_data = 0;;main.c: 100: uint8_t address_low_byte = 0;
      +                          ;main.c: 101: uint8_t address_high_byte = 0;;main.c: 102: uint16_t address_index = 0;;ma
      +                          in.c: 104: uint8_t segPattern0;;main.c: 105: uint8_t segPattern1;;main.c: 106: uint8_t s
      +                          egPattern2;
   321   003234  280A               	dw	10250
   322   003236  3BA0               	dw	15264
   323   000FCE                     _TMR1           set	4046
   324   000FAD                     _TXREG          set	4013
   325   000FAB                     _RCSTAbits      set	4011
   326   000FAC                     _TXSTAbits      set	4012
   327   000FAF                     _SPBRG          set	4015
   328   000FB8                     _BAUDCONbits    set	4024
   329   000FC7                     _SSPSTATbits    set	4039
   330   000FC9                     _SSPBUF         set	4041
   331   000FC5                     _SSPCON2bits    set	4037
   332   000FF1                     _INTCON2bits    set	4081
   333   000FC5                     _SSPCON2        set	4037
   334   000FC7                     _SSPSTAT        set	4039
   335   000FC8                     _SSPADD         set	4040
   336   000FC6                     _SSPCON1        set	4038
   337   000F93                     _TRISBbits      set	3987
   338   000F9D                     _PIE1bits       set	3997
   339   000FCD                     _T1CON          set	4045
   340   000FC0                     _ADCON2         set	4032
   341   000FC2                     _ADCON0         set	4034
   342   000FC1                     _ADCON1         set	4033
   343   000F82                     _PORTCbits      set	3970
   344   000FF2                     _INTCONbits     set	4082
   345   000F8B                     _LATCbits       set	3979
   346   000F7E                     _ANSELbits      set	3966
   347   000F94                     _TRISCbits      set	3988
   348   000F92                     _TRISA          set	3986
   349   000F7E                     _ANSEL          set	3966
   350   000FD3                     _OSCCONbits     set	4051
   351   000FF0                     _INTCON3bits    set	4080
   352   000F89                     _LATAbits       set	3977
   353   000F9E                     _PIR1bits       set	3998
   354   000FC3                     _ADRESL         set	4035
   355   000FC4                     _ADRESH         set	4036
   356   000FC2                     _ADCON0bits     set	4034
   357                           
   358                           	psect	smallconst
   359   000300                     __psmallconst:
   360                           	callstack 0
   361   000300  00                 	db	0
   362   000301                     STR_1:
   363   000301  53                 	db	83	;'S'
   364   000302  54                 	db	84	;'T'
   365   000303  41                 	db	65	;'A'
   366   000304  52                 	db	82	;'R'
   367   000305  54                 	db	84	;'T'
   368   000306  20                 	db	32
   369   000307  0D                 	db	13
   370   000308  0A                 	db	10
   371   000309  00                 	db	0
   372   00030A                     STR_5:
   373   00030A  45                 	db	69	;'E'
   374   00030B  4E                 	db	78	;'N'
   375   00030C  44                 	db	68	;'D'
   376   00030D  20                 	db	32
   377   00030E  0D                 	db	13
   378   00030F  0A                 	db	10
   379   000310  00                 	db	0
   380   000311                     STR_2:
   381   000311  25                 	db	37
   382   000312  2E                 	db	46
   383   000313  32                 	db	50	;'2'
   384   000314  66                 	db	102	;'f'
   385   000315  00                 	db	0
   386   000316                     STR_8:
   387   000316  69                 	db	105	;'i'
   388   000317  6E                 	db	110	;'n'
   389   000318  66                 	db	102	;'f'
   390   000319  00                 	db	0
   391   00031A                     STR_11:
   392   00031A  6E                 	db	110	;'n'
   393   00031B  61                 	db	97	;'a'
   394   00031C  6E                 	db	110	;'n'
   395   00031D  00                 	db	0
   396   00031A                     STR_12          equ	STR_11
   397   00031A                     STR_13          equ	STR_11
   398   000316                     STR_9           equ	STR_8
   399   000316                     STR_10          equ	STR_8
   400   000311                     STR_6           equ	STR_2
   401   000301                     STR_4           equ	STR_1
   402   00030E                     STR_3           equ	STR_5+4
   403   00030E                     STR_7           equ	STR_5+4
   404   00031E  00                 	db	0	; dummy byte at the end
   405   000002                     __activetblptr  equ	2
   406                           
   407                           ; #config settings
   408                           
   409                           	psect	cinit
   410   002CD0                     __pcinit:
   411                           	callstack 0
   412   002CD0                     start_initialization:
   413                           	callstack 0
   414   002CD0                     __initialization:
   415                           	callstack 0
   416                           
   417                           ; Initialize objects allocated to COMRAM (4 bytes)
   418                           ; load TBLPTR registers with __pidataCOMRAM
   419   002CD0  0E34               	movlw	low __pidataCOMRAM
   420   002CD2  6EF6               	movwf	tblptrl,c
   421   002CD4  0E32               	movlw	high __pidataCOMRAM
   422   002CD6  6EF7               	movwf	tblptrh,c
   423   002CD8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   424   002CDA  6EF8               	movwf	tblptru,c
   425   002CDC  EE00  F04A         	lfsr	0,__pdataCOMRAM
   426   002CE0  EE10 F004          	lfsr	1,4
   427   002CE4                     copy_data0:
   428   002CE4  0009               	tblrd		*+
   429   002CE6  CFF5 FFEE          	movff	tablat,postinc0
   430   002CEA  50E5               	movf	postdec1,w,c
   431   002CEC  50E1               	movf	fsr1l,w,c
   432   002CEE  E1FA               	bnz	copy_data0
   433                           
   434                           ; Clear objects allocated to BANK1 (80 bytes)
   435   002CF0  EE01  F000         	lfsr	0,__pbssBANK1
   436   002CF4  0E50               	movlw	80
   437   002CF6                     clear_0:
   438   002CF6  6AEE               	clrf	postinc0,c
   439   002CF8  06E8               	decf	wreg,f,c
   440   002CFA  E1FD               	bnz	clear_0
   441                           
   442                           ; Clear objects allocated to BANK0 (29 bytes)
   443   002CFC  EE00  F0E2         	lfsr	0,__pbssBANK0
   444   002D00  0E1D               	movlw	29
   445   002D02                     clear_1:
   446   002D02  6AEE               	clrf	postinc0,c
   447   002D04  06E8               	decf	wreg,f,c
   448   002D06  E1FD               	bnz	clear_1
   449                           
   450                           ; Clear objects allocated to COMRAM (30 bytes)
   451   002D08  EE00  F02C         	lfsr	0,__pbssCOMRAM
   452   002D0C  0E1E               	movlw	30
   453   002D0E                     clear_2:
   454   002D0E  6AEE               	clrf	postinc0,c
   455   002D10  06E8               	decf	wreg,f,c
   456   002D12  E1FD               	bnz	clear_2
   457   002D14                     end_of_initialization:
   458                           	callstack 0
   459   002D14                     __end_of__initialization:
   460                           	callstack 0
   461   002D14  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   462   002D16  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   463   002D18  0E00               	movlw	low (__Lmediumconst shr (0+16))
   464   002D1A  6EF8               	movwf	tblptru,c
   465   002D1C  0100               	movlb	0
   466   002D1E  EFD2  F005         	goto	_main	;jump to C main() function
   467                           
   468                           	psect	bssCOMRAM
   469   00002C                     __pbssCOMRAM:
   470                           	callstack 0
   471   00002C                     _button_counter:
   472                           	callstack 0
   473   00002C                     	ds	2
   474   00002E                     _c_number:
   475                           	callstack 0
   476   00002E                     	ds	2
   477   000030                     _c_remainder:
   478                           	callstack 0
   479   000030                     	ds	2
   480   000032                     _c_target:
   481                           	callstack 0
   482   000032                     	ds	2
   483   000034                     _displaySample:
   484                           	callstack 0
   485   000034                     	ds	1
   486   000035                     _displayAddress:
   487                           	callstack 0
   488   000035                     	ds	1
   489   000036                     _displayDigit2:
   490                           	callstack 0
   491   000036                     	ds	1
   492   000037                     _displayDigit1:
   493                           	callstack 0
   494   000037                     	ds	1
   495   000038                     _displayDigit0:
   496                           	callstack 0
   497   000038                     	ds	1
   498   000039                     _segPattern2:
   499                           	callstack 0
   500   000039                     	ds	1
   501   00003A                     _segPattern1:
   502                           	callstack 0
   503   00003A                     	ds	1
   504   00003B                     _segPattern0:
   505                           	callstack 0
   506   00003B                     	ds	1
   507   00003C                     _address_high_byte:
   508                           	callstack 0
   509   00003C                     	ds	1
   510   00003D                     _address_low_byte:
   511                           	callstack 0
   512   00003D                     	ds	1
   513   00003E                     _received_data:
   514                           	callstack 0
   515   00003E                     	ds	1
   516   00003F                     _overflowCount:
   517                           	callstack 0
   518   00003F                     	ds	1
   519   000040                     _uart_buffer:
   520                           	callstack 0
   521   000040                     	ds	10
   522                           
   523                           	psect	dataCOMRAM
   524   00004A                     __pdataCOMRAM:
   525                           	callstack 0
   526   00004A                     _adc_step_size:
   527                           	callstack 0
   528   00004A                     	ds	4
   529                           
   530                           	psect	bssBANK0
   531   0000E2                     __pbssBANK0:
   532                           	callstack 0
   533   0000E2                     floorf@F521:
   534                           	callstack 0
   535   0000E2                     	ds	4
   536   0000E6                     ___fpclassifyf@F465:
   537                           	callstack 0
   538   0000E6                     	ds	4
   539   0000EA                     _adc_voltage:
   540                           	callstack 0
   541   0000EA                     	ds	4
   542   0000EE                     _width:
   543                           	callstack 0
   544   0000EE                     	ds	2
   545   0000F0                     _prec:
   546                           	callstack 0
   547   0000F0                     	ds	2
   548   0000F2                     _address_index:
   549                           	callstack 0
   550   0000F2                     	ds	2
   551   0000F4                     _eeprom_data:
   552                           	callstack 0
   553   0000F4                     	ds	2
   554   0000F6                     _adcResult:
   555                           	callstack 0
   556   0000F6                     	ds	2
   557   0000F8                     _flags:
   558                           	callstack 0
   559   0000F8                     	ds	1
   560   0000F9                     _fsm_state:
   561                           	callstack 0
   562   0000F9                     	ds	1
   563   0000FA                     _turnOnDisplay:
   564                           	callstack 0
   565   0000FA                     	ds	1
   566   0000FB                     _eeprom_data_ctl:
   567                           	callstack 0
   568   0000FB                     	ds	1
   569   0000FC                     _eeprom_data_msb:
   570                           	callstack 0
   571   0000FC                     	ds	1
   572   0000FD                     _eeprom_data_lsb:
   573                           	callstack 0
   574   0000FD                     	ds	1
   575   0000FE                     _sampling:
   576                           	callstack 0
   577   0000FE                     	ds	1
   578                           
   579                           	psect	bssBANK1
   580   000100                     __pbssBANK1:
   581                           	callstack 0
   582   000100                     _dbuf:
   583                           	callstack 0
   584   000100                     	ds	80
   585                           
   586                           	psect	cstackBANK1
   587   000150                     __pcstackBANK1:
   588                           	callstack 0
   589   000150                     sprintf@ap:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x0
   593   000150                     	ds	1
   594   000151                     sprintf@f:
   595                           	callstack 0
   596                           
   597                           ; 11 bytes @ 0x1
   598   000151                     	ds	11
   599   00015C                     _main$2067:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0xC
   603   00015C                     	ds	1
   604   00015D                     _main$2068:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0xD
   608   00015D                     	ds	1
   609                           
   610                           	psect	cstackBANK0
   611   000060                     __pcstackBANK0:
   612                           	callstack 0
   613   000060                     ?___fpclassifyf:
   614                           	callstack 0
   615   000060                     ?___lwdiv:
   616                           	callstack 0
   617   000060                     ?___lwmod:
   618                           	callstack 0
   619   000060                     ?_read_prec_or_width:
   620                           	callstack 0
   621   000060                     ?___fladd:
   622                           	callstack 0
   623   000060                     ?___fldiv:
   624                           	callstack 0
   625   000060                     ?_labs:
   626                           	callstack 0
   627   000060                     ?___flneg:
   628                           	callstack 0
   629   000060                     ?___xxtofl:
   630                           	callstack 0
   631   000060                     get7SegmentPattern@digit:
   632                           	callstack 0
   633   000060                     displayDigits@digit1:
   634                           	callstack 0
   635   000060                     I2CWrite@data:
   636                           	callstack 0
   637   000060                     I2CRead@ack:
   638                           	callstack 0
   639   000060                     EUSART_TransmitChar@data:
   640                           	callstack 0
   641   000060                     read_prec_or_width@fmt:
   642                           	callstack 0
   643   000060                     getLowByte@number:
   644                           	callstack 0
   645   000060                     getHighByte@number:
   646                           	callstack 0
   647   000060                     ___lwdiv@dividend:
   648                           	callstack 0
   649   000060                     ___lwmod@dividend:
   650                           	callstack 0
   651   000060                     memcpy@d1:
   652                           	callstack 0
   653   000060                     fputc@c:
   654                           	callstack 0
   655   000060                     strcpy@dest:
   656                           	callstack 0
   657   000060                     ___fleq@ff1:
   658                           	callstack 0
   659   000060                     ___flneg@f1:
   660                           	callstack 0
   661   000060                     ___fladd@b:
   662                           	callstack 0
   663   000060                     ___fldiv@b:
   664                           	callstack 0
   665   000060                     ___xxtofl@val:
   666                           	callstack 0
   667   000060                     ___fpclassifyf@x:
   668                           	callstack 0
   669   000060                     labs@a:
   670                           	callstack 0
   671   000060                     ??_adcSampling:
   672   000060                     
   673                           ; 1 bytes @ 0x0
   674   000060                     	ds	1
   675   000061                     get7SegmentPattern@pattern:
   676                           	callstack 0
   677   000061                     displayDigits@digit2:
   678                           	callstack 0
   679   000061                     EUSART_TransmitString@a:
   680                           	callstack 0
   681   000061                     read_prec_or_width@ap:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x1
   685   000061                     	ds	1
   686   000062                     strcpy@src:
   687                           	callstack 0
   688   000062                     EEPROMWrite@address:
   689                           	callstack 0
   690   000062                     EEPROMRead@address:
   691                           	callstack 0
   692   000062                     ___lwdiv@divisor:
   693                           	callstack 0
   694   000062                     ___lwmod@divisor:
   695                           	callstack 0
   696   000062                     memcpy@s1:
   697                           	callstack 0
   698   000062                     fputc@fp:
   699                           	callstack 0
   700   000062                     ??_displayDigits:
   701                           
   702                           ; 1 bytes @ 0x2
   703   000062                     	ds	1
   704   000063                     ??_EUSART_TransmitString:
   705   000063                     ??_strcpy:
   706   000063                     ??_read_prec_or_width:
   707                           
   708                           ; 1 bytes @ 0x3
   709   000063                     	ds	1
   710   000064                     displayDigits@digit0:
   711                           	callstack 0
   712   000064                     EEPROMWrite@data:
   713                           	callstack 0
   714   000064                     EEPROMRead@data:
   715                           	callstack 0
   716   000064                     ___lwdiv@counter:
   717                           	callstack 0
   718   000064                     ___lwmod@counter:
   719                           	callstack 0
   720   000064                     memcpy@n:
   721                           	callstack 0
   722   000064                     strcpy@d:
   723                           	callstack 0
   724   000064                     ___fleq@ff2:
   725                           	callstack 0
   726   000064                     ___fladd@a:
   727                           	callstack 0
   728   000064                     ___fldiv@a:
   729                           	callstack 0
   730   000064                     ??_fputc:
   731   000064                     ??___fpclassifyf:
   732   000064                     ??_labs:
   733   000064                     ??___xxtofl:
   734                           
   735                           ; 1 bytes @ 0x4
   736   000064                     	ds	1
   737   000065                     read_prec_or_width@c:
   738                           	callstack 0
   739   000065                     displayDigits@i:
   740                           	callstack 0
   741   000065                     EUSART_TransmitString@i:
   742                           	callstack 0
   743   000065                     ___lwdiv@quotient:
   744                           	callstack 0
   745   000065                     ??_EEPROMWrite:
   746                           
   747                           ; 1 bytes @ 0x5
   748   000065                     	ds	1
   749   000066                     memcpy@tmp:
   750                           	callstack 0
   751   000066                     read_prec_or_width@n:
   752                           	callstack 0
   753   000066                     
   754                           ; 1 bytes @ 0x6
   755   000066                     	ds	1
   756   000067                     memcpy@d:
   757                           	callstack 0
   758   000067                     
   759                           ; 1 bytes @ 0x7
   760   000067                     	ds	1
   761   000068                     ___xxtofl@sign:
   762                           	callstack 0
   763   000068                     ___fpclassifyf@e:
   764                           	callstack 0
   765   000068                     ??___fladd:
   766   000068                     ??___fldiv:
   767   000068                     ??___fleq:
   768                           
   769                           ; 1 bytes @ 0x8
   770   000068                     	ds	1
   771   000069                     ___xxtofl@exp:
   772                           	callstack 0
   773   000069                     memcpy@s:
   774                           	callstack 0
   775   000069                     fputs@s:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x9
   779   000069                     	ds	1
   780   00006A                     ___xxtofl@arg:
   781                           	callstack 0
   782   00006A                     ___fpclassifyf@u:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0xA
   786   00006A                     	ds	1
   787   00006B                     fputs@fp:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0xB
   791   00006B                     	ds	1
   792   00006C                     ___fladd@signs:
   793                           	callstack 0
   794   00006C                     ___fldiv@rem:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0xC
   798   00006C                     	ds	1
   799   00006D                     ___fladd@aexp:
   800                           	callstack 0
   801   00006D                     fputs@c:
   802                           	callstack 0
   803   00006D                     
   804                           ; 1 bytes @ 0xD
   805   00006D                     	ds	1
   806   00006E                     ?___flmul:
   807                           	callstack 0
   808   00006E                     ___fladd@bexp:
   809                           	callstack 0
   810   00006E                     fputs@i:
   811                           	callstack 0
   812   00006E                     ___flmul@b:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0xE
   816   00006E                     	ds	1
   817   00006F                     ___fladd@grs:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0xF
   821   00006F                     	ds	1
   822   000070                     ___fldiv@sign:
   823                           	callstack 0
   824   000070                     pad@fp:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x10
   828   000070                     	ds	1
   829   000071                     ___fldiv@new_exp:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x11
   833   000071                     	ds	1
   834   000072                     pad@buf:
   835                           	callstack 0
   836   000072                     ___flmul@a:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x12
   840   000072                     	ds	1
   841   000073                     ___fldiv@grs:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x13
   845   000073                     	ds	1
   846   000074                     pad@p:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x14
   850   000074                     	ds	2
   851   000076                     ??___flmul:
   852   000076                     ??_pad:
   853                           
   854                           ; 1 bytes @ 0x16
   855   000076                     	ds	1
   856   000077                     ___fldiv@bexp:
   857                           	callstack 0
   858   000077                     pad@i:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x17
   862   000077                     	ds	1
   863   000078                     ___fldiv@aexp:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x18
   867   000078                     	ds	1
   868   000079                     ?_floorf:
   869                           	callstack 0
   870   000079                     floorf@x:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x19
   874   000079                     	ds	1
   875   00007A                     ___flmul@sign:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x1A
   879   00007A                     	ds	1
   880   00007B                     ___flmul@aexp:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x1B
   884   00007B                     	ds	1
   885   00007C                     ___flmul@bexp:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x1C
   889   00007C                     	ds	1
   890   00007D                     ___flmul@grs:
   891                           	callstack 0
   892   00007D                     ??_floorf:
   893                           
   894                           ; 1 bytes @ 0x1D
   895   00007D                     	ds	4
   896   000081                     ___flmul@prod:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x21
   900   000081                     	ds	2
   901   000083                     floorf@m:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0x23
   905   000083                     	ds	2
   906   000085                     ___flmul@temp:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x25
   910   000085                     	ds	2
   911   000087                     ?___flsub:
   912                           	callstack 0
   913   000087                     ?___fltol:
   914                           	callstack 0
   915   000087                     floorf@e:
   916                           	callstack 0
   917   000087                     ___flge@ff1:
   918                           	callstack 0
   919   000087                     ___fltol@f1:
   920                           	callstack 0
   921   000087                     ___flsub@b:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x27
   925   000087                     	ds	2
   926   000089                     floorf@u:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x29
   930   000089                     	ds	2
   931   00008B                     ___flge@ff2:
   932                           	callstack 0
   933   00008B                     ___flsub@a:
   934                           	callstack 0
   935   00008B                     ??___fltol:
   936                           
   937                           ; 1 bytes @ 0x2B
   938   00008B                     	ds	4
   939   00008F                     ___fltol@sign1:
   940                           	callstack 0
   941   00008F                     ??___flge:
   942                           
   943                           ; 1 bytes @ 0x2F
   944   00008F                     	ds	1
   945   000090                     ___fltol@exp1:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x30
   949   000090                     	ds	1
   950   000091                     
   951                           ; 1 bytes @ 0x31
   952   000091                     	ds	2
   953   000093                     efgtoa@fp:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x33
   957   000093                     	ds	2
   958   000095                     efgtoa@f:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0x35
   962   000095                     	ds	4
   963   000099                     efgtoa@c:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x39
   967   000099                     	ds	1
   968   00009A                     ??_efgtoa:
   969                           
   970                           ; 1 bytes @ 0x3A
   971   00009A                     	ds	2
   972   00009C                     efgtoa@ne:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x3C
   976   00009C                     	ds	2
   977   00009E                     efgtoa@p:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x3E
   981   00009E                     	ds	2
   982   0000A0                     efgtoa@t:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x40
   986   0000A0                     	ds	2
   987   0000A2                     _efgtoa$1751:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x42
   991   0000A2                     	ds	2
   992   0000A4                     efgtoa@pp:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x44
   996   0000A4                     	ds	1
   997   0000A5                     efgtoa@mode:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x45
  1001   0000A5                     	ds	1
  1002   0000A6                     efgtoa@nmode:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x46
  1006   0000A6                     	ds	1
  1007   0000A7                     efgtoa@d:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x47
  1011   0000A7                     	ds	2
  1012   0000A9                     efgtoa@m:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x49
  1016   0000A9                     	ds	2
  1017   0000AB                     efgtoa@e:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x4B
  1021   0000AB                     	ds	2
  1022   0000AD                     efgtoa@w:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x4D
  1026   0000AD                     	ds	2
  1027   0000AF                     efgtoa@ou:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x4F
  1031   0000AF                     	ds	4
  1032   0000B3                     efgtoa@i:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x53
  1036   0000B3                     	ds	2
  1037   0000B5                     efgtoa@h:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x55
  1041   0000B5                     	ds	4
  1042   0000B9                     efgtoa@l:
  1043                           	callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x59
  1046   0000B9                     	ds	4
  1047   0000BD                     efgtoa@sign:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x5D
  1051   0000BD                     	ds	1
  1052   0000BE                     efgtoa@g:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x5E
  1056   0000BE                     	ds	4
  1057   0000C2                     efgtoa@n:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x62
  1061   0000C2                     	ds	2
  1062   0000C4                     efgtoa@u:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0x64
  1066   0000C4                     	ds	4
  1067   0000C8                     vfpfcnvrt@fp:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x68
  1071   0000C8                     	ds	2
  1072   0000CA                     vfpfcnvrt@fmt:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x6A
  1076   0000CA                     	ds	1
  1077   0000CB                     vfpfcnvrt@ap:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x6B
  1081   0000CB                     	ds	2
  1082   0000CD                     ??_vfpfcnvrt:
  1083                           
  1084                           ; 1 bytes @ 0x6D
  1085   0000CD                     	ds	1
  1086   0000CE                     vfpfcnvrt@convarg:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x6E
  1090   0000CE                     	ds	4
  1091   0000D2                     vfpfcnvrt@c:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x72
  1095   0000D2                     	ds	1
  1096   0000D3                     vfpfcnvrt@cp:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x73
  1100   0000D3                     	ds	1
  1101   0000D4                     ?_vfprintf:
  1102                           	callstack 0
  1103   0000D4                     vfprintf@fp:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x74
  1107   0000D4                     	ds	2
  1108   0000D6                     vfprintf@fmt:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x76
  1112   0000D6                     	ds	1
  1113   0000D7                     vfprintf@ap:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x77
  1117   0000D7                     	ds	2
  1118   0000D9                     vfprintf@cfmt:
  1119                           	callstack 0
  1120   0000D9                     
  1121                           ; 1 bytes @ 0x79
  1122   0000D9                     	ds	1
  1123   0000DA                     ?_sprintf:
  1124                           	callstack 0
  1125   0000DA                     sprintf@s:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x7A
  1129   0000DA                     	ds	1
  1130   0000DB                     sprintf@fmt:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x7B
  1134   0000DB                     	ds	5
  1135   0000E0                     ??_main:
  1136                           
  1137                           ; 1 bytes @ 0x80
  1138   0000E0                     	ds	2
  1139                           
  1140                           	psect	cstackCOMRAM
  1141   000001                     __pcstackCOMRAM:
  1142                           	callstack 0
  1143   000001                     ?i2___lwdiv:
  1144                           	callstack 0
  1145   000001                     ?i2___lwmod:
  1146                           	callstack 0
  1147   000001                     ?i2___flmul:
  1148                           	callstack 0
  1149   000001                     i2get7SegmentPattern@digit:
  1150                           	callstack 0
  1151   000001                     i2displayDigits@digit1:
  1152                           	callstack 0
  1153   000001                     i2EUSART_TransmitChar@data:
  1154                           	callstack 0
  1155   000001                     i2___lwdiv@dividend:
  1156                           	callstack 0
  1157   000001                     i2___lwmod@dividend:
  1158                           	callstack 0
  1159   000001                     i2___flmul@b:
  1160                           	callstack 0
  1161   000001                     ??i2_adcSampling:
  1162   000001                     
  1163                           ; 1 bytes @ 0x0
  1164   000001                     	ds	1
  1165   000002                     i2get7SegmentPattern@pattern:
  1166                           	callstack 0
  1167   000002                     i2displayDigits@digit2:
  1168                           	callstack 0
  1169   000002                     i2EUSART_TransmitString@a:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x1
  1173   000002                     	ds	1
  1174   000003                     i2___lwdiv@divisor:
  1175                           	callstack 0
  1176   000003                     i2___lwmod@divisor:
  1177                           	callstack 0
  1178   000003                     ??i2_displayDigits:
  1179                           
  1180                           ; 1 bytes @ 0x2
  1181   000003                     	ds	1
  1182   000004                     ??i2_EUSART_TransmitString:
  1183                           
  1184                           ; 1 bytes @ 0x3
  1185   000004                     	ds	1
  1186   000005                     i2displayDigits@digit0:
  1187                           	callstack 0
  1188   000005                     i2___lwmod@counter:
  1189                           	callstack 0
  1190   000005                     i2___lwdiv@quotient:
  1191                           	callstack 0
  1192   000005                     i2___flmul@a:
  1193                           	callstack 0
  1194   000005                     
  1195                           ; 1 bytes @ 0x4
  1196   000005                     	ds	1
  1197   000006                     i2displayDigits@i:
  1198                           	callstack 0
  1199   000006                     i2EUSART_TransmitString@i:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x5
  1203   000006                     	ds	1
  1204   000007                     i2___lwdiv@counter:
  1205                           	callstack 0
  1206                           
  1207                           ; 1 bytes @ 0x6
  1208   000007                     	ds	1
  1209   000008                     
  1210                           ; 1 bytes @ 0x7
  1211   000008                     	ds	1
  1212   000009                     ??i2___flmul:
  1213                           
  1214                           ; 1 bytes @ 0x8
  1215   000009                     	ds	4
  1216   00000D                     i2___flmul@sign:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0xC
  1220   00000D                     	ds	1
  1221   00000E                     i2___flmul@grs:
  1222                           	callstack 0
  1223                           
  1224                           ; 4 bytes @ 0xD
  1225   00000E                     	ds	4
  1226   000012                     i2___flmul@aexp:
  1227                           	callstack 0
  1228                           
  1229                           ; 1 bytes @ 0x11
  1230   000012                     	ds	1
  1231   000013                     i2___flmul@bexp:
  1232                           	callstack 0
  1233                           
  1234                           ; 1 bytes @ 0x12
  1235   000013                     	ds	1
  1236   000014                     i2___flmul@prod:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x13
  1240   000014                     	ds	4
  1241   000018                     i2___flmul@temp:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x17
  1245   000018                     	ds	2
  1246   00001A                     ?i2___fltol:
  1247                           	callstack 0
  1248   00001A                     i2___fltol@f1:
  1249                           	callstack 0
  1250                           
  1251                           ; 4 bytes @ 0x19
  1252   00001A                     	ds	4
  1253   00001E                     ??i2___fltol:
  1254                           
  1255                           ; 1 bytes @ 0x1D
  1256   00001E                     	ds	4
  1257   000022                     i2___fltol@sign1:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x21
  1261   000022                     	ds	1
  1262   000023                     i2___fltol@exp1:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x22
  1266   000023                     	ds	1
  1267   000024                     ??_ISR:
  1268   000024                     
  1269                           ; 1 bytes @ 0x23
  1270   000024                     	ds	8
  1271                           
  1272 ;;
  1273 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1274 ;;
  1275 ;; *************** function _main *****************
  1276 ;; Defined at:
  1277 ;;		line 295 in file "main.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1291 ;;      Params:         0       0       0       0
  1292 ;;      Locals:         0       0       2       0
  1293 ;;      Temps:          0       2       0       0
  1294 ;;      Totals:         0       2       2       0
  1295 ;;Total ram usage:        4 bytes
  1296 ;; Hardware stack levels required when called: 11
  1297 ;; This function calls:
  1298 ;;		_EEPROMRead
  1299 ;;		_EEPROMWrite
  1300 ;;		_EUSART_TransmitString
  1301 ;;		___flmul
  1302 ;;		___xxtofl
  1303 ;;		_adcSampling
  1304 ;;		_getHighByte
  1305 ;;		_getLowByte
  1306 ;;		_setButtonInterrupt
  1307 ;;		_setDisplayDigits
  1308 ;;		_setupADC
  1309 ;;		_setupEUSART
  1310 ;;		_setupI2C
  1311 ;;		_setupTimer1
  1312 ;;		_show7Segment
  1313 ;;		_sprintf
  1314 ;; This function is called by:
  1315 ;;		Startup code after reset
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text0
  1320   000BA4                     __ptext0:
  1321                           	callstack 0
  1322   000BA4                     _main:
  1323                           	callstack 20
  1324                           
  1325                           ;main.c: 298:     OSCCONbits.SCS0 = 1;
  1326                           
  1327                           ;incstack = 0
  1328   000BA4  80D3               	bsf	211,0,c	;volatile
  1329                           
  1330                           ;main.c: 299:     OSCCONbits.SCS1 = 1;
  1331   000BA6  82D3               	bsf	211,1,c	;volatile
  1332                           
  1333                           ;main.c: 301:     OSCCONbits.OSTS = 0;
  1334   000BA8  96D3               	bcf	211,3,c	;volatile
  1335                           
  1336                           ;main.c: 304:     OSCCONbits.IRCF0 = 0;
  1337   000BAA  98D3               	bcf	211,4,c	;volatile
  1338                           
  1339                           ;main.c: 305:     OSCCONbits.IRCF1 = 0;
  1340   000BAC  9AD3               	bcf	211,5,c	;volatile
  1341                           
  1342                           ;main.c: 306:     OSCCONbits.IRCF2 = 1;
  1343   000BAE  8CD3               	bsf	211,6,c	;volatile
  1344                           
  1345                           ;main.c: 308:     _delay((unsigned long)((500)*(2000000/4000.0)));
  1346   000BB0  0E02               	movlw	2
  1347   000BB2  0100               	movlb	0	; () banked
  1348   000BB4  6FE1               	movwf	(??_main+1)& (0+255),b
  1349   000BB6  0E45               	movlw	69
  1350   000BB8  6FE0               	movwf	??_main& (0+255),b
  1351   000BBA  0EA9               	movlw	169
  1352   000BBC                     u10017:
  1353   000BBC  2EE8               	decfsz	wreg,f,c
  1354   000BBE  D7FE               	bra	u10017
  1355   000BC0  2FE0               	decfsz	??_main& (0+255),f,b
  1356   000BC2  D7FC               	bra	u10017
  1357   000BC4  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1358   000BC6  D7FA               	bra	u10017
  1359   000BC8  D000               	nop2	
  1360                           
  1361                           ;main.c: 311:     ANSEL = 0b00001000;
  1362   000BCA  0E08               	movlw	8
  1363   000BCC  6E7E               	movwf	126,c	;volatile
  1364                           
  1365                           ;main.c: 312:     TRISA = 0b00010000;
  1366   000BCE  0E10               	movlw	16
  1367   000BD0  6E92               	movwf	146,c	;volatile
  1368                           
  1369                           ;main.c: 314:     TRISCbits.RC0 = 0;
  1370   000BD2  9094               	bcf	148,0,c	;volatile
  1371                           
  1372                           ;main.c: 315:     ANSELbits.ANS4 = 0;
  1373   000BD4  987E               	bcf	126,4,c	;volatile
  1374                           
  1375                           ;main.c: 317:     setupADC();
  1376   000BD6  ECFC  F018         	call	_setupADC	;wreg free
  1377                           
  1378                           ;main.c: 319:     _delay((unsigned long)((100)*(2000000/4000000.0)));
  1379   000BDA  0E10               	movlw	16
  1380   000BDC                     u10027:
  1381   000BDC  2EE8               	decfsz	wreg,f,c
  1382   000BDE  D7FE               	bra	u10027
  1383   000BE0  D000               	nop2	
  1384                           
  1385                           ;main.c: 322:     setupTimer1();
  1386   000BE2  ECCD  F018         	call	_setupTimer1	;wreg free
  1387                           
  1388                           ;main.c: 324:     setupI2C();
  1389   000BE6  ECDA  F018         	call	_setupI2C	;wreg free
  1390                           
  1391                           ;main.c: 328:     TRISCbits.TRISC5 = 0;
  1392   000BEA  9A94               	bcf	148,5,c	;volatile
  1393                           
  1394                           ;main.c: 329:     TRISCbits.TRISC4 = 0;
  1395   000BEC  9894               	bcf	148,4,c	;volatile
  1396                           
  1397                           ;main.c: 330:     TRISCbits.TRISC3 = 0;
  1398   000BEE  9694               	bcf	148,3,c	;volatile
  1399                           
  1400                           ;main.c: 331:     TRISCbits.TRISC6 = 0;
  1401   000BF0  9C94               	bcf	148,6,c	;volatile
  1402                           
  1403                           ;main.c: 332:     TRISCbits.TRISC7 = 0;
  1404   000BF2  9E94               	bcf	148,7,c	;volatile
  1405                           
  1406                           ;main.c: 334:     LATCbits.LATC5 = 0;
  1407   000BF4  9A8B               	bcf	139,5,c	;volatile
  1408                           
  1409                           ;main.c: 335:     LATCbits.LATC4 = 0;
  1410   000BF6  988B               	bcf	139,4,c	;volatile
  1411                           
  1412                           ;main.c: 336:     LATCbits.LATC3 = 0;
  1413   000BF8  968B               	bcf	139,3,c	;volatile
  1414                           
  1415                           ;main.c: 337:     LATCbits.LATC6 = 0;
  1416   000BFA  9C8B               	bcf	139,6,c	;volatile
  1417                           
  1418                           ;main.c: 338:     LATCbits.LATC7 = 0;
  1419   000BFC  9E8B               	bcf	139,7,c	;volatile
  1420                           
  1421                           ;main.c: 341:     TRISCbits.RC1 = 1;
  1422   000BFE  8294               	bsf	148,1,c	;volatile
  1423                           
  1424                           ;main.c: 342:     TRISCbits.RC2 = 1;
  1425   000C00  8494               	bsf	148,2,c	;volatile
  1426                           
  1427                           ;main.c: 343:     setButtonInterrupt();
  1428   000C02  ECE3  F018         	call	_setButtonInterrupt	;wreg free
  1429                           
  1430                           ;main.c: 346:     setupEUSART();
  1431   000C06  ECA1  F018         	call	_setupEUSART	;wreg free
  1432                           
  1433                           ;main.c: 348:     INTCONbits.PEIE = 1;
  1434   000C0A  8CF2               	bsf	242,6,c	;volatile
  1435                           
  1436                           ;main.c: 349:     INTCONbits.GIE = 1;
  1437   000C0C  8EF2               	bsf	242,7,c	;volatile
  1438                           
  1439                           ;main.c: 351:     adcSampling();
  1440   000C0E  ECB1  F018         	call	_adcSampling	;wreg free
  1441   000C12                     l7859:
  1442                           
  1443                           ;main.c: 355:         if( sampling == 1 && fsm_state == 1 ){
  1444   000C12  0100               	movlb	0	; () banked
  1445   000C14  05FE               	decf	_sampling& (0+255),w,b
  1446   000C16  A4D8               	btfss	status,2,c
  1447   000C18  D072               	goto	l7895
  1448                           
  1449                           ; BSR set to: 0
  1450   000C1A  05F9               	decf	_fsm_state& (0+255),w,b
  1451   000C1C  A4D8               	btfss	status,2,c
  1452   000C1E  D06F               	goto	l7895
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;main.c: 357:             LATAbits.LA5 = 1;
  1456   000C20  8A89               	bsf	137,5,c	;volatile
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;main.c: 359:             adc_voltage = adc_step_size * adcResult;
  1460   000C22  C0F6  F060         	movff	_adcResult,___xxtofl@val
  1461   000C26  C0F7  F061         	movff	_adcResult+1,___xxtofl@val+1
  1462   000C2A  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1463   000C2C  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1464   000C2E  0E00               	movlw	0
  1465   000C30  EC2E  F011         	call	___xxtofl
  1466   000C34  C060  F06E         	movff	?___xxtofl,___flmul@b
  1467   000C38  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1468   000C3C  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1469   000C40  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1470   000C44  0E0A               	movlw	10
  1471   000C46  0100               	movlb	0	; () banked
  1472   000C48  6F72               	movwf	___flmul@a& (0+255),b
  1473   000C4A  0E28               	movlw	40
  1474   000C4C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1475   000C4E  0EA0               	movlw	160
  1476   000C50  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1477   000C52  0E3B               	movlw	59
  1478   000C54  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1479   000C56  EC9D  F007         	call	___flmul	;wreg free
  1480   000C5A  C06E  F0EA         	movff	?___flmul,_adc_voltage
  1481   000C5E  C06F  F0EB         	movff	?___flmul+1,_adc_voltage+1
  1482   000C62  C070  F0EC         	movff	?___flmul+2,_adc_voltage+2
  1483   000C66  C071  F0ED         	movff	?___flmul+3,_adc_voltage+3
  1484                           
  1485                           ;main.c: 362:             address_index++;
  1486   000C6A  0100               	movlb	0	; () banked
  1487   000C6C  4BF2               	infsnz	_address_index& (0+255),f,b
  1488   000C6E  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;main.c: 363:             EEPROMWrite(address_index, getLowByte( adcResult) );
  1492   000C70  C0F6  F060         	movff	_adcResult,getLowByte@number
  1493   000C74  C0F7  F061         	movff	_adcResult+1,getLowByte@number+1
  1494   000C78  EC14  F019         	call	_getLowByte	;wreg free
  1495   000C7C  0101               	movlb	1	; () banked
  1496   000C7E  6F5C               	movwf	_main$2067& (0+255),b
  1497                           
  1498                           ; BSR set to: 1
  1499                           ;main.c: 363:             EEPROMWrite(address_index, getLowByte( adcResult) );
  1500   000C80  C0F2  F062         	movff	_address_index,EEPROMWrite@address
  1501   000C84  C0F3  F063         	movff	_address_index+1,EEPROMWrite@address+1
  1502   000C88  C15C  F064         	movff	_main$2067,EEPROMWrite@data
  1503   000C8C  EC91  F016         	call	_EEPROMWrite	;wreg free
  1504                           
  1505                           ;main.c: 364:             address_index++;
  1506   000C90  0100               	movlb	0	; () banked
  1507   000C92  4BF2               	infsnz	_address_index& (0+255),f,b
  1508   000C94  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;main.c: 365:             EEPROMWrite(address_index, getHighByte( adcResult) );
  1512   000C96  C0F6  F060         	movff	_adcResult,getHighByte@number
  1513   000C9A  C0F7  F061         	movff	_adcResult+1,getHighByte@number+1
  1514   000C9E  EC17  F019         	call	_getHighByte	;wreg free
  1515   000CA2  0101               	movlb	1	; () banked
  1516   000CA4  6F5D               	movwf	_main$2068& (0+255),b
  1517                           
  1518                           ; BSR set to: 1
  1519                           ;main.c: 365:             EEPROMWrite(address_index, getHighByte( adcResult) );
  1520   000CA6  C0F2  F062         	movff	_address_index,EEPROMWrite@address
  1521   000CAA  C0F3  F063         	movff	_address_index+1,EEPROMWrite@address+1
  1522   000CAE  C15D  F064         	movff	_main$2068,EEPROMWrite@data
  1523   000CB2  EC91  F016         	call	_EEPROMWrite	;wreg free
  1524                           
  1525                           ;main.c: 366:             address_index++;
  1526   000CB6  0100               	movlb	0	; () banked
  1527   000CB8  4BF2               	infsnz	_address_index& (0+255),f,b
  1528   000CBA  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;main.c: 367:             EEPROMWrite(address_index, 254 );
  1532   000CBC  C0F2  F062         	movff	_address_index,EEPROMWrite@address
  1533   000CC0  C0F3  F063         	movff	_address_index+1,EEPROMWrite@address+1
  1534   000CC4  0EFE               	movlw	254
  1535   000CC6  6F64               	movwf	EEPROMWrite@data& (0+255),b
  1536   000CC8  EC91  F016         	call	_EEPROMWrite	;wreg free
  1537                           
  1538                           ;main.c: 369:             if( address_index >= 8100 ){
  1539   000CCC  0EA4               	movlw	164
  1540   000CCE  0100               	movlb	0	; () banked
  1541   000CD0  5DF2               	subwf	_address_index& (0+255),w,b
  1542   000CD2  0E1F               	movlw	31
  1543   000CD4  59F3               	subwfb	(_address_index+1)& (0+255),w,b
  1544   000CD6  A0D8               	btfss	status,0,c
  1545   000CD8  D005               	goto	l7889
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;main.c: 374:                 fsm_state = 0;
  1549   000CDA  6BF9               	clrf	_fsm_state& (0+255),b
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;main.c: 375:                 address_index = 0;
  1553   000CDC  0E00               	movlw	0
  1554   000CDE  6FF3               	movwf	(_address_index+1)& (0+255),b
  1555   000CE0  0E00               	movlw	0
  1556   000CE2  6FF2               	movwf	_address_index& (0+255),b
  1557   000CE4                     l7889:
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;main.c: 378:             _delay((unsigned long)((1000)*(2000000/4000.0)));
  1561   000CE4  0E03               	movlw	3
  1562   000CE6  0100               	movlb	0	; () banked
  1563   000CE8  6FE1               	movwf	(??_main+1)& (0+255),b
  1564   000CEA  0E8A               	movlw	138
  1565   000CEC  6FE0               	movwf	??_main& (0+255),b
  1566   000CEE  0E55               	movlw	85
  1567   000CF0                     u10037:
  1568   000CF0  2EE8               	decfsz	wreg,f,c
  1569   000CF2  D7FE               	bra	u10037
  1570   000CF4  2FE0               	decfsz	??_main& (0+255),f,b
  1571   000CF6  D7FC               	bra	u10037
  1572   000CF8  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1573   000CFA  D7FA               	bra	u10037
  1574   000CFC  D056               	goto	L38
  1575   000CFE                     l7895:
  1576                           
  1577                           ; BSR set to: 0
  1578   000CFE  05FE               	decf	_sampling& (0+255),w,b
  1579   000D00  A4D8               	btfss	status,2,c
  1580   000D02  D057               	goto	l7915
  1581                           
  1582                           ; BSR set to: 0
  1583   000D04  0E02               	movlw	2
  1584   000D06  19F9               	xorwf	_fsm_state& (0+255),w,b
  1585   000D08  A4D8               	btfss	status,2,c
  1586   000D0A  D053               	goto	l7915
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;main.c: 384:             LATAbits.LA5 = 1;
  1590   000D0C  8A89               	bsf	137,5,c	;volatile
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;main.c: 385:             adc_voltage = adc_step_size * adcResult;
  1594   000D0E  C0F6  F060         	movff	_adcResult,___xxtofl@val
  1595   000D12  C0F7  F061         	movff	_adcResult+1,___xxtofl@val+1
  1596   000D16  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1597   000D18  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1598   000D1A  0E00               	movlw	0
  1599   000D1C  EC2E  F011         	call	___xxtofl
  1600   000D20  C060  F06E         	movff	?___xxtofl,___flmul@b
  1601   000D24  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1602   000D28  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1603   000D2C  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1604   000D30  0E0A               	movlw	10
  1605   000D32  0100               	movlb	0	; () banked
  1606   000D34  6F72               	movwf	___flmul@a& (0+255),b
  1607   000D36  0E28               	movlw	40
  1608   000D38  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1609   000D3A  0EA0               	movlw	160
  1610   000D3C  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1611   000D3E  0E3B               	movlw	59
  1612   000D40  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1613   000D42  EC9D  F007         	call	___flmul	;wreg free
  1614   000D46  C06E  F0EA         	movff	?___flmul,_adc_voltage
  1615   000D4A  C06F  F0EB         	movff	?___flmul+1,_adc_voltage+1
  1616   000D4E  C070  F0EC         	movff	?___flmul+2,_adc_voltage+2
  1617   000D52  C071  F0ED         	movff	?___flmul+3,_adc_voltage+3
  1618                           
  1619                           ;main.c: 389:             sprintf(uart_buffer, "%.2f", adc_voltage);
  1620   000D56  0E40               	movlw	low _uart_buffer
  1621   000D58  0100               	movlb	0	; () banked
  1622   000D5A  6FDA               	movwf	sprintf@s& (0+255),b
  1623   000D5C  0E11               	movlw	low STR_2
  1624   000D5E  6FDB               	movwf	sprintf@fmt& (0+255),b
  1625   000D60  C0EA  F0DC         	movff	_adc_voltage,?_sprintf+2
  1626   000D64  C0EB  F0DD         	movff	_adc_voltage+1,?_sprintf+3
  1627   000D68  C0EC  F0DE         	movff	_adc_voltage+2,?_sprintf+4
  1628   000D6C  C0ED  F0DF         	movff	_adc_voltage+3,?_sprintf+5
  1629   000D70  EC78  F017         	call	_sprintf	;wreg free
  1630                           
  1631                           ;main.c: 391:             EUSART_TransmitString(uart_buffer);
  1632   000D74  0E40               	movlw	low _uart_buffer
  1633   000D76  0100               	movlb	0	; () banked
  1634   000D78  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1635   000D7A  6B62               	clrf	(EUSART_TransmitString@a+1)& (0+255),b
  1636   000D7C  EC9B  F015         	call	_EUSART_TransmitString	;wreg free
  1637                           
  1638                           ;main.c: 392:             EUSART_TransmitString("\r\n");
  1639   000D80  0E0E               	movlw	low (STR_5+4)
  1640   000D82  0100               	movlb	0	; () banked
  1641   000D84  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1642   000D86  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1643   000D88  A4D8               	btfss	status,2,c
  1644   000D8A  0E03               	movlw	high __smallconst
  1645   000D8C  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1646   000D8E  EC9B  F015         	call	_EUSART_TransmitString	;wreg free
  1647                           
  1648                           ;main.c: 394:             _delay((unsigned long)((1000)*(2000000/4000.0)));
  1649   000D92  0E03               	movlw	3
  1650   000D94  0100               	movlb	0	; () banked
  1651   000D96  6FE1               	movwf	(??_main+1)& (0+255),b
  1652   000D98  0E8A               	movlw	138
  1653   000D9A  6FE0               	movwf	??_main& (0+255),b
  1654   000D9C  0E55               	movlw	85
  1655   000D9E                     u10047:
  1656   000D9E  2EE8               	decfsz	wreg,f,c
  1657   000DA0  D7FE               	bra	u10047
  1658   000DA2  2FE0               	decfsz	??_main& (0+255),f,b
  1659   000DA4  D7FC               	bra	u10047
  1660   000DA6  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1661   000DA8  D7FA               	bra	u10047
  1662   000DAA                     L38:
  1663   000DAA  D000               	nop2	
  1664                           
  1665                           ;main.c: 396:             sampling = 0;
  1666   000DAC  0100               	movlb	0	; () banked
  1667   000DAE  6BFE               	clrf	_sampling& (0+255),b
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;main.c: 397:             LATAbits.LA5 = 0;
  1671   000DB0  9A89               	bcf	137,5,c	;volatile
  1672   000DB2                     l7915:
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;main.c: 401:         if( fsm_state == 3 ){
  1676   000DB2  0E03               	movlw	3
  1677   000DB4  19F9               	xorwf	_fsm_state& (0+255),w,b
  1678   000DB6  A4D8               	btfss	status,2,c
  1679   000DB8  D094               	goto	l7955
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;main.c: 403:             LATAbits.LA5 = 1;
  1683   000DBA  8A89               	bsf	137,5,c	;volatile
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;main.c: 405:             if( address_index == 0){
  1687   000DBC  51F2               	movf	_address_index& (0+255),w,b
  1688   000DBE  11F3               	iorwf	(_address_index+1)& (0+255),w,b
  1689   000DC0  A4D8               	btfss	status,2,c
  1690   000DC2  D00C               	goto	l7925
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;main.c: 406:                 EUSART_TransmitString("START \r\n");
  1694   000DC4  0E01               	movlw	low STR_1
  1695   000DC6  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1696   000DC8  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1697   000DCA  A4D8               	btfss	status,2,c
  1698   000DCC  0E03               	movlw	high __smallconst
  1699   000DCE  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1700   000DD0  EC9B  F015         	call	_EUSART_TransmitString	;wreg free
  1701                           
  1702                           ;main.c: 407:                 address_index++;
  1703   000DD4  0100               	movlb	0	; () banked
  1704   000DD6  4BF2               	infsnz	_address_index& (0+255),f,b
  1705   000DD8  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1706                           
  1707                           ;main.c: 409:             }else if(address_index >= 7200 ){
  1708   000DDA  D087               	goto	l7959
  1709   000DDC                     l7925:
  1710                           
  1711                           ; BSR set to: 0
  1712   000DDC  0E20               	movlw	32
  1713   000DDE  5DF2               	subwf	_address_index& (0+255),w,b
  1714   000DE0  0E1C               	movlw	28
  1715   000DE2  59F3               	subwfb	(_address_index+1)& (0+255),w,b
  1716   000DE4  A0D8               	btfss	status,0,c
  1717   000DE6  D00D               	goto	l7931
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;main.c: 410:                 EUSART_TransmitString("END \r\n");
  1721   000DE8  0E0A               	movlw	low STR_5
  1722   000DEA  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1723   000DEC  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1724   000DEE  A4D8               	btfss	status,2,c
  1725   000DF0  0E03               	movlw	high __smallconst
  1726   000DF2  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1727   000DF4  EC9B  F015         	call	_EUSART_TransmitString	;wreg free
  1728                           
  1729                           ;main.c: 411:                 address_index = 0;
  1730   000DF8  0E00               	movlw	0
  1731   000DFA  0100               	movlb	0	; () banked
  1732   000DFC  6FF3               	movwf	(_address_index+1)& (0+255),b
  1733   000DFE  0E00               	movlw	0
  1734   000E00  D06E               	goto	L1
  1735   000E02                     l7931:
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;main.c: 414:                 eeprom_data_lsb = EEPROMRead(address_index);
  1739   000E02  C0F2  F062         	movff	_address_index,EEPROMRead@address
  1740   000E06  C0F3  F063         	movff	_address_index+1,EEPROMRead@address+1
  1741   000E0A  ECE3  F016         	call	_EEPROMRead	;wreg free
  1742   000E0E  0100               	movlb	0	; () banked
  1743   000E10  6FFD               	movwf	_eeprom_data_lsb& (0+255),b
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;main.c: 415:                 address_index++;
  1747   000E12  4BF2               	infsnz	_address_index& (0+255),f,b
  1748   000E14  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;main.c: 416:                 eeprom_data_msb = EEPROMRead(address_index);
  1752   000E16  C0F2  F062         	movff	_address_index,EEPROMRead@address
  1753   000E1A  C0F3  F063         	movff	_address_index+1,EEPROMRead@address+1
  1754   000E1E  ECE3  F016         	call	_EEPROMRead	;wreg free
  1755   000E22  0100               	movlb	0	; () banked
  1756   000E24  6FFC               	movwf	_eeprom_data_msb& (0+255),b
  1757                           
  1758                           ;main.c: 417:                 address_index++;
  1759   000E26  4BF2               	infsnz	_address_index& (0+255),f,b
  1760   000E28  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;main.c: 418:                 eeprom_data_ctl = EEPROMRead(address_index);
  1764   000E2A  C0F2  F062         	movff	_address_index,EEPROMRead@address
  1765   000E2E  C0F3  F063         	movff	_address_index+1,EEPROMRead@address+1
  1766   000E32  ECE3  F016         	call	_EEPROMRead	;wreg free
  1767   000E36  0100               	movlb	0	; () banked
  1768   000E38  6FFB               	movwf	_eeprom_data_ctl& (0+255),b
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;main.c: 419:                 address_index++;
  1772   000E3A  4BF2               	infsnz	_address_index& (0+255),f,b
  1773   000E3C  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;main.c: 421:                 if( eeprom_data_ctl == 254 ){
  1777   000E3E  0EFE               	movlw	254
  1778   000E40  19FB               	xorwf	_eeprom_data_ctl& (0+255),w,b
  1779   000E42  A4D8               	btfss	status,2,c
  1780   000E44  D049               	goto	l7953
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;main.c: 424:                     eeprom_data = ((uint16_t) eeprom_data_msb << 8) | eepr
      +                          om_data_lsb;
  1784   000E46  51FC               	movf	_eeprom_data_msb& (0+255),w,b
  1785   000E48  6FE0               	movwf	??_main& (0+255),b
  1786   000E4A  51FD               	movf	_eeprom_data_lsb& (0+255),w,b
  1787   000E4C  6FF4               	movwf	_eeprom_data& (0+255),b
  1788   000E4E  C0E0  F0F5         	movff	??_main,_eeprom_data+1
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;main.c: 426:                     adc_voltage = adc_step_size * eeprom_data;
  1792   000E52  C0F4  F060         	movff	_eeprom_data,___xxtofl@val
  1793   000E56  C0F5  F061         	movff	_eeprom_data+1,___xxtofl@val+1
  1794   000E5A  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1795   000E5C  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1796   000E5E  0E00               	movlw	0
  1797   000E60  EC2E  F011         	call	___xxtofl
  1798   000E64  C060  F06E         	movff	?___xxtofl,___flmul@b
  1799   000E68  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1800   000E6C  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1801   000E70  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1802   000E74  0E0A               	movlw	10
  1803   000E76  0100               	movlb	0	; () banked
  1804   000E78  6F72               	movwf	___flmul@a& (0+255),b
  1805   000E7A  0E28               	movlw	40
  1806   000E7C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1807   000E7E  0EA0               	movlw	160
  1808   000E80  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1809   000E82  0E3B               	movlw	59
  1810   000E84  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1811   000E86  EC9D  F007         	call	___flmul	;wreg free
  1812   000E8A  C06E  F0EA         	movff	?___flmul,_adc_voltage
  1813   000E8E  C06F  F0EB         	movff	?___flmul+1,_adc_voltage+1
  1814   000E92  C070  F0EC         	movff	?___flmul+2,_adc_voltage+2
  1815   000E96  C071  F0ED         	movff	?___flmul+3,_adc_voltage+3
  1816                           
  1817                           ;main.c: 429:                     sprintf(uart_buffer, "%.2f", adc_voltage);
  1818   000E9A  0E40               	movlw	low _uart_buffer
  1819   000E9C  0100               	movlb	0	; () banked
  1820   000E9E  6FDA               	movwf	sprintf@s& (0+255),b
  1821   000EA0  0E11               	movlw	low STR_2
  1822   000EA2  6FDB               	movwf	sprintf@fmt& (0+255),b
  1823   000EA4  C0EA  F0DC         	movff	_adc_voltage,?_sprintf+2
  1824   000EA8  C0EB  F0DD         	movff	_adc_voltage+1,?_sprintf+3
  1825   000EAC  C0EC  F0DE         	movff	_adc_voltage+2,?_sprintf+4
  1826   000EB0  C0ED  F0DF         	movff	_adc_voltage+3,?_sprintf+5
  1827   000EB4  EC78  F017         	call	_sprintf	;wreg free
  1828                           
  1829                           ;main.c: 431:                     EUSART_TransmitString(uart_buffer);
  1830   000EB8  0E40               	movlw	low _uart_buffer
  1831   000EBA  0100               	movlb	0	; () banked
  1832   000EBC  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1833   000EBE  6B62               	clrf	(EUSART_TransmitString@a+1)& (0+255),b
  1834   000EC0  EC9B  F015         	call	_EUSART_TransmitString	;wreg free
  1835                           
  1836                           ;main.c: 432:                     EUSART_TransmitString("\r\n");
  1837   000EC4  0E0E               	movlw	low (STR_5+4)
  1838   000EC6  0100               	movlb	0	; () banked
  1839   000EC8  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1840   000ECA  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1841   000ECC  A4D8               	btfss	status,2,c
  1842   000ECE  0E03               	movlw	high __smallconst
  1843   000ED0  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1844   000ED2  EC9B  F015         	call	_EUSART_TransmitString	;wreg free
  1845                           
  1846                           ;main.c: 433:                 }else{
  1847   000ED6  D009               	goto	l7959
  1848   000ED8                     l7953:
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;main.c: 434:                     address_index = 7200;
  1852   000ED8  0E1C               	movlw	28
  1853   000EDA  6FF3               	movwf	(_address_index+1)& (0+255),b
  1854   000EDC  0E20               	movlw	32
  1855   000EDE                     L1:
  1856   000EDE  6FF2               	movwf	_address_index& (0+255),b
  1857   000EE0  D004               	goto	l7959
  1858   000EE2                     l7955:
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;main.c: 439:             if( fsm_state < 7){
  1862   000EE2  0E07               	movlw	7
  1863   000EE4  61F9               	cpfslt	_fsm_state& (0+255),b
  1864   000EE6  D001               	goto	l7959
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;main.c: 440:                 LATAbits.LA5 = 0;
  1868   000EE8  9A89               	bcf	137,5,c	;volatile
  1869   000EEA                     l7959:
  1870                           
  1871                           ;main.c: 444:         if( turnOnDisplay == 1 ){
  1872   000EEA  0100               	movlb	0	; () banked
  1873   000EEC  05FA               	decf	_turnOnDisplay& (0+255),w,b
  1874   000EEE  A4D8               	btfss	status,2,c
  1875   000EF0  D015               	goto	l219
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;main.c: 446:             PORTCbits.RC0 = 0;
  1879   000EF2  9082               	bcf	130,0,c	;volatile
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;main.c: 448:             setDisplayDigits();
  1883   000EF4  ECB5  F00D         	call	_setDisplayDigits	;wreg free
  1884                           
  1885                           ;main.c: 449:             show7Segment();
  1886   000EF8  EC9A  F017         	call	_show7Segment	;wreg free
  1887                           
  1888                           ;main.c: 451:             _delay((unsigned long)((10000)*(2000000/4000.0)));
  1889   000EFC  0E1A               	movlw	26
  1890   000EFE  0100               	movlb	0	; () banked
  1891   000F00  6FE1               	movwf	(??_main+1)& (0+255),b
  1892   000F02  0E5E               	movlw	94
  1893   000F04  6FE0               	movwf	??_main& (0+255),b
  1894   000F06  0E6E               	movlw	110
  1895   000F08                     u10057:
  1896   000F08  2EE8               	decfsz	wreg,f,c
  1897   000F0A  D7FE               	bra	u10057
  1898   000F0C  2FE0               	decfsz	??_main& (0+255),f,b
  1899   000F0E  D7FC               	bra	u10057
  1900   000F10  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1901   000F12  D7FA               	bra	u10057
  1902   000F14  0000               	nop	
  1903                           
  1904                           ;main.c: 453:             turnOnDisplay = 0;
  1905   000F16  0100               	movlb	0	; () banked
  1906   000F18  6BFA               	clrf	_turnOnDisplay& (0+255),b
  1907                           
  1908                           ;main.c: 455:         }else{
  1909   000F1A  D67B               	goto	l7859
  1910   000F1C                     l219:
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;main.c: 457:             PORTCbits.RC0 = 1;
  1914   000F1C  8082               	bsf	130,0,c	;volatile
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;main.c: 459:              _delay((unsigned long)((1000)*(2000000/4000.0)));
  1918   000F1E  0E03               	movlw	3
  1919   000F20  0100               	movlb	0	; () banked
  1920   000F22  6FE1               	movwf	(??_main+1)& (0+255),b
  1921   000F24  0E8A               	movlw	138
  1922   000F26  6FE0               	movwf	??_main& (0+255),b
  1923   000F28  0E55               	movlw	85
  1924   000F2A                     u10067:
  1925   000F2A  2EE8               	decfsz	wreg,f,c
  1926   000F2C  D7FE               	bra	u10067
  1927   000F2E  2FE0               	decfsz	??_main& (0+255),f,b
  1928   000F30  D7FC               	bra	u10067
  1929   000F32  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1930   000F34  D7FA               	bra	u10067
  1931   000F36  D000               	nop2	
  1932   000F38  D66C               	goto	l7859
  1933   000F3A                     __end_of_main:
  1934                           	callstack 0
  1935                           
  1936 ;; *************** function _sprintf *****************
  1937 ;; Defined at:
  1938 ;;		line 9 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_sprintf.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  s               1  122[BANK0 ] PTR unsigned char 
  1941 ;;		 -> uart_buffer(10), 
  1942 ;;  fmt             1  123[BANK0 ] PTR const unsigned char 
  1943 ;;		 -> STR_6(5), STR_2(5), 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  f              11    1[BANK1 ] struct _IO_FILE
  1946 ;;  ret             2    0        int 
  1947 ;;  ap              1    0[BANK1 ] PTR void [1]
  1948 ;;		 -> ?_sprintf(2), 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  2  122[BANK0 ] int 
  1951 ;; Registers used:
  1952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1958 ;;      Params:         0       6       0       0
  1959 ;;      Locals:         0       0      12       0
  1960 ;;      Temps:          0       0       0       0
  1961 ;;      Totals:         0       6      12       0
  1962 ;;Total ram usage:       18 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 10
  1965 ;; This function calls:
  1966 ;;		_vfprintf
  1967 ;; This function is called by:
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text1
  1973   002EF0                     __ptext1:
  1974                           	callstack 0
  1975   002EF0                     _sprintf:
  1976                           	callstack 20
  1977                           
  1978                           ;incstack = 0
  1979   002EF0  0EDC               	movlw	low (?_sprintf+2)
  1980   002EF2  0101               	movlb	1	; () banked
  1981   002EF4  6F50               	movwf	sprintf@ap& (0+255),b
  1982   002EF6  C0DA  F151         	movff	sprintf@s,sprintf@f
  1983                           
  1984                           ; BSR set to: 1
  1985   002EFA  0E00               	movlw	0
  1986   002EFC  6F54               	movwf	(sprintf@f+3)& (0+255),b
  1987   002EFE  0E00               	movlw	0
  1988   002F00  6F53               	movwf	(sprintf@f+2)& (0+255),b
  1989                           
  1990                           ; BSR set to: 1
  1991   002F02  0E00               	movlw	0
  1992   002F04  6F5B               	movwf	(sprintf@f+10)& (0+255),b
  1993   002F06  0E00               	movlw	0
  1994   002F08  6F5A               	movwf	(sprintf@f+9)& (0+255),b
  1995                           
  1996                           ; BSR set to: 1
  1997   002F0A  0E51               	movlw	low sprintf@f
  1998   002F0C  0100               	movlb	0	; () banked
  1999   002F0E  6FD4               	movwf	vfprintf@fp& (0+255),b
  2000   002F10  0E01               	movlw	high sprintf@f
  2001   002F12  6FD5               	movwf	(vfprintf@fp+1)& (0+255),b
  2002   002F14  C0DB  F0D6         	movff	sprintf@fmt,vfprintf@fmt
  2003   002F18  0E50               	movlw	low sprintf@ap
  2004   002F1A  6FD7               	movwf	vfprintf@ap& (0+255),b
  2005   002F1C  0E01               	movlw	high sprintf@ap
  2006   002F1E  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  2007   002F20  EC21  F018         	call	_vfprintf	;wreg free
  2008   002F24  0100               	movlb	0	; () banked
  2009   002F26  51DA               	movf	sprintf@s& (0+255),w,b
  2010   002F28  0101               	movlb	1	; () banked
  2011   002F2A  2553               	addwf	(sprintf@f+2)& (0+255),w,b
  2012   002F2C  6ED9               	movwf	fsr2l,c
  2013   002F2E  6ADA               	clrf	fsr2h,c
  2014   002F30  6ADF               	clrf	indf2,c
  2015                           
  2016                           ; BSR set to: 1
  2017   002F32  0012               	return		;funcret
  2018   002F34                     __end_of_sprintf:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _vfprintf *****************
  2022 ;; Defined at:
  2023 ;;		line 1817 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  fp              2  116[BANK0 ] PTR struct _IO_FILE
  2026 ;;		 -> sprintf@f(11), 
  2027 ;;  fmt             1  118[BANK0 ] PTR const unsigned char 
  2028 ;;		 -> STR_6(5), STR_2(5), 
  2029 ;;  ap              2  119[BANK0 ] PTR PTR void 
  2030 ;;		 -> sprintf@ap(1), 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  cfmt            1  121[BANK0 ] PTR unsigned char 
  2033 ;;		 -> STR_6(5), STR_2(5), 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  2  116[BANK0 ] int 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2043 ;;      Params:         0       5       0       0
  2044 ;;      Locals:         0       1       0       0
  2045 ;;      Temps:          0       0       0       0
  2046 ;;      Totals:         0       6       0       0
  2047 ;;Total ram usage:        6 bytes
  2048 ;; Hardware stack levels used: 1
  2049 ;; Hardware stack levels required when called: 9
  2050 ;; This function calls:
  2051 ;;		_vfpfcnvrt
  2052 ;; This function is called by:
  2053 ;;		_sprintf
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           	psect	text2
  2058   003042                     __ptext2:
  2059                           	callstack 0
  2060   003042                     _vfprintf:
  2061                           	callstack 20
  2062                           
  2063                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
  2064                           
  2065                           ; BSR set to: 1
  2066                           ;incstack = 0
  2067   003042  C0D6  F0D9         	movff	vfprintf@fmt,vfprintf@cfmt
  2068                           
  2069                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  2070   003046  D00D               	goto	l7583
  2071   003048                     l7581:
  2072                           
  2073                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt,
      +                           ap);
  2074   003048  C0D4  F0C8         	movff	vfprintf@fp,vfpfcnvrt@fp
  2075   00304C  C0D5  F0C9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2076   003050  0ED9               	movlw	low vfprintf@cfmt
  2077   003052  0100               	movlb	0	; () banked
  2078   003054  6FCA               	movwf	vfpfcnvrt@fmt& (0+255),b
  2079   003056  C0D7  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  2080   00305A  C0D8  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2081   00305E  EC77  F010         	call	_vfpfcnvrt	;wreg free
  2082   003062                     l7583:
  2083                           
  2084                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  2085   003062  C0D9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2086   003066                     	if	1	;There is more than 1 active tblptr byte
  2087   003066  0E03               	movlw	high __smallconst
  2088   003068  6EF7               	movwf	tblptrh,c
  2089   00306A                     	endif
  2090   00306A                     	if	0	;tblptru may be non-zero
  2091   00306A                     	endif
  2092   00306A                     	if	0	;tblptru may be non-zero
  2093   00306A                     	endif
  2094   00306A  0008               	tblrd		*
  2095   00306C  50F5               	movf	tablat,w,c
  2096   00306E  0900               	iorlw	0
  2097   003070  A4D8               	btfss	status,2,c
  2098   003072  D7EA               	goto	l7581
  2099                           
  2100                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  2101   003074  0E00               	movlw	0
  2102   003076  0100               	movlb	0	; () banked
  2103   003078  6FD5               	movwf	(?_vfprintf+1)& (0+255),b
  2104   00307A  0E00               	movlw	0
  2105   00307C  6FD4               	movwf	?_vfprintf& (0+255),b
  2106                           
  2107                           ; BSR set to: 0
  2108   00307E  0012               	return		;funcret
  2109   003080                     __end_of_vfprintf:
  2110                           	callstack 0
  2111                           
  2112 ;; *************** function _vfpfcnvrt *****************
  2113 ;; Defined at:
  2114 ;;		line 1177 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  fp              2  104[BANK0 ] PTR struct _IO_FILE
  2117 ;;		 -> sprintf@f(11), 
  2118 ;;  fmt             1  106[BANK0 ] PTR PTR unsigned char 
  2119 ;;		 -> vfprintf@cfmt(1), 
  2120 ;;  ap              2  107[BANK0 ] PTR PTR void 
  2121 ;;		 -> sprintf@ap(1), 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  convarg         4  110[BANK0 ] struct .
  2124 ;;  cp              1  115[BANK0 ] PTR unsigned char 
  2125 ;;		 -> STR_6(5), STR_2(5), 
  2126 ;;  c               1  114[BANK0 ] unsigned char 
  2127 ;;  done            1    0        _Bool 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2137 ;;      Params:         0       5       0       0
  2138 ;;      Locals:         0       6       0       0
  2139 ;;      Temps:          0       1       0       0
  2140 ;;      Totals:         0      12       0       0
  2141 ;;Total ram usage:       12 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 8
  2144 ;; This function calls:
  2145 ;;		_efgtoa
  2146 ;;		_fputc
  2147 ;;		_read_prec_or_width
  2148 ;; This function is called by:
  2149 ;;		_vfprintf
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text3
  2154   0020EE                     __ptext3:
  2155                           	callstack 0
  2156   0020EE                     _vfpfcnvrt:
  2157                           	callstack 20
  2158                           
  2159                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v2.50/pic/sources/c99/common/doprnt.c: 1188:  } convarg;;/opt/microchip/xc8/v2.50/pi
      +                          c/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;incstack = 0
  2163   0020EE  0100               	movlb	0	; () banked
  2164   0020F0  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2165   0020F2  6ED9               	movwf	fsr2l,c
  2166   0020F4  6ADA               	clrf	fsr2h,c
  2167   0020F6  CFDF FFF6          	movff	indf2,tblptrl
  2168   0020FA                     	if	1	;There is more than 1 active tblptr byte
  2169   0020FA  0E03               	movlw	high __smallconst
  2170   0020FC  6EF7               	movwf	tblptrh,c
  2171   0020FE                     	endif
  2172   0020FE                     	if	0	;tblptru may be non-zero
  2173   0020FE                     	endif
  2174   0020FE                     	if	0	;tblptru may be non-zero
  2175   0020FE                     	endif
  2176   0020FE  0008               	tblrd		*
  2177   002100  50F5               	movf	tablat,w,c
  2178   002102  0A25               	xorlw	37
  2179   002104  A4D8               	btfss	status,2,c
  2180   002106  D098               	goto	l7447
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
  2184   002108  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2185   00210A  6ED9               	movwf	fsr2l,c
  2186   00210C  6ADA               	clrf	fsr2h,c
  2187   00210E  2ADF               	incf	indf2,f,c
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
  2191   002110  0E00               	movlw	0
  2192   002112  6FEF               	movwf	(_width+1)& (0+255),b
  2193   002114  0E00               	movlw	0
  2194   002116  6FEE               	movwf	_width& (0+255),b
  2195   002118  C0EE  F0F8         	movff	_width,_flags
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
  2199   00211C  69F0               	setf	_prec& (0+255),b
  2200   00211E  69F1               	setf	(_prec+1)& (0+255),b
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1265:         if ((*fmt)[0] =
      +                          = '.') {
  2204   002120  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2205   002122  6ED9               	movwf	fsr2l,c
  2206   002124  6ADA               	clrf	fsr2h,c
  2207   002126  CFDF FFF6          	movff	indf2,tblptrl
  2208   00212A                     	if	1	;There is more than 1 active tblptr byte
  2209   00212A  0E03               	movlw	high __smallconst
  2210   00212C  6EF7               	movwf	tblptrh,c
  2211   00212E                     	endif
  2212   00212E                     	if	0	;tblptru may be non-zero
  2213   00212E                     	endif
  2214   00212E                     	if	0	;tblptru may be non-zero
  2215   00212E                     	endif
  2216   00212E  0008               	tblrd		*
  2217   002130  50F5               	movf	tablat,w,c
  2218   002132  0A2E               	xorlw	46
  2219   002134  A4D8               	btfss	status,2,c
  2220   002136  D010               	goto	l7411
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1266:             ++*fmt;
  2224   002138  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2225   00213A  6ED9               	movwf	fsr2l,c
  2226   00213C  6ADA               	clrf	fsr2h,c
  2227   00213E  2ADF               	incf	indf2,f,c
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1267:    prec = read_prec_or_
      +                          width(fmt, ap);
  2231   002140  C0CA  F060         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2232   002144  C0CB  F061         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2233   002148  C0CC  F062         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  2234   00214C  ECC3  F014         	call	_read_prec_or_width	;wreg free
  2235   002150  C060  F0F0         	movff	?_read_prec_or_width,_prec
  2236   002154  C061  F0F1         	movff	?_read_prec_or_width+1,_prec+1
  2237   002158                     l7411:
  2238                           
  2239                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1689:   cp = *fmt;
  2240   002158  0100               	movlb	0	; () banked
  2241   00215A  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2242   00215C  6ED9               	movwf	fsr2l,c
  2243   00215E  6ADA               	clrf	fsr2h,c
  2244   002160  50DF               	movf	indf2,w,c
  2245   002162  6FD3               	movwf	vfpfcnvrt@cp& (0+255),b
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1690:   c = *cp;
  2249   002164  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2250   002168                     	if	1	;There is more than 1 active tblptr byte
  2251   002168  0E03               	movlw	high __smallconst
  2252   00216A  6EF7               	movwf	tblptrh,c
  2253   00216C                     	endif
  2254   00216C                     	if	0	;tblptru may be non-zero
  2255   00216C                     	endif
  2256   00216C                     	if	0	;tblptru may be non-zero
  2257   00216C                     	endif
  2258   00216C  0008               	tblrd		*
  2259   00216E  CFF5 F0D2          	movff	tablat,vfpfcnvrt@c
  2260                           
  2261                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1691:   switch(c) {
  2262   002172  D007               	goto	l7421
  2263   002174                     l7415:
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1695:     cp++;
  2267   002174  2BD3               	incf	vfpfcnvrt@cp& (0+255),f,b
  2268                           
  2269                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1696:     break;
  2270   002176  D010               	goto	l7423
  2271   002178                     l7417:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1721:     c = 'l';
  2275   002178  0E6C               	movlw	108
  2276   00217A  6FD2               	movwf	vfpfcnvrt@c& (0+255),b
  2277                           
  2278                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1722:     break;
  2279   00217C  D00D               	goto	l7423
  2280   00217E                     l1126:
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1724:     c = 0;
  2284   00217E  6BD2               	clrf	vfpfcnvrt@c& (0+255),b
  2285                           
  2286                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1725:     break;
  2287   002180  D00B               	goto	l7423
  2288   002182                     l7421:
  2289                           
  2290                           ; BSR set to: 0
  2291   002182  51D2               	movf	vfpfcnvrt@c& (0+255),w,b
  2292                           
  2293                           ; Switch size 1, requested type "simple"
  2294                           ; Number of cases is 3, Range of values is 76 to 108
  2295                           ; switch strategies available:
  2296                           ; Name         Instructions Cycles
  2297                           ; simple_byte           10     6 (average)
  2298                           ;	Chosen strategy is simple_byte
  2299   002184  0A4C               	xorlw	76	; case 76
  2300   002186  B4D8               	btfsc	status,2,c
  2301   002188  D7F5               	goto	l7415
  2302   00218A  0A2A               	xorlw	42	; case 102
  2303   00218C  B4D8               	btfsc	status,2,c
  2304   00218E  D7F4               	goto	l7417
  2305   002190  0A0A               	xorlw	10	; case 108
  2306   002192  B4D8               	btfsc	status,2,c
  2307   002194  D7EF               	goto	l7415
  2308   002196  D7F3               	goto	l1126
  2309   002198                     l7423:
  2310                           
  2311                           ; BSR set to: 0
  2312   002198  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2313   00219C                     	if	1	;There is more than 1 active tblptr byte
  2314   00219C  0E03               	movlw	high __smallconst
  2315   00219E  6EF7               	movwf	tblptrh,c
  2316   0021A0                     	endif
  2317   0021A0                     	if	0	;tblptru may be non-zero
  2318   0021A0                     	endif
  2319   0021A0                     	if	0	;tblptru may be non-zero
  2320   0021A0                     	endif
  2321   0021A0  0008               	tblrd		*
  2322   0021A2  50F5               	movf	tablat,w,c
  2323   0021A4  0A66               	xorlw	102
  2324   0021A6  B4D8               	btfsc	status,2,c
  2325   0021A8  D015               	goto	l7431
  2326   0021AA  D040               	goto	l7443
  2327   0021AC                     l7425:
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1759:      convarg.f = (long 
      +                          double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2331                           
  2332                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1757:      break;
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1756:      convarg.f = (long 
      +                          double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2336   0021AC  C0CB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2337   0021B0  C0CC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2338   0021B4  CFDF F0CD          	movff	indf2,??_vfpfcnvrt
  2339   0021B8  0E04               	movlw	4
  2340   0021BA  26DF               	addwf	indf2,f,c
  2341   0021BC  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  2342   0021BE  6ED9               	movwf	fsr2l,c
  2343   0021C0  6ADA               	clrf	fsr2h,c
  2344   0021C2  CFDE F0CE          	movff	postinc2,vfpfcnvrt@convarg
  2345   0021C6  CFDE F0CF          	movff	postinc2,vfpfcnvrt@convarg+1
  2346   0021CA  CFDE F0D0          	movff	postinc2,vfpfcnvrt@convarg+2
  2347   0021CE  CFDE F0D1          	movff	postinc2,vfpfcnvrt@convarg+3
  2348                           
  2349                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1760:      break;
  2350   0021D2  D007               	goto	l7433
  2351   0021D4                     l7431:
  2352                           
  2353                           ; BSR set to: 0
  2354   0021D4  51D2               	movf	vfpfcnvrt@c& (0+255),w,b
  2355                           
  2356                           ; Switch size 1, requested type "simple"
  2357                           ; Number of cases is 2, Range of values is 76 to 108
  2358                           ; switch strategies available:
  2359                           ; Name         Instructions Cycles
  2360                           ; simple_byte            7     4 (average)
  2361                           ;	Chosen strategy is simple_byte
  2362   0021D6  0A4C               	xorlw	76	; case 76
  2363   0021D8  B4D8               	btfsc	status,2,c
  2364   0021DA  D7E8               	goto	l7425
  2365   0021DC  0A20               	xorlw	32	; case 108
  2366   0021DE  B4D8               	btfsc	status,2,c
  2367   0021E0  D7E5               	goto	l7425
  2368   0021E2                     l7433:
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1762:    *fmt = cp+1;
  2372   0021E2  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2373   0021E4  6ED9               	movwf	fsr2l,c
  2374   0021E6  6ADA               	clrf	fsr2h,c
  2375   0021E8  29D3               	incf	vfpfcnvrt@cp& (0+255),w,b
  2376   0021EA  6EDF               	movwf	indf2,c
  2377                           
  2378                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1763:    switch (*cp) {
  2379   0021EC  D016               	goto	l7441
  2380   0021EE                     l7435:
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1790:      return (void) efgt
      +                          oa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2384   0021EE  C0C8  F093         	movff	vfpfcnvrt@fp,efgtoa@fp
  2385   0021F2  C0C9  F094         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2386   0021F6  C0CE  F095         	movff	vfpfcnvrt@convarg,efgtoa@f
  2387   0021FA  C0CF  F096         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2388   0021FE  C0D0  F097         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2389   002202  C0D1  F098         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2390   002206  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2391   00220A                     	if	1	;There is more than 1 active tblptr byte
  2392   00220A  0E03               	movlw	high __smallconst
  2393   00220C  6EF7               	movwf	tblptrh,c
  2394   00220E                     	endif
  2395   00220E                     	if	0	;tblptru may be non-zero
  2396   00220E                     	endif
  2397   00220E                     	if	0	;tblptru may be non-zero
  2398   00220E                     	endif
  2399   00220E  0008               	tblrd		*
  2400   002210  CFF5 F099          	movff	tablat,efgtoa@c
  2401   002214  EC90  F001         	call	_efgtoa	;wreg free
  2402   002218  0012               	return	
  2403   00221A                     l7441:
  2404                           
  2405                           ; BSR set to: 0
  2406   00221A  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2407   00221E                     	if	1	;There is more than 1 active tblptr byte
  2408   00221E  0E03               	movlw	high __smallconst
  2409   002220  6EF7               	movwf	tblptrh,c
  2410   002222                     	endif
  2411   002222                     	if	0	;tblptru may be non-zero
  2412   002222                     	endif
  2413   002222                     	if	0	;tblptru may be non-zero
  2414   002222                     	endif
  2415   002222  0008               	tblrd		*
  2416   002224  50F5               	movf	tablat,w,c
  2417                           
  2418                           ; Switch size 1, requested type "simple"
  2419                           ; Number of cases is 1, Range of values is 102 to 102
  2420                           ; switch strategies available:
  2421                           ; Name         Instructions Cycles
  2422                           ; simple_byte            4     3 (average)
  2423                           ;	Chosen strategy is simple_byte
  2424   002226  0A66               	xorlw	102	; case 102
  2425   002228  B4D8               	btfsc	status,2,c
  2426   00222A  D7E1               	goto	l7435
  2427   00222C                     l7443:
  2428                           
  2429                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
  2430   00222C  0100               	movlb	0	; () banked
  2431   00222E  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2432   002230  6ED9               	movwf	fsr2l,c
  2433   002232  6ADA               	clrf	fsr2h,c
  2434   002234  2ADF               	incf	indf2,f,c
  2435   002236  0012               	return	
  2436   002238                     l7447:
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
  2440   002238  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2441   00223A  6ED9               	movwf	fsr2l,c
  2442   00223C  6ADA               	clrf	fsr2h,c
  2443   00223E  CFDF FFF6          	movff	indf2,tblptrl
  2444   002242                     	if	1	;There is more than 1 active tblptr byte
  2445   002242  0E03               	movlw	high __smallconst
  2446   002244  6EF7               	movwf	tblptrh,c
  2447   002246                     	endif
  2448   002246                     	if	0	;tblptru may be non-zero
  2449   002246                     	endif
  2450   002246                     	if	0	;tblptru may be non-zero
  2451   002246                     	endif
  2452   002246  0008               	tblrd		*
  2453   002248  50F5               	movf	tablat,w,c
  2454   00224A  6F60               	movwf	fputc@c& (0+255),b
  2455   00224C  6B61               	clrf	(fputc@c+1)& (0+255),b
  2456   00224E  C0C8  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2457   002252  C0C9  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2458   002256  EC0C  F015         	call	_fputc	;wreg free
  2459   00225A  D7E8               	goto	l7443
  2460   00225C                     __end_of_vfpfcnvrt:
  2461                           	callstack 0
  2462                           
  2463 ;; *************** function _read_prec_or_width *****************
  2464 ;; Defined at:
  2465 ;;		line 1158 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  fmt             1    0[BANK0 ] PTR PTR const unsigned c
  2468 ;;		 -> vfprintf@cfmt(1), 
  2469 ;;  ap              2    1[BANK0 ] PTR PTR void [1]
  2470 ;;		 -> sprintf@ap(1), 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  c               1    5[BANK0 ] unsigned char 
  2473 ;;  n               2    6[BANK0 ] int 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  2    0[BANK0 ] int 
  2476 ;; Registers used:
  2477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2483 ;;      Params:         0       3       0       0
  2484 ;;      Locals:         0       3       0       0
  2485 ;;      Temps:          0       2       0       0
  2486 ;;      Totals:         0       8       0       0
  2487 ;;Total ram usage:        8 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; Hardware stack levels required when called: 3
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_vfpfcnvrt
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text4
  2498   002986                     __ptext4:
  2499                           	callstack 0
  2500   002986                     _read_prec_or_width:
  2501                           	callstack 24
  2502                           
  2503                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  2504                           
  2505                           ;incstack = 0
  2506   002986  0E00               	movlw	0
  2507   002988  0100               	movlb	0	; () banked
  2508   00298A  6F67               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2509   00298C  0E00               	movlw	0
  2510   00298E  6F66               	movwf	read_prec_or_width@n& (0+255),b
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)[0] == '*
      +                          ') {
  2514   002990  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2515   002992  6ED9               	movwf	fsr2l,c
  2516   002994  6ADA               	clrf	fsr2h,c
  2517   002996  CFDF FFF6          	movff	indf2,tblptrl
  2518   00299A                     	if	1	;There is more than 1 active tblptr byte
  2519   00299A  0E03               	movlw	high __smallconst
  2520   00299C  6EF7               	movwf	tblptrh,c
  2521   00299E                     	endif
  2522   00299E                     	if	0	;tblptru may be non-zero
  2523   00299E                     	endif
  2524   00299E                     	if	0	;tblptru may be non-zero
  2525   00299E                     	endif
  2526   00299E  0008               	tblrd		*
  2527   0029A0  50F5               	movf	tablat,w,c
  2528   0029A2  0A2A               	xorlw	42
  2529   0029A4  A4D8               	btfss	status,2,c
  2530   0029A6  D025               	goto	l7395
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt;
  2534   0029A8  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2535   0029AA  6ED9               	movwf	fsr2l,c
  2536   0029AC  6ADA               	clrf	fsr2h,c
  2537   0029AE  2ADF               	incf	indf2,f,c
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1162:         n = (*(int *)__
      +                          va_arg(*(int **)*ap, (int)0));
  2541   0029B0  C061  FFD9         	movff	read_prec_or_width@ap,fsr2l
  2542   0029B4  C062  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  2543   0029B8  0E02               	movlw	2
  2544   0029BA  26DF               	addwf	indf2,f,c
  2545   0029BC  5CDF               	subwf	indf2,w,c
  2546   0029BE  6ED9               	movwf	fsr2l,c
  2547   0029C0  6ADA               	clrf	fsr2h,c
  2548   0029C2  CFDE F066          	movff	postinc2,read_prec_or_width@n
  2549   0029C6  CFDE F067          	movff	postinc2,read_prec_or_width@n+1
  2550                           
  2551                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1163:     } else {
  2552   0029CA  D021               	goto	u9410
  2553   0029CC                     l7391:
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1166:             n = n * 10 
      +                          + c;
  2557   0029CC  0E0A               	movlw	10
  2558   0029CE  0366               	mulwf	read_prec_or_width@n& (0+255),b
  2559   0029D0  CFF3 F063          	movff	prodl,??_read_prec_or_width
  2560   0029D4  CFF4 F064          	movff	prodh,??_read_prec_or_width+1
  2561   0029D8  0367               	mulwf	(read_prec_or_width@n+1)& (0+255),b
  2562   0029DA  50F3               	movf	prodl,w,c
  2563   0029DC  2764               	addwf	(??_read_prec_or_width+1)& (0+255),f,b
  2564   0029DE  5165               	movf	read_prec_or_width@c& (0+255),w,b
  2565   0029E0  2563               	addwf	??_read_prec_or_width& (0+255),w,b
  2566   0029E2  6F66               	movwf	read_prec_or_width@n& (0+255),b
  2567   0029E4  0E00               	movlw	0
  2568   0029E6  2164               	addwfc	(??_read_prec_or_width+1)& (0+255),w,b
  2569   0029E8  6F67               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1167:             ++*fmt;
  2573   0029EA  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2574   0029EC  6ED9               	movwf	fsr2l,c
  2575   0029EE  6ADA               	clrf	fsr2h,c
  2576   0029F0  2ADF               	incf	indf2,f,c
  2577   0029F2                     l7395:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1165:         while ((c = ((u
      +                          nsigned)(*fmt)[0]) - '0') < 10) {
  2581   0029F2  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2582   0029F4  6ED9               	movwf	fsr2l,c
  2583   0029F6  6ADA               	clrf	fsr2h,c
  2584   0029F8  CFDF FFF6          	movff	indf2,tblptrl
  2585   0029FC                     	if	1	;There is more than 1 active tblptr byte
  2586   0029FC  0E03               	movlw	high __smallconst
  2587   0029FE  6EF7               	movwf	tblptrh,c
  2588   002A00                     	endif
  2589   002A00                     	if	0	;tblptru may be non-zero
  2590   002A00                     	endif
  2591   002A00                     	if	0	;tblptru may be non-zero
  2592   002A00                     	endif
  2593   002A00  0008               	tblrd		*
  2594   002A02  50F5               	movf	tablat,w,c
  2595   002A04  0FD0               	addlw	208
  2596   002A06  6F65               	movwf	read_prec_or_width@c& (0+255),b
  2597   002A08  0E09               	movlw	9
  2598   002A0A  6565               	cpfsgt	read_prec_or_width@c& (0+255),b
  2599   002A0C  D7DF               	goto	l7391
  2600   002A0E                     u9410:
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1170:     return n;
  2604                           
  2605                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1169:     }
  2606   002A0E  C066  F060         	movff	read_prec_or_width@n,?_read_prec_or_width
  2607   002A12  C067  F061         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2608                           
  2609                           ; BSR set to: 0
  2610   002A16  0012               	return		;funcret
  2611   002A18                     __end_of_read_prec_or_width:
  2612                           	callstack 0
  2613                           
  2614 ;; *************** function _efgtoa *****************
  2615 ;; Defined at:
  2616 ;;		line 587 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  fp              2   51[BANK0 ] PTR struct _IO_FILE
  2619 ;;		 -> sprintf@f(11), 
  2620 ;;  f               4   53[BANK0 ] PTR struct _IO_FILE
  2621 ;;  c               1   57[BANK0 ] unsigned char 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;  u               4  100[BANK0 ] struct flui
  2624 ;;  g               4   94[BANK0 ] struct flui
  2625 ;;  l               4   89[BANK0 ] struct flui
  2626 ;;  h               4   85[BANK0 ] struct flui
  2627 ;;  ou              4   79[BANK0 ] struct flui
  2628 ;;  n               2   98[BANK0 ] int 
  2629 ;;  i               2   83[BANK0 ] int 
  2630 ;;  w               2   77[BANK0 ] int 
  2631 ;;  e               2   75[BANK0 ] int 
  2632 ;;  m               2   73[BANK0 ] int 
  2633 ;;  d               2   71[BANK0 ] int 
  2634 ;;  t               2   64[BANK0 ] int 
  2635 ;;  p               2   62[BANK0 ] int 
  2636 ;;  ne              2   60[BANK0 ] int 
  2637 ;;  sign            1   93[BANK0 ] unsigned char 
  2638 ;;  nmode           1   70[BANK0 ] unsigned char 
  2639 ;;  mode            1   69[BANK0 ] unsigned char 
  2640 ;;  pp              1   68[BANK0 ] unsigned char 
  2641 ;;  esign           1    0        unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2651 ;;      Params:         0       7       0       0
  2652 ;;      Locals:         0      44       0       0
  2653 ;;      Temps:          0       2       0       0
  2654 ;;      Totals:         0      53       0       0
  2655 ;;Total ram usage:       53 bytes
  2656 ;; Hardware stack levels used: 1
  2657 ;; Hardware stack levels required when called: 7
  2658 ;; This function calls:
  2659 ;;		___fladd
  2660 ;;		___fldiv
  2661 ;;		___fleq
  2662 ;;		___flge
  2663 ;;		___flmul
  2664 ;;		___flneg
  2665 ;;		___flsub
  2666 ;;		___fltol
  2667 ;;		___fpclassifyf
  2668 ;;		_floorf
  2669 ;;		_labs
  2670 ;;		_memcpy
  2671 ;;		_pad
  2672 ;;		_strcpy
  2673 ;; This function is called by:
  2674 ;;		_vfpfcnvrt
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text5
  2679   000320                     __ptext5:
  2680                           	callstack 0
  2681   000320                     _efgtoa:
  2682                           	callstack 20
  2683                           
  2684                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 587: static void efgtoa(FILE 
      +                          *fp, long double f, char c);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 58
      +                          8: {;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 589:     char mode, nmode
      +                          , pp, sign, esign;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 590:     in
      +                          t d, e, i, m, n, ne, p, t, w;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 
      +                          591:     long double h, l;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 592
      +                          :  union flui g, u, ou;
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;incstack = 0
  2688   000320  0100               	movlb	0	; () banked
  2689   000322  6BBD               	clrf	efgtoa@sign& (0+255),b
  2690                           
  2691                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 596:     g.f = f;
  2692   000324  C095  F0BE         	movff	efgtoa@f,efgtoa@g
  2693   000328  C096  F0BF         	movff	efgtoa@f+1,efgtoa@g+1
  2694   00032C  C097  F0C0         	movff	efgtoa@f+2,efgtoa@g+2
  2695   000330  C098  F0C1         	movff	efgtoa@f+3,efgtoa@g+3
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 597:     if (g.f < 0.0) {
  2699   000334  AFC1               	btfss	(efgtoa@g+3)& (0+255),7,b
  2700   000336  D014               	goto	l7171
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 598:         sign = 1;
  2704   000338  0E01               	movlw	1
  2705   00033A  6FBD               	movwf	efgtoa@sign& (0+255),b
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 599:         g.f = -g.f;
  2709   00033C  C0BE  F060         	movff	efgtoa@g,___flneg@f1
  2710   000340  C0BF  F061         	movff	efgtoa@g+1,___flneg@f1+1
  2711   000344  C0C0  F062         	movff	efgtoa@g+2,___flneg@f1+2
  2712   000348  C0C1  F063         	movff	efgtoa@g+3,___flneg@f1+3
  2713   00034C  EC77  F018         	call	___flneg	;wreg free
  2714   000350  C060  F0BE         	movff	?___flneg,efgtoa@g
  2715   000354  C061  F0BF         	movff	?___flneg+1,efgtoa@g+1
  2716   000358  C062  F0C0         	movff	?___flneg+2,efgtoa@g+2
  2717   00035C  C063  F0C1         	movff	?___flneg+3,efgtoa@g+3
  2718   000360                     l7171:
  2719                           
  2720                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 603:     n = 0;
  2721   000360  0E00               	movlw	0
  2722   000362  0100               	movlb	0	; () banked
  2723   000364  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2724   000366  0E00               	movlw	0
  2725   000368  6FC2               	movwf	efgtoa@n& (0+255),b
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 604:     w = width;
  2729   00036A  C0EE  F0AD         	movff	_width,efgtoa@w
  2730   00036E  C0EF  F0AE         	movff	_width+1,efgtoa@w+1
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 605:     if (sign
  2734   000372  51BD               	movf	efgtoa@sign& (0+255),w,b
  2735   000374  B4D8               	btfsc	status,2,c
  2736   000376  D00D               	goto	l7185
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 609:    ) {;/opt/microchip/xc
      +                          8/v2.50/pic/sources/c99/common/doprnt.c: 610:   sign = sign ? '-' : '+';
  2740   000378  51BD               	movf	efgtoa@sign& (0+255),w,b
  2741   00037A  A4D8               	btfss	status,2,c
  2742   00037C  D004               	goto	l7181
  2743                           
  2744                           ; BSR set to: 0
  2745   00037E  0E00               	movlw	0
  2746   000380  6FA3               	movwf	(_efgtoa$1751+1)& (0+255),b
  2747   000382  0E2B               	movlw	43
  2748   000384  D003               	goto	L2
  2749   000386                     l7181:
  2750                           
  2751                           ; BSR set to: 0
  2752   000386  0E00               	movlw	0
  2753   000388  6FA3               	movwf	(_efgtoa$1751+1)& (0+255),b
  2754   00038A  0E2D               	movlw	45
  2755   00038C                     L2:
  2756   00038C  6FA2               	movwf	_efgtoa$1751& (0+255),b
  2757                           
  2758                           ; BSR set to: 0
  2759   00038E  C0A2  F0BD         	movff	_efgtoa$1751,efgtoa@sign
  2760   000392                     l7185:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 619:     if (( __fpclassifyf(
      +                          g.f) == 1 )) {
  2764   000392  C0BE  F060         	movff	efgtoa@g,___fpclassifyf@x
  2765   000396  C0BF  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2766   00039A  C0C0  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2767   00039E  C0C1  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2768   0003A2  EC39  F012         	call	___fpclassifyf	;wreg free
  2769   0003A6  0100               	movlb	0	; () banked
  2770   0003A8  0560               	decf	?___fpclassifyf& (0+255),w,b
  2771   0003AA  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2772   0003AC  A4D8               	btfss	status,2,c
  2773   0003AE  D02A               	goto	l7203
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 620:   if (sign) {
  2777   0003B0  51BD               	movf	efgtoa@sign& (0+255),w,b
  2778   0003B2  B4D8               	btfsc	status,2,c
  2779   0003B4  D009               	goto	l7195
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 621:    dbuf[0] = sign;
  2783   0003B6  C0BD  F100         	movff	efgtoa@sign,_dbuf
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 622:    w--;
  2787   0003BA  07AD               	decf	efgtoa@w& (0+255),f,b
  2788   0003BC  A0D8               	btfss	status,0,c
  2789   0003BE  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 623:    n = 1;
  2793   0003C0  0E00               	movlw	0
  2794   0003C2  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2795   0003C4  0E01               	movlw	1
  2796   0003C6  6FC2               	movwf	efgtoa@n& (0+255),b
  2797   0003C8                     l7195:
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 631:   {;/opt/microchip/xc8/v
      +                          2.50/pic/sources/c99/common/doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  2801   0003C8  0E00               	movlw	low _dbuf
  2802   0003CA  25C2               	addwf	efgtoa@n& (0+255),w,b
  2803   0003CC  6F60               	movwf	strcpy@dest& (0+255),b
  2804   0003CE  0E01               	movlw	high _dbuf
  2805   0003D0  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2806   0003D2  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2807   0003D4  0E16               	movlw	low STR_8
  2808   0003D6  6F62               	movwf	strcpy@src& (0+255),b
  2809   0003D8  EC5E  F018         	call	_strcpy	;wreg free
  2810   0003DC                     l7197:
  2811                           
  2812                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 633:         };/opt/microchip
      +                          /xc8/v2.50/pic/sources/c99/common/doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("in
      +                          f"[0]))-1);
  2813   0003DC  0100               	movlb	0	; () banked
  2814   0003DE  0EFD               	movlw	253
  2815   0003E0  27AD               	addwf	efgtoa@w& (0+255),f,b
  2816   0003E2  0EFF               	movlw	255
  2817   0003E4  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 635:         return (void) pa
      +                          d(fp, &dbuf[0], w);
  2821   0003E6  C093  F070         	movff	efgtoa@fp,pad@fp
  2822   0003EA  C094  F071         	movff	efgtoa@fp+1,pad@fp+1
  2823   0003EE  0E00               	movlw	low _dbuf
  2824   0003F0  6F72               	movwf	pad@buf& (0+255),b
  2825   0003F2  0E01               	movlw	high _dbuf
  2826   0003F4  6F73               	movwf	(pad@buf+1)& (0+255),b
  2827   0003F6  C0AD  F074         	movff	efgtoa@w,pad@p
  2828   0003FA  C0AE  F075         	movff	efgtoa@w+1,pad@p+1
  2829   0003FE  EC10  F016         	call	_pad	;wreg free
  2830   000402  0012               	return	
  2831   000404                     l7203:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 637:     if (( __fpclassifyf(
      +                          g.f) == 0 )) {
  2835   000404  C0BE  F060         	movff	efgtoa@g,___fpclassifyf@x
  2836   000408  C0BF  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2837   00040C  C0C0  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2838   000410  C0C1  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2839   000414  EC39  F012         	call	___fpclassifyf	;wreg free
  2840   000418  0100               	movlb	0	; () banked
  2841   00041A  5160               	movf	?___fpclassifyf& (0+255),w,b
  2842   00041C  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2843   00041E  A4D8               	btfss	status,2,c
  2844   000420  D017               	goto	l7221
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 638:   if (sign) {
  2848   000422  51BD               	movf	efgtoa@sign& (0+255),w,b
  2849   000424  B4D8               	btfsc	status,2,c
  2850   000426  D009               	goto	l7213
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 639:    dbuf[0] = sign;
  2854   000428  C0BD  F100         	movff	efgtoa@sign,_dbuf
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 640:    w--;
  2858   00042C  07AD               	decf	efgtoa@w& (0+255),f,b
  2859   00042E  A0D8               	btfss	status,0,c
  2860   000430  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 641:    n = 1;
  2864   000432  0E00               	movlw	0
  2865   000434  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2866   000436  0E01               	movlw	1
  2867   000438  6FC2               	movwf	efgtoa@n& (0+255),b
  2868   00043A                     l7213:
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 649:   {;/opt/microchip/xc8/v
      +                          2.50/pic/sources/c99/common/doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  2872   00043A  0E00               	movlw	low _dbuf
  2873   00043C  25C2               	addwf	efgtoa@n& (0+255),w,b
  2874   00043E  6F60               	movwf	strcpy@dest& (0+255),b
  2875   000440  0E01               	movlw	high _dbuf
  2876   000442  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2877   000444  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2878   000446  0E1A               	movlw	low STR_11
  2879   000448  6F62               	movwf	strcpy@src& (0+255),b
  2880   00044A  EC5E  F018         	call	_strcpy	;wreg free
  2881   00044E  D7C6               	goto	l7197
  2882   000450                     l7221:
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 657:     u.f = 1.0;
  2886   000450  0E00               	movlw	0
  2887   000452  6FC4               	movwf	efgtoa@u& (0+255),b
  2888   000454  0E00               	movlw	0
  2889   000456  6FC5               	movwf	(efgtoa@u+1)& (0+255),b
  2890   000458  0E80               	movlw	128
  2891   00045A  6FC6               	movwf	(efgtoa@u+2)& (0+255),b
  2892   00045C  0E3F               	movlw	63
  2893   00045E  6FC7               	movwf	(efgtoa@u+3)& (0+255),b
  2894                           
  2895                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 658:     e = 0;
  2896   000460  0E00               	movlw	0
  2897   000462  6FAC               	movwf	(efgtoa@e+1)& (0+255),b
  2898   000464  0E00               	movlw	0
  2899   000466  6FAB               	movwf	efgtoa@e& (0+255),b
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 659:  if (!(g.f == 0.0)) {
  2903   000468  C0BE  F060         	movff	efgtoa@g,___fleq@ff1
  2904   00046C  C0BF  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  2905   000470  C0C0  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  2906   000474  C0C1  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  2907   000478  0E00               	movlw	0
  2908   00047A  6F64               	movwf	___fleq@ff2& (0+255),b
  2909   00047C  0E00               	movlw	0
  2910   00047E  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  2911   000480  0E00               	movlw	0
  2912   000482  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  2913   000484  0E00               	movlw	0
  2914   000486  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  2915   000488  EC55  F015         	call	___fleq	;wreg free
  2916   00048C  0100               	movlb	0	; () banked
  2917   00048E  A0D8               	btfss	status,0,c
  2918   000490  D00B               	goto	l7229
  2919   000492  D0C1               	goto	u9200
  2920   000494                     l1072:
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 661:    u = ou;
  2924   000494  C0AF  F0C4         	movff	efgtoa@ou,efgtoa@u
  2925   000498  C0B0  F0C5         	movff	efgtoa@ou+1,efgtoa@u+1
  2926   00049C  C0B1  F0C6         	movff	efgtoa@ou+2,efgtoa@u+2
  2927   0004A0  C0B2  F0C7         	movff	efgtoa@ou+3,efgtoa@u+3
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 662:    ++e;
  2931   0004A4  4BAB               	infsnz	efgtoa@e& (0+255),f,b
  2932   0004A6  2BAC               	incf	(efgtoa@e+1)& (0+255),f,b
  2933   0004A8                     l7229:
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 660:   while ((labs((g).u-((o
      +                          u.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2937   0004A8  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  2938   0004AC  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  2939   0004B0  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  2940   0004B4  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  2941   0004B8  0E00               	movlw	0
  2942   0004BA  6F72               	movwf	___flmul@a& (0+255),b
  2943   0004BC  0E00               	movlw	0
  2944   0004BE  6F73               	movwf	(___flmul@a+1)& (0+255),b
  2945   0004C0  0E20               	movlw	32
  2946   0004C2  6F74               	movwf	(___flmul@a+2)& (0+255),b
  2947   0004C4  0E41               	movlw	65
  2948   0004C6  6F75               	movwf	(___flmul@a+3)& (0+255),b
  2949   0004C8  EC9D  F007         	call	___flmul	;wreg free
  2950   0004CC  C06E  F0AF         	movff	?___flmul,efgtoa@ou
  2951   0004D0  C06F  F0B0         	movff	?___flmul+1,efgtoa@ou+1
  2952   0004D4  C070  F0B1         	movff	?___flmul+2,efgtoa@ou+2
  2953   0004D8  C071  F0B2         	movff	?___flmul+3,efgtoa@ou+3
  2954   0004DC  0100               	movlb	0	; () banked
  2955   0004DE  51AF               	movf	efgtoa@ou& (0+255),w,b
  2956   0004E0  5DBE               	subwf	efgtoa@g& (0+255),w,b
  2957   0004E2  6F60               	movwf	labs@a& (0+255),b
  2958   0004E4  51B0               	movf	(efgtoa@ou+1)& (0+255),w,b
  2959   0004E6  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2960   0004E8  6F61               	movwf	(labs@a+1)& (0+255),b
  2961   0004EA  51B1               	movf	(efgtoa@ou+2)& (0+255),w,b
  2962   0004EC  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2963   0004EE  6F62               	movwf	(labs@a+2)& (0+255),b
  2964   0004F0  51B2               	movf	(efgtoa@ou+3)& (0+255),w,b
  2965   0004F2  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2966   0004F4  6F63               	movwf	(labs@a+3)& (0+255),b
  2967   0004F6  EC0B  F017         	call	_labs	;wreg free
  2968   0004FA  0100               	movlb	0	; () banked
  2969   0004FC  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  2970   0004FE  D7CA               	goto	l1072
  2971   000500  5163               	movf	(?_labs+3)& (0+255),w,b
  2972   000502  1162               	iorwf	(?_labs+2)& (0+255),w,b
  2973   000504  1161               	iorwf	(?_labs+1)& (0+255),w,b
  2974   000506  E104               	bnz	u9160
  2975   000508  0E02               	movlw	2
  2976   00050A  5D60               	subwf	?_labs& (0+255),w,b
  2977   00050C  A0D8               	btfss	status,0,c
  2978   00050E  D7C2               	goto	l1072
  2979   000510                     u9160:
  2980                           
  2981                           ; BSR set to: 0
  2982   000510  C0AF  F087         	movff	efgtoa@ou,___flge@ff1
  2983   000514  C0B0  F088         	movff	efgtoa@ou+1,___flge@ff1+1
  2984   000518  C0B1  F089         	movff	efgtoa@ou+2,___flge@ff1+2
  2985   00051C  C0B2  F08A         	movff	efgtoa@ou+3,___flge@ff1+3
  2986   000520  C0BE  F08B         	movff	efgtoa@g,___flge@ff2
  2987   000524  C0BF  F08C         	movff	efgtoa@g+1,___flge@ff2+1
  2988   000528  C0C0  F08D         	movff	efgtoa@g+2,___flge@ff2+2
  2989   00052C  C0C1  F08E         	movff	efgtoa@g+3,___flge@ff2+3
  2990   000530  ECD0  F011         	call	___flge	;wreg free
  2991   000534  0100               	movlb	0	; () banked
  2992   000536  A0D8               	btfss	status,0,c
  2993   000538  D7AD               	goto	l1072
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 664:   if ((labs((g).u-(u).u)
      +                           <= 1)) {
  2997   00053A  51C4               	movf	efgtoa@u& (0+255),w,b
  2998   00053C  5DBE               	subwf	efgtoa@g& (0+255),w,b
  2999   00053E  6F60               	movwf	labs@a& (0+255),b
  3000   000540  51C5               	movf	(efgtoa@u+1)& (0+255),w,b
  3001   000542  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3002   000544  6F61               	movwf	(labs@a+1)& (0+255),b
  3003   000546  51C6               	movf	(efgtoa@u+2)& (0+255),w,b
  3004   000548  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3005   00054A  6F62               	movwf	(labs@a+2)& (0+255),b
  3006   00054C  51C7               	movf	(efgtoa@u+3)& (0+255),w,b
  3007   00054E  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3008   000550  6F63               	movwf	(labs@a+3)& (0+255),b
  3009   000552  EC0B  F017         	call	_labs	;wreg free
  3010   000556  0100               	movlb	0	; () banked
  3011   000558  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  3012   00055A  D008               	goto	u9180
  3013   00055C  5163               	movf	(?_labs+3)& (0+255),w,b
  3014   00055E  1162               	iorwf	(?_labs+2)& (0+255),w,b
  3015   000560  1161               	iorwf	(?_labs+1)& (0+255),w,b
  3016   000562  E144               	bnz	l7247
  3017   000564  0E02               	movlw	2
  3018   000566  5D60               	subwf	?_labs& (0+255),w,b
  3019   000568  B0D8               	btfsc	status,0,c
  3020   00056A  D040               	goto	l7247
  3021   00056C                     u9180:
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 665:    g = u;
  3025   00056C  C0C4  F0BE         	movff	efgtoa@u,efgtoa@g
  3026   000570  C0C5  F0BF         	movff	efgtoa@u+1,efgtoa@g+1
  3027   000574  C0C6  F0C0         	movff	efgtoa@u+2,efgtoa@g+2
  3028   000578  C0C7  F0C1         	movff	efgtoa@u+3,efgtoa@g+3
  3029                           
  3030                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 666:   }
  3031   00057C  D04C               	goto	u9200
  3032   00057E                     l7239:
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 669:     u.f = u.f/10.0;
  3036   00057E  C0C4  F060         	movff	efgtoa@u,___fldiv@b
  3037   000582  C0C5  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3038   000586  C0C6  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3039   00058A  C0C7  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3040   00058E  0E00               	movlw	0
  3041   000590  6F64               	movwf	___fldiv@a& (0+255),b
  3042   000592  0E00               	movlw	0
  3043   000594  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3044   000596  0E20               	movlw	32
  3045   000598  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3046   00059A  0E41               	movlw	65
  3047   00059C  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3048   00059E  EC71  F00C         	call	___fldiv	;wreg free
  3049   0005A2  C060  F0C4         	movff	?___fldiv,efgtoa@u
  3050   0005A6  C061  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  3051   0005AA  C062  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  3052   0005AE  C063  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  3053                           
  3054                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 670:     --e;
  3055   0005B2  0100               	movlb	0	; () banked
  3056   0005B4  07AB               	decf	efgtoa@e& (0+255),f,b
  3057   0005B6  A0D8               	btfss	status,0,c
  3058   0005B8  07AC               	decf	(efgtoa@e+1)& (0+255),f,b
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 671:     if ((labs((g).u-(u).
      +                          u) <= 1)) {
  3062   0005BA  51C4               	movf	efgtoa@u& (0+255),w,b
  3063   0005BC  5DBE               	subwf	efgtoa@g& (0+255),w,b
  3064   0005BE  6F60               	movwf	labs@a& (0+255),b
  3065   0005C0  51C5               	movf	(efgtoa@u+1)& (0+255),w,b
  3066   0005C2  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3067   0005C4  6F61               	movwf	(labs@a+1)& (0+255),b
  3068   0005C6  51C6               	movf	(efgtoa@u+2)& (0+255),w,b
  3069   0005C8  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3070   0005CA  6F62               	movwf	(labs@a+2)& (0+255),b
  3071   0005CC  51C7               	movf	(efgtoa@u+3)& (0+255),w,b
  3072   0005CE  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3073   0005D0  6F63               	movwf	(labs@a+3)& (0+255),b
  3074   0005D2  EC0B  F017         	call	_labs	;wreg free
  3075   0005D6  0100               	movlb	0	; () banked
  3076   0005D8  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  3077   0005DA  D7C8               	goto	u9180
  3078   0005DC  5163               	movf	(?_labs+3)& (0+255),w,b
  3079   0005DE  1162               	iorwf	(?_labs+2)& (0+255),w,b
  3080   0005E0  1161               	iorwf	(?_labs+1)& (0+255),w,b
  3081   0005E2  E104               	bnz	l7247
  3082   0005E4  0E02               	movlw	2
  3083   0005E6  5D60               	subwf	?_labs& (0+255),w,b
  3084   0005E8  A0D8               	btfss	status,0,c
  3085   0005EA  D7C0               	goto	u9180
  3086   0005EC                     l7247:
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 668:    while (g.f < u.f) {
  3090   0005EC  C0BE  F087         	movff	efgtoa@g,___flge@ff1
  3091   0005F0  C0BF  F088         	movff	efgtoa@g+1,___flge@ff1+1
  3092   0005F4  C0C0  F089         	movff	efgtoa@g+2,___flge@ff1+2
  3093   0005F8  C0C1  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  3094   0005FC  C0C4  F08B         	movff	efgtoa@u,___flge@ff2
  3095   000600  C0C5  F08C         	movff	efgtoa@u+1,___flge@ff2+1
  3096   000604  C0C6  F08D         	movff	efgtoa@u+2,___flge@ff2+2
  3097   000608  C0C7  F08E         	movff	efgtoa@u+3,___flge@ff2+3
  3098   00060C  ECD0  F011         	call	___flge	;wreg free
  3099   000610  0100               	movlb	0	; () banked
  3100   000612  A0D8               	btfss	status,0,c
  3101   000614  D7B4               	goto	l7239
  3102   000616                     u9200:
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 683:  mode = c;
  3106                           
  3107                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 677:     }
  3108   000616  C099  F0A5         	movff	efgtoa@c,efgtoa@mode
  3109                           
  3110                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 685:     nmode = mode;
  3111   00061A  C0A5  F0A6         	movff	efgtoa@mode,efgtoa@nmode
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 695:  {;/opt/microchip/xc8/v2
      +                          .50/pic/sources/c99/common/doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
  3115   00061E  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  3116   000620  D005               	goto	l7253
  3117                           
  3118                           ; BSR set to: 0
  3119   000622  C0F0  F09E         	movff	_prec,efgtoa@p
  3120   000626  C0F1  F09F         	movff	_prec+1,efgtoa@p+1
  3121   00062A  D004               	goto	l7255
  3122   00062C                     l7253:
  3123                           
  3124                           ; BSR set to: 0
  3125   00062C  0E00               	movlw	0
  3126   00062E  6F9F               	movwf	(efgtoa@p+1)& (0+255),b
  3127   000630  0E06               	movlw	6
  3128   000632  6F9E               	movwf	efgtoa@p& (0+255),b
  3129   000634                     l7255:
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 697:     };/opt/microchip/xc8
      +                          /v2.50/pic/sources/c99/common/doprnt.c: 711:     m = p;
  3133   000634  C09E  F0A9         	movff	efgtoa@p,efgtoa@m
  3134   000638  C09F  F0AA         	movff	efgtoa@p+1,efgtoa@m+1
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 715:  {;/opt/microchip/xc8/v2
      +                          .50/pic/sources/c99/common/doprnt.c: 716:         ++m;
  3138   00063C  4BA9               	infsnz	efgtoa@m& (0+255),f,b
  3139   00063E  2BAA               	incf	(efgtoa@m+1)& (0+255),f,b
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 717:     };/opt/microchip/xc8
      +                          /v2.50/pic/sources/c99/common/doprnt.c: 721:     if (nmode == 'f') {
  3143   000640  0E66               	movlw	102
  3144   000642  19A6               	xorwf	efgtoa@nmode& (0+255),w,b
  3145   000644  A4D8               	btfss	status,2,c
  3146   000646  D016               	goto	l7269
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 722:         if (e < 0) {
  3150   000648  AFAC               	btfss	(efgtoa@e+1)& (0+255),7,b
  3151   00064A  D00C               	goto	l7265
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 723:             u.f = 1.0;
  3155   00064C  0E00               	movlw	0
  3156   00064E  6FC4               	movwf	efgtoa@u& (0+255),b
  3157   000650  0E00               	movlw	0
  3158   000652  6FC5               	movwf	(efgtoa@u+1)& (0+255),b
  3159   000654  0E80               	movlw	128
  3160   000656  6FC6               	movwf	(efgtoa@u+2)& (0+255),b
  3161   000658  0E3F               	movlw	63
  3162   00065A  6FC7               	movwf	(efgtoa@u+3)& (0+255),b
  3163                           
  3164                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 724:             e = 0;
  3165   00065C  0E00               	movlw	0
  3166   00065E  6FAC               	movwf	(efgtoa@e+1)& (0+255),b
  3167   000660  0E00               	movlw	0
  3168   000662  6FAB               	movwf	efgtoa@e& (0+255),b
  3169   000664                     l7265:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 726:         if (!(mode == 'g
      +                          ')) {
  3173   000664  0E67               	movlw	103
  3174   000666  19A5               	xorwf	efgtoa@mode& (0+255),w,b
  3175   000668  B4D8               	btfsc	status,2,c
  3176   00066A  D004               	goto	l7269
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 727:             m += e;
  3180   00066C  51AB               	movf	efgtoa@e& (0+255),w,b
  3181   00066E  27A9               	addwf	efgtoa@m& (0+255),f,b
  3182   000670  51AC               	movf	(efgtoa@e+1)& (0+255),w,b
  3183   000672  23AA               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3184   000674                     l7269:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 733:     i = 0;
  3188   000674  0E00               	movlw	0
  3189   000676  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3190   000678  0E00               	movlw	0
  3191   00067A  6FB3               	movwf	efgtoa@i& (0+255),b
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 734:     h = g.f;
  3195   00067C  C0BE  F0B5         	movff	efgtoa@g,efgtoa@h
  3196   000680  C0BF  F0B6         	movff	efgtoa@g+1,efgtoa@h+1
  3197   000684  C0C0  F0B7         	movff	efgtoa@g+2,efgtoa@h+2
  3198   000688  C0C1  F0B8         	movff	efgtoa@g+3,efgtoa@h+3
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 735:     ou = u;
  3202   00068C  C0C4  F0AF         	movff	efgtoa@u,efgtoa@ou
  3203   000690  C0C5  F0B0         	movff	efgtoa@u+1,efgtoa@ou+1
  3204   000694  C0C6  F0B1         	movff	efgtoa@u+2,efgtoa@ou+2
  3205   000698  C0C7  F0B2         	movff	efgtoa@u+3,efgtoa@ou+3
  3206                           
  3207                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 736:     while (i < m) {
  3208   00069C  D07C               	goto	l7283
  3209   00069E                     l7275:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 737:         l = floorf(h/u.f
      +                          );
  3213   00069E  C0B5  F060         	movff	efgtoa@h,___fldiv@b
  3214   0006A2  C0B6  F061         	movff	efgtoa@h+1,___fldiv@b+1
  3215   0006A6  C0B7  F062         	movff	efgtoa@h+2,___fldiv@b+2
  3216   0006AA  C0B8  F063         	movff	efgtoa@h+3,___fldiv@b+3
  3217   0006AE  C0C4  F064         	movff	efgtoa@u,___fldiv@a
  3218   0006B2  C0C5  F065         	movff	efgtoa@u+1,___fldiv@a+1
  3219   0006B6  C0C6  F066         	movff	efgtoa@u+2,___fldiv@a+2
  3220   0006BA  C0C7  F067         	movff	efgtoa@u+3,___fldiv@a+3
  3221   0006BE  EC71  F00C         	call	___fldiv	;wreg free
  3222   0006C2  C060  F079         	movff	?___fldiv,floorf@x
  3223   0006C6  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  3224   0006CA  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  3225   0006CE  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  3226   0006D2  EC9A  F00F         	call	_floorf	;wreg free
  3227   0006D6  C079  F0B9         	movff	?_floorf,efgtoa@l
  3228   0006DA  C07A  F0BA         	movff	?_floorf+1,efgtoa@l+1
  3229   0006DE  C07B  F0BB         	movff	?_floorf+2,efgtoa@l+2
  3230   0006E2  C07C  F0BC         	movff	?_floorf+3,efgtoa@l+3
  3231                           
  3232                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 738:         d = (int)l;
  3233   0006E6  C0B9  F087         	movff	efgtoa@l,___fltol@f1
  3234   0006EA  C0BA  F088         	movff	efgtoa@l+1,___fltol@f1+1
  3235   0006EE  C0BB  F089         	movff	efgtoa@l+2,___fltol@f1+2
  3236   0006F2  C0BC  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  3237   0006F6  ECFF  F012         	call	___fltol	;wreg free
  3238   0006FA  C087  F0A7         	movff	?___fltol,efgtoa@d
  3239   0006FE  C088  F0A8         	movff	?___fltol+1,efgtoa@d+1
  3240                           
  3241                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 739:         h -= l*u.f;
  3242   000702  C0B5  F087         	movff	efgtoa@h,___flsub@b
  3243   000706  C0B6  F088         	movff	efgtoa@h+1,___flsub@b+1
  3244   00070A  C0B7  F089         	movff	efgtoa@h+2,___flsub@b+2
  3245   00070E  C0B8  F08A         	movff	efgtoa@h+3,___flsub@b+3
  3246   000712  C0B9  F072         	movff	efgtoa@l,___flmul@a
  3247   000716  C0BA  F073         	movff	efgtoa@l+1,___flmul@a+1
  3248   00071A  C0BB  F074         	movff	efgtoa@l+2,___flmul@a+2
  3249   00071E  C0BC  F075         	movff	efgtoa@l+3,___flmul@a+3
  3250   000722  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3251   000726  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3252   00072A  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3253   00072E  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3254   000732  EC9D  F007         	call	___flmul	;wreg free
  3255   000736  C06E  F08B         	movff	?___flmul,___flsub@a
  3256   00073A  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  3257   00073E  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  3258   000742  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  3259   000746  EC31  F017         	call	___flsub	;wreg free
  3260   00074A  C087  F0B5         	movff	?___flsub,efgtoa@h
  3261   00074E  C088  F0B6         	movff	?___flsub+1,efgtoa@h+1
  3262   000752  C089  F0B7         	movff	?___flsub+2,efgtoa@h+2
  3263   000756  C08A  F0B8         	movff	?___flsub+3,efgtoa@h+3
  3264                           
  3265                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 740:         u.f = u.f/10.0;
  3266   00075A  C0C4  F060         	movff	efgtoa@u,___fldiv@b
  3267   00075E  C0C5  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3268   000762  C0C6  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3269   000766  C0C7  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3270   00076A  0E00               	movlw	0
  3271   00076C  0100               	movlb	0	; () banked
  3272   00076E  6F64               	movwf	___fldiv@a& (0+255),b
  3273   000770  0E00               	movlw	0
  3274   000772  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3275   000774  0E20               	movlw	32
  3276   000776  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3277   000778  0E41               	movlw	65
  3278   00077A  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3279   00077C  EC71  F00C         	call	___fldiv	;wreg free
  3280   000780  C060  F0C4         	movff	?___fldiv,efgtoa@u
  3281   000784  C061  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  3282   000788  C062  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  3283   00078C  C063  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  3284                           
  3285                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 741:         ++i;
  3286   000790  0100               	movlb	0	; () banked
  3287   000792  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  3288   000794  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  3289   000796                     l7283:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 736:     while (i < m) {
  3293   000796  51A9               	movf	efgtoa@m& (0+255),w,b
  3294   000798  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3295   00079A  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3296   00079C  0A80               	xorlw	128
  3297   00079E  6F9A               	movwf	??_efgtoa& (0+255),b
  3298   0007A0  51AA               	movf	(efgtoa@m+1)& (0+255),w,b
  3299   0007A2  0A80               	xorlw	128
  3300   0007A4  599A               	subwfb	??_efgtoa& (0+255),w,b
  3301   0007A6  A0D8               	btfss	status,0,c
  3302   0007A8  D77A               	goto	l7275
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 745:     l = u.f*5.0;
  3306   0007AA  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3307   0007AE  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3308   0007B2  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3309   0007B6  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3310   0007BA  0E00               	movlw	0
  3311   0007BC  6F72               	movwf	___flmul@a& (0+255),b
  3312   0007BE  0E00               	movlw	0
  3313   0007C0  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3314   0007C2  0EA0               	movlw	160
  3315   0007C4  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3316   0007C6  0E40               	movlw	64
  3317   0007C8  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3318   0007CA  EC9D  F007         	call	___flmul	;wreg free
  3319   0007CE  C06E  F0B9         	movff	?___flmul,efgtoa@l
  3320   0007D2  C06F  F0BA         	movff	?___flmul+1,efgtoa@l+1
  3321   0007D6  C070  F0BB         	movff	?___flmul+2,efgtoa@l+2
  3322   0007DA  C071  F0BC         	movff	?___flmul+3,efgtoa@l+3
  3323                           
  3324                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 746:     if (h < l) {
  3325   0007DE  C0B5  F087         	movff	efgtoa@h,___flge@ff1
  3326   0007E2  C0B6  F088         	movff	efgtoa@h+1,___flge@ff1+1
  3327   0007E6  C0B7  F089         	movff	efgtoa@h+2,___flge@ff1+2
  3328   0007EA  C0B8  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  3329   0007EE  C0B9  F08B         	movff	efgtoa@l,___flge@ff2
  3330   0007F2  C0BA  F08C         	movff	efgtoa@l+1,___flge@ff2+1
  3331   0007F6  C0BB  F08D         	movff	efgtoa@l+2,___flge@ff2+2
  3332   0007FA  C0BC  F08E         	movff	efgtoa@l+3,___flge@ff2+3
  3333   0007FE  ECD0  F011         	call	___flge	;wreg free
  3334   000802  0100               	movlb	0	; () banked
  3335   000804  A0D8               	btfss	status,0,c
  3336   000806  D016               	goto	u9280
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 750:         if ((h == l) && 
      +                          !(d % 2)) {
  3340                           
  3341                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 748:     } else {
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 747:         l = 0.0;
  3345   000808  C0B5  F060         	movff	efgtoa@h,___fleq@ff1
  3346   00080C  C0B6  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  3347   000810  C0B7  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  3348   000814  C0B8  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  3349   000818  C0B9  F064         	movff	efgtoa@l,___fleq@ff2
  3350   00081C  C0BA  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  3351   000820  C0BB  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  3352   000824  C0BC  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  3353   000828  EC55  F015         	call	___fleq	;wreg free
  3354   00082C  0100               	movlb	0	; () banked
  3355   00082E  B0D8               	btfsc	status,0,c
  3356                           
  3357                           ; BSR set to: 0
  3358   000830  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  3359   000832  D008               	goto	l7297
  3360   000834                     u9280:
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 751:             l = 0.0;
  3364   000834  0E00               	movlw	0
  3365   000836  6FB9               	movwf	efgtoa@l& (0+255),b
  3366   000838  0E00               	movlw	0
  3367   00083A  6FBA               	movwf	(efgtoa@l+1)& (0+255),b
  3368   00083C  0E00               	movlw	0
  3369   00083E  6FBB               	movwf	(efgtoa@l+2)& (0+255),b
  3370   000840  0E00               	movlw	0
  3371   000842  6FBC               	movwf	(efgtoa@l+3)& (0+255),b
  3372   000844                     l7297:
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 756:     h = g.f + l;
  3376   000844  C0BE  F060         	movff	efgtoa@g,___fladd@b
  3377   000848  C0BF  F061         	movff	efgtoa@g+1,___fladd@b+1
  3378   00084C  C0C0  F062         	movff	efgtoa@g+2,___fladd@b+2
  3379   000850  C0C1  F063         	movff	efgtoa@g+3,___fladd@b+3
  3380   000854  C0B9  F064         	movff	efgtoa@l,___fladd@a
  3381   000858  C0BA  F065         	movff	efgtoa@l+1,___fladd@a+1
  3382   00085C  C0BB  F066         	movff	efgtoa@l+2,___fladd@a+2
  3383   000860  C0BC  F067         	movff	efgtoa@l+3,___fladd@a+3
  3384   000864  ECEC  F00A         	call	___fladd	;wreg free
  3385   000868  C060  F0B5         	movff	?___fladd,efgtoa@h
  3386   00086C  C061  F0B6         	movff	?___fladd+1,efgtoa@h+1
  3387   000870  C062  F0B7         	movff	?___fladd+2,efgtoa@h+2
  3388   000874  C063  F0B8         	movff	?___fladd+3,efgtoa@h+3
  3389                           
  3390                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 758:  if (h >= (ou.f*10.0)) {
  3391   000878  C0B5  F087         	movff	efgtoa@h,___flge@ff1
  3392   00087C  C0B6  F088         	movff	efgtoa@h+1,___flge@ff1+1
  3393   000880  C0B7  F089         	movff	efgtoa@h+2,___flge@ff1+2
  3394   000884  C0B8  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  3395   000888  0E00               	movlw	0
  3396   00088A  0100               	movlb	0	; () banked
  3397   00088C  6F72               	movwf	___flmul@a& (0+255),b
  3398   00088E  0E00               	movlw	0
  3399   000890  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3400   000892  0E20               	movlw	32
  3401   000894  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3402   000896  0E41               	movlw	65
  3403   000898  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3404   00089A  C0AF  F06E         	movff	efgtoa@ou,___flmul@b
  3405   00089E  C0B0  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  3406   0008A2  C0B1  F070         	movff	efgtoa@ou+2,___flmul@b+2
  3407   0008A6  C0B2  F071         	movff	efgtoa@ou+3,___flmul@b+3
  3408   0008AA  EC9D  F007         	call	___flmul	;wreg free
  3409   0008AE  C06E  F08B         	movff	?___flmul,___flge@ff2
  3410   0008B2  C06F  F08C         	movff	?___flmul+1,___flge@ff2+1
  3411   0008B6  C070  F08D         	movff	?___flmul+2,___flge@ff2+2
  3412   0008BA  C071  F08E         	movff	?___flmul+3,___flge@ff2+3
  3413   0008BE  ECD0  F011         	call	___flge	;wreg free
  3414   0008C2  0100               	movlb	0	; () banked
  3415   0008C4  A0D8               	btfss	status,0,c
  3416   0008C6  D023               	goto	l7309
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 759:   e++;
  3420   0008C8  4BAB               	infsnz	efgtoa@e& (0+255),f,b
  3421   0008CA  2BAC               	incf	(efgtoa@e+1)& (0+255),f,b
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 760:   ou.f *= 10.0;
  3425   0008CC  C0AF  F06E         	movff	efgtoa@ou,___flmul@b
  3426   0008D0  C0B0  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  3427   0008D4  C0B1  F070         	movff	efgtoa@ou+2,___flmul@b+2
  3428   0008D8  C0B2  F071         	movff	efgtoa@ou+3,___flmul@b+3
  3429   0008DC  0E00               	movlw	0
  3430   0008DE  6F72               	movwf	___flmul@a& (0+255),b
  3431   0008E0  0E00               	movlw	0
  3432   0008E2  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3433   0008E4  0E20               	movlw	32
  3434   0008E6  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3435   0008E8  0E41               	movlw	65
  3436   0008EA  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3437   0008EC  EC9D  F007         	call	___flmul	;wreg free
  3438   0008F0  C06E  F0AF         	movff	?___flmul,efgtoa@ou
  3439   0008F4  C06F  F0B0         	movff	?___flmul+1,efgtoa@ou+1
  3440   0008F8  C070  F0B1         	movff	?___flmul+2,efgtoa@ou+2
  3441   0008FC  C071  F0B2         	movff	?___flmul+3,efgtoa@ou+3
  3442                           
  3443                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 762:   if (nmode == 'f') {
  3444   000900  0E66               	movlw	102
  3445   000902  0100               	movlb	0	; () banked
  3446   000904  19A6               	xorwf	efgtoa@nmode& (0+255),w,b
  3447   000906  A4D8               	btfss	status,2,c
  3448   000908  D002               	goto	l7309
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 764:    m++;
  3452   00090A  4BA9               	infsnz	efgtoa@m& (0+255),f,b
  3453   00090C  2BAA               	incf	(efgtoa@m+1)& (0+255),f,b
  3454   00090E                     l7309:
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 770:     u = ou;
  3458   00090E  C0AF  F0C4         	movff	efgtoa@ou,efgtoa@u
  3459   000912  C0B0  F0C5         	movff	efgtoa@ou+1,efgtoa@u+1
  3460   000916  C0B1  F0C6         	movff	efgtoa@ou+2,efgtoa@u+2
  3461   00091A  C0B2  F0C7         	movff	efgtoa@ou+3,efgtoa@u+3
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 774:  ne = e;
  3465   00091E  C0AB  F09C         	movff	efgtoa@e,efgtoa@ne
  3466   000922  C0AC  F09D         	movff	efgtoa@e+1,efgtoa@ne+1
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 776:     pp = 0;
  3470   000926  6BA4               	clrf	efgtoa@pp& (0+255),b
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 777:     t = 0;
  3474   000928  0E00               	movlw	0
  3475   00092A  6FA1               	movwf	(efgtoa@t+1)& (0+255),b
  3476   00092C  0E00               	movlw	0
  3477   00092E  6FA0               	movwf	efgtoa@t& (0+255),b
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 778:     i = 0;
  3481   000930  0E00               	movlw	0
  3482   000932  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3483   000934  0E00               	movlw	0
  3484   000936  6FB3               	movwf	efgtoa@i& (0+255),b
  3485                           
  3486                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 779:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3487   000938  D0CE               	goto	l7359
  3488   00093A                     l7319:
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 780:         l = floorf(h/u.f
      +                          );
  3492   00093A  C0B5  F060         	movff	efgtoa@h,___fldiv@b
  3493   00093E  C0B6  F061         	movff	efgtoa@h+1,___fldiv@b+1
  3494   000942  C0B7  F062         	movff	efgtoa@h+2,___fldiv@b+2
  3495   000946  C0B8  F063         	movff	efgtoa@h+3,___fldiv@b+3
  3496   00094A  C0C4  F064         	movff	efgtoa@u,___fldiv@a
  3497   00094E  C0C5  F065         	movff	efgtoa@u+1,___fldiv@a+1
  3498   000952  C0C6  F066         	movff	efgtoa@u+2,___fldiv@a+2
  3499   000956  C0C7  F067         	movff	efgtoa@u+3,___fldiv@a+3
  3500   00095A  EC71  F00C         	call	___fldiv	;wreg free
  3501   00095E  C060  F079         	movff	?___fldiv,floorf@x
  3502   000962  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  3503   000966  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  3504   00096A  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  3505   00096E  EC9A  F00F         	call	_floorf	;wreg free
  3506   000972  C079  F0B9         	movff	?_floorf,efgtoa@l
  3507   000976  C07A  F0BA         	movff	?_floorf+1,efgtoa@l+1
  3508   00097A  C07B  F0BB         	movff	?_floorf+2,efgtoa@l+2
  3509   00097E  C07C  F0BC         	movff	?_floorf+3,efgtoa@l+3
  3510                           
  3511                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 781:         d = (int)l > 9 ?
      +                           9 : (int)l;
  3512   000982  C0B9  F087         	movff	efgtoa@l,___fltol@f1
  3513   000986  C0BA  F088         	movff	efgtoa@l+1,___fltol@f1+1
  3514   00098A  C0BB  F089         	movff	efgtoa@l+2,___fltol@f1+2
  3515   00098E  C0BC  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  3516   000992  ECFF  F012         	call	___fltol	;wreg free
  3517   000996  0100               	movlb	0	; () banked
  3518   000998  BF88               	btfsc	(?___fltol+1)& (0+255),7,b
  3519   00099A  D006               	goto	u9310
  3520   00099C  5188               	movf	(?___fltol+1)& (0+255),w,b
  3521   00099E  E113               	bnz	l7323
  3522   0009A0  0E0A               	movlw	10
  3523   0009A2  5D87               	subwf	?___fltol& (0+255),w,b
  3524   0009A4  B0D8               	btfsc	status,0,c
  3525   0009A6  D00F               	goto	l7323
  3526   0009A8                     u9310:
  3527                           
  3528                           ; BSR set to: 0
  3529   0009A8  C0B9  F087         	movff	efgtoa@l,___fltol@f1
  3530   0009AC  C0BA  F088         	movff	efgtoa@l+1,___fltol@f1+1
  3531   0009B0  C0BB  F089         	movff	efgtoa@l+2,___fltol@f1+2
  3532   0009B4  C0BC  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  3533   0009B8  ECFF  F012         	call	___fltol	;wreg free
  3534   0009BC  C087  F0A7         	movff	?___fltol,efgtoa@d
  3535   0009C0  C088  F0A8         	movff	?___fltol+1,efgtoa@d+1
  3536   0009C4  D004               	goto	l1100
  3537   0009C6                     l7323:
  3538                           
  3539                           ; BSR set to: 0
  3540   0009C6  0E00               	movlw	0
  3541   0009C8  6FA8               	movwf	(efgtoa@d+1)& (0+255),b
  3542   0009CA  0E09               	movlw	9
  3543   0009CC  6FA7               	movwf	efgtoa@d& (0+255),b
  3544   0009CE                     l1100:
  3545                           
  3546                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 792:   {;/opt/microchip/xc8/v
      +                          2.50/pic/sources/c99/common/doprnt.c: 793:             if (!pp && (ne < 0)) {
  3547   0009CE  0100               	movlb	0	; () banked
  3548   0009D0  51A4               	movf	efgtoa@pp& (0+255),w,b
  3549   0009D2  B4D8               	btfsc	status,2,c
  3550                           
  3551                           ; BSR set to: 0
  3552   0009D4  AF9D               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3553   0009D6  D020               	goto	l7343
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 794:                 dbuf[n++
      +                          ] = '.';
  3557   0009D8  0E00               	movlw	low _dbuf
  3558   0009DA  25C2               	addwf	efgtoa@n& (0+255),w,b
  3559   0009DC  6ED9               	movwf	fsr2l,c
  3560   0009DE  0E01               	movlw	high _dbuf
  3561   0009E0  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3562   0009E2  6EDA               	movwf	fsr2h,c
  3563   0009E4  0E2E               	movlw	46
  3564   0009E6  6EDF               	movwf	indf2,c
  3565                           
  3566                           ; BSR set to: 0
  3567   0009E8  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3568   0009EA  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 795:                 --w;
  3572   0009EC  07AD               	decf	efgtoa@w& (0+255),f,b
  3573   0009EE  A0D8               	btfss	status,0,c
  3574   0009F0  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 796:                 pp = 1;
  3578   0009F2  0E01               	movlw	1
  3579   0009F4  6FA4               	movwf	efgtoa@pp& (0+255),b
  3580   0009F6  D010               	goto	l7343
  3581   0009F8                     l7335:
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 799:                 dbuf[n++
      +                          ] = '0';
  3585   0009F8  0E00               	movlw	low _dbuf
  3586   0009FA  25C2               	addwf	efgtoa@n& (0+255),w,b
  3587   0009FC  6ED9               	movwf	fsr2l,c
  3588   0009FE  0E01               	movlw	high _dbuf
  3589   000A00  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3590   000A02  6EDA               	movwf	fsr2h,c
  3591   000A04  0E30               	movlw	48
  3592   000A06  6EDF               	movwf	indf2,c
  3593                           
  3594                           ; BSR set to: 0
  3595   000A08  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3596   000A0A  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 800:                 --w;
  3600   000A0C  07AD               	decf	efgtoa@w& (0+255),f,b
  3601   000A0E  A0D8               	btfss	status,0,c
  3602   000A10  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 801:                 --t;
  3606   000A12  07A0               	decf	efgtoa@t& (0+255),f,b
  3607   000A14  A0D8               	btfss	status,0,c
  3608   000A16  07A1               	decf	(efgtoa@t+1)& (0+255),f,b
  3609   000A18                     l7343:
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 798:             while (t) {
  3613   000A18  51A0               	movf	efgtoa@t& (0+255),w,b
  3614   000A1A  11A1               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3615   000A1C  A4D8               	btfss	status,2,c
  3616   000A1E  D7EC               	goto	l7335
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 803:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  3620   000A20  0E00               	movlw	low _dbuf
  3621   000A22  25C2               	addwf	efgtoa@n& (0+255),w,b
  3622   000A24  6ED9               	movwf	fsr2l,c
  3623   000A26  0E01               	movlw	high _dbuf
  3624   000A28  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3625   000A2A  6EDA               	movwf	fsr2h,c
  3626   000A2C  51A7               	movf	efgtoa@d& (0+255),w,b
  3627   000A2E  0F30               	addlw	48
  3628   000A30  6EDF               	movwf	indf2,c
  3629                           
  3630                           ; BSR set to: 0
  3631   000A32  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3632   000A34  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 804:             --w;
  3636   000A36  07AD               	decf	efgtoa@w& (0+255),f,b
  3637   000A38  A0D8               	btfss	status,0,c
  3638   000A3A  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 805:         };/opt/microchip
      +                          /xc8/v2.50/pic/sources/c99/common/doprnt.c: 806:         h -= l*u.f;
  3642   000A3C  C0B5  F087         	movff	efgtoa@h,___flsub@b
  3643   000A40  C0B6  F088         	movff	efgtoa@h+1,___flsub@b+1
  3644   000A44  C0B7  F089         	movff	efgtoa@h+2,___flsub@b+2
  3645   000A48  C0B8  F08A         	movff	efgtoa@h+3,___flsub@b+3
  3646   000A4C  C0B9  F072         	movff	efgtoa@l,___flmul@a
  3647   000A50  C0BA  F073         	movff	efgtoa@l+1,___flmul@a+1
  3648   000A54  C0BB  F074         	movff	efgtoa@l+2,___flmul@a+2
  3649   000A58  C0BC  F075         	movff	efgtoa@l+3,___flmul@a+3
  3650   000A5C  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3651   000A60  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3652   000A64  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3653   000A68  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3654   000A6C  EC9D  F007         	call	___flmul	;wreg free
  3655   000A70  C06E  F08B         	movff	?___flmul,___flsub@a
  3656   000A74  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  3657   000A78  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  3658   000A7C  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  3659   000A80  EC31  F017         	call	___flsub	;wreg free
  3660   000A84  C087  F0B5         	movff	?___flsub,efgtoa@h
  3661   000A88  C088  F0B6         	movff	?___flsub+1,efgtoa@h+1
  3662   000A8C  C089  F0B7         	movff	?___flsub+2,efgtoa@h+2
  3663   000A90  C08A  F0B8         	movff	?___flsub+3,efgtoa@h+3
  3664                           
  3665                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 807:         u.f = u.f/10.0;
  3666   000A94  C0C4  F060         	movff	efgtoa@u,___fldiv@b
  3667   000A98  C0C5  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3668   000A9C  C0C6  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3669   000AA0  C0C7  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3670   000AA4  0E00               	movlw	0
  3671   000AA6  0100               	movlb	0	; () banked
  3672   000AA8  6F64               	movwf	___fldiv@a& (0+255),b
  3673   000AAA  0E00               	movlw	0
  3674   000AAC  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3675   000AAE  0E20               	movlw	32
  3676   000AB0  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3677   000AB2  0E41               	movlw	65
  3678   000AB4  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3679   000AB6  EC71  F00C         	call	___fldiv	;wreg free
  3680   000ABA  C060  F0C4         	movff	?___fldiv,efgtoa@u
  3681   000ABE  C061  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  3682   000AC2  C062  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  3683   000AC6  C063  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  3684                           
  3685                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 808:         --ne;
  3686   000ACA  0100               	movlb	0	; () banked
  3687   000ACC  079C               	decf	efgtoa@ne& (0+255),f,b
  3688   000ACE  A0D8               	btfss	status,0,c
  3689   000AD0  079D               	decf	(efgtoa@ne+1)& (0+255),f,b
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 809:         ++i;
  3693   000AD2  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  3694   000AD4  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  3695   000AD6                     l7359:
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 779:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3699   000AD6  51A9               	movf	efgtoa@m& (0+255),w,b
  3700   000AD8  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3701   000ADA  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3702   000ADC  0A80               	xorlw	128
  3703   000ADE  6F9A               	movwf	??_efgtoa& (0+255),b
  3704   000AE0  51AA               	movf	(efgtoa@m+1)& (0+255),w,b
  3705   000AE2  0A80               	xorlw	128
  3706   000AE4  599A               	subwfb	??_efgtoa& (0+255),w,b
  3707   000AE6  B0D8               	btfsc	status,0,c
  3708   000AE8  D008               	goto	u9360
  3709                           
  3710                           ; BSR set to: 0
  3711   000AEA  BFC3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3712   000AEC  D726               	goto	l7319
  3713   000AEE  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3714   000AF0  E104               	bnz	u9360
  3715   000AF2  0E4B               	movlw	75
  3716   000AF4  5DC2               	subwf	efgtoa@n& (0+255),w,b
  3717   000AF6  A0D8               	btfss	status,0,c
  3718   000AF8  D720               	goto	l7319
  3719   000AFA                     u9360:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 816:  i = sizeof(dbuf) - 1;
  3723   000AFA  0E00               	movlw	0
  3724   000AFC  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3725   000AFE  0E4F               	movlw	79
  3726   000B00  6FB3               	movwf	efgtoa@i& (0+255),b
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 817:     dbuf[i] = '\0';
  3730   000B02  0E00               	movlw	low _dbuf
  3731   000B04  25B3               	addwf	efgtoa@i& (0+255),w,b
  3732   000B06  6ED9               	movwf	fsr2l,c
  3733   000B08  0E01               	movlw	high _dbuf
  3734   000B0A  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3735   000B0C  6EDA               	movwf	fsr2h,c
  3736   000B0E  6ADF               	clrf	indf2,c
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 848:  memcpy(&dbuf[i-n], &dbu
      +                          f[0], (size_t)n);
  3740   000B10  0E00               	movlw	low _dbuf
  3741   000B12  6F9A               	movwf	??_efgtoa& (0+255),b
  3742   000B14  0E01               	movlw	high _dbuf
  3743   000B16  6F9B               	movwf	(??_efgtoa+1)& (0+255),b
  3744   000B18  51C2               	movf	efgtoa@n& (0+255),w,b
  3745   000B1A  5F9A               	subwf	??_efgtoa& (0+255),f,b
  3746   000B1C  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3747   000B1E  5B9B               	subwfb	(??_efgtoa+1)& (0+255),f,b
  3748   000B20  51B3               	movf	efgtoa@i& (0+255),w,b
  3749   000B22  259A               	addwf	??_efgtoa& (0+255),w,b
  3750   000B24  6F60               	movwf	memcpy@d1& (0+255),b
  3751   000B26  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3752   000B28  219B               	addwfc	(??_efgtoa+1)& (0+255),w,b
  3753   000B2A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3754   000B2C  0E00               	movlw	low _dbuf
  3755   000B2E  6F62               	movwf	memcpy@s1& (0+255),b
  3756   000B30  0E01               	movlw	high _dbuf
  3757   000B32  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  3758   000B34  C0C2  F064         	movff	efgtoa@n,memcpy@n
  3759   000B38  C0C3  F065         	movff	efgtoa@n+1,memcpy@n+1
  3760   000B3C  EC55  F017         	call	_memcpy	;wreg free
  3761                           
  3762                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 849:  n = i-n;
  3763   000B40  0100               	movlb	0	; () banked
  3764   000B42  51C2               	movf	efgtoa@n& (0+255),w,b
  3765   000B44  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3766   000B46  6FC2               	movwf	efgtoa@n& (0+255),b
  3767   000B48  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3768   000B4A  59B4               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3769   000B4C  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 850:  i = sign == 0 ? 0 : 1;
  3773   000B4E  51BD               	movf	efgtoa@sign& (0+255),w,b
  3774   000B50  B4D8               	btfsc	status,2,c
  3775   000B52  D002               	goto	u9370
  3776   000B54  0E01               	movlw	1
  3777   000B56  D001               	goto	u9380
  3778   000B58                     u9370:
  3779   000B58  0E00               	movlw	0
  3780   000B5A                     u9380:
  3781   000B5A  6FB3               	movwf	efgtoa@i& (0+255),b
  3782   000B5C  6BB4               	clrf	(efgtoa@i+1)& (0+255),b
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 861:  if (sign) {
  3786   000B5E  51BD               	movf	efgtoa@sign& (0+255),w,b
  3787   000B60  B4D8               	btfsc	status,2,c
  3788   000B62  D00B               	goto	l7377
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 862:   dbuf[--n] = sign;
  3792   000B64  07C2               	decf	efgtoa@n& (0+255),f,b
  3793   000B66  A0D8               	btfss	status,0,c
  3794   000B68  07C3               	decf	(efgtoa@n+1)& (0+255),f,b
  3795   000B6A  0E00               	movlw	low _dbuf
  3796   000B6C  25C2               	addwf	efgtoa@n& (0+255),w,b
  3797   000B6E  6ED9               	movwf	fsr2l,c
  3798   000B70  0E01               	movlw	high _dbuf
  3799   000B72  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3800   000B74  6EDA               	movwf	fsr2h,c
  3801   000B76  C0BD  FFDF         	movff	efgtoa@sign,indf2
  3802   000B7A                     l7377:
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 864:  w -= i;
  3806   000B7A  51B3               	movf	efgtoa@i& (0+255),w,b
  3807   000B7C  5FAD               	subwf	efgtoa@w& (0+255),f,b
  3808   000B7E  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3809   000B80  5BAE               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 867:     return (void) pad(fp
      +                          , &dbuf[n], w);
  3813   000B82  C093  F070         	movff	efgtoa@fp,pad@fp
  3814   000B86  C094  F071         	movff	efgtoa@fp+1,pad@fp+1
  3815   000B8A  0E00               	movlw	low _dbuf
  3816   000B8C  25C2               	addwf	efgtoa@n& (0+255),w,b
  3817   000B8E  6F72               	movwf	pad@buf& (0+255),b
  3818   000B90  0E01               	movlw	high _dbuf
  3819   000B92  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3820   000B94  6F73               	movwf	(pad@buf+1)& (0+255),b
  3821   000B96  C0AD  F074         	movff	efgtoa@w,pad@p
  3822   000B9A  C0AE  F075         	movff	efgtoa@w+1,pad@p+1
  3823   000B9E  EC10  F016         	call	_pad	;wreg free
  3824   000BA2  0012               	return		;funcret
  3825   000BA4                     __end_of_efgtoa:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _strcpy *****************
  3829 ;; Defined at:
  3830 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/strcpy.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  3833 ;;		 -> dbuf(80), 
  3834 ;;  src             1    2[BANK0 ] PTR const unsigned char 
  3835 ;;		 -> STR_11(4), STR_8(4), 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  d               2    4[BANK0 ] PTR unsigned char 
  3838 ;;		 -> dbuf(80), 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  2    0[BANK0 ] PTR unsigned char 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3848 ;;      Params:         0       3       0       0
  3849 ;;      Locals:         0       2       0       0
  3850 ;;      Temps:          0       1       0       0
  3851 ;;      Totals:         0       6       0       0
  3852 ;;Total ram usage:        6 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 3
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_efgtoa
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           	psect	text6
  3863   0030BC                     __ptext6:
  3864                           	callstack 0
  3865   0030BC                     _strcpy:
  3866                           	callstack 23
  3867                           
  3868                           ;incstack = 0
  3869   0030BC  C060  F064         	movff	strcpy@dest,strcpy@d
  3870   0030C0  C061  F065         	movff	strcpy@dest+1,strcpy@d+1
  3871   0030C4                     l7113:
  3872   0030C4  0100               	movlb	0	; () banked
  3873   0030C6  2B62               	incf	strcpy@src& (0+255),f,b
  3874   0030C8  0562               	decf	strcpy@src& (0+255),w,b
  3875   0030CA  6F63               	movwf	??_strcpy& (0+255),b
  3876   0030CC  C063  FFF6         	movff	??_strcpy,tblptrl
  3877   0030D0                     	if	1	;There is more than 1 active tblptr byte
  3878   0030D0  0E03               	movlw	high __smallconst
  3879   0030D2  6EF7               	movwf	tblptrh,c
  3880   0030D4                     	endif
  3881   0030D4                     	if	0	;tblptru may be non-zero
  3882   0030D4                     	endif
  3883   0030D4                     	if	0	;tblptru may be non-zero
  3884   0030D4                     	endif
  3885   0030D4  C064  FFD9         	movff	strcpy@d,fsr2l
  3886   0030D8  C065  FFDA         	movff	strcpy@d+1,fsr2h
  3887   0030DC  4B64               	infsnz	strcpy@d& (0+255),f,b
  3888   0030DE  2B65               	incf	(strcpy@d+1)& (0+255),f,b
  3889   0030E0  0008               	tblrd		*
  3890   0030E2  CFF5 FFDF          	movff	tablat,indf2
  3891   0030E6  50DF               	movf	indf2,w,c
  3892   0030E8  B4D8               	btfsc	status,2,c
  3893   0030EA  0012               	return	
  3894   0030EC  D7EB               	goto	l7113
  3895   0030EE                     __end_of_strcpy:
  3896                           	callstack 0
  3897                           
  3898 ;; *************** function _pad *****************
  3899 ;; Defined at:
  3900 ;;		line 193 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  3903 ;;		 -> sprintf@f(11), 
  3904 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  3905 ;;		 -> dbuf(80), 
  3906 ;;  p               2   20[BANK0 ] int 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  i               2   23[BANK0 ] int 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      void 
  3911 ;; Registers used:
  3912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3918 ;;      Params:         0       6       0       0
  3919 ;;      Locals:         0       2       0       0
  3920 ;;      Temps:          0       1       0       0
  3921 ;;      Totals:         0       9       0       0
  3922 ;;Total ram usage:        9 bytes
  3923 ;; Hardware stack levels used: 1
  3924 ;; Hardware stack levels required when called: 6
  3925 ;; This function calls:
  3926 ;;		_fputc
  3927 ;;		_fputs
  3928 ;; This function is called by:
  3929 ;;		_efgtoa
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text7
  3934   002C20                     __ptext7:
  3935                           	callstack 0
  3936   002C20                     _pad:
  3937                           	callstack 20
  3938                           
  3939                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 193: static void pad(FILE *fp
      +                          , char *buf, int p);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 194: {;/op
      +                          t/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 195:     int i;;/opt/microchip/xc
      +                          8/v2.50/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;incstack = 0
  3943   002C20  0100               	movlb	0	; () banked
  3944   002C22  AF75               	btfss	(pad@p+1)& (0+255),7,b
  3945   002C24  D004               	goto	l1052
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  3949   002C26  0E00               	movlw	0
  3950   002C28  6F75               	movwf	(pad@p+1)& (0+255),b
  3951   002C2A  0E00               	movlw	0
  3952   002C2C  6F74               	movwf	pad@p& (0+255),b
  3953   002C2E                     l1052:
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  3957   002C2E  0E00               	movlw	0
  3958   002C30  6F78               	movwf	(pad@i+1)& (0+255),b
  3959   002C32  0E00               	movlw	0
  3960   002C34  6F77               	movwf	pad@i& (0+255),b
  3961                           
  3962                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  3963   002C36  D00D               	goto	l7085
  3964   002C38                     l7081:
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 210:         fputc(' ', fp);
  3968   002C38  0E00               	movlw	0
  3969   002C3A  6F61               	movwf	(fputc@c+1)& (0+255),b
  3970   002C3C  0E20               	movlw	32
  3971   002C3E  6F60               	movwf	fputc@c& (0+255),b
  3972   002C40  C070  F062         	movff	pad@fp,fputc@fp
  3973   002C44  C071  F063         	movff	pad@fp+1,fputc@fp+1
  3974   002C48  EC0C  F015         	call	_fputc	;wreg free
  3975                           
  3976                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 211:         ++i;
  3977   002C4C  0100               	movlb	0	; () banked
  3978   002C4E  4B77               	infsnz	pad@i& (0+255),f,b
  3979   002C50  2B78               	incf	(pad@i+1)& (0+255),f,b
  3980   002C52                     l7085:
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  3984   002C52  5174               	movf	pad@p& (0+255),w,b
  3985   002C54  5D77               	subwf	pad@i& (0+255),w,b
  3986   002C56  5178               	movf	(pad@i+1)& (0+255),w,b
  3987   002C58  0A80               	xorlw	128
  3988   002C5A  6F76               	movwf	??_pad& (0+255),b
  3989   002C5C  5175               	movf	(pad@p+1)& (0+255),w,b
  3990   002C5E  0A80               	xorlw	128
  3991   002C60  5976               	subwfb	??_pad& (0+255),w,b
  3992   002C62  A0D8               	btfss	status,0,c
  3993   002C64  D7E9               	goto	l7081
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 218:         fputs((const cha
      +                          r *)buf, fp);
  3997   002C66  C072  F069         	movff	pad@buf,fputs@s
  3998   002C6A  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3999   002C6E  C070  F06B         	movff	pad@fp,fputs@fp
  4000   002C72  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  4001   002C76  EC40  F018         	call	_fputs	;wreg free
  4002   002C7A  0012               	return		;funcret
  4003   002C7C                     __end_of_pad:
  4004                           	callstack 0
  4005                           
  4006 ;; *************** function _fputs *****************
  4007 ;; Defined at:
  4008 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputs.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4011 ;;		 -> dbuf(80), 
  4012 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4013 ;;		 -> sprintf@f(11), 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  i               2   14[BANK0 ] int 
  4016 ;;  c               1   13[BANK0 ] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  2    9[BANK0 ] int 
  4019 ;; Registers used:
  4020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4026 ;;      Params:         0       4       0       0
  4027 ;;      Locals:         0       3       0       0
  4028 ;;      Temps:          0       0       0       0
  4029 ;;      Totals:         0       7       0       0
  4030 ;;Total ram usage:        7 bytes
  4031 ;; Hardware stack levels used: 1
  4032 ;; Hardware stack levels required when called: 5
  4033 ;; This function calls:
  4034 ;;		_fputc
  4035 ;; This function is called by:
  4036 ;;		_pad
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text8
  4041   003080                     __ptext8:
  4042                           	callstack 0
  4043   003080                     _fputs:
  4044                           	callstack 20
  4045                           
  4046                           ;incstack = 0
  4047   003080  0E00               	movlw	0
  4048   003082  0100               	movlb	0	; () banked
  4049   003084  6F6F               	movwf	(fputs@i+1)& (0+255),b
  4050   003086  0E00               	movlw	0
  4051   003088  6F6E               	movwf	fputs@i& (0+255),b
  4052   00308A  D00C               	goto	l6715
  4053   00308C                     l6711:
  4054                           
  4055                           ; BSR set to: 0
  4056   00308C  C06D  F060         	movff	fputs@c,fputc@c
  4057   003090  6B61               	clrf	(fputc@c+1)& (0+255),b
  4058   003092  C06B  F062         	movff	fputs@fp,fputc@fp
  4059   003096  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  4060   00309A  EC0C  F015         	call	_fputc	;wreg free
  4061   00309E  0100               	movlb	0	; () banked
  4062   0030A0  4B6E               	infsnz	fputs@i& (0+255),f,b
  4063   0030A2  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  4064   0030A4                     l6715:
  4065                           
  4066                           ; BSR set to: 0
  4067   0030A4  516E               	movf	fputs@i& (0+255),w,b
  4068   0030A6  2569               	addwf	fputs@s& (0+255),w,b
  4069   0030A8  6ED9               	movwf	fsr2l,c
  4070   0030AA  516F               	movf	(fputs@i+1)& (0+255),w,b
  4071   0030AC  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  4072   0030AE  6EDA               	movwf	fsr2h,c
  4073   0030B0  50DF               	movf	indf2,w,c
  4074   0030B2  6F6D               	movwf	fputs@c& (0+255),b
  4075   0030B4  516D               	movf	fputs@c& (0+255),w,b
  4076   0030B6  B4D8               	btfsc	status,2,c
  4077   0030B8  0012               	return	
  4078   0030BA  D7E8               	goto	l6711
  4079   0030BC                     __end_of_fputs:
  4080                           	callstack 0
  4081                           
  4082 ;; *************** function _fputc *****************
  4083 ;; Defined at:
  4084 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputc.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  c               2    0[BANK0 ] int 
  4087 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4088 ;;		 -> sprintf@f(11), 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  2    0[BANK0 ] int 
  4093 ;; Registers used:
  4094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4100 ;;      Params:         0       4       0       0
  4101 ;;      Locals:         0       0       0       0
  4102 ;;      Temps:          0       5       0       0
  4103 ;;      Totals:         0       9       0       0
  4104 ;;Total ram usage:        9 bytes
  4105 ;; Hardware stack levels used: 1
  4106 ;; Hardware stack levels required when called: 4
  4107 ;; This function calls:
  4108 ;;		_putch
  4109 ;; This function is called by:
  4110 ;;		_pad
  4111 ;;		_vfpfcnvrt
  4112 ;;		_fputs
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text9
  4117   002A18                     __ptext9:
  4118                           	callstack 0
  4119   002A18                     _fputc:
  4120                           	callstack 23
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;incstack = 0
  4124   002A18  0100               	movlb	0	; () banked
  4125   002A1A  5162               	movf	fputc@fp& (0+255),w,b
  4126   002A1C  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4127   002A1E  B4D8               	btfsc	status,2,c
  4128   002A20  D004               	goto	u7850
  4129                           
  4130                           ; BSR set to: 0
  4131   002A22  5162               	movf	fputc@fp& (0+255),w,b
  4132   002A24  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4133   002A26  A4D8               	btfss	status,2,c
  4134   002A28  D004               	goto	l6507
  4135   002A2A                     u7850:
  4136                           
  4137                           ; BSR set to: 0
  4138   002A2A  5160               	movf	fputc@c& (0+255),w,b
  4139   002A2C  EC1C  F019         	call	_putch
  4140   002A30  0012               	return	
  4141   002A32                     l6507:
  4142                           
  4143                           ; BSR set to: 0
  4144   002A32  EE20 F009          	lfsr	2,9
  4145   002A36  5162               	movf	fputc@fp& (0+255),w,b
  4146   002A38  26D9               	addwf	fsr2l,f,c
  4147   002A3A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4148   002A3C  22DA               	addwfc	fsr2h,f,c
  4149   002A3E  50DE               	movf	postinc2,w,c
  4150   002A40  10DE               	iorwf	postinc2,w,c
  4151   002A42  B4D8               	btfsc	status,2,c
  4152   002A44  D016               	goto	u7870
  4153                           
  4154                           ; BSR set to: 0
  4155   002A46  EE20 F009          	lfsr	2,9
  4156   002A4A  5162               	movf	fputc@fp& (0+255),w,b
  4157   002A4C  26D9               	addwf	fsr2l,f,c
  4158   002A4E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4159   002A50  22DA               	addwfc	fsr2h,f,c
  4160   002A52  EE10 F002          	lfsr	1,2
  4161   002A56  5162               	movf	fputc@fp& (0+255),w,b
  4162   002A58  26E1               	addwf	fsr1l,f,c
  4163   002A5A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4164   002A5C  22E2               	addwfc	fsr1h,f,c
  4165   002A5E  50DE               	movf	postinc2,w,c
  4166   002A60  5CE6               	subwf	postinc1,w,c
  4167   002A62  50E6               	movf	postinc1,w,c
  4168   002A64  0A80               	xorlw	128
  4169   002A66  6F68               	movwf	(??_fputc+4)& (0+255),b
  4170   002A68  50DE               	movf	postinc2,w,c
  4171   002A6A  0A80               	xorlw	128
  4172   002A6C  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  4173   002A6E  B0D8               	btfsc	status,0,c
  4174   002A70  0012               	return	
  4175   002A72                     u7870:
  4176                           
  4177                           ; BSR set to: 0
  4178   002A72  EE20 F002          	lfsr	2,2
  4179   002A76  5162               	movf	fputc@fp& (0+255),w,b
  4180   002A78  26D9               	addwf	fsr2l,f,c
  4181   002A7A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4182   002A7C  22DA               	addwfc	fsr2h,f,c
  4183   002A7E  50DF               	movf	indf2,w,c
  4184   002A80  6F64               	movwf	??_fputc& (0+255),b
  4185   002A82  C062  FFD9         	movff	fputc@fp,fsr2l
  4186   002A86  C063  FFDA         	movff	fputc@fp+1,fsr2h
  4187   002A8A  50DF               	movf	indf2,w,c
  4188   002A8C  2564               	addwf	??_fputc& (0+255),w,b
  4189   002A8E  6ED9               	movwf	fsr2l,c
  4190   002A90  6ADA               	clrf	fsr2h,c
  4191   002A92  C060  FFDF         	movff	fputc@c,indf2
  4192   002A96  EE20 F002          	lfsr	2,2
  4193   002A9A  5162               	movf	fputc@fp& (0+255),w,b
  4194   002A9C  26D9               	addwf	fsr2l,f,c
  4195   002A9E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4196   002AA0  22DA               	addwfc	fsr2h,f,c
  4197   002AA2  2ADE               	incf	postinc2,f,c
  4198   002AA4  0E00               	movlw	0
  4199   002AA6  22DD               	addwfc	postdec2,f,c
  4200   002AA8  0012               	return		;funcret
  4201   002AAA                     __end_of_fputc:
  4202                           	callstack 0
  4203                           
  4204 ;; *************** function _putch *****************
  4205 ;; Defined at:
  4206 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/putch.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  c               1    wreg     unsigned char 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;  c               1    0[COMRAM] unsigned char 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      void 
  4213 ;; Registers used:
  4214 ;;		wreg
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4220 ;;      Params:         0       0       0       0
  4221 ;;      Locals:         0       0       0       0
  4222 ;;      Temps:          0       0       0       0
  4223 ;;      Totals:         0       0       0       0
  4224 ;;Total ram usage:        0 bytes
  4225 ;; Hardware stack levels used: 1
  4226 ;; Hardware stack levels required when called: 3
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_fputc
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text10
  4235   003238                     __ptext10:
  4236                           	callstack 0
  4237   003238                     _putch:
  4238                           	callstack 23
  4239                           
  4240                           ;incstack = 0
  4241   003238  0012               	return		;funcret
  4242   00323A                     __end_of_putch:
  4243                           	callstack 0
  4244                           
  4245 ;; *************** function _memcpy *****************
  4246 ;; Defined at:
  4247 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/memcpy.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  d1              2    0[BANK0 ] PTR void 
  4250 ;;		 -> dbuf(80), 
  4251 ;;  s1              2    2[BANK0 ] PTR const void 
  4252 ;;		 -> dbuf(80), 
  4253 ;;  n               2    4[BANK0 ] unsigned int 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4256 ;;		 -> dbuf(80), 
  4257 ;;  d               2    7[BANK0 ] PTR unsigned char 
  4258 ;;		 -> dbuf(80), 
  4259 ;;  tmp             1    6[BANK0 ] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  2    0[BANK0 ] PTR void 
  4262 ;; Registers used:
  4263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4269 ;;      Params:         0       6       0       0
  4270 ;;      Locals:         0       5       0       0
  4271 ;;      Temps:          0       0       0       0
  4272 ;;      Totals:         0      11       0       0
  4273 ;;Total ram usage:       11 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; Hardware stack levels required when called: 3
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_efgtoa
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text11
  4284   002EAA                     __ptext11:
  4285                           	callstack 0
  4286   002EAA                     _memcpy:
  4287                           	callstack 23
  4288                           
  4289                           ;incstack = 0
  4290   002EAA  C062  F069         	movff	memcpy@s1,memcpy@s
  4291   002EAE  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
  4292   002EB2  C060  F067         	movff	memcpy@d1,memcpy@d
  4293   002EB6  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
  4294   002EBA  D010               	goto	l7161
  4295   002EBC                     l7153:
  4296                           
  4297                           ; BSR set to: 0
  4298   002EBC  C069  FFD9         	movff	memcpy@s,fsr2l
  4299   002EC0  C06A  FFDA         	movff	memcpy@s+1,fsr2h
  4300   002EC4  50DF               	movf	indf2,w,c
  4301   002EC6  6F66               	movwf	memcpy@tmp& (0+255),b
  4302                           
  4303                           ; BSR set to: 0
  4304   002EC8  4B69               	infsnz	memcpy@s& (0+255),f,b
  4305   002ECA  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
  4306                           
  4307                           ; BSR set to: 0
  4308   002ECC  C067  FFD9         	movff	memcpy@d,fsr2l
  4309   002ED0  C068  FFDA         	movff	memcpy@d+1,fsr2h
  4310   002ED4  C066  FFDF         	movff	memcpy@tmp,indf2
  4311                           
  4312                           ; BSR set to: 0
  4313   002ED8  4B67               	infsnz	memcpy@d& (0+255),f,b
  4314   002EDA  2B68               	incf	(memcpy@d+1)& (0+255),f,b
  4315   002EDC                     l7161:
  4316   002EDC  0100               	movlb	0	; () banked
  4317   002EDE  0764               	decf	memcpy@n& (0+255),f,b
  4318   002EE0  A0D8               	btfss	status,0,c
  4319   002EE2  0765               	decf	(memcpy@n+1)& (0+255),f,b
  4320   002EE4  2964               	incf	memcpy@n& (0+255),w,b
  4321   002EE6  E1EA               	bnz	l7153
  4322   002EE8  2965               	incf	(memcpy@n+1)& (0+255),w,b
  4323   002EEA  B4D8               	btfsc	status,2,c
  4324   002EEC  0012               	return	
  4325   002EEE  D7E6               	goto	l7153
  4326   002EF0                     __end_of_memcpy:
  4327                           	callstack 0
  4328                           
  4329 ;; *************** function _labs *****************
  4330 ;; Defined at:
  4331 ;;		line 1 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/labs.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  a               4    0[BANK0 ] long 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;		None
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  4    0[BANK0 ] long 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4345 ;;      Params:         0       4       0       0
  4346 ;;      Locals:         0       0       0       0
  4347 ;;      Temps:          0       4       0       0
  4348 ;;      Totals:         0       8       0       0
  4349 ;;Total ram usage:        8 bytes
  4350 ;; Hardware stack levels used: 1
  4351 ;; Hardware stack levels required when called: 3
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_efgtoa
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text12
  4360   002E16                     __ptext12:
  4361                           	callstack 0
  4362   002E16                     _labs:
  4363                           	callstack 23
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;incstack = 0
  4367   002E16  0100               	movlb	0	; () banked
  4368   002E18  BF63               	btfsc	(labs@a+3)& (0+255),7,b
  4369   002E1A  D009               	goto	l7119
  4370                           
  4371                           ; BSR set to: 0
  4372   002E1C  C060  F060         	movff	labs@a,?_labs
  4373   002E20  C061  F061         	movff	labs@a+1,?_labs+1
  4374   002E24  C062  F062         	movff	labs@a+2,?_labs+2
  4375   002E28  C063  F063         	movff	labs@a+3,?_labs+3
  4376   002E2C  0012               	return	
  4377   002E2E                     l7119:
  4378                           
  4379                           ; BSR set to: 0
  4380   002E2E  C060  F064         	movff	labs@a,??_labs
  4381   002E32  C061  F065         	movff	labs@a+1,??_labs+1
  4382   002E36  C062  F066         	movff	labs@a+2,??_labs+2
  4383   002E3A  C063  F067         	movff	labs@a+3,??_labs+3
  4384   002E3E  1F64               	comf	??_labs& (0+255),f,b
  4385   002E40  1F65               	comf	(??_labs+1)& (0+255),f,b
  4386   002E42  1F66               	comf	(??_labs+2)& (0+255),f,b
  4387   002E44  1F67               	comf	(??_labs+3)& (0+255),f,b
  4388   002E46  2B64               	incf	??_labs& (0+255),f,b
  4389   002E48  0E00               	movlw	0
  4390   002E4A  2365               	addwfc	(??_labs+1)& (0+255),f,b
  4391   002E4C  2366               	addwfc	(??_labs+2)& (0+255),f,b
  4392   002E4E  2367               	addwfc	(??_labs+3)& (0+255),f,b
  4393   002E50  C064  F060         	movff	??_labs,?_labs
  4394   002E54  C065  F061         	movff	??_labs+1,?_labs+1
  4395   002E58  C066  F062         	movff	??_labs+2,?_labs+2
  4396   002E5C  C067  F063         	movff	??_labs+3,?_labs+3
  4397                           
  4398                           ; BSR set to: 0
  4399   002E60  0012               	return		;funcret
  4400   002E62                     __end_of_labs:
  4401                           	callstack 0
  4402                           
  4403 ;; *************** function _floorf *****************
  4404 ;; Defined at:
  4405 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/floorf.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  x               4   25[BANK0 ] float 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  u               4   41[BANK0 ] struct .
  4410 ;;  m               4   35[BANK0 ] unsigned long 
  4411 ;;  e               2   39[BANK0 ] int 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  4   25[BANK0 ] float 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4421 ;;      Params:         0       4       0       0
  4422 ;;      Locals:         0      10       0       0
  4423 ;;      Temps:          0       6       0       0
  4424 ;;      Totals:         0      20       0       0
  4425 ;;Total ram usage:       20 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; Hardware stack levels required when called: 3
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_efgtoa
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text13
  4436   001F34                     __ptext13:
  4437                           	callstack 0
  4438   001F34                     _floorf:
  4439                           	callstack 23
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;incstack = 0
  4443   001F34  C0E2  F089         	movff	floorf@F521,floorf@u
  4444   001F38  C0E3  F08A         	movff	floorf@F521+1,floorf@u+1
  4445   001F3C  C0E4  F08B         	movff	floorf@F521+2,floorf@u+2
  4446   001F40  C0E5  F08C         	movff	floorf@F521+3,floorf@u+3
  4447   001F44  C079  F089         	movff	floorf@x,floorf@u
  4448   001F48  C07A  F08A         	movff	floorf@x+1,floorf@u+1
  4449   001F4C  C07B  F08B         	movff	floorf@x+2,floorf@u+2
  4450   001F50  C07C  F08C         	movff	floorf@x+3,floorf@u+3
  4451   001F54  0E81               	movlw	129
  4452   001F56  0100               	movlb	0	; () banked
  4453   001F58  6F7D               	movwf	??_floorf& (0+255),b
  4454   001F5A  0EFF               	movlw	255
  4455   001F5C  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4456   001F5E  C089  F07F         	movff	floorf@u,??_floorf+2
  4457   001F62  C08A  F080         	movff	floorf@u+1,??_floorf+3
  4458   001F66  C08B  F081         	movff	floorf@u+2,??_floorf+4
  4459   001F6A  C08C  F082         	movff	floorf@u+3,??_floorf+5
  4460   001F6E  0E18               	movlw	24
  4461   001F70  D005               	goto	u8970
  4462   001F72                     u8975:
  4463   001F72  90D8               	bcf	status,0,c
  4464   001F74  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  4465   001F76  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4466   001F78  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4467   001F7A  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4468   001F7C                     u8970:
  4469   001F7C  2EE8               	decfsz	wreg,f,c
  4470   001F7E  D7F9               	goto	u8975
  4471   001F80  517F               	movf	(??_floorf+2)& (0+255),w,b
  4472   001F82  257D               	addwf	??_floorf& (0+255),w,b
  4473   001F84  6F87               	movwf	floorf@e& (0+255),b
  4474   001F86  0E00               	movlw	0
  4475   001F88  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  4476   001F8A  6F88               	movwf	(floorf@e+1)& (0+255),b
  4477   001F8C  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4478   001F8E  D00F               	goto	l7129
  4479   001F90  5188               	movf	(floorf@e+1)& (0+255),w,b
  4480   001F92  E104               	bnz	u8980
  4481   001F94  0E17               	movlw	23
  4482   001F96  5D87               	subwf	floorf@e& (0+255),w,b
  4483   001F98  A0D8               	btfss	status,0,c
  4484   001F9A  D009               	goto	l7129
  4485   001F9C                     u8980:
  4486                           
  4487                           ; BSR set to: 0
  4488   001F9C  C079  F079         	movff	floorf@x,?_floorf
  4489   001FA0  C07A  F07A         	movff	floorf@x+1,?_floorf+1
  4490   001FA4  C07B  F07B         	movff	floorf@x+2,?_floorf+2
  4491   001FA8  C07C  F07C         	movff	floorf@x+3,?_floorf+3
  4492   001FAC  0012               	return	
  4493   001FAE                     l7129:
  4494                           
  4495                           ; BSR set to: 0
  4496   001FAE  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4497   001FB0  D05F               	goto	l7139
  4498                           
  4499                           ; BSR set to: 0
  4500   001FB2  C087  F07D         	movff	floorf@e,??_floorf
  4501   001FB6  0EFF               	movlw	255
  4502   001FB8  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4503   001FBA  0EFF               	movlw	255
  4504   001FBC  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4505   001FBE  0E7F               	movlw	127
  4506   001FC0  6F80               	movwf	(??_floorf+3)& (0+255),b
  4507   001FC2  0E00               	movlw	0
  4508   001FC4  6F81               	movwf	(??_floorf+4)& (0+255),b
  4509   001FC6                     u9005:
  4510   001FC6  677D               	tstfsz	??_floorf& (0+255),b
  4511   001FC8  D001               	goto	u9006
  4512   001FCA  D007               	goto	u9007
  4513   001FCC                     u9006:
  4514   001FCC  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  4515   001FCE  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4516   001FD0  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4517   001FD2  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4518   001FD4  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4519   001FD6  2F7D               	decfsz	??_floorf& (0+255),f,b
  4520   001FD8  D7F6               	goto	u9005
  4521   001FDA                     u9007:
  4522   001FDA  C07E  F083         	movff	??_floorf+1,floorf@m
  4523   001FDE  C07F  F084         	movff	??_floorf+2,floorf@m+1
  4524   001FE2  C080  F085         	movff	??_floorf+3,floorf@m+2
  4525   001FE6  C081  F086         	movff	??_floorf+4,floorf@m+3
  4526   001FEA  0100               	movlb	0	; () banked
  4527   001FEC  5183               	movf	floorf@m& (0+255),w,b
  4528   001FEE  1589               	andwf	floorf@u& (0+255),w,b
  4529   001FF0  6F7D               	movwf	??_floorf& (0+255),b
  4530   001FF2  5184               	movf	(floorf@m+1)& (0+255),w,b
  4531   001FF4  158A               	andwf	(floorf@u+1)& (0+255),w,b
  4532   001FF6  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4533   001FF8  5185               	movf	(floorf@m+2)& (0+255),w,b
  4534   001FFA  158B               	andwf	(floorf@u+2)& (0+255),w,b
  4535   001FFC  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4536   001FFE  5186               	movf	(floorf@m+3)& (0+255),w,b
  4537   002000  158C               	andwf	(floorf@u+3)& (0+255),w,b
  4538   002002  6F80               	movwf	(??_floorf+3)& (0+255),b
  4539   002004  517D               	movf	??_floorf& (0+255),w,b
  4540   002006  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4541   002008  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4542   00200A  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4543   00200C  B4D8               	btfsc	status,2,c
  4544   00200E  D7C6               	goto	u8980
  4545                           
  4546                           ; BSR set to: 0
  4547   002010  C089  F07D         	movff	floorf@u,??_floorf
  4548   002014  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  4549   002018  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  4550   00201C  C08C  F080         	movff	floorf@u+3,??_floorf+3
  4551   002020  0E20               	movlw	32
  4552   002022  D005               	goto	u9020
  4553   002024                     u9025:
  4554   002024  90D8               	bcf	status,0,c
  4555   002026  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4556   002028  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4557   00202A  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4558   00202C  337D               	rrcf	??_floorf& (0+255),f,b
  4559   00202E                     u9020:
  4560   00202E  2EE8               	decfsz	wreg,f,c
  4561   002030  D7F9               	goto	u9025
  4562   002032  517D               	movf	??_floorf& (0+255),w,b
  4563   002034  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4564   002036  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4565   002038  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4566   00203A  B4D8               	btfsc	status,2,c
  4567   00203C  D008               	goto	l1163
  4568                           
  4569                           ; BSR set to: 0
  4570   00203E  5183               	movf	floorf@m& (0+255),w,b
  4571   002040  2789               	addwf	floorf@u& (0+255),f,b
  4572   002042  5184               	movf	(floorf@m+1)& (0+255),w,b
  4573   002044  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  4574   002046  5185               	movf	(floorf@m+2)& (0+255),w,b
  4575   002048  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  4576   00204A  5186               	movf	(floorf@m+3)& (0+255),w,b
  4577   00204C  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  4578   00204E                     l1163:
  4579                           
  4580                           ; BSR set to: 0
  4581   00204E  1D83               	comf	floorf@m& (0+255),w,b
  4582   002050  6F7D               	movwf	??_floorf& (0+255),b
  4583   002052  1D84               	comf	(floorf@m+1)& (0+255),w,b
  4584   002054  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4585   002056  1D85               	comf	(floorf@m+2)& (0+255),w,b
  4586   002058  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4587   00205A  1D86               	comf	(floorf@m+3)& (0+255),w,b
  4588   00205C  6F80               	movwf	(??_floorf+3)& (0+255),b
  4589   00205E  517D               	movf	??_floorf& (0+255),w,b
  4590   002060  1789               	andwf	floorf@u& (0+255),f,b
  4591   002062  517E               	movf	(??_floorf+1)& (0+255),w,b
  4592   002064  178A               	andwf	(floorf@u+1)& (0+255),f,b
  4593   002066  517F               	movf	(??_floorf+2)& (0+255),w,b
  4594   002068  178B               	andwf	(floorf@u+2)& (0+255),f,b
  4595   00206A  5180               	movf	(??_floorf+3)& (0+255),w,b
  4596   00206C  178C               	andwf	(floorf@u+3)& (0+255),f,b
  4597   00206E  D036               	goto	l7147
  4598   002070                     l7139:
  4599                           
  4600                           ; BSR set to: 0
  4601   002070  C089  F07D         	movff	floorf@u,??_floorf
  4602   002074  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  4603   002078  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  4604   00207C  C08C  F080         	movff	floorf@u+3,??_floorf+3
  4605   002080  0E20               	movlw	32
  4606   002082  D005               	goto	u9040
  4607   002084                     u9045:
  4608   002084  90D8               	bcf	status,0,c
  4609   002086  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4610   002088  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4611   00208A  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4612   00208C  337D               	rrcf	??_floorf& (0+255),f,b
  4613   00208E                     u9040:
  4614   00208E  2EE8               	decfsz	wreg,f,c
  4615   002090  D7F9               	goto	u9045
  4616   002092  517D               	movf	??_floorf& (0+255),w,b
  4617   002094  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4618   002096  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4619   002098  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4620   00209A  A4D8               	btfss	status,2,c
  4621   00209C  D008               	goto	l7143
  4622                           
  4623                           ; BSR set to: 0
  4624   00209E  0E00               	movlw	0
  4625   0020A0  6F89               	movwf	floorf@u& (0+255),b
  4626   0020A2  0E00               	movlw	0
  4627   0020A4  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4628   0020A6  0E00               	movlw	0
  4629   0020A8  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4630   0020AA  0E00               	movlw	0
  4631   0020AC  D016               	goto	L3
  4632   0020AE                     l7143:
  4633                           
  4634                           ; BSR set to: 0
  4635   0020AE  90D8               	bcf	status,0,c
  4636   0020B0  3589               	rlcf	floorf@u& (0+255),w,b
  4637   0020B2  6F7D               	movwf	??_floorf& (0+255),b
  4638   0020B4  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  4639   0020B6  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4640   0020B8  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  4641   0020BA  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4642   0020BC  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  4643   0020BE  6F80               	movwf	(??_floorf+3)& (0+255),b
  4644   0020C0  517D               	movf	??_floorf& (0+255),w,b
  4645   0020C2  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4646   0020C4  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4647   0020C6  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4648   0020C8  B4D8               	btfsc	status,2,c
  4649   0020CA  D008               	goto	l7147
  4650                           
  4651                           ; BSR set to: 0
  4652   0020CC  0E00               	movlw	0
  4653   0020CE  6F89               	movwf	floorf@u& (0+255),b
  4654   0020D0  0E00               	movlw	0
  4655   0020D2  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4656   0020D4  0E80               	movlw	128
  4657   0020D6  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4658   0020D8  0EBF               	movlw	191
  4659   0020DA                     L3:
  4660   0020DA  6F8C               	movwf	(floorf@u+3)& (0+255),b
  4661   0020DC                     l7147:
  4662                           
  4663                           ; BSR set to: 0
  4664   0020DC  C089  F079         	movff	floorf@u,?_floorf
  4665   0020E0  C08A  F07A         	movff	floorf@u+1,?_floorf+1
  4666   0020E4  C08B  F07B         	movff	floorf@u+2,?_floorf+2
  4667   0020E8  C08C  F07C         	movff	floorf@u+3,?_floorf+3
  4668                           
  4669                           ; BSR set to: 0
  4670   0020EC  0012               	return		;funcret
  4671   0020EE                     __end_of_floorf:
  4672                           	callstack 0
  4673                           
  4674 ;; *************** function ___fpclassifyf *****************
  4675 ;; Defined at:
  4676 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/__fpclassifyf.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  x               4    0[BANK0 ] float 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  u               4   10[BANK0 ] struct .
  4681 ;;  e               2    8[BANK0 ] int 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  2    0[BANK0 ] int 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4691 ;;      Params:         0       4       0       0
  4692 ;;      Locals:         0       6       0       0
  4693 ;;      Temps:          0       4       0       0
  4694 ;;      Totals:         0      14       0       0
  4695 ;;Total ram usage:       14 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; Hardware stack levels required when called: 3
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_efgtoa
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text14
  4706   002472                     __ptext14:
  4707                           	callstack 0
  4708   002472                     ___fpclassifyf:
  4709                           	callstack 23
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;incstack = 0
  4713   002472  C0E6  F06A         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4714   002476  C0E7  F06B         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4715   00247A  C0E8  F06C         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4716   00247E  C0E9  F06D         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4717   002482  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  4718   002486  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4719   00248A  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4720   00248E  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4721   002492  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  4722   002496  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4723   00249A  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4724   00249E  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4725   0024A2  0E18               	movlw	24
  4726   0024A4  D006               	goto	u8880
  4727   0024A6                     u8885:
  4728   0024A6  0100               	movlb	0	; () banked
  4729   0024A8  90D8               	bcf	status,0,c
  4730   0024AA  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  4731   0024AC  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  4732   0024AE  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  4733   0024B0  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  4734   0024B2                     u8880:
  4735   0024B2  2EE8               	decfsz	wreg,f,c
  4736   0024B4  D7F8               	goto	u8885
  4737   0024B6  5164               	movf	??___fpclassifyf& (0+255),w,b
  4738   0024B8  6F68               	movwf	___fpclassifyf@e& (0+255),b
  4739   0024BA  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  4740   0024BC  5168               	movf	___fpclassifyf@e& (0+255),w,b
  4741   0024BE  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  4742   0024C0  A4D8               	btfss	status,2,c
  4743   0024C2  D019               	goto	l7101
  4744                           
  4745                           ; BSR set to: 0
  4746   0024C4  90D8               	bcf	status,0,c
  4747   0024C6  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  4748   0024C8  6F64               	movwf	??___fpclassifyf& (0+255),b
  4749   0024CA  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  4750   0024CC  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  4751   0024CE  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  4752   0024D0  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  4753   0024D2  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  4754   0024D4  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  4755   0024D6  5164               	movf	??___fpclassifyf& (0+255),w,b
  4756   0024D8  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  4757   0024DA  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  4758   0024DC  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  4759   0024DE  A4D8               	btfss	status,2,c
  4760   0024E0  D005               	goto	l7097
  4761                           
  4762                           ; BSR set to: 0
  4763   0024E2  0E00               	movlw	0
  4764   0024E4  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  4765   0024E6  0E02               	movlw	2
  4766   0024E8  6F60               	movwf	?___fpclassifyf& (0+255),b
  4767   0024EA  0012               	return	
  4768   0024EC                     l7097:
  4769                           
  4770                           ; BSR set to: 0
  4771   0024EC  0E00               	movlw	0
  4772   0024EE  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  4773   0024F0  0E03               	movlw	3
  4774   0024F2  6F60               	movwf	?___fpclassifyf& (0+255),b
  4775   0024F4  0012               	return	
  4776   0024F6                     l7101:
  4777                           
  4778                           ; BSR set to: 0
  4779   0024F6  2968               	incf	___fpclassifyf@e& (0+255),w,b
  4780   0024F8  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  4781   0024FA  A4D8               	btfss	status,2,c
  4782   0024FC  D01C               	goto	l7107
  4783                           
  4784                           ; BSR set to: 0
  4785   0024FE  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  4786   002502  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4787   002506  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4788   00250A  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4789   00250E  0E09               	movlw	9
  4790   002510                     u8925:
  4791   002510  90D8               	bcf	status,0,c
  4792   002512  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  4793   002514  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  4794   002516  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  4795   002518  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  4796   00251A  2EE8               	decfsz	wreg,f,c
  4797   00251C  D7F9               	goto	u8925
  4798   00251E  5164               	movf	??___fpclassifyf& (0+255),w,b
  4799   002520  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  4800   002522  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  4801   002524  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  4802   002526  A4D8               	btfss	status,2,c
  4803   002528  D002               	goto	u8930
  4804   00252A  0E01               	movlw	1
  4805   00252C  D001               	goto	u8940
  4806   00252E                     u8930:
  4807   00252E  0E00               	movlw	0
  4808   002530                     u8940:
  4809   002530  6F60               	movwf	?___fpclassifyf& (0+255),b
  4810   002532  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  4811   002534  0012               	return	
  4812   002536                     l7107:
  4813                           
  4814                           ; BSR set to: 0
  4815   002536  0E00               	movlw	0
  4816   002538  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  4817   00253A  0E04               	movlw	4
  4818   00253C  6F60               	movwf	?___fpclassifyf& (0+255),b
  4819                           
  4820                           ; BSR set to: 0
  4821   00253E  0012               	return		;funcret
  4822   002540                     __end_of___fpclassifyf:
  4823                           	callstack 0
  4824                           
  4825 ;; *************** function ___flsub *****************
  4826 ;; Defined at:
  4827 ;;		line 245 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcadd.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  b               4   39[BANK0 ] int 
  4830 ;;  a               4   43[BANK0 ] int 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  4   39[BANK0 ] int 
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4842 ;;      Params:         0       8       0       0
  4843 ;;      Locals:         0       0       0       0
  4844 ;;      Temps:          0       0       0       0
  4845 ;;      Totals:         0       8       0       0
  4846 ;;Total ram usage:        8 bytes
  4847 ;; Hardware stack levels used: 1
  4848 ;; Hardware stack levels required when called: 4
  4849 ;; This function calls:
  4850 ;;		___fladd
  4851 ;; This function is called by:
  4852 ;;		_efgtoa
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text15
  4857   002E62                     __ptext15:
  4858                           	callstack 0
  4859   002E62                     ___flsub:
  4860                           	callstack 22
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;incstack = 0
  4864   002E62  0E00               	movlw	0
  4865   002E64  0100               	movlb	0	; () banked
  4866   002E66  1B8B               	xorwf	___flsub@a& (0+255),f,b
  4867   002E68  0E00               	movlw	0
  4868   002E6A  1B8C               	xorwf	(___flsub@a+1)& (0+255),f,b
  4869   002E6C  0E00               	movlw	0
  4870   002E6E  1B8D               	xorwf	(___flsub@a+2)& (0+255),f,b
  4871   002E70  0E80               	movlw	128
  4872   002E72  1B8E               	xorwf	(___flsub@a+3)& (0+255),f,b
  4873                           
  4874                           ; BSR set to: 0
  4875   002E74  C087  F060         	movff	___flsub@b,___fladd@b
  4876   002E78  C088  F061         	movff	___flsub@b+1,___fladd@b+1
  4877   002E7C  C089  F062         	movff	___flsub@b+2,___fladd@b+2
  4878   002E80  C08A  F063         	movff	___flsub@b+3,___fladd@b+3
  4879   002E84  C08B  F064         	movff	___flsub@a,___fladd@a
  4880   002E88  C08C  F065         	movff	___flsub@a+1,___fladd@a+1
  4881   002E8C  C08D  F066         	movff	___flsub@a+2,___fladd@a+2
  4882   002E90  C08E  F067         	movff	___flsub@a+3,___fladd@a+3
  4883   002E94  ECEC  F00A         	call	___fladd	;wreg free
  4884   002E98  C060  F087         	movff	?___fladd,?___flsub
  4885   002E9C  C061  F088         	movff	?___fladd+1,?___flsub+1
  4886   002EA0  C062  F089         	movff	?___fladd+2,?___flsub+2
  4887   002EA4  C063  F08A         	movff	?___fladd+3,?___flsub+3
  4888   002EA8  0012               	return		;funcret
  4889   002EAA                     __end_of___flsub:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function ___fladd *****************
  4893 ;; Defined at:
  4894 ;;		line 10 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcadd.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  b               4    0[BANK0 ] int 
  4897 ;;  a               4    4[BANK0 ] int 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  grs             1   15[BANK0 ] unsigned char 
  4900 ;;  bexp            1   14[BANK0 ] unsigned char 
  4901 ;;  aexp            1   13[BANK0 ] unsigned char 
  4902 ;;  signs           1   12[BANK0 ] unsigned char 
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  4    0[BANK0 ] unsigned char 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4912 ;;      Params:         0       8       0       0
  4913 ;;      Locals:         0       4       0       0
  4914 ;;      Temps:          0       4       0       0
  4915 ;;      Totals:         0      16       0       0
  4916 ;;Total ram usage:       16 bytes
  4917 ;; Hardware stack levels used: 1
  4918 ;; Hardware stack levels required when called: 3
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		___flsub
  4923 ;;		_efgtoa
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text16
  4928   0015D8                     __ptext16:
  4929                           	callstack 0
  4930   0015D8                     ___fladd:
  4931                           	callstack 22
  4932                           
  4933                           ;incstack = 0
  4934   0015D8  0100               	movlb	0	; () banked
  4935   0015DA  5163               	movf	(___fladd@b+3)& (0+255),w,b
  4936   0015DC  0B80               	andlw	128
  4937   0015DE  6F6C               	movwf	___fladd@signs& (0+255),b
  4938   0015E0  5163               	movf	(___fladd@b+3)& (0+255),w,b
  4939   0015E2  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  4940   0015E4  6F6E               	movwf	___fladd@bexp& (0+255),b
  4941                           
  4942                           ; BSR set to: 0
  4943   0015E6  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
  4944                           
  4945                           ; BSR set to: 0
  4946   0015E8  816E               	bsf	___fladd@bexp& (0+255),0,b
  4947                           
  4948                           ; BSR set to: 0
  4949   0015EA  516E               	movf	___fladd@bexp& (0+255),w,b
  4950   0015EC  B4D8               	btfsc	status,2,c
  4951   0015EE  D00E               	goto	l6531
  4952                           
  4953                           ; BSR set to: 0
  4954   0015F0  296E               	incf	___fladd@bexp& (0+255),w,b
  4955   0015F2  A4D8               	btfss	status,2,c
  4956   0015F4  D008               	goto	l6527
  4957                           
  4958                           ; BSR set to: 0
  4959   0015F6  0E00               	movlw	0
  4960   0015F8  6F60               	movwf	___fladd@b& (0+255),b
  4961   0015FA  0E00               	movlw	0
  4962   0015FC  6F61               	movwf	(___fladd@b+1)& (0+255),b
  4963   0015FE  0E00               	movlw	0
  4964   001600  6F62               	movwf	(___fladd@b+2)& (0+255),b
  4965   001602  0E00               	movlw	0
  4966   001604  6F63               	movwf	(___fladd@b+3)& (0+255),b
  4967   001606                     l6527:
  4968                           
  4969                           ; BSR set to: 0
  4970   001606  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  4971                           
  4972                           ; BSR set to: 0
  4973   001608  6B63               	clrf	(___fladd@b+3)& (0+255),b
  4974   00160A  D008               	goto	l6533
  4975   00160C                     l6531:
  4976                           
  4977                           ; BSR set to: 0
  4978   00160C  0E00               	movlw	0
  4979   00160E  6F60               	movwf	___fladd@b& (0+255),b
  4980   001610  0E00               	movlw	0
  4981   001612  6F61               	movwf	(___fladd@b+1)& (0+255),b
  4982   001614  0E00               	movlw	0
  4983   001616  6F62               	movwf	(___fladd@b+2)& (0+255),b
  4984   001618  0E00               	movlw	0
  4985   00161A  6F63               	movwf	(___fladd@b+3)& (0+255),b
  4986   00161C                     l6533:
  4987                           
  4988                           ; BSR set to: 0
  4989   00161C  5167               	movf	(___fladd@a+3)& (0+255),w,b
  4990   00161E  0B80               	andlw	128
  4991   001620  6F6D               	movwf	___fladd@aexp& (0+255),b
  4992                           
  4993                           ; BSR set to: 0
  4994   001622  516C               	movf	___fladd@signs& (0+255),w,b
  4995   001624  196D               	xorwf	___fladd@aexp& (0+255),w,b
  4996   001626  A4D8               	btfss	status,2,c
  4997                           
  4998                           ; BSR set to: 0
  4999   001628  8D6C               	bsf	___fladd@signs& (0+255),6,b
  5000                           
  5001                           ; BSR set to: 0
  5002   00162A  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5003   00162C  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  5004   00162E  6F6D               	movwf	___fladd@aexp& (0+255),b
  5005                           
  5006                           ; BSR set to: 0
  5007   001630  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
  5008                           
  5009                           ; BSR set to: 0
  5010   001632  816D               	bsf	___fladd@aexp& (0+255),0,b
  5011                           
  5012                           ; BSR set to: 0
  5013   001634  516D               	movf	___fladd@aexp& (0+255),w,b
  5014   001636  B4D8               	btfsc	status,2,c
  5015   001638  D00E               	goto	l6555
  5016                           
  5017                           ; BSR set to: 0
  5018   00163A  296D               	incf	___fladd@aexp& (0+255),w,b
  5019   00163C  A4D8               	btfss	status,2,c
  5020   00163E  D008               	goto	l6551
  5021                           
  5022                           ; BSR set to: 0
  5023   001640  0E00               	movlw	0
  5024   001642  6F64               	movwf	___fladd@a& (0+255),b
  5025   001644  0E00               	movlw	0
  5026   001646  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5027   001648  0E00               	movlw	0
  5028   00164A  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5029   00164C  0E00               	movlw	0
  5030   00164E  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5031   001650                     l6551:
  5032                           
  5033                           ; BSR set to: 0
  5034   001650  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  5035                           
  5036                           ; BSR set to: 0
  5037   001652  6B67               	clrf	(___fladd@a+3)& (0+255),b
  5038   001654  D008               	goto	l6557
  5039   001656                     l6555:
  5040                           
  5041                           ; BSR set to: 0
  5042   001656  0E00               	movlw	0
  5043   001658  6F64               	movwf	___fladd@a& (0+255),b
  5044   00165A  0E00               	movlw	0
  5045   00165C  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5046   00165E  0E00               	movlw	0
  5047   001660  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5048   001662  0E00               	movlw	0
  5049   001664  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5050   001666                     l6557:
  5051                           
  5052                           ; BSR set to: 0
  5053   001666  516E               	movf	___fladd@bexp& (0+255),w,b
  5054   001668  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  5055   00166A  B0D8               	btfsc	status,0,c
  5056   00166C  D022               	goto	l6593
  5057                           
  5058                           ; BSR set to: 0
  5059   00166E  AD6C               	btfss	___fladd@signs& (0+255),6,b
  5060   001670  D002               	goto	l6563
  5061                           
  5062                           ; BSR set to: 0
  5063   001672  0E80               	movlw	128
  5064   001674  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5065   001676                     l6563:
  5066                           
  5067                           ; BSR set to: 0
  5068   001676  C06E  F06F         	movff	___fladd@bexp,___fladd@grs
  5069                           
  5070                           ; BSR set to: 0
  5071   00167A  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5072                           
  5073                           ; BSR set to: 0
  5074   00167E  C06F  F06D         	movff	___fladd@grs,___fladd@aexp
  5075                           
  5076                           ; BSR set to: 0
  5077   001682  C060  F06F         	movff	___fladd@b,___fladd@grs
  5078                           
  5079                           ; BSR set to: 0
  5080   001686  C064  F060         	movff	___fladd@a,___fladd@b
  5081                           
  5082                           ; BSR set to: 0
  5083   00168A  C06F  F064         	movff	___fladd@grs,___fladd@a
  5084                           
  5085                           ; BSR set to: 0
  5086   00168E  C061  F06F         	movff	___fladd@b+1,___fladd@grs
  5087                           
  5088                           ; BSR set to: 0
  5089   001692  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  5090                           
  5091                           ; BSR set to: 0
  5092   001696  C06F  F065         	movff	___fladd@grs,___fladd@a+1
  5093                           
  5094                           ; BSR set to: 0
  5095   00169A  C062  F06F         	movff	___fladd@b+2,___fladd@grs
  5096                           
  5097                           ; BSR set to: 0
  5098   00169E  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  5099                           
  5100                           ; BSR set to: 0
  5101   0016A2  C06F  F066         	movff	___fladd@grs,___fladd@a+2
  5102                           
  5103                           ; BSR set to: 0
  5104   0016A6  C063  F06F         	movff	___fladd@b+3,___fladd@grs
  5105                           
  5106                           ; BSR set to: 0
  5107   0016AA  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  5108                           
  5109                           ; BSR set to: 0
  5110   0016AE  C06F  F067         	movff	___fladd@grs,___fladd@a+3
  5111   0016B2                     l6593:
  5112                           
  5113                           ; BSR set to: 0
  5114   0016B2  6B6F               	clrf	___fladd@grs& (0+255),b
  5115   0016B4  516E               	movf	___fladd@bexp& (0+255),w,b
  5116   0016B6  C06D  F068         	movff	___fladd@aexp,??___fladd
  5117   0016BA  6B69               	clrf	(??___fladd+1)& (0+255),b
  5118   0016BC  5F68               	subwf	??___fladd& (0+255),f,b
  5119   0016BE  0E00               	movlw	0
  5120   0016C0  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  5121   0016C2  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  5122   0016C4  D02C               	goto	l876
  5123   0016C6  5169               	movf	(??___fladd+1)& (0+255),w,b
  5124   0016C8  E104               	bnz	u7970
  5125   0016CA  0E1A               	movlw	26
  5126   0016CC  5D68               	subwf	??___fladd& (0+255),w,b
  5127   0016CE  A0D8               	btfss	status,0,c
  5128   0016D0  D026               	goto	l876
  5129   0016D2                     u7970:
  5130                           
  5131                           ; BSR set to: 0
  5132   0016D2  5160               	movf	___fladd@b& (0+255),w,b
  5133   0016D4  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5134   0016D6  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5135   0016D8  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5136   0016DA  B4D8               	btfsc	status,2,c
  5137   0016DC  D002               	goto	u7980
  5138   0016DE  0E01               	movlw	1
  5139   0016E0  D001               	goto	u7990
  5140   0016E2                     u7980:
  5141   0016E2  0E00               	movlw	0
  5142   0016E4                     u7990:
  5143   0016E4  6F6F               	movwf	___fladd@grs& (0+255),b
  5144                           
  5145                           ; BSR set to: 0
  5146   0016E6  0E00               	movlw	0
  5147   0016E8  6F60               	movwf	___fladd@b& (0+255),b
  5148   0016EA  0E00               	movlw	0
  5149   0016EC  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5150   0016EE  0E00               	movlw	0
  5151   0016F0  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5152   0016F2  0E00               	movlw	0
  5153   0016F4  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5154                           
  5155                           ; BSR set to: 0
  5156   0016F6  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5157   0016FA  D015               	goto	u8020
  5158   0016FC                     l877:
  5159                           
  5160                           ; BSR set to: 0
  5161   0016FC  A16F               	btfss	___fladd@grs& (0+255),0,b
  5162   0016FE  D005               	goto	l6603
  5163                           
  5164                           ; BSR set to: 0
  5165   001700  90D8               	bcf	status,0,c
  5166   001702  316F               	rrcf	___fladd@grs& (0+255),w,b
  5167   001704  0901               	iorlw	1
  5168   001706  6F6F               	movwf	___fladd@grs& (0+255),b
  5169   001708  D002               	goto	l6605
  5170   00170A                     l6603:
  5171                           
  5172                           ; BSR set to: 0
  5173   00170A  90D8               	bcf	status,0,c
  5174   00170C  336F               	rrcf	___fladd@grs& (0+255),f,b
  5175   00170E                     l6605:
  5176                           
  5177                           ; BSR set to: 0
  5178   00170E  B160               	btfsc	___fladd@b& (0+255),0,b
  5179                           
  5180                           ; BSR set to: 0
  5181   001710  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5182                           
  5183                           ; BSR set to: 0
  5184   001712  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5185   001714  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5186   001716  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5187   001718  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5188   00171A  3360               	rrcf	___fladd@b& (0+255),f,b
  5189                           
  5190                           ; BSR set to: 0
  5191   00171C  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5192   00171E                     l876:
  5193                           
  5194                           ; BSR set to: 0
  5195   00171E  516D               	movf	___fladd@aexp& (0+255),w,b
  5196   001720  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  5197   001722  A0D8               	btfss	status,0,c
  5198   001724  D7EB               	goto	l877
  5199   001726                     u8020:
  5200                           
  5201                           ; BSR set to: 0
  5202   001726  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  5203   001728  D028               	goto	l6637
  5204                           
  5205                           ; BSR set to: 0
  5206   00172A  516E               	movf	___fladd@bexp& (0+255),w,b
  5207   00172C  A4D8               	btfss	status,2,c
  5208   00172E  D009               	goto	l6619
  5209                           
  5210                           ; BSR set to: 0
  5211   001730  0E00               	movlw	0
  5212   001732  6F60               	movwf	?___fladd& (0+255),b
  5213   001734  0E00               	movlw	0
  5214   001736  6F61               	movwf	(?___fladd+1)& (0+255),b
  5215   001738  0E00               	movlw	0
  5216   00173A  6F62               	movwf	(?___fladd+2)& (0+255),b
  5217   00173C  0E00               	movlw	0
  5218   00173E  6F63               	movwf	(?___fladd+3)& (0+255),b
  5219   001740  0012               	return	
  5220   001742                     l6619:
  5221                           
  5222                           ; BSR set to: 0
  5223   001742  5164               	movf	___fladd@a& (0+255),w,b
  5224   001744  2760               	addwf	___fladd@b& (0+255),f,b
  5225   001746  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5226   001748  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5227   00174A  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5228   00174C  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5229   00174E  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5230   001750  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5231                           
  5232                           ; BSR set to: 0
  5233   001752  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5234   001754  D071               	goto	u8150
  5235                           
  5236                           ; BSR set to: 0
  5237   001756  A16F               	btfss	___fladd@grs& (0+255),0,b
  5238   001758  D005               	goto	l6627
  5239                           
  5240                           ; BSR set to: 0
  5241   00175A  90D8               	bcf	status,0,c
  5242   00175C  316F               	rrcf	___fladd@grs& (0+255),w,b
  5243   00175E  0901               	iorlw	1
  5244   001760  6F6F               	movwf	___fladd@grs& (0+255),b
  5245   001762  D002               	goto	l6629
  5246   001764                     l6627:
  5247                           
  5248                           ; BSR set to: 0
  5249   001764  90D8               	bcf	status,0,c
  5250   001766  336F               	rrcf	___fladd@grs& (0+255),f,b
  5251   001768                     l6629:
  5252                           
  5253                           ; BSR set to: 0
  5254   001768  B160               	btfsc	___fladd@b& (0+255),0,b
  5255                           
  5256                           ; BSR set to: 0
  5257   00176A  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5258                           
  5259                           ; BSR set to: 0
  5260   00176C  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5261   00176E  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5262   001770  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5263   001772  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5264   001774  3360               	rrcf	___fladd@b& (0+255),f,b
  5265                           
  5266                           ; BSR set to: 0
  5267   001776  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5268   001778  D05F               	goto	u8150
  5269   00177A                     l6637:
  5270                           
  5271                           ; BSR set to: 0
  5272   00177A  5164               	movf	___fladd@a& (0+255),w,b
  5273   00177C  5D60               	subwf	___fladd@b& (0+255),w,b
  5274   00177E  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5275   001780  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  5276   001782  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5277   001784  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  5278   001786  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5279   001788  0A80               	xorlw	128
  5280   00178A  6F68               	movwf	??___fladd& (0+255),b
  5281   00178C  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5282   00178E  0A80               	xorlw	128
  5283   001790  5968               	subwfb	??___fladd& (0+255),w,b
  5284   001792  B0D8               	btfsc	status,0,c
  5285   001794  D025               	goto	l6647
  5286                           
  5287                           ; BSR set to: 0
  5288   001796  5160               	movf	___fladd@b& (0+255),w,b
  5289   001798  5D64               	subwf	___fladd@a& (0+255),w,b
  5290   00179A  6F68               	movwf	??___fladd& (0+255),b
  5291   00179C  5161               	movf	(___fladd@b+1)& (0+255),w,b
  5292   00179E  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  5293   0017A0  6F69               	movwf	(??___fladd+1)& (0+255),b
  5294   0017A2  5162               	movf	(___fladd@b+2)& (0+255),w,b
  5295   0017A4  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  5296   0017A6  6F6A               	movwf	(??___fladd+2)& (0+255),b
  5297   0017A8  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5298   0017AA  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  5299   0017AC  6F6B               	movwf	(??___fladd+3)& (0+255),b
  5300   0017AE  0EFF               	movlw	255
  5301   0017B0  2568               	addwf	??___fladd& (0+255),w,b
  5302   0017B2  6F60               	movwf	___fladd@b& (0+255),b
  5303   0017B4  0EFF               	movlw	255
  5304   0017B6  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  5305   0017B8  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5306   0017BA  0EFF               	movlw	255
  5307   0017BC  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  5308   0017BE  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5309   0017C0  0EFF               	movlw	255
  5310   0017C2  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  5311   0017C4  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5312   0017C6  0E80               	movlw	128
  5313   0017C8  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5314                           
  5315                           ; BSR set to: 0
  5316   0017CA  6D6F               	negf	___fladd@grs& (0+255),b
  5317                           
  5318                           ; BSR set to: 0
  5319   0017CC  516F               	movf	___fladd@grs& (0+255),w,b
  5320   0017CE  A4D8               	btfss	status,2,c
  5321   0017D0  D00F               	goto	l892
  5322                           
  5323                           ; BSR set to: 0
  5324   0017D2  0E01               	movlw	1
  5325   0017D4  2760               	addwf	___fladd@b& (0+255),f,b
  5326   0017D6  0E00               	movlw	0
  5327   0017D8  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5328   0017DA  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5329   0017DC  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5330   0017DE  D008               	goto	l892
  5331   0017E0                     l6647:
  5332                           
  5333                           ; BSR set to: 0
  5334   0017E0  5164               	movf	___fladd@a& (0+255),w,b
  5335   0017E2  5F60               	subwf	___fladd@b& (0+255),f,b
  5336   0017E4  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5337   0017E6  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  5338   0017E8  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5339   0017EA  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  5340   0017EC  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5341   0017EE  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  5342   0017F0                     l892:
  5343                           
  5344                           ; BSR set to: 0
  5345   0017F0  5160               	movf	___fladd@b& (0+255),w,b
  5346   0017F2  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5347   0017F4  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5348   0017F6  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5349   0017F8  A4D8               	btfss	status,2,c
  5350   0017FA  D01C               	goto	l6671
  5351                           
  5352                           ; BSR set to: 0
  5353   0017FC  516F               	movf	___fladd@grs& (0+255),w,b
  5354   0017FE  A4D8               	btfss	status,2,c
  5355   001800  D019               	goto	l6671
  5356                           
  5357                           ; BSR set to: 0
  5358   001802  0E00               	movlw	0
  5359   001804  6F60               	movwf	?___fladd& (0+255),b
  5360   001806  0E00               	movlw	0
  5361   001808  6F61               	movwf	(?___fladd+1)& (0+255),b
  5362   00180A  0E00               	movlw	0
  5363   00180C  6F62               	movwf	(?___fladd+2)& (0+255),b
  5364   00180E  0E00               	movlw	0
  5365   001810  6F63               	movwf	(?___fladd+3)& (0+255),b
  5366   001812  0012               	return	
  5367   001814                     l6655:
  5368                           
  5369                           ; BSR set to: 0
  5370   001814  90D8               	bcf	status,0,c
  5371   001816  3760               	rlcf	___fladd@b& (0+255),f,b
  5372   001818  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  5373   00181A  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  5374   00181C  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  5375                           
  5376                           ; BSR set to: 0
  5377   00181E  BF6F               	btfsc	___fladd@grs& (0+255),7,b
  5378                           
  5379                           ; BSR set to: 0
  5380   001820  8160               	bsf	___fladd@b& (0+255),0,b
  5381                           
  5382                           ; BSR set to: 0
  5383   001822  A16F               	btfss	___fladd@grs& (0+255),0,b
  5384   001824  D002               	goto	l6665
  5385                           
  5386                           ; BSR set to: 0
  5387   001826  80D8               	bsf	status,0,c
  5388   001828  D001               	goto	L4
  5389   00182A                     l6665:
  5390                           
  5391                           ; BSR set to: 0
  5392   00182A  90D8               	bcf	status,0,c
  5393   00182C                     L4:
  5394   00182C  376F               	rlcf	___fladd@grs& (0+255),f,b
  5395                           
  5396                           ; BSR set to: 0
  5397   00182E  516E               	movf	___fladd@bexp& (0+255),w,b
  5398   001830  A4D8               	btfss	status,2,c
  5399                           
  5400                           ; BSR set to: 0
  5401   001832  076E               	decf	___fladd@bexp& (0+255),f,b
  5402   001834                     l6671:
  5403                           
  5404                           ; BSR set to: 0
  5405   001834  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5406   001836  D7EE               	goto	l6655
  5407   001838                     u8150:
  5408                           
  5409                           ; BSR set to: 0
  5410   001838  6B6D               	clrf	___fladd@aexp& (0+255),b
  5411   00183A  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5412   00183C  D00B               	goto	l901
  5413                           
  5414                           ; BSR set to: 0
  5415   00183E  C06F  F068         	movff	___fladd@grs,??___fladd
  5416   001842  0E7F               	movlw	127
  5417   001844  1768               	andwf	??___fladd& (0+255),f,b
  5418   001846  B4D8               	btfsc	status,2,c
  5419   001848  D003               	goto	l902
  5420   00184A                     u8170:
  5421                           
  5422                           ; BSR set to: 0
  5423   00184A  0E01               	movlw	1
  5424   00184C  6F6D               	movwf	___fladd@aexp& (0+255),b
  5425   00184E  D002               	goto	l901
  5426   001850                     l902:
  5427                           
  5428                           ; BSR set to: 0
  5429   001850  B160               	btfsc	___fladd@b& (0+255),0,b
  5430   001852  D7FB               	goto	u8170
  5431   001854                     l901:
  5432                           
  5433                           ; BSR set to: 0
  5434   001854  516D               	movf	___fladd@aexp& (0+255),w,b
  5435   001856  B4D8               	btfsc	status,2,c
  5436   001858  D020               	goto	l6687
  5437                           
  5438                           ; BSR set to: 0
  5439   00185A  0E01               	movlw	1
  5440   00185C  2760               	addwf	___fladd@b& (0+255),f,b
  5441   00185E  0E00               	movlw	0
  5442   001860  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5443   001862  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5444   001864  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5445                           
  5446                           ; BSR set to: 0
  5447   001866  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5448   001868  D018               	goto	l6687
  5449                           
  5450                           ; BSR set to: 0
  5451   00186A  C060  F068         	movff	___fladd@b,??___fladd
  5452   00186E  C061  F069         	movff	___fladd@b+1,??___fladd+1
  5453   001872  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  5454   001876  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  5455   00187A  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  5456   00187C  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  5457   00187E  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  5458   001880  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  5459   001882  3368               	rrcf	??___fladd& (0+255),f,b
  5460   001884  C068  F060         	movff	??___fladd,___fladd@b
  5461   001888  C069  F061         	movff	??___fladd+1,___fladd@b+1
  5462   00188C  C06A  F062         	movff	??___fladd+2,___fladd@b+2
  5463   001890  C06B  F063         	movff	??___fladd+3,___fladd@b+3
  5464   001894  296E               	incf	___fladd@bexp& (0+255),w,b
  5465   001896  A4D8               	btfss	status,2,c
  5466                           
  5467                           ; BSR set to: 0
  5468   001898  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5469   00189A                     l6687:
  5470                           
  5471                           ; BSR set to: 0
  5472   00189A  296E               	incf	___fladd@bexp& (0+255),w,b
  5473   00189C  B4D8               	btfsc	status,2,c
  5474   00189E  D003               	goto	u8230
  5475                           
  5476                           ; BSR set to: 0
  5477   0018A0  516E               	movf	___fladd@bexp& (0+255),w,b
  5478   0018A2  A4D8               	btfss	status,2,c
  5479   0018A4  D00B               	goto	l908
  5480   0018A6                     u8230:
  5481                           
  5482                           ; BSR set to: 0
  5483   0018A6  0E00               	movlw	0
  5484   0018A8  6F60               	movwf	___fladd@b& (0+255),b
  5485   0018AA  0E00               	movlw	0
  5486   0018AC  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5487   0018AE  0E00               	movlw	0
  5488   0018B0  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5489   0018B2  0E00               	movlw	0
  5490   0018B4  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5491   0018B6  516E               	movf	___fladd@bexp& (0+255),w,b
  5492   0018B8  B4D8               	btfsc	status,2,c
  5493                           
  5494                           ; BSR set to: 0
  5495   0018BA  6B6C               	clrf	___fladd@signs& (0+255),b
  5496   0018BC                     l908:
  5497                           
  5498                           ; BSR set to: 0
  5499   0018BC  A16E               	btfss	___fladd@bexp& (0+255),0,b
  5500   0018BE  D002               	goto	l6697
  5501                           
  5502                           ; BSR set to: 0
  5503   0018C0  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5504   0018C2  D001               	goto	l6699
  5505   0018C4                     l6697:
  5506                           
  5507                           ; BSR set to: 0
  5508   0018C4  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  5509   0018C6                     l6699:
  5510                           
  5511                           ; BSR set to: 0
  5512   0018C6  90D8               	bcf	status,0,c
  5513   0018C8  316E               	rrcf	___fladd@bexp& (0+255),w,b
  5514   0018CA  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5515                           
  5516                           ; BSR set to: 0
  5517   0018CC  BF6C               	btfsc	___fladd@signs& (0+255),7,b
  5518                           
  5519                           ; BSR set to: 0
  5520   0018CE  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  5521                           
  5522                           ; BSR set to: 0
  5523   0018D0  C060  F060         	movff	___fladd@b,?___fladd
  5524   0018D4  C061  F061         	movff	___fladd@b+1,?___fladd+1
  5525   0018D8  C062  F062         	movff	___fladd@b+2,?___fladd+2
  5526   0018DC  C063  F063         	movff	___fladd@b+3,?___fladd+3
  5527                           
  5528                           ; BSR set to: 0
  5529   0018E0  0012               	return		;funcret
  5530   0018E2                     __end_of___fladd:
  5531                           	callstack 0
  5532                           
  5533 ;; *************** function ___flneg *****************
  5534 ;; Defined at:
  5535 ;;		line 15 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/flneg.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  f1              4    0[BANK0 ] unsigned char 
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;		None
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  4    0[BANK0 ] unsigned char 
  5542 ;; Registers used:
  5543 ;;		wreg, status,2, status,0
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5549 ;;      Params:         0       4       0       0
  5550 ;;      Locals:         0       0       0       0
  5551 ;;      Temps:          0       0       0       0
  5552 ;;      Totals:         0       4       0       0
  5553 ;;Total ram usage:        4 bytes
  5554 ;; Hardware stack levels used: 1
  5555 ;; Hardware stack levels required when called: 3
  5556 ;; This function calls:
  5557 ;;		Nothing
  5558 ;; This function is called by:
  5559 ;;		_efgtoa
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           	psect	text17
  5564   0030EE                     __ptext17:
  5565                           	callstack 0
  5566   0030EE                     ___flneg:
  5567                           	callstack 23
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;incstack = 0
  5571   0030EE  0100               	movlb	0	; () banked
  5572   0030F0  5160               	movf	___flneg@f1& (0+255),w,b
  5573   0030F2  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5574   0030F4  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5575   0030F6  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5576   0030F8  B4D8               	btfsc	status,2,c
  5577   0030FA  D008               	goto	l7029
  5578                           
  5579                           ; BSR set to: 0
  5580   0030FC  0E00               	movlw	0
  5581   0030FE  1B60               	xorwf	___flneg@f1& (0+255),f,b
  5582   003100  0E00               	movlw	0
  5583   003102  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5584   003104  0E00               	movlw	0
  5585   003106  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5586   003108  0E80               	movlw	128
  5587   00310A  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5588   00310C                     l7029:
  5589                           
  5590                           ; BSR set to: 0
  5591   00310C  C060  F060         	movff	___flneg@f1,?___flneg
  5592   003110  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  5593   003114  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  5594   003118  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  5595                           
  5596                           ; BSR set to: 0
  5597   00311C  0012               	return		;funcret
  5598   00311E                     __end_of___flneg:
  5599                           	callstack 0
  5600                           
  5601 ;; *************** function ___flge *****************
  5602 ;; Defined at:
  5603 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/flge.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;  ff1             4   39[BANK0 ] unsigned char 
  5606 ;;  ff2             4   43[BANK0 ] unsigned char 
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;		None
  5609 ;; Return value:  Size  Location     Type
  5610 ;;		None               void
  5611 ;; Registers used:
  5612 ;;		wreg, status,2, status,0
  5613 ;; Tracked objects:
  5614 ;;		On entry : 0/0
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5618 ;;      Params:         0       8       0       0
  5619 ;;      Locals:         0       0       0       0
  5620 ;;      Temps:          0       4       0       0
  5621 ;;      Totals:         0      12       0       0
  5622 ;;Total ram usage:       12 bytes
  5623 ;; Hardware stack levels used: 1
  5624 ;; Hardware stack levels required when called: 3
  5625 ;; This function calls:
  5626 ;;		Nothing
  5627 ;; This function is called by:
  5628 ;;		_efgtoa
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           	psect	text18
  5633   0023A0                     __ptext18:
  5634                           	callstack 0
  5635   0023A0                     ___flge:
  5636                           	callstack 23
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;incstack = 0
  5640   0023A0  0E00               	movlw	0
  5641   0023A2  0100               	movlb	0	; () banked
  5642   0023A4  1587               	andwf	___flge@ff1& (0+255),w,b
  5643   0023A6  6F8F               	movwf	??___flge& (0+255),b
  5644   0023A8  0E00               	movlw	0
  5645   0023AA  1588               	andwf	(___flge@ff1+1)& (0+255),w,b
  5646   0023AC  6F90               	movwf	(??___flge+1)& (0+255),b
  5647   0023AE  0E80               	movlw	128
  5648   0023B0  1589               	andwf	(___flge@ff1+2)& (0+255),w,b
  5649   0023B2  6F91               	movwf	(??___flge+2)& (0+255),b
  5650   0023B4  0E7F               	movlw	127
  5651   0023B6  158A               	andwf	(___flge@ff1+3)& (0+255),w,b
  5652   0023B8  6F92               	movwf	(??___flge+3)& (0+255),b
  5653   0023BA  518F               	movf	??___flge& (0+255),w,b
  5654   0023BC  1190               	iorwf	(??___flge+1)& (0+255),w,b
  5655   0023BE  1191               	iorwf	(??___flge+2)& (0+255),w,b
  5656   0023C0  1192               	iorwf	(??___flge+3)& (0+255),w,b
  5657   0023C2  A4D8               	btfss	status,2,c
  5658   0023C4  D008               	goto	l7007
  5659                           
  5660                           ; BSR set to: 0
  5661   0023C6  0E00               	movlw	0
  5662   0023C8  6F87               	movwf	___flge@ff1& (0+255),b
  5663   0023CA  0E00               	movlw	0
  5664   0023CC  6F88               	movwf	(___flge@ff1+1)& (0+255),b
  5665   0023CE  0E00               	movlw	0
  5666   0023D0  6F89               	movwf	(___flge@ff1+2)& (0+255),b
  5667   0023D2  0E00               	movlw	0
  5668   0023D4  6F8A               	movwf	(___flge@ff1+3)& (0+255),b
  5669   0023D6                     l7007:
  5670                           
  5671                           ; BSR set to: 0
  5672   0023D6  0E00               	movlw	0
  5673   0023D8  158B               	andwf	___flge@ff2& (0+255),w,b
  5674   0023DA  6F8F               	movwf	??___flge& (0+255),b
  5675   0023DC  0E00               	movlw	0
  5676   0023DE  158C               	andwf	(___flge@ff2+1)& (0+255),w,b
  5677   0023E0  6F90               	movwf	(??___flge+1)& (0+255),b
  5678   0023E2  0E80               	movlw	128
  5679   0023E4  158D               	andwf	(___flge@ff2+2)& (0+255),w,b
  5680   0023E6  6F91               	movwf	(??___flge+2)& (0+255),b
  5681   0023E8  0E7F               	movlw	127
  5682   0023EA  158E               	andwf	(___flge@ff2+3)& (0+255),w,b
  5683   0023EC  6F92               	movwf	(??___flge+3)& (0+255),b
  5684   0023EE  518F               	movf	??___flge& (0+255),w,b
  5685   0023F0  1190               	iorwf	(??___flge+1)& (0+255),w,b
  5686   0023F2  1191               	iorwf	(??___flge+2)& (0+255),w,b
  5687   0023F4  1192               	iorwf	(??___flge+3)& (0+255),w,b
  5688   0023F6  A4D8               	btfss	status,2,c
  5689   0023F8  D008               	goto	l7011
  5690                           
  5691                           ; BSR set to: 0
  5692   0023FA  0E00               	movlw	0
  5693   0023FC  6F8B               	movwf	___flge@ff2& (0+255),b
  5694   0023FE  0E00               	movlw	0
  5695   002400  6F8C               	movwf	(___flge@ff2+1)& (0+255),b
  5696   002402  0E00               	movlw	0
  5697   002404  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
  5698   002406  0E00               	movlw	0
  5699   002408  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
  5700   00240A                     l7011:
  5701                           
  5702                           ; BSR set to: 0
  5703   00240A  AF8A               	btfss	(___flge@ff1+3)& (0+255),7,b
  5704   00240C  D009               	goto	l7015
  5705                           
  5706                           ; BSR set to: 0
  5707   00240E  6D87               	negf	___flge@ff1& (0+255),b
  5708   002410  1F88               	comf	(___flge@ff1+1)& (0+255),f,b
  5709   002412  B0D8               	btfsc	status,0,c
  5710   002414  2B88               	incf	(___flge@ff1+1)& (0+255),f,b
  5711   002416  1F89               	comf	(___flge@ff1+2)& (0+255),f,b
  5712   002418  B0D8               	btfsc	status,0,c
  5713   00241A  2B89               	incf	(___flge@ff1+2)& (0+255),f,b
  5714   00241C  0E80               	movlw	128
  5715   00241E  578A               	subfwb	(___flge@ff1+3)& (0+255),f,b
  5716   002420                     l7015:
  5717                           
  5718                           ; BSR set to: 0
  5719   002420  AF8E               	btfss	(___flge@ff2+3)& (0+255),7,b
  5720   002422  D009               	goto	l612
  5721                           
  5722                           ; BSR set to: 0
  5723   002424  6D8B               	negf	___flge@ff2& (0+255),b
  5724   002426  1F8C               	comf	(___flge@ff2+1)& (0+255),f,b
  5725   002428  B0D8               	btfsc	status,0,c
  5726   00242A  2B8C               	incf	(___flge@ff2+1)& (0+255),f,b
  5727   00242C  1F8D               	comf	(___flge@ff2+2)& (0+255),f,b
  5728   00242E  B0D8               	btfsc	status,0,c
  5729   002430  2B8D               	incf	(___flge@ff2+2)& (0+255),f,b
  5730   002432  0E80               	movlw	128
  5731   002434  578E               	subfwb	(___flge@ff2+3)& (0+255),f,b
  5732   002436                     l612:
  5733                           
  5734                           ; BSR set to: 0
  5735   002436  0E00               	movlw	0
  5736   002438  1B87               	xorwf	___flge@ff1& (0+255),f,b
  5737   00243A  0E00               	movlw	0
  5738   00243C  1B88               	xorwf	(___flge@ff1+1)& (0+255),f,b
  5739   00243E  0E00               	movlw	0
  5740   002440  1B89               	xorwf	(___flge@ff1+2)& (0+255),f,b
  5741   002442  0E80               	movlw	128
  5742   002444  1B8A               	xorwf	(___flge@ff1+3)& (0+255),f,b
  5743   002446  0E00               	movlw	0
  5744   002448  1B8B               	xorwf	___flge@ff2& (0+255),f,b
  5745   00244A  0E00               	movlw	0
  5746   00244C  1B8C               	xorwf	(___flge@ff2+1)& (0+255),f,b
  5747   00244E  0E00               	movlw	0
  5748   002450  1B8D               	xorwf	(___flge@ff2+2)& (0+255),f,b
  5749   002452  0E80               	movlw	128
  5750   002454  1B8E               	xorwf	(___flge@ff2+3)& (0+255),f,b
  5751   002456  518B               	movf	___flge@ff2& (0+255),w,b
  5752   002458  5D87               	subwf	___flge@ff1& (0+255),w,b
  5753   00245A  518C               	movf	(___flge@ff2+1)& (0+255),w,b
  5754   00245C  5988               	subwfb	(___flge@ff1+1)& (0+255),w,b
  5755   00245E  518D               	movf	(___flge@ff2+2)& (0+255),w,b
  5756   002460  5989               	subwfb	(___flge@ff1+2)& (0+255),w,b
  5757   002462  518E               	movf	(___flge@ff2+3)& (0+255),w,b
  5758   002464  598A               	subwfb	(___flge@ff1+3)& (0+255),w,b
  5759   002466  B0D8               	btfsc	status,0,c
  5760   002468  D002               	goto	l7021
  5761                           
  5762                           ; BSR set to: 0
  5763   00246A  90D8               	bcf	status,0,c
  5764   00246C  0012               	return	
  5765   00246E                     l7021:
  5766                           
  5767                           ; BSR set to: 0
  5768   00246E  80D8               	bsf	status,0,c
  5769                           
  5770                           ; BSR set to: 0
  5771   002470  0012               	return		;funcret
  5772   002472                     __end_of___flge:
  5773                           	callstack 0
  5774                           
  5775 ;; *************** function ___fleq *****************
  5776 ;; Defined at:
  5777 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/fleq.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  ff1             4    0[BANK0 ] unsigned char 
  5780 ;;  ff2             4    4[BANK0 ] unsigned char 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;		None
  5783 ;; Return value:  Size  Location     Type
  5784 ;;		None               void
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5792 ;;      Params:         0       8       0       0
  5793 ;;      Locals:         0       0       0       0
  5794 ;;      Temps:          0       4       0       0
  5795 ;;      Totals:         0      12       0       0
  5796 ;;Total ram usage:       12 bytes
  5797 ;; Hardware stack levels used: 1
  5798 ;; Hardware stack levels required when called: 3
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_efgtoa
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           	psect	text19
  5807   002AAA                     __ptext19:
  5808                           	callstack 0
  5809   002AAA                     ___fleq:
  5810                           	callstack 23
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;incstack = 0
  5814   002AAA  0E00               	movlw	0
  5815   002AAC  0100               	movlb	0	; () banked
  5816   002AAE  1560               	andwf	___fleq@ff1& (0+255),w,b
  5817   002AB0  6F68               	movwf	??___fleq& (0+255),b
  5818   002AB2  0E00               	movlw	0
  5819   002AB4  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  5820   002AB6  6F69               	movwf	(??___fleq+1)& (0+255),b
  5821   002AB8  0E80               	movlw	128
  5822   002ABA  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  5823   002ABC  6F6A               	movwf	(??___fleq+2)& (0+255),b
  5824   002ABE  0E7F               	movlw	127
  5825   002AC0  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  5826   002AC2  6F6B               	movwf	(??___fleq+3)& (0+255),b
  5827   002AC4  5168               	movf	??___fleq& (0+255),w,b
  5828   002AC6  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  5829   002AC8  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  5830   002ACA  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  5831   002ACC  A4D8               	btfss	status,2,c
  5832   002ACE  D008               	goto	l6991
  5833                           
  5834                           ; BSR set to: 0
  5835   002AD0  0E00               	movlw	0
  5836   002AD2  6F60               	movwf	___fleq@ff1& (0+255),b
  5837   002AD4  0E00               	movlw	0
  5838   002AD6  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  5839   002AD8  0E00               	movlw	0
  5840   002ADA  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  5841   002ADC  0E00               	movlw	0
  5842   002ADE  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  5843   002AE0                     l6991:
  5844                           
  5845                           ; BSR set to: 0
  5846   002AE0  0E00               	movlw	0
  5847   002AE2  1564               	andwf	___fleq@ff2& (0+255),w,b
  5848   002AE4  6F68               	movwf	??___fleq& (0+255),b
  5849   002AE6  0E00               	movlw	0
  5850   002AE8  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  5851   002AEA  6F69               	movwf	(??___fleq+1)& (0+255),b
  5852   002AEC  0E80               	movlw	128
  5853   002AEE  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  5854   002AF0  6F6A               	movwf	(??___fleq+2)& (0+255),b
  5855   002AF2  0E7F               	movlw	127
  5856   002AF4  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  5857   002AF6  6F6B               	movwf	(??___fleq+3)& (0+255),b
  5858   002AF8  5168               	movf	??___fleq& (0+255),w,b
  5859   002AFA  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  5860   002AFC  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  5861   002AFE  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  5862   002B00  A4D8               	btfss	status,2,c
  5863   002B02  D008               	goto	l6995
  5864                           
  5865                           ; BSR set to: 0
  5866   002B04  0E00               	movlw	0
  5867   002B06  6F64               	movwf	___fleq@ff2& (0+255),b
  5868   002B08  0E00               	movlw	0
  5869   002B0A  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  5870   002B0C  0E00               	movlw	0
  5871   002B0E  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  5872   002B10  0E00               	movlw	0
  5873   002B12  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  5874   002B14                     l6995:
  5875                           
  5876                           ; BSR set to: 0
  5877   002B14  5164               	movf	___fleq@ff2& (0+255),w,b
  5878   002B16  1960               	xorwf	___fleq@ff1& (0+255),w,b
  5879   002B18  E10A               	bnz	u8720
  5880   002B1A  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  5881   002B1C  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  5882   002B1E  E107               	bnz	u8720
  5883   002B20  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  5884   002B22  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  5885   002B24  E104               	bnz	u8720
  5886   002B26  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  5887   002B28  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  5888   002B2A  B4D8               	btfsc	status,2,c
  5889   002B2C  D002               	goto	l6999
  5890   002B2E                     u8720:
  5891                           
  5892                           ; BSR set to: 0
  5893   002B2E  90D8               	bcf	status,0,c
  5894   002B30  0012               	return	
  5895   002B32                     l6999:
  5896                           
  5897                           ; BSR set to: 0
  5898   002B32  80D8               	bsf	status,0,c
  5899                           
  5900                           ; BSR set to: 0
  5901   002B34  0012               	return		;funcret
  5902   002B36                     __end_of___fleq:
  5903                           	callstack 0
  5904                           
  5905 ;; *************** function ___fldiv *****************
  5906 ;; Defined at:
  5907 ;;		line 11 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcdiv.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  b               4    0[BANK0 ] unsigned char 
  5910 ;;  a               4    4[BANK0 ] unsigned char 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  grs             4   19[BANK0 ] unsigned long 
  5913 ;;  rem             4   12[BANK0 ] unsigned long 
  5914 ;;  new_exp         2   17[BANK0 ] short 
  5915 ;;  aexp            1   24[BANK0 ] unsigned char 
  5916 ;;  bexp            1   23[BANK0 ] unsigned char 
  5917 ;;  sign            1   16[BANK0 ] unsigned char 
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  4    0[BANK0 ] unsigned char 
  5920 ;; Registers used:
  5921 ;;		wreg, status,2, status,0
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5927 ;;      Params:         0       8       0       0
  5928 ;;      Locals:         0      13       0       0
  5929 ;;      Temps:          0       4       0       0
  5930 ;;      Totals:         0      25       0       0
  5931 ;;Total ram usage:       25 bytes
  5932 ;; Hardware stack levels used: 1
  5933 ;; Hardware stack levels required when called: 3
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_efgtoa
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           	psect	text20
  5942   0018E2                     __ptext20:
  5943                           	callstack 0
  5944   0018E2                     ___fldiv:
  5945                           	callstack 23
  5946                           
  5947                           ; BSR set to: 0
  5948                           ;incstack = 0
  5949   0018E2  0100               	movlb	0	; () banked
  5950   0018E4  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  5951   0018E6  0B80               	andlw	128
  5952   0018E8  6F70               	movwf	___fldiv@sign& (0+255),b
  5953   0018EA  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  5954   0018EC  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  5955   0018EE  6F77               	movwf	___fldiv@bexp& (0+255),b
  5956                           
  5957                           ; BSR set to: 0
  5958   0018F0  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
  5959                           
  5960                           ; BSR set to: 0
  5961   0018F2  8177               	bsf	___fldiv@bexp& (0+255),0,b
  5962                           
  5963                           ; BSR set to: 0
  5964   0018F4  5177               	movf	___fldiv@bexp& (0+255),w,b
  5965   0018F6  B4D8               	btfsc	status,2,c
  5966   0018F8  D00E               	goto	l6733
  5967                           
  5968                           ; BSR set to: 0
  5969   0018FA  2977               	incf	___fldiv@bexp& (0+255),w,b
  5970   0018FC  A4D8               	btfss	status,2,c
  5971   0018FE  D008               	goto	l6729
  5972                           
  5973                           ; BSR set to: 0
  5974   001900  0E00               	movlw	0
  5975   001902  6F60               	movwf	___fldiv@b& (0+255),b
  5976   001904  0E00               	movlw	0
  5977   001906  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  5978   001908  0E00               	movlw	0
  5979   00190A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  5980   00190C  0E00               	movlw	0
  5981   00190E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  5982   001910                     l6729:
  5983                           
  5984                           ; BSR set to: 0
  5985   001910  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  5986                           
  5987                           ; BSR set to: 0
  5988   001912  6B63               	clrf	(___fldiv@b+3)& (0+255),b
  5989   001914  D008               	goto	l6735
  5990   001916                     l6733:
  5991                           
  5992                           ; BSR set to: 0
  5993   001916  0E00               	movlw	0
  5994   001918  6F60               	movwf	___fldiv@b& (0+255),b
  5995   00191A  0E00               	movlw	0
  5996   00191C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  5997   00191E  0E00               	movlw	0
  5998   001920  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  5999   001922  0E00               	movlw	0
  6000   001924  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6001   001926                     l6735:
  6002                           
  6003                           ; BSR set to: 0
  6004   001926  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6005   001928  0B80               	andlw	128
  6006   00192A  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  6007                           
  6008                           ; BSR set to: 0
  6009   00192C  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6010   00192E  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  6011   001930  6F78               	movwf	___fldiv@aexp& (0+255),b
  6012                           
  6013                           ; BSR set to: 0
  6014   001932  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
  6015                           
  6016                           ; BSR set to: 0
  6017   001934  8178               	bsf	___fldiv@aexp& (0+255),0,b
  6018                           
  6019                           ; BSR set to: 0
  6020   001936  5178               	movf	___fldiv@aexp& (0+255),w,b
  6021   001938  B4D8               	btfsc	status,2,c
  6022   00193A  D00E               	goto	l6753
  6023                           
  6024                           ; BSR set to: 0
  6025   00193C  2978               	incf	___fldiv@aexp& (0+255),w,b
  6026   00193E  A4D8               	btfss	status,2,c
  6027   001940  D008               	goto	l6749
  6028                           
  6029                           ; BSR set to: 0
  6030   001942  0E00               	movlw	0
  6031   001944  6F64               	movwf	___fldiv@a& (0+255),b
  6032   001946  0E00               	movlw	0
  6033   001948  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6034   00194A  0E00               	movlw	0
  6035   00194C  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6036   00194E  0E00               	movlw	0
  6037   001950  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6038   001952                     l6749:
  6039                           
  6040                           ; BSR set to: 0
  6041   001952  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  6042                           
  6043                           ; BSR set to: 0
  6044   001954  6B67               	clrf	(___fldiv@a+3)& (0+255),b
  6045   001956  D008               	goto	l6755
  6046   001958                     l6753:
  6047                           
  6048                           ; BSR set to: 0
  6049   001958  0E00               	movlw	0
  6050   00195A  6F64               	movwf	___fldiv@a& (0+255),b
  6051   00195C  0E00               	movlw	0
  6052   00195E  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6053   001960  0E00               	movlw	0
  6054   001962  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6055   001964  0E00               	movlw	0
  6056   001966  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6057   001968                     l6755:
  6058                           
  6059                           ; BSR set to: 0
  6060   001968  5164               	movf	___fldiv@a& (0+255),w,b
  6061   00196A  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6062   00196C  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6063   00196E  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6064   001970  A4D8               	btfss	status,2,c
  6065   001972  D017               	goto	l6767
  6066                           
  6067                           ; BSR set to: 0
  6068   001974  0E00               	movlw	0
  6069   001976  6F60               	movwf	___fldiv@b& (0+255),b
  6070   001978  0E00               	movlw	0
  6071   00197A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6072   00197C  0E00               	movlw	0
  6073   00197E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6074   001980  0E00               	movlw	0
  6075   001982  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6076                           
  6077                           ; BSR set to: 0
  6078   001984  0E80               	movlw	128
  6079   001986  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6080   001988  0E7F               	movlw	127
  6081   00198A  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6082   00198C                     l6761:
  6083                           
  6084                           ; BSR set to: 0
  6085   00198C  5170               	movf	___fldiv@sign& (0+255),w,b
  6086   00198E  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6087                           
  6088                           ; BSR set to: 0
  6089   001990  C060  F060         	movff	___fldiv@b,?___fldiv
  6090   001994  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  6091   001998  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  6092   00199C  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  6093   0019A0  0012               	return	
  6094   0019A2                     l6767:
  6095                           
  6096                           ; BSR set to: 0
  6097   0019A2  5177               	movf	___fldiv@bexp& (0+255),w,b
  6098   0019A4  A4D8               	btfss	status,2,c
  6099   0019A6  D009               	goto	l6775
  6100                           
  6101                           ; BSR set to: 0
  6102                           
  6103                           ; BSR set to: 0
  6104   0019A8  0E00               	movlw	0
  6105   0019AA  6F60               	movwf	?___fldiv& (0+255),b
  6106   0019AC  0E00               	movlw	0
  6107   0019AE  6F61               	movwf	(?___fldiv+1)& (0+255),b
  6108   0019B0  0E00               	movlw	0
  6109   0019B2  6F62               	movwf	(?___fldiv+2)& (0+255),b
  6110   0019B4  0E00               	movlw	0
  6111   0019B6  6F63               	movwf	(?___fldiv+3)& (0+255),b
  6112   0019B8  0012               	return	
  6113   0019BA                     l6775:
  6114                           
  6115                           ; BSR set to: 0
  6116   0019BA  5178               	movf	___fldiv@aexp& (0+255),w,b
  6117   0019BC  C077  F068         	movff	___fldiv@bexp,??___fldiv
  6118   0019C0  6B69               	clrf	(??___fldiv+1)& (0+255),b
  6119   0019C2  5F68               	subwf	??___fldiv& (0+255),f,b
  6120   0019C4  0E00               	movlw	0
  6121   0019C6  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  6122   0019C8  0E7F               	movlw	127
  6123   0019CA  2568               	addwf	??___fldiv& (0+255),w,b
  6124   0019CC  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6125   0019CE  0E00               	movlw	0
  6126   0019D0  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  6127   0019D2  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6128                           
  6129                           ; BSR set to: 0
  6130   0019D4  C060  F06C         	movff	___fldiv@b,___fldiv@rem
  6131   0019D8  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
  6132   0019DC  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
  6133   0019E0  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
  6134                           
  6135                           ; BSR set to: 0
  6136   0019E4  0E00               	movlw	0
  6137   0019E6  6F60               	movwf	___fldiv@b& (0+255),b
  6138   0019E8  0E00               	movlw	0
  6139   0019EA  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6140   0019EC  0E00               	movlw	0
  6141   0019EE  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6142   0019F0  0E00               	movlw	0
  6143   0019F2  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6144                           
  6145                           ; BSR set to: 0
  6146   0019F4  0E00               	movlw	0
  6147   0019F6  6F73               	movwf	___fldiv@grs& (0+255),b
  6148   0019F8  0E00               	movlw	0
  6149   0019FA  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  6150   0019FC  0E00               	movlw	0
  6151   0019FE  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  6152   001A00  0E00               	movlw	0
  6153   001A02  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  6154                           
  6155                           ; BSR set to: 0
  6156   001A04  6B78               	clrf	___fldiv@aexp& (0+255),b
  6157   001A06  D028               	goto	l931
  6158   001A08                     l6785:
  6159                           
  6160                           ; BSR set to: 0
  6161   001A08  5178               	movf	___fldiv@aexp& (0+255),w,b
  6162   001A0A  B4D8               	btfsc	status,2,c
  6163   001A0C  D011               	goto	l6793
  6164                           
  6165                           ; BSR set to: 0
  6166   001A0E  90D8               	bcf	status,0,c
  6167   001A10  376C               	rlcf	___fldiv@rem& (0+255),f,b
  6168   001A12  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6169   001A14  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6170   001A16  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6171   001A18  90D8               	bcf	status,0,c
  6172   001A1A  3760               	rlcf	___fldiv@b& (0+255),f,b
  6173   001A1C  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6174   001A1E  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6175   001A20  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6176                           
  6177                           ; BSR set to: 0
  6178   001A22  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6179                           
  6180                           ; BSR set to: 0
  6181   001A24  8160               	bsf	___fldiv@b& (0+255),0,b
  6182                           
  6183                           ; BSR set to: 0
  6184   001A26  90D8               	bcf	status,0,c
  6185   001A28  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6186   001A2A  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6187   001A2C  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6188   001A2E  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6189   001A30                     l6793:
  6190                           
  6191                           ; BSR set to: 0
  6192   001A30  5164               	movf	___fldiv@a& (0+255),w,b
  6193   001A32  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  6194   001A34  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6195   001A36  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6196   001A38  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6197   001A3A  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6198   001A3C  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6199   001A3E  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6200   001A40  A0D8               	btfss	status,0,c
  6201   001A42  D009               	goto	l6799
  6202                           
  6203                           ; BSR set to: 0
  6204   001A44  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6205                           
  6206                           ; BSR set to: 0
  6207   001A46  5164               	movf	___fldiv@a& (0+255),w,b
  6208   001A48  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  6209   001A4A  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6210   001A4C  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6211   001A4E  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6212   001A50  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6213   001A52  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6214   001A54  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6215   001A56                     l6799:
  6216                           
  6217                           ; BSR set to: 0
  6218   001A56  2B78               	incf	___fldiv@aexp& (0+255),f,b
  6219   001A58                     l931:
  6220                           
  6221                           ; BSR set to: 0
  6222   001A58  0E19               	movlw	25
  6223   001A5A  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  6224   001A5C  D7D5               	goto	l6785
  6225                           
  6226                           ; BSR set to: 0
  6227   001A5E  516C               	movf	___fldiv@rem& (0+255),w,b
  6228   001A60  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6229   001A62  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6230   001A64  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6231   001A66  B4D8               	btfsc	status,2,c
  6232   001A68  D011               	goto	l6811
  6233                           
  6234                           ; BSR set to: 0
  6235   001A6A  8173               	bsf	___fldiv@grs& (0+255),0,b
  6236   001A6C  D00F               	goto	l6811
  6237   001A6E                     l6805:
  6238                           
  6239                           ; BSR set to: 0
  6240   001A6E  90D8               	bcf	status,0,c
  6241   001A70  3760               	rlcf	___fldiv@b& (0+255),f,b
  6242   001A72  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6243   001A74  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6244   001A76  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6245                           
  6246                           ; BSR set to: 0
  6247   001A78  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6248                           
  6249                           ; BSR set to: 0
  6250   001A7A  8160               	bsf	___fldiv@b& (0+255),0,b
  6251                           
  6252                           ; BSR set to: 0
  6253   001A7C  90D8               	bcf	status,0,c
  6254   001A7E  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6255   001A80  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6256   001A82  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6257   001A84  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6258   001A86  0771               	decf	___fldiv@new_exp& (0+255),f,b
  6259   001A88  A0D8               	btfss	status,0,c
  6260   001A8A  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6261   001A8C                     l6811:
  6262                           
  6263                           ; BSR set to: 0
  6264   001A8C  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6265   001A8E  D7EF               	goto	l6805
  6266                           
  6267                           ; BSR set to: 0
  6268   001A90  6B78               	clrf	___fldiv@aexp& (0+255),b
  6269   001A92  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6270   001A94  D017               	goto	l942
  6271                           
  6272                           ; BSR set to: 0
  6273   001A96  0EFF               	movlw	255
  6274   001A98  1573               	andwf	___fldiv@grs& (0+255),w,b
  6275   001A9A  6F68               	movwf	??___fldiv& (0+255),b
  6276   001A9C  0EFF               	movlw	255
  6277   001A9E  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6278   001AA0  6F69               	movwf	(??___fldiv+1)& (0+255),b
  6279   001AA2  0EFF               	movlw	255
  6280   001AA4  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6281   001AA6  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  6282   001AA8  0E7F               	movlw	127
  6283   001AAA  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6284   001AAC  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  6285   001AAE  5168               	movf	??___fldiv& (0+255),w,b
  6286   001AB0  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  6287   001AB2  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  6288   001AB4  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  6289   001AB6  B4D8               	btfsc	status,2,c
  6290   001AB8  D003               	goto	l943
  6291   001ABA                     u8440:
  6292                           
  6293                           ; BSR set to: 0
  6294   001ABA  0E01               	movlw	1
  6295   001ABC  6F78               	movwf	___fldiv@aexp& (0+255),b
  6296   001ABE  D002               	goto	l942
  6297   001AC0                     l943:
  6298                           
  6299                           ; BSR set to: 0
  6300   001AC0  B160               	btfsc	___fldiv@b& (0+255),0,b
  6301   001AC2  D7FB               	goto	u8440
  6302   001AC4                     l942:
  6303                           
  6304                           ; BSR set to: 0
  6305   001AC4  5178               	movf	___fldiv@aexp& (0+255),w,b
  6306   001AC6  B4D8               	btfsc	status,2,c
  6307   001AC8  D01F               	goto	l6827
  6308                           
  6309                           ; BSR set to: 0
  6310   001ACA  0E01               	movlw	1
  6311   001ACC  2760               	addwf	___fldiv@b& (0+255),f,b
  6312   001ACE  0E00               	movlw	0
  6313   001AD0  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  6314   001AD2  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  6315   001AD4  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  6316                           
  6317                           ; BSR set to: 0
  6318   001AD6  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  6319   001AD8  D017               	goto	l6827
  6320                           
  6321                           ; BSR set to: 0
  6322   001ADA  C060  F068         	movff	___fldiv@b,??___fldiv
  6323   001ADE  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
  6324   001AE2  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
  6325   001AE6  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
  6326   001AEA  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  6327   001AEC  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  6328   001AEE  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  6329   001AF0  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  6330   001AF2  3368               	rrcf	??___fldiv& (0+255),f,b
  6331   001AF4  C068  F060         	movff	??___fldiv,___fldiv@b
  6332   001AF8  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
  6333   001AFC  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
  6334   001B00  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
  6335                           
  6336                           ; BSR set to: 0
  6337   001B04  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  6338   001B06  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6339   001B08                     l6827:
  6340                           
  6341                           ; BSR set to: 0
  6342   001B08  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6343   001B0A  D010               	goto	l6831
  6344   001B0C  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6345   001B0E  E103               	bnz	u8480
  6346   001B10  2971               	incf	___fldiv@new_exp& (0+255),w,b
  6347   001B12  A0D8               	btfss	status,0,c
  6348   001B14  D00B               	goto	l6831
  6349   001B16                     u8480:
  6350                           
  6351                           ; BSR set to: 0
  6352   001B16  0E00               	movlw	0
  6353   001B18  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6354   001B1A  6971               	setf	___fldiv@new_exp& (0+255),b
  6355   001B1C  0E00               	movlw	0
  6356   001B1E  6F60               	movwf	___fldiv@b& (0+255),b
  6357   001B20  0E00               	movlw	0
  6358   001B22  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6359   001B24  0E00               	movlw	0
  6360   001B26  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6361   001B28  0E00               	movlw	0
  6362   001B2A  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6363   001B2C                     l6831:
  6364                           
  6365                           ; BSR set to: 0
  6366   001B2C  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6367   001B2E  D005               	goto	u8490
  6368   001B30  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6369   001B32  E110               	bnz	l6837
  6370   001B34  0571               	decf	___fldiv@new_exp& (0+255),w,b
  6371   001B36  B0D8               	btfsc	status,0,c
  6372   001B38  D00D               	goto	l6837
  6373   001B3A                     u8490:
  6374                           
  6375                           ; BSR set to: 0
  6376   001B3A  0E00               	movlw	0
  6377   001B3C  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6378   001B3E  0E00               	movlw	0
  6379   001B40  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6380   001B42  0E00               	movlw	0
  6381   001B44  6F60               	movwf	___fldiv@b& (0+255),b
  6382   001B46  0E00               	movlw	0
  6383   001B48  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6384   001B4A  0E00               	movlw	0
  6385   001B4C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6386   001B4E  0E00               	movlw	0
  6387   001B50  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6388                           
  6389                           ; BSR set to: 0
  6390   001B52  6B70               	clrf	___fldiv@sign& (0+255),b
  6391   001B54                     l6837:
  6392                           
  6393                           ; BSR set to: 0
  6394   001B54  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
  6395                           
  6396                           ; BSR set to: 0
  6397   001B58  A177               	btfss	___fldiv@bexp& (0+255),0,b
  6398   001B5A  D002               	goto	l6843
  6399                           
  6400                           ; BSR set to: 0
  6401   001B5C  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6402   001B5E  D001               	goto	l6845
  6403   001B60                     l6843:
  6404                           
  6405                           ; BSR set to: 0
  6406   001B60  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  6407   001B62                     l6845:
  6408                           
  6409                           ; BSR set to: 0
  6410   001B62  90D8               	bcf	status,0,c
  6411   001B64  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  6412   001B66  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6413   001B68  D711               	goto	l6761
  6414   001B6A                     __end_of___fldiv:
  6415                           	callstack 0
  6416                           
  6417 ;; *************** function _show7Segment *****************
  6418 ;; Defined at:
  6419 ;;		line 733 in file "main.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;		None
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;		None
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  1    wreg      void 
  6426 ;; Registers used:
  6427 ;;		wreg, status,2, status,0, cstack
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6433 ;;      Params:         0       0       0       0
  6434 ;;      Locals:         0       0       0       0
  6435 ;;      Temps:          0       0       0       0
  6436 ;;      Totals:         0       0       0       0
  6437 ;;Total ram usage:        0 bytes
  6438 ;; Hardware stack levels used: 1
  6439 ;; Hardware stack levels required when called: 4
  6440 ;; This function calls:
  6441 ;;		_displayDigits
  6442 ;;		_get7SegmentPattern
  6443 ;; This function is called by:
  6444 ;;		_main
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           	psect	text21
  6449   002F34                     __ptext21:
  6450                           	callstack 0
  6451   002F34                     _show7Segment:
  6452                           	callstack 26
  6453                           
  6454                           ;main.c: 735:     segPattern0 = get7SegmentPattern( displayDigit0 );
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;incstack = 0
  6458   002F34  5038               	movf	_displayDigit0^0,w,c
  6459   002F36  ECBA  F013         	call	_get7SegmentPattern
  6460   002F3A  6E3B               	movwf	_segPattern0^0,c
  6461                           
  6462                           ;main.c: 737:     if( displaySample == 1 && ( fsm_state == 1 || fsm_state == 2 ) ){
  6463   002F3C  0434               	decf	_displaySample^0,w,c
  6464   002F3E  A4D8               	btfss	status,2,c
  6465   002F40  D00B               	goto	l7667
  6466   002F42  0100               	movlb	0	; () banked
  6467   002F44  05F9               	decf	_fsm_state& (0+255),w,b
  6468   002F46  B4D8               	btfsc	status,2,c
  6469   002F48  D004               	goto	u9790
  6470                           
  6471                           ; BSR set to: 0
  6472   002F4A  0E02               	movlw	2
  6473   002F4C  19F9               	xorwf	_fsm_state& (0+255),w,b
  6474   002F4E  A4D8               	btfss	status,2,c
  6475   002F50  D003               	goto	l7667
  6476   002F52                     u9790:
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;main.c: 738:         segPattern0 = segPattern0 | 0b10000000;
  6480   002F52  503B               	movf	_segPattern0^0,w,c
  6481   002F54  0980               	iorlw	128
  6482   002F56  6E3B               	movwf	_segPattern0^0,c
  6483   002F58                     l7667:
  6484                           
  6485                           ;main.c: 741:     segPattern1 = get7SegmentPattern( displayDigit1 );
  6486   002F58  5037               	movf	_displayDigit1^0,w,c
  6487   002F5A  ECBA  F013         	call	_get7SegmentPattern
  6488   002F5E  6E3A               	movwf	_segPattern1^0,c
  6489                           
  6490                           ;main.c: 742:     segPattern2 = get7SegmentPattern( displayDigit2 );
  6491   002F60  5036               	movf	_displayDigit2^0,w,c
  6492   002F62  ECBA  F013         	call	_get7SegmentPattern
  6493   002F66  6E39               	movwf	_segPattern2^0,c
  6494                           
  6495                           ;main.c: 744:     displayDigits( segPattern0, segPattern1, segPattern2 );
  6496   002F68  C03A  F060         	movff	_segPattern1,displayDigits@digit1
  6497   002F6C  C039  F061         	movff	_segPattern2,displayDigits@digit2
  6498   002F70  503B               	movf	_segPattern0^0,w,c
  6499   002F72  ECA0  F012         	call	_displayDigits
  6500   002F76  0012               	return		;funcret
  6501   002F78                     __end_of_show7Segment:
  6502                           	callstack 0
  6503                           
  6504 ;; *************** function _get7SegmentPattern *****************
  6505 ;; Defined at:
  6506 ;;		line 516 in file "main.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;  digit           1    wreg     unsigned char 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;  digit           1    0[BANK0 ] unsigned char 
  6511 ;;  pattern         1    1[BANK0 ] unsigned char 
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      unsigned char 
  6514 ;; Registers used:
  6515 ;;		wreg, status,2, status,0
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6521 ;;      Params:         0       0       0       0
  6522 ;;      Locals:         0       2       0       0
  6523 ;;      Temps:          0       0       0       0
  6524 ;;      Totals:         0       2       0       0
  6525 ;;Total ram usage:        2 bytes
  6526 ;; Hardware stack levels used: 1
  6527 ;; Hardware stack levels required when called: 3
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_show7Segment
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text22
  6536   002774                     __ptext22:
  6537                           	callstack 0
  6538   002774                     _get7SegmentPattern:
  6539                           	callstack 26
  6540                           
  6541                           ;incstack = 0
  6542                           ;get7SegmentPattern@digit stored from wreg
  6543   002774  0100               	movlb	0	; () banked
  6544   002776  6F60               	movwf	get7SegmentPattern@digit& (0+255),b
  6545                           
  6546                           ;main.c: 519:     uint8_t pattern;;main.c: 521:     switch (digit) {
  6547   002778  D021               	goto	l7497
  6548   00277A                     l7463:
  6549                           
  6550                           ; BSR set to: 0
  6551   00277A  0E3F               	movlw	63
  6552   00277C  D01B               	goto	L18
  6553   00277E                     l7465:
  6554                           
  6555                           ; BSR set to: 0
  6556   00277E  0E06               	movlw	6
  6557   002780  D019               	goto	L18
  6558   002782                     l7467:
  6559                           
  6560                           ; BSR set to: 0
  6561   002782  0E5B               	movlw	91
  6562   002784  D017               	goto	L18
  6563   002786                     l7469:
  6564                           
  6565                           ; BSR set to: 0
  6566   002786  0E4F               	movlw	79
  6567   002788  D015               	goto	L18
  6568   00278A                     l7471:
  6569                           
  6570                           ; BSR set to: 0
  6571   00278A  0E66               	movlw	102
  6572   00278C  D013               	goto	L18
  6573   00278E                     l7473:
  6574                           
  6575                           ; BSR set to: 0
  6576   00278E  0E6D               	movlw	109
  6577   002790  D011               	goto	L18
  6578   002792                     l7475:
  6579                           
  6580                           ; BSR set to: 0
  6581   002792  0E7D               	movlw	125
  6582   002794  D00F               	goto	L18
  6583   002796                     l7477:
  6584                           
  6585                           ; BSR set to: 0
  6586   002796  0E07               	movlw	7
  6587   002798  D00D               	goto	L18
  6588   00279A                     l7479:
  6589                           
  6590                           ; BSR set to: 0
  6591   00279A  0E7F               	movlw	127
  6592   00279C  D00B               	goto	L18
  6593   00279E                     l7481:
  6594                           
  6595                           ; BSR set to: 0
  6596   00279E  0E6F               	movlw	111
  6597   0027A0  D009               	goto	L18
  6598   0027A2                     l7483:
  6599                           
  6600                           ; BSR set to: 0
  6601   0027A2  0E79               	movlw	121
  6602   0027A4  D007               	goto	L18
  6603   0027A6                     l7485:
  6604                           
  6605                           ; BSR set to: 0
  6606   0027A6  0E77               	movlw	119
  6607   0027A8  D005               	goto	L18
  6608   0027AA                     l7487:
  6609                           
  6610                           ; BSR set to: 0
  6611   0027AA  0E39               	movlw	57
  6612   0027AC  D003               	goto	L18
  6613   0027AE                     l7491:
  6614                           
  6615                           ; BSR set to: 0
  6616   0027AE  0E38               	movlw	56
  6617   0027B0  D001               	goto	L18
  6618   0027B2                     l7493:
  6619                           
  6620                           ; BSR set to: 0
  6621   0027B2  0E31               	movlw	49
  6622   0027B4                     L18:
  6623   0027B4  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  6624   0027B6  D035               	goto	l240
  6625   0027B8                     l256:
  6626                           
  6627                           ; BSR set to: 0
  6628   0027B8  6B61               	clrf	get7SegmentPattern@pattern& (0+255),b
  6629   0027BA  D033               	goto	l240
  6630   0027BC                     l7497:
  6631   0027BC  0100               	movlb	0	; () banked
  6632   0027BE  5160               	movf	get7SegmentPattern@digit& (0+255),w,b
  6633                           
  6634                           ; Switch size 1, requested type "simple"
  6635                           ; Number of cases is 16, Range of values is 0 to 114
  6636                           ; switch strategies available:
  6637                           ; Name         Instructions Cycles
  6638                           ; simple_byte           49    25 (average)
  6639                           ;	Chosen strategy is simple_byte
  6640   0027C0  0A00               	xorlw	0	; case 0
  6641   0027C2  B4D8               	btfsc	status,2,c
  6642   0027C4  D7DA               	goto	l7463
  6643   0027C6  0A01               	xorlw	1	; case 1
  6644   0027C8  B4D8               	btfsc	status,2,c
  6645   0027CA  D7D9               	goto	l7465
  6646   0027CC  0A03               	xorlw	3	; case 2
  6647   0027CE  B4D8               	btfsc	status,2,c
  6648   0027D0  D7D8               	goto	l7467
  6649   0027D2  0A01               	xorlw	1	; case 3
  6650   0027D4  B4D8               	btfsc	status,2,c
  6651   0027D6  D7D7               	goto	l7469
  6652   0027D8  0A07               	xorlw	7	; case 4
  6653   0027DA  B4D8               	btfsc	status,2,c
  6654   0027DC  D7D6               	goto	l7471
  6655   0027DE  0A01               	xorlw	1	; case 5
  6656   0027E0  B4D8               	btfsc	status,2,c
  6657   0027E2  D7D5               	goto	l7473
  6658   0027E4  0A03               	xorlw	3	; case 6
  6659   0027E6  B4D8               	btfsc	status,2,c
  6660   0027E8  D7D4               	goto	l7475
  6661   0027EA  0A01               	xorlw	1	; case 7
  6662   0027EC  B4D8               	btfsc	status,2,c
  6663   0027EE  D7D3               	goto	l7477
  6664   0027F0  0A0F               	xorlw	15	; case 8
  6665   0027F2  B4D8               	btfsc	status,2,c
  6666   0027F4  D7D2               	goto	l7479
  6667   0027F6  0A01               	xorlw	1	; case 9
  6668   0027F8  B4D8               	btfsc	status,2,c
  6669   0027FA  D7D1               	goto	l7481
  6670   0027FC  0A48               	xorlw	72	; case 65
  6671   0027FE  B4D8               	btfsc	status,2,c
  6672   002800  D7D2               	goto	l7485
  6673   002802  0A02               	xorlw	2	; case 67
  6674   002804  B4D8               	btfsc	status,2,c
  6675   002806  D7D1               	goto	l7487
  6676   002808  0A0F               	xorlw	15	; case 76
  6677   00280A  B4D8               	btfsc	status,2,c
  6678   00280C  D7D0               	goto	l7491
  6679   00280E  0A1F               	xorlw	31	; case 83
  6680   002810  B4D8               	btfsc	status,2,c
  6681   002812  D7BD               	goto	l7473
  6682   002814  0A0A               	xorlw	10	; case 89
  6683   002816  B4D8               	btfsc	status,2,c
  6684   002818  D7C4               	goto	l7483
  6685   00281A  0A2B               	xorlw	43	; case 114
  6686   00281C  B4D8               	btfsc	status,2,c
  6687   00281E  D7C9               	goto	l7493
  6688   002820  D7CB               	goto	l256
  6689   002822                     l240:
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;main.c: 541:     return pattern;
  6693   002822  5161               	movf	get7SegmentPattern@pattern& (0+255),w,b
  6694                           
  6695                           ; BSR set to: 0
  6696   002824  0012               	return		;funcret
  6697   002826                     __end_of_get7SegmentPattern:
  6698                           	callstack 0
  6699                           
  6700 ;; *************** function _displayDigits *****************
  6701 ;; Defined at:
  6702 ;;		line 544 in file "main.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;  digit0          1    wreg     unsigned char 
  6705 ;;  digit1          1    0[BANK0 ] unsigned char 
  6706 ;;  digit2          1    1[BANK0 ] unsigned char 
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;  digit0          1    4[BANK0 ] unsigned char 
  6709 ;;  i               2    5[BANK0 ] int 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2, status,0
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6719 ;;      Params:         0       2       0       0
  6720 ;;      Locals:         0       3       0       0
  6721 ;;      Temps:          0       2       0       0
  6722 ;;      Totals:         0       7       0       0
  6723 ;;Total ram usage:        7 bytes
  6724 ;; Hardware stack levels used: 1
  6725 ;; Hardware stack levels required when called: 3
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_show7Segment
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text23
  6734   002540                     __ptext23:
  6735                           	callstack 0
  6736   002540                     _displayDigits:
  6737                           	callstack 26
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;incstack = 0
  6741                           ;displayDigits@digit0 stored from wreg
  6742   002540  0100               	movlb	0	; () banked
  6743   002542  6F64               	movwf	displayDigits@digit0& (0+255),b
  6744                           
  6745                           ;main.c: 545:     int i;;main.c: 546:     for ( i = 0 ; i < 8 ; i++ ){
  6746   002544  0E00               	movlw	0
  6747   002546  0100               	movlb	0	; () banked
  6748   002548  6F66               	movwf	(displayDigits@i+1)& (0+255),b
  6749   00254A  0E00               	movlw	0
  6750   00254C  6F65               	movwf	displayDigits@i& (0+255),b
  6751   00254E                     l7505:
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;main.c: 548:         PORTCbits.RC5 = (digit0 >> i) & (0x01);
  6755   00254E  C065  F062         	movff	displayDigits@i,??_displayDigits
  6756   002552  C064  F063         	movff	displayDigits@digit0,??_displayDigits+1
  6757   002556  2B62               	incf	??_displayDigits& (0+255),f,b
  6758   002558  D002               	goto	u9454
  6759   00255A                     u9455:
  6760   00255A  90D8               	bcf	status,0,c
  6761   00255C  3363               	rrcf	(??_displayDigits+1)& (0+255),f,b
  6762   00255E                     u9454:
  6763   00255E  2F62               	decfsz	??_displayDigits& (0+255),f,b
  6764   002560  D7FC               	goto	u9455
  6765   002562  0E01               	movlw	1
  6766   002564  0100               	movlb	0	; () banked
  6767   002566  1763               	andwf	(??_displayDigits+1)& (0+255),f,b
  6768   002568  3B63               	swapf	(??_displayDigits+1)& (0+255),f,b
  6769   00256A  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  6770   00256C  5082               	movf	130,w,c	;volatile
  6771   00256E  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  6772   002570  0BDF               	andlw	-33
  6773   002572  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  6774   002574  6E82               	movwf	130,c	;volatile
  6775                           
  6776                           ;main.c: 549:         PORTCbits.RC4 = (digit1 >> i) & (0x01);
  6777   002576  C065  F062         	movff	displayDigits@i,??_displayDigits
  6778   00257A  C060  F063         	movff	displayDigits@digit1,??_displayDigits+1
  6779   00257E  2B62               	incf	??_displayDigits& (0+255),f,b
  6780   002580  D002               	goto	u9464
  6781   002582                     u9465:
  6782   002582  90D8               	bcf	status,0,c
  6783   002584  3363               	rrcf	(??_displayDigits+1)& (0+255),f,b
  6784   002586                     u9464:
  6785   002586  2F62               	decfsz	??_displayDigits& (0+255),f,b
  6786   002588  D7FC               	goto	u9465
  6787   00258A  0E01               	movlw	1
  6788   00258C  0100               	movlb	0	; () banked
  6789   00258E  1763               	andwf	(??_displayDigits+1)& (0+255),f,b
  6790   002590  3B63               	swapf	(??_displayDigits+1)& (0+255),f,b
  6791   002592  5082               	movf	130,w,c	;volatile
  6792   002594  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  6793   002596  0BEF               	andlw	-17
  6794   002598  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  6795   00259A  6E82               	movwf	130,c	;volatile
  6796                           
  6797                           ;main.c: 550:         PORTCbits.RC3 = (digit2 >> i) & (0x01);
  6798   00259C  C065  F062         	movff	displayDigits@i,??_displayDigits
  6799   0025A0  C061  F063         	movff	displayDigits@digit2,??_displayDigits+1
  6800   0025A4  2B62               	incf	??_displayDigits& (0+255),f,b
  6801   0025A6  D002               	goto	u9474
  6802   0025A8                     u9475:
  6803   0025A8  90D8               	bcf	status,0,c
  6804   0025AA  3363               	rrcf	(??_displayDigits+1)& (0+255),f,b
  6805   0025AC                     u9474:
  6806   0025AC  2F62               	decfsz	??_displayDigits& (0+255),f,b
  6807   0025AE  D7FC               	goto	u9475
  6808   0025B0  0E01               	movlw	1
  6809   0025B2  0100               	movlb	0	; () banked
  6810   0025B4  1763               	andwf	(??_displayDigits+1)& (0+255),f,b
  6811   0025B6  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  6812   0025B8  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  6813   0025BA  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  6814   0025BC  5082               	movf	130,w,c	;volatile
  6815   0025BE  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  6816   0025C0  0BF7               	andlw	-9
  6817   0025C2  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  6818   0025C4  6E82               	movwf	130,c	;volatile
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;main.c: 553:         PORTCbits.RC6 = 1;
  6822   0025C6  8C82               	bsf	130,6,c	;volatile
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;main.c: 554:         _delay((unsigned long)((500)*(2000000/4000000.0)));
  6826   0025C8  0E53               	movlw	83
  6827   0025CA                     u10077:
  6828   0025CA  2EE8               	decfsz	wreg,f,c
  6829   0025CC  D7FE               	bra	u10077
  6830   0025CE  0000               	nop	
  6831                           
  6832                           ;main.c: 555:         PORTCbits.RC6 = 0;
  6833   0025D0  9C82               	bcf	130,6,c	;volatile
  6834                           
  6835                           ;main.c: 556:         _delay((unsigned long)((500)*(2000000/4000000.0)));
  6836   0025D2  0E53               	movlw	83
  6837   0025D4                     u10087:
  6838   0025D4  2EE8               	decfsz	wreg,f,c
  6839   0025D6  D7FE               	bra	u10087
  6840   0025D8  0000               	nop	
  6841                           
  6842                           ;main.c: 557:     }
  6843   0025DA  0100               	movlb	0	; () banked
  6844   0025DC  4B65               	infsnz	displayDigits@i& (0+255),f,b
  6845   0025DE  2B66               	incf	(displayDigits@i+1)& (0+255),f,b
  6846                           
  6847                           ; BSR set to: 0
  6848   0025E0  BF66               	btfsc	(displayDigits@i+1)& (0+255),7,b
  6849   0025E2  D7B5               	goto	l7505
  6850   0025E4  5166               	movf	(displayDigits@i+1)& (0+255),w,b
  6851   0025E6  E104               	bnz	u9480
  6852   0025E8  0E08               	movlw	8
  6853   0025EA  5D65               	subwf	displayDigits@i& (0+255),w,b
  6854   0025EC  A0D8               	btfss	status,0,c
  6855   0025EE  D7AF               	goto	l7505
  6856   0025F0                     u9480:
  6857                           
  6858                           ; BSR set to: 0
  6859                           ;main.c: 560:     PORTCbits.RC7 = 1;
  6860   0025F0  8E82               	bsf	130,7,c	;volatile
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;main.c: 561:     _delay((unsigned long)((500)*(2000000/4000000.0)));
  6864   0025F2  0E53               	movlw	83
  6865   0025F4                     u10097:
  6866   0025F4  2EE8               	decfsz	wreg,f,c
  6867   0025F6  D7FE               	bra	u10097
  6868   0025F8  0000               	nop	
  6869                           
  6870                           ;main.c: 562:     PORTCbits.RC7 = 0;
  6871   0025FA  9E82               	bcf	130,7,c	;volatile
  6872   0025FC  0012               	return		;funcret
  6873   0025FE                     __end_of_displayDigits:
  6874                           	callstack 0
  6875                           
  6876 ;; *************** function _setupTimer1 *****************
  6877 ;; Defined at:
  6878 ;;		line 473 in file "main.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;		None
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;		None
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  1    wreg      void 
  6885 ;; Registers used:
  6886 ;;		wreg, status,2
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6892 ;;      Params:         0       0       0       0
  6893 ;;      Locals:         0       0       0       0
  6894 ;;      Temps:          0       0       0       0
  6895 ;;      Totals:         0       0       0       0
  6896 ;;Total ram usage:        0 bytes
  6897 ;; Hardware stack levels used: 1
  6898 ;; Hardware stack levels required when called: 3
  6899 ;; This function calls:
  6900 ;;		Nothing
  6901 ;; This function is called by:
  6902 ;;		_main
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           	psect	text24
  6907   00319A                     __ptext24:
  6908                           	callstack 0
  6909   00319A                     _setupTimer1:
  6910                           	callstack 27
  6911                           
  6912                           ;main.c: 474:     T1CON = 0b00110101;
  6913                           
  6914                           ;incstack = 0
  6915   00319A  0E35               	movlw	53
  6916   00319C  6ECD               	movwf	205,c	;volatile
  6917                           
  6918                           ;main.c: 475:     TMR1 = 0;
  6919   00319E  0E00               	movlw	0
  6920   0031A0  6ECF               	movwf	207,c	;volatile
  6921   0031A2  0E00               	movlw	0
  6922   0031A4  6ECE               	movwf	206,c	;volatile
  6923                           
  6924                           ;main.c: 478:     PIR1bits.TMR1IF = 0;
  6925   0031A6  909E               	bcf	158,0,c	;volatile
  6926                           
  6927                           ;main.c: 479:     PIE1bits.TMR1IE = 1;
  6928   0031A8  809D               	bsf	157,0,c	;volatile
  6929                           
  6930                           ;main.c: 485:     TMR1 = 0;
  6931   0031AA  0E00               	movlw	0
  6932   0031AC  6ECF               	movwf	207,c	;volatile
  6933   0031AE  0E00               	movlw	0
  6934   0031B0  6ECE               	movwf	206,c	;volatile
  6935   0031B2  0012               	return		;funcret
  6936   0031B4                     __end_of_setupTimer1:
  6937                           	callstack 0
  6938                           
  6939 ;; *************** function _setupI2C *****************
  6940 ;; Defined at:
  6941 ;;		line 488 in file "main.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;		None
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;		None
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  1    wreg      void 
  6948 ;; Registers used:
  6949 ;;		wreg, status,2
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6955 ;;      Params:         0       0       0       0
  6956 ;;      Locals:         0       0       0       0
  6957 ;;      Temps:          0       0       0       0
  6958 ;;      Totals:         0       0       0       0
  6959 ;;Total ram usage:        0 bytes
  6960 ;; Hardware stack levels used: 1
  6961 ;; Hardware stack levels required when called: 3
  6962 ;; This function calls:
  6963 ;;		Nothing
  6964 ;; This function is called by:
  6965 ;;		_main
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text25
  6970   0031B4                     __ptext25:
  6971                           	callstack 0
  6972   0031B4                     _setupI2C:
  6973                           	callstack 27
  6974                           
  6975                           ;main.c: 489:     TRISBbits.RB4 = 1;
  6976                           
  6977                           ;incstack = 0
  6978   0031B4  8893               	bsf	147,4,c	;volatile
  6979                           
  6980                           ;main.c: 490:     TRISBbits.RB6 = 1;
  6981   0031B6  8C93               	bsf	147,6,c	;volatile
  6982                           
  6983                           ;main.c: 491:     SSPCON1 = 0b00101000;
  6984   0031B8  0E28               	movlw	40
  6985   0031BA  6EC6               	movwf	198,c	;volatile
  6986                           
  6987                           ;main.c: 492:     SSPADD = ((2000000 / 4) / 100000) - 1;
  6988   0031BC  0E04               	movlw	4
  6989   0031BE  6EC8               	movwf	200,c	;volatile
  6990                           
  6991                           ;main.c: 493:     SSPSTAT = 0x00;
  6992   0031C0  6AC7               	clrf	199,c	;volatile
  6993                           
  6994                           ;main.c: 495:     SSPCON2 = 0b00000000;
  6995   0031C2  6AC5               	clrf	197,c	;volatile
  6996   0031C4  0012               	return		;funcret
  6997   0031C6                     __end_of_setupI2C:
  6998                           	callstack 0
  6999                           
  7000 ;; *************** function _setupEUSART *****************
  7001 ;; Defined at:
  7002 ;;		line 630 in file "main.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;		None
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;		None
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  1    wreg      void 
  7009 ;; Registers used:
  7010 ;;		wreg, status,2
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7016 ;;      Params:         0       0       0       0
  7017 ;;      Locals:         0       0       0       0
  7018 ;;      Temps:          0       0       0       0
  7019 ;;      Totals:         0       0       0       0
  7020 ;;Total ram usage:        0 bytes
  7021 ;; Hardware stack levels used: 1
  7022 ;; Hardware stack levels required when called: 3
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_main
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text26
  7031   003142                     __ptext26:
  7032                           	callstack 0
  7033   003142                     _setupEUSART:
  7034                           	callstack 27
  7035                           
  7036                           ;main.c: 634:     BAUDCONbits.BRG16 = 0;
  7037                           
  7038                           ;incstack = 0
  7039   003142  96B8               	bcf	184,3,c	;volatile
  7040                           
  7041                           ;main.c: 635:     BAUDCONbits.ABDEN = 0;
  7042   003144  90B8               	bcf	184,0,c	;volatile
  7043                           
  7044                           ;main.c: 636:     BAUDCONbits.CKTXP = 0;
  7045   003146  98B8               	bcf	184,4,c	;volatile
  7046                           
  7047                           ;main.c: 637:     BAUDCONbits.ABDOVF = 0;
  7048   003148  9EB8               	bcf	184,7,c	;volatile
  7049                           
  7050                           ;main.c: 640:     SPBRG = 12;
  7051   00314A  0E0C               	movlw	12
  7052   00314C  6EAF               	movwf	175,c	;volatile
  7053                           
  7054                           ;main.c: 642:     TXSTAbits.BRGH = 0;
  7055   00314E  94AC               	bcf	172,2,c	;volatile
  7056                           
  7057                           ;main.c: 644:     TXSTAbits.SYNC = 0;
  7058   003150  98AC               	bcf	172,4,c	;volatile
  7059                           
  7060                           ;main.c: 645:     TXSTAbits.TX9 = 0;
  7061   003152  9CAC               	bcf	172,6,c	;volatile
  7062                           
  7063                           ;main.c: 646:     RCSTAbits.SPEN = 1;
  7064   003154  8EAB               	bsf	171,7,c	;volatile
  7065                           
  7066                           ;main.c: 647:     TXSTAbits.TXEN = 1;
  7067   003156  8AAC               	bsf	172,5,c	;volatile
  7068                           
  7069                           ;main.c: 648:     RCSTAbits.CREN = 0;
  7070   003158  98AB               	bcf	171,4,c	;volatile
  7071                           
  7072                           ;main.c: 650:     TXSTAbits.SENDB = 0;
  7073   00315A  96AC               	bcf	172,3,c	;volatile
  7074                           
  7075                           ;main.c: 653:     TRISBbits.TRISB7 = 1;
  7076   00315C  8E93               	bsf	147,7,c	;volatile
  7077                           
  7078                           ;main.c: 654:     TRISBbits.TRISB5 = 1;
  7079   00315E  8A93               	bsf	147,5,c	;volatile
  7080   003160  0012               	return		;funcret
  7081   003162                     __end_of_setupEUSART:
  7082                           	callstack 0
  7083                           
  7084 ;; *************** function _setupADC *****************
  7085 ;; Defined at:
  7086 ;;		line 467 in file "main.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;		None
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;		None
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  1    wreg      void 
  7093 ;; Registers used:
  7094 ;;		wreg, status,2
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7100 ;;      Params:         0       0       0       0
  7101 ;;      Locals:         0       0       0       0
  7102 ;;      Temps:          0       0       0       0
  7103 ;;      Totals:         0       0       0       0
  7104 ;;Total ram usage:        0 bytes
  7105 ;; Hardware stack levels used: 1
  7106 ;; Hardware stack levels required when called: 3
  7107 ;; This function calls:
  7108 ;;		Nothing
  7109 ;; This function is called by:
  7110 ;;		_main
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           
  7114                           	psect	text27
  7115   0031F8                     __ptext27:
  7116                           	callstack 0
  7117   0031F8                     _setupADC:
  7118                           	callstack 27
  7119                           
  7120                           ;main.c: 468:     ADCON1 = 0b00000000;
  7121                           
  7122                           ;incstack = 0
  7123   0031F8  6AC1               	clrf	193,c	;volatile
  7124                           
  7125                           ;main.c: 469:     ADCON0 = 0b00001101;
  7126   0031FA  0E0D               	movlw	13
  7127   0031FC  6EC2               	movwf	194,c	;volatile
  7128                           
  7129                           ;main.c: 470:     ADCON2 = 0b10101111;
  7130   0031FE  0EAF               	movlw	175
  7131   003200  6EC0               	movwf	192,c	;volatile
  7132   003202  0012               	return		;funcret
  7133   003204                     __end_of_setupADC:
  7134                           	callstack 0
  7135                           
  7136 ;; *************** function _setDisplayDigits *****************
  7137 ;; Defined at:
  7138 ;;		line 670 in file "main.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;		None
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;		None
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  1    wreg      void 
  7145 ;; Registers used:
  7146 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7152 ;;      Params:         0       0       0       0
  7153 ;;      Locals:         0       0       0       0
  7154 ;;      Temps:          0       0       0       0
  7155 ;;      Totals:         0       0       0       0
  7156 ;;Total ram usage:        0 bytes
  7157 ;; Hardware stack levels used: 1
  7158 ;; Hardware stack levels required when called: 4
  7159 ;; This function calls:
  7160 ;;		___flmul
  7161 ;;		___fltol
  7162 ;;		___lwdiv
  7163 ;;		___lwmod
  7164 ;; This function is called by:
  7165 ;;		_main
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text28
  7170   001B6A                     __ptext28:
  7171                           	callstack 0
  7172   001B6A                     _setDisplayDigits:
  7173                           	callstack 26
  7174                           
  7175                           ;main.c: 671:     if (fsm_state == 0) {
  7176                           
  7177                           ;incstack = 0
  7178   001B6A  0100               	movlb	0	; () banked
  7179   001B6C  51F9               	movf	_fsm_state& (0+255),w,b
  7180   001B6E  A4D8               	btfss	status,2,c
  7181   001B70  D007               	goto	l7607
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;main.c: 673:         displayDigit0 = 11;
  7185   001B72  0E0B               	movlw	11
  7186   001B74  6E38               	movwf	_displayDigit0^0,c
  7187                           
  7188                           ;main.c: 674:         displayDigit1 = 'A';
  7189   001B76  0E41               	movlw	65
  7190   001B78  6E37               	movwf	_displayDigit1^0,c
  7191                           
  7192                           ;main.c: 675:         displayDigit2 = 11;
  7193   001B7A  0E0B               	movlw	11
  7194   001B7C  6E36               	movwf	_displayDigit2^0,c
  7195                           
  7196                           ;main.c: 677:     } else if (fsm_state == 1) {
  7197   001B7E  0012               	return	
  7198   001B80                     l7607:
  7199                           
  7200                           ; BSR set to: 0
  7201   001B80  05F9               	decf	_fsm_state& (0+255),w,b
  7202   001B82  A4D8               	btfss	status,2,c
  7203   001B84  D05C               	goto	l7621
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;main.c: 679:         c_target = (unsigned int) (adc_voltage * 100);
  7207   001B86  0E00               	movlw	0
  7208   001B88  6F72               	movwf	___flmul@a& (0+255),b
  7209   001B8A  0E00               	movlw	0
  7210   001B8C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7211   001B8E  0EC8               	movlw	200
  7212   001B90  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7213   001B92  0E42               	movlw	66
  7214   001B94  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7215   001B96  C0EA  F06E         	movff	_adc_voltage,___flmul@b
  7216   001B9A  C0EB  F06F         	movff	_adc_voltage+1,___flmul@b+1
  7217   001B9E  C0EC  F070         	movff	_adc_voltage+2,___flmul@b+2
  7218   001BA2  C0ED  F071         	movff	_adc_voltage+3,___flmul@b+3
  7219   001BA6  EC9D  F007         	call	___flmul	;wreg free
  7220   001BAA  C06E  F087         	movff	?___flmul,___fltol@f1
  7221   001BAE  C06F  F088         	movff	?___flmul+1,___fltol@f1+1
  7222   001BB2  C070  F089         	movff	?___flmul+2,___fltol@f1+2
  7223   001BB6  C071  F08A         	movff	?___flmul+3,___fltol@f1+3
  7224   001BBA  ECFF  F012         	call	___fltol	;wreg free
  7225   001BBE  C087  F032         	movff	?___fltol,_c_target
  7226   001BC2  C088  F033         	movff	?___fltol+1,_c_target+1
  7227                           
  7228                           ;main.c: 680:         c_remainder = c_target % 100;
  7229   001BC6  C032  F060         	movff	_c_target,___lwmod@dividend
  7230   001BCA  C033  F061         	movff	_c_target+1,___lwmod@dividend+1
  7231   001BCE  0E00               	movlw	0
  7232   001BD0  0100               	movlb	0	; () banked
  7233   001BD2  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  7234   001BD4  0E64               	movlw	100
  7235   001BD6  6F62               	movwf	___lwmod@divisor& (0+255),b
  7236   001BD8  ECBC  F017         	call	___lwmod	;wreg free
  7237   001BDC  C060  F030         	movff	?___lwmod,_c_remainder
  7238   001BE0  C061  F031         	movff	?___lwmod+1,_c_remainder+1
  7239                           
  7240                           ;main.c: 681:         c_number = c_target / 100;
  7241   001BE4  C032  F060         	movff	_c_target,___lwdiv@dividend
  7242   001BE8  C033  F061         	movff	_c_target+1,___lwdiv@dividend+1
  7243   001BEC  0E00               	movlw	0
  7244   001BEE  0100               	movlb	0	; () banked
  7245   001BF0  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7246   001BF2  0E64               	movlw	100
  7247   001BF4  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7248   001BF6  EC3E  F016         	call	___lwdiv	;wreg free
  7249   001BFA  C060  F02E         	movff	?___lwdiv,_c_number
  7250   001BFE  C061  F02F         	movff	?___lwdiv+1,_c_number+1
  7251                           
  7252                           ;main.c: 683:         displayDigit0 = (uint8_t) c_number;
  7253   001C02  C02E  F038         	movff	_c_number,_displayDigit0
  7254                           
  7255                           ;main.c: 684:         displayDigit1 = (uint8_t) (c_remainder / 10);
  7256   001C06  C030  F060         	movff	_c_remainder,___lwdiv@dividend
  7257   001C0A  C031  F061         	movff	_c_remainder+1,___lwdiv@dividend+1
  7258   001C0E  0E00               	movlw	0
  7259   001C10  0100               	movlb	0	; () banked
  7260   001C12  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7261   001C14  0E0A               	movlw	10
  7262   001C16  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7263   001C18  EC3E  F016         	call	___lwdiv	;wreg free
  7264   001C1C  0100               	movlb	0	; () banked
  7265   001C1E  5160               	movf	?___lwdiv& (0+255),w,b
  7266   001C20  6E37               	movwf	_displayDigit1^0,c
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;main.c: 685:         displayDigit2 = c_remainder % 10;
  7270   001C22  C030  F060         	movff	_c_remainder,___lwmod@dividend
  7271   001C26  C031  F061         	movff	_c_remainder+1,___lwmod@dividend+1
  7272   001C2A  0E00               	movlw	0
  7273   001C2C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  7274   001C2E  0E0A               	movlw	10
  7275   001C30  6F62               	movwf	___lwmod@divisor& (0+255),b
  7276   001C32  ECBC  F017         	call	___lwmod	;wreg free
  7277   001C36  0100               	movlb	0	; () banked
  7278   001C38  5160               	movf	?___lwmod& (0+255),w,b
  7279   001C3A  6E36               	movwf	_displayDigit2^0,c
  7280                           
  7281                           ;main.c: 687:     } else if (fsm_state == 2) {
  7282   001C3C  0012               	return	
  7283   001C3E                     l7621:
  7284                           
  7285                           ; BSR set to: 0
  7286   001C3E  0E02               	movlw	2
  7287   001C40  19F9               	xorwf	_fsm_state& (0+255),w,b
  7288   001C42  A4D8               	btfss	status,2,c
  7289   001C44  D051               	goto	l7635
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;main.c: 689:         c_target = (unsigned int) (adc_voltage * 100);
  7293   001C46  0E00               	movlw	0
  7294   001C48  6F72               	movwf	___flmul@a& (0+255),b
  7295   001C4A  0E00               	movlw	0
  7296   001C4C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7297   001C4E  0EC8               	movlw	200
  7298   001C50  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7299   001C52  0E42               	movlw	66
  7300   001C54  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7301   001C56  C0EA  F06E         	movff	_adc_voltage,___flmul@b
  7302   001C5A  C0EB  F06F         	movff	_adc_voltage+1,___flmul@b+1
  7303   001C5E  C0EC  F070         	movff	_adc_voltage+2,___flmul@b+2
  7304   001C62  C0ED  F071         	movff	_adc_voltage+3,___flmul@b+3
  7305   001C66  EC9D  F007         	call	___flmul	;wreg free
  7306   001C6A  C06E  F087         	movff	?___flmul,___fltol@f1
  7307   001C6E  C06F  F088         	movff	?___flmul+1,___fltol@f1+1
  7308   001C72  C070  F089         	movff	?___flmul+2,___fltol@f1+2
  7309   001C76  C071  F08A         	movff	?___flmul+3,___fltol@f1+3
  7310   001C7A  ECFF  F012         	call	___fltol	;wreg free
  7311   001C7E  C087  F032         	movff	?___fltol,_c_target
  7312   001C82  C088  F033         	movff	?___fltol+1,_c_target+1
  7313                           
  7314                           ;main.c: 690:         c_remainder = c_target % 100;
  7315   001C86  C032  F060         	movff	_c_target,___lwmod@dividend
  7316   001C8A  C033  F061         	movff	_c_target+1,___lwmod@dividend+1
  7317   001C8E  0E00               	movlw	0
  7318   001C90  0100               	movlb	0	; () banked
  7319   001C92  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  7320   001C94  0E64               	movlw	100
  7321   001C96  6F62               	movwf	___lwmod@divisor& (0+255),b
  7322   001C98  ECBC  F017         	call	___lwmod	;wreg free
  7323   001C9C  C060  F030         	movff	?___lwmod,_c_remainder
  7324   001CA0  C061  F031         	movff	?___lwmod+1,_c_remainder+1
  7325                           
  7326                           ;main.c: 691:         c_number = c_target / 100;
  7327   001CA4  C032  F060         	movff	_c_target,___lwdiv@dividend
  7328   001CA8  C033  F061         	movff	_c_target+1,___lwdiv@dividend+1
  7329   001CAC  0E00               	movlw	0
  7330   001CAE  0100               	movlb	0	; () banked
  7331   001CB0  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7332   001CB2  0E64               	movlw	100
  7333   001CB4  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7334   001CB6  EC3E  F016         	call	___lwdiv	;wreg free
  7335   001CBA  C060  F02E         	movff	?___lwdiv,_c_number
  7336   001CBE  C061  F02F         	movff	?___lwdiv+1,_c_number+1
  7337                           
  7338                           ;main.c: 693:         displayDigit0 = (uint8_t) c_number;
  7339   001CC2  C02E  F038         	movff	_c_number,_displayDigit0
  7340                           
  7341                           ;main.c: 694:         displayDigit1 = (uint8_t) (c_remainder / 10);
  7342   001CC6  C030  F060         	movff	_c_remainder,___lwdiv@dividend
  7343   001CCA  C031  F061         	movff	_c_remainder+1,___lwdiv@dividend+1
  7344   001CCE  0E00               	movlw	0
  7345   001CD0  0100               	movlb	0	; () banked
  7346   001CD2  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7347   001CD4  0E0A               	movlw	10
  7348   001CD6  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7349   001CD8  EC3E  F016         	call	___lwdiv	;wreg free
  7350   001CDC  0100               	movlb	0	; () banked
  7351   001CDE  5160               	movf	?___lwdiv& (0+255),w,b
  7352   001CE0  6E37               	movwf	_displayDigit1^0,c
  7353                           
  7354                           ; BSR set to: 0
  7355                           ;main.c: 695:         displayDigit2 = 'C';
  7356   001CE2  0E43               	movlw	67
  7357   001CE4  6E36               	movwf	_displayDigit2^0,c
  7358                           
  7359                           ;main.c: 697:     } else if (fsm_state == 3) {
  7360   001CE6  0012               	return	
  7361   001CE8                     l7635:
  7362                           
  7363                           ; BSR set to: 0
  7364   001CE8  0E03               	movlw	3
  7365   001CEA  19F9               	xorwf	_fsm_state& (0+255),w,b
  7366   001CEC  A4D8               	btfss	status,2,c
  7367   001CEE  D007               	goto	l7639
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;main.c: 699:         displayDigit0 = 11;
  7371   001CF0  0E0B               	movlw	11
  7372   001CF2  6E38               	movwf	_displayDigit0^0,c
  7373                           
  7374                           ;main.c: 700:         displayDigit1 = 'C';
  7375   001CF4  0E43               	movlw	67
  7376   001CF6  6E37               	movwf	_displayDigit1^0,c
  7377                           
  7378                           ;main.c: 701:         displayDigit2 = 11;
  7379   001CF8  0E0B               	movlw	11
  7380   001CFA  6E36               	movwf	_displayDigit2^0,c
  7381                           
  7382                           ;main.c: 703:     } else if (fsm_state == 4) {
  7383   001CFC  0012               	return	
  7384   001CFE                     l7639:
  7385                           
  7386                           ; BSR set to: 0
  7387   001CFE  0E04               	movlw	4
  7388   001D00  19F9               	xorwf	_fsm_state& (0+255),w,b
  7389   001D02  A4D8               	btfss	status,2,c
  7390   001D04  D006               	goto	l7645
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;main.c: 705:         displayDigit0 = 'S';
  7394   001D06  0E53               	movlw	83
  7395   001D08  6E38               	movwf	_displayDigit0^0,c
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;main.c: 706:         displayDigit1 = 0;
  7399   001D0A  6A37               	clrf	_displayDigit1^0,c
  7400                           
  7401                           ;main.c: 707:         displayDigit2 = 11;
  7402   001D0C  0E0B               	movlw	11
  7403   001D0E  6E36               	movwf	_displayDigit2^0,c
  7404                           
  7405                           ;main.c: 709:     } else if (fsm_state == 5) {
  7406   001D10  0012               	return	
  7407   001D12                     l7645:
  7408                           
  7409                           ; BSR set to: 0
  7410   001D12  0E05               	movlw	5
  7411   001D14  19F9               	xorwf	_fsm_state& (0+255),w,b
  7412   001D16  A4D8               	btfss	status,2,c
  7413   001D18  D007               	goto	l7649
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;main.c: 711:         displayDigit0 = 'S';
  7417   001D1A  0E53               	movlw	83
  7418   001D1C  6E38               	movwf	_displayDigit0^0,c
  7419                           
  7420                           ;main.c: 712:         displayDigit1 = 1;
  7421   001D1E  0E01               	movlw	1
  7422   001D20  6E37               	movwf	_displayDigit1^0,c
  7423                           
  7424                           ;main.c: 713:         displayDigit2 = 11;
  7425   001D22  0E0B               	movlw	11
  7426   001D24  6E36               	movwf	_displayDigit2^0,c
  7427                           
  7428                           ;main.c: 715:     } else if (fsm_state == 6) {
  7429   001D26  0012               	return	
  7430   001D28                     l7649:
  7431                           
  7432                           ; BSR set to: 0
  7433   001D28  0E06               	movlw	6
  7434   001D2A  19F9               	xorwf	_fsm_state& (0+255),w,b
  7435   001D2C  A4D8               	btfss	status,2,c
  7436   001D2E  D007               	goto	l7653
  7437                           
  7438                           ; BSR set to: 0
  7439                           ;main.c: 717:         displayDigit0 = 'S';
  7440   001D30  0E53               	movlw	83
  7441   001D32  6E38               	movwf	_displayDigit0^0,c
  7442                           
  7443                           ;main.c: 718:         displayDigit1 = 2;
  7444   001D34  0E02               	movlw	2
  7445   001D36  6E37               	movwf	_displayDigit1^0,c
  7446                           
  7447                           ;main.c: 719:         displayDigit2 = 11;
  7448   001D38  0E0B               	movlw	11
  7449   001D3A  6E36               	movwf	_displayDigit2^0,c
  7450                           
  7451                           ;main.c: 721:     } else if (fsm_state == 7) {
  7452   001D3C  0012               	return	
  7453   001D3E                     l7653:
  7454                           
  7455                           ; BSR set to: 0
  7456   001D3E  0E07               	movlw	7
  7457   001D40  19F9               	xorwf	_fsm_state& (0+255),w,b
  7458   001D42  A4D8               	btfss	status,2,c
  7459   001D44  D007               	goto	l336
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;main.c: 723:         displayDigit0 = 'C';
  7463   001D46  0E43               	movlw	67
  7464   001D48  6E38               	movwf	_displayDigit0^0,c
  7465                           
  7466                           ;main.c: 724:         displayDigit1 = 'L';
  7467   001D4A  0E4C               	movlw	76
  7468   001D4C  6E37               	movwf	_displayDigit1^0,c
  7469                           
  7470                           ;main.c: 725:         displayDigit2 = 'r';
  7471   001D4E  0E72               	movlw	114
  7472   001D50  6E36               	movwf	_displayDigit2^0,c
  7473                           
  7474                           ;main.c: 727:     }
  7475   001D52  0012               	return	
  7476   001D54                     l336:
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;main.c: 729:         __nop();
  7480   001D54  0000               	nop	
  7481   001D56  0012               	return		;funcret
  7482   001D58                     __end_of_setDisplayDigits:
  7483                           	callstack 0
  7484                           
  7485 ;; *************** function ___lwmod *****************
  7486 ;; Defined at:
  7487 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwmod.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  dividend        2    0[BANK0 ] unsigned int 
  7490 ;;  divisor         2    2[BANK0 ] unsigned int 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  counter         1    4[BANK0 ] unsigned char 
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  2    0[BANK0 ] unsigned int 
  7495 ;; Registers used:
  7496 ;;		wreg, status,2, status,0
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7502 ;;      Params:         0       4       0       0
  7503 ;;      Locals:         0       1       0       0
  7504 ;;      Temps:          0       0       0       0
  7505 ;;      Totals:         0       5       0       0
  7506 ;;Total ram usage:        5 bytes
  7507 ;; Hardware stack levels used: 1
  7508 ;; Hardware stack levels required when called: 3
  7509 ;; This function calls:
  7510 ;;		Nothing
  7511 ;; This function is called by:
  7512 ;;		_setDisplayDigits
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text29
  7517   002F78                     __ptext29:
  7518                           	callstack 0
  7519   002F78                     ___lwmod:
  7520                           	callstack 26
  7521                           
  7522                           ;incstack = 0
  7523   002F78  0100               	movlb	0	; () banked
  7524   002F7A  5162               	movf	___lwmod@divisor& (0+255),w,b
  7525   002F7C  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7526   002F7E  B4D8               	btfsc	status,2,c
  7527   002F80  D018               	goto	l848
  7528                           
  7529                           ; BSR set to: 0
  7530   002F82  0E01               	movlw	1
  7531   002F84  6F64               	movwf	___lwmod@counter& (0+255),b
  7532   002F86  D004               	goto	l7569
  7533   002F88                     l7567:
  7534                           
  7535                           ; BSR set to: 0
  7536   002F88  90D8               	bcf	status,0,c
  7537   002F8A  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  7538   002F8C  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7539   002F8E  2B64               	incf	___lwmod@counter& (0+255),f,b
  7540   002F90                     l7569:
  7541                           
  7542                           ; BSR set to: 0
  7543   002F90  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7544   002F92  D7FA               	goto	l7567
  7545   002F94                     u9620:
  7546                           
  7547                           ; BSR set to: 0
  7548   002F94  5162               	movf	___lwmod@divisor& (0+255),w,b
  7549   002F96  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  7550   002F98  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7551   002F9A  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7552   002F9C  A0D8               	btfss	status,0,c
  7553   002F9E  D004               	goto	l7575
  7554                           
  7555                           ; BSR set to: 0
  7556   002FA0  5162               	movf	___lwmod@divisor& (0+255),w,b
  7557   002FA2  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  7558   002FA4  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7559   002FA6  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7560   002FA8                     l7575:
  7561                           
  7562                           ; BSR set to: 0
  7563   002FA8  90D8               	bcf	status,0,c
  7564   002FAA  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7565   002FAC  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  7566                           
  7567                           ; BSR set to: 0
  7568   002FAE  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  7569   002FB0  D7F1               	goto	u9620
  7570   002FB2                     l848:
  7571                           
  7572                           ; BSR set to: 0
  7573   002FB2  C060  F060         	movff	___lwmod@dividend,?___lwmod
  7574   002FB6  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  7575                           
  7576                           ; BSR set to: 0
  7577   002FBA  0012               	return		;funcret
  7578   002FBC                     __end_of___lwmod:
  7579                           	callstack 0
  7580                           
  7581 ;; *************** function ___lwdiv *****************
  7582 ;; Defined at:
  7583 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwdiv.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;  dividend        2    0[BANK0 ] unsigned int 
  7586 ;;  divisor         2    2[BANK0 ] unsigned int 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;  quotient        2    5[BANK0 ] unsigned int 
  7589 ;;  counter         1    4[BANK0 ] unsigned char 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  2    0[BANK0 ] unsigned int 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7599 ;;      Params:         0       4       0       0
  7600 ;;      Locals:         0       3       0       0
  7601 ;;      Temps:          0       0       0       0
  7602 ;;      Totals:         0       7       0       0
  7603 ;;Total ram usage:        7 bytes
  7604 ;; Hardware stack levels used: 1
  7605 ;; Hardware stack levels required when called: 3
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_setDisplayDigits
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text30
  7614   002C7C                     __ptext30:
  7615                           	callstack 0
  7616   002C7C                     ___lwdiv:
  7617                           	callstack 26
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;incstack = 0
  7621   002C7C  0E00               	movlw	0
  7622   002C7E  0100               	movlb	0	; () banked
  7623   002C80  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7624   002C82  0E00               	movlw	0
  7625   002C84  6F65               	movwf	___lwdiv@quotient& (0+255),b
  7626                           
  7627                           ; BSR set to: 0
  7628   002C86  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7629   002C88  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7630   002C8A  B4D8               	btfsc	status,2,c
  7631   002C8C  D01C               	goto	l838
  7632                           
  7633                           ; BSR set to: 0
  7634   002C8E  0E01               	movlw	1
  7635   002C90  6F64               	movwf	___lwdiv@counter& (0+255),b
  7636   002C92  D004               	goto	l7549
  7637   002C94                     l7547:
  7638                           
  7639                           ; BSR set to: 0
  7640   002C94  90D8               	bcf	status,0,c
  7641   002C96  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  7642   002C98  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7643   002C9A  2B64               	incf	___lwdiv@counter& (0+255),f,b
  7644   002C9C                     l7549:
  7645                           
  7646                           ; BSR set to: 0
  7647   002C9C  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7648   002C9E  D7FA               	goto	l7547
  7649   002CA0                     u9590:
  7650                           
  7651                           ; BSR set to: 0
  7652   002CA0  90D8               	bcf	status,0,c
  7653   002CA2  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  7654   002CA4  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7655                           
  7656                           ; BSR set to: 0
  7657   002CA6  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7658   002CA8  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  7659   002CAA  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7660   002CAC  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7661   002CAE  A0D8               	btfss	status,0,c
  7662   002CB0  D005               	goto	l7559
  7663                           
  7664                           ; BSR set to: 0
  7665   002CB2  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7666   002CB4  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  7667   002CB6  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7668   002CB8  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7669                           
  7670                           ; BSR set to: 0
  7671   002CBA  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  7672   002CBC                     l7559:
  7673                           
  7674                           ; BSR set to: 0
  7675   002CBC  90D8               	bcf	status,0,c
  7676   002CBE  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7677   002CC0  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  7678                           
  7679                           ; BSR set to: 0
  7680   002CC2  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  7681   002CC4  D7ED               	goto	u9590
  7682   002CC6                     l838:
  7683                           
  7684                           ; BSR set to: 0
  7685   002CC6  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  7686   002CCA  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7687                           
  7688                           ; BSR set to: 0
  7689   002CCE  0012               	return		;funcret
  7690   002CD0                     __end_of___lwdiv:
  7691                           	callstack 0
  7692                           
  7693 ;; *************** function ___fltol *****************
  7694 ;; Defined at:
  7695 ;;		line 43 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/fltol.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  f1              4   39[BANK0 ] unsigned int 
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;  exp1            1   48[BANK0 ] unsigned char 
  7700 ;;  sign1           1   47[BANK0 ] unsigned char 
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  4   39[BANK0 ] long 
  7703 ;; Registers used:
  7704 ;;		wreg, status,2, status,0
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7710 ;;      Params:         0       4       0       0
  7711 ;;      Locals:         0       2       0       0
  7712 ;;      Temps:          0       4       0       0
  7713 ;;      Totals:         0      10       0       0
  7714 ;;Total ram usage:       10 bytes
  7715 ;; Hardware stack levels used: 1
  7716 ;; Hardware stack levels required when called: 3
  7717 ;; This function calls:
  7718 ;;		Nothing
  7719 ;; This function is called by:
  7720 ;;		_setDisplayDigits
  7721 ;;		_efgtoa
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text31
  7726   0025FE                     __ptext31:
  7727                           	callstack 0
  7728   0025FE                     ___fltol:
  7729                           	callstack 23
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;incstack = 0
  7733   0025FE  0100               	movlb	0	; () banked
  7734   002600  3589               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7735   002602  358A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7736   002604  6F90               	movwf	___fltol@exp1& (0+255),b
  7737   002606  5190               	movf	___fltol@exp1& (0+255),w,b
  7738   002608  A4D8               	btfss	status,2,c
  7739   00260A  D009               	goto	l7039
  7740   00260C                     u8790:
  7741                           
  7742                           ; BSR set to: 0
  7743   00260C  0E00               	movlw	0
  7744   00260E  6F87               	movwf	?___fltol& (0+255),b
  7745   002610  0E00               	movlw	0
  7746   002612  6F88               	movwf	(?___fltol+1)& (0+255),b
  7747   002614  0E00               	movlw	0
  7748   002616  6F89               	movwf	(?___fltol+2)& (0+255),b
  7749   002618  0E00               	movlw	0
  7750   00261A  6F8A               	movwf	(?___fltol+3)& (0+255),b
  7751   00261C  0012               	return	
  7752   00261E                     l7039:
  7753                           
  7754                           ; BSR set to: 0
  7755   00261E  C087  F08B         	movff	___fltol@f1,??___fltol
  7756   002622  C088  F08C         	movff	___fltol@f1+1,??___fltol+1
  7757   002626  C089  F08D         	movff	___fltol@f1+2,??___fltol+2
  7758   00262A  C08A  F08E         	movff	___fltol@f1+3,??___fltol+3
  7759   00262E  0E20               	movlw	32
  7760   002630  D005               	goto	u8800
  7761   002632                     u8805:
  7762   002632  90D8               	bcf	status,0,c
  7763   002634  338E               	rrcf	(??___fltol+3)& (0+255),f,b
  7764   002636  338D               	rrcf	(??___fltol+2)& (0+255),f,b
  7765   002638  338C               	rrcf	(??___fltol+1)& (0+255),f,b
  7766   00263A  338B               	rrcf	??___fltol& (0+255),f,b
  7767   00263C                     u8800:
  7768   00263C  2EE8               	decfsz	wreg,f,c
  7769   00263E  D7F9               	goto	u8805
  7770   002640  518B               	movf	??___fltol& (0+255),w,b
  7771   002642  6F8F               	movwf	___fltol@sign1& (0+255),b
  7772                           
  7773                           ; BSR set to: 0
  7774   002644  8F89               	bsf	(___fltol@f1+2)& (0+255),7,b
  7775                           
  7776                           ; BSR set to: 0
  7777   002646  0EFF               	movlw	255
  7778   002648  1787               	andwf	___fltol@f1& (0+255),f,b
  7779   00264A  0EFF               	movlw	255
  7780   00264C  1788               	andwf	(___fltol@f1+1)& (0+255),f,b
  7781   00264E  0EFF               	movlw	255
  7782   002650  1789               	andwf	(___fltol@f1+2)& (0+255),f,b
  7783   002652  0E00               	movlw	0
  7784   002654  178A               	andwf	(___fltol@f1+3)& (0+255),f,b
  7785                           
  7786                           ; BSR set to: 0
  7787   002656  0E96               	movlw	150
  7788   002658  5F90               	subwf	___fltol@exp1& (0+255),f,b
  7789                           
  7790                           ; BSR set to: 0
  7791   00265A  AF90               	btfss	___fltol@exp1& (0+255),7,b
  7792   00265C  D00D               	goto	l7059
  7793                           
  7794                           ; BSR set to: 0
  7795   00265E  5190               	movf	___fltol@exp1& (0+255),w,b
  7796   002660  0A80               	xorlw	128
  7797   002662  0F97               	addlw	151
  7798   002664  A0D8               	btfss	status,0,c
  7799   002666  D7D2               	goto	u8790
  7800   002668                     l7055:
  7801                           
  7802                           ; BSR set to: 0
  7803   002668  90D8               	bcf	status,0,c
  7804   00266A  338A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7805   00266C  3389               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7806   00266E  3388               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7807   002670  3387               	rrcf	___fltol@f1& (0+255),f,b
  7808                           
  7809                           ; BSR set to: 0
  7810   002672  3F90               	incfsz	___fltol@exp1& (0+255),f,b
  7811   002674  D7F9               	goto	l7055
  7812   002676  D00D               	goto	u8840
  7813   002678                     l7059:
  7814                           
  7815                           ; BSR set to: 0
  7816   002678  0E1F               	movlw	31
  7817   00267A  6590               	cpfsgt	___fltol@exp1& (0+255),b
  7818   00267C  D007               	goto	l7067
  7819   00267E  D7C6               	goto	u8790
  7820   002680                     l7065:
  7821                           
  7822                           ; BSR set to: 0
  7823   002680  90D8               	bcf	status,0,c
  7824   002682  3787               	rlcf	___fltol@f1& (0+255),f,b
  7825   002684  3788               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7826   002686  3789               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7827   002688  378A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7828   00268A  0790               	decf	___fltol@exp1& (0+255),f,b
  7829   00268C                     l7067:
  7830                           
  7831                           ; BSR set to: 0
  7832   00268C  5190               	movf	___fltol@exp1& (0+255),w,b
  7833   00268E  A4D8               	btfss	status,2,c
  7834   002690  D7F7               	goto	l7065
  7835   002692                     u8840:
  7836                           
  7837                           ; BSR set to: 0
  7838   002692  518F               	movf	___fltol@sign1& (0+255),w,b
  7839   002694  B4D8               	btfsc	status,2,c
  7840   002696  D008               	goto	l7073
  7841                           
  7842                           ; BSR set to: 0
  7843   002698  1F8A               	comf	(___fltol@f1+3)& (0+255),f,b
  7844   00269A  1F89               	comf	(___fltol@f1+2)& (0+255),f,b
  7845   00269C  1F88               	comf	(___fltol@f1+1)& (0+255),f,b
  7846   00269E  6D87               	negf	___fltol@f1& (0+255),b
  7847   0026A0  0E00               	movlw	0
  7848   0026A2  2388               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7849   0026A4  2389               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7850   0026A6  238A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7851   0026A8                     l7073:
  7852                           
  7853                           ; BSR set to: 0
  7854   0026A8  C087  F087         	movff	___fltol@f1,?___fltol
  7855   0026AC  C088  F088         	movff	___fltol@f1+1,?___fltol+1
  7856   0026B0  C089  F089         	movff	___fltol@f1+2,?___fltol+2
  7857   0026B4  C08A  F08A         	movff	___fltol@f1+3,?___fltol+3
  7858                           
  7859                           ; BSR set to: 0
  7860   0026B8  0012               	return		;funcret
  7861   0026BA                     __end_of___fltol:
  7862                           	callstack 0
  7863                           
  7864 ;; *************** function ___flmul *****************
  7865 ;; Defined at:
  7866 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcmul.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  b               4   14[BANK0 ] long 
  7869 ;;  a               4   18[BANK0 ] long 
  7870 ;; Auto vars:     Size  Location     Type
  7871 ;;  prod            4   33[BANK0 ] struct .
  7872 ;;  grs             4   29[BANK0 ] unsigned long 
  7873 ;;  temp            2   37[BANK0 ] struct .
  7874 ;;  bexp            1   28[BANK0 ] unsigned char 
  7875 ;;  aexp            1   27[BANK0 ] unsigned char 
  7876 ;;  sign            1   26[BANK0 ] unsigned char 
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  4   14[BANK0 ] unsigned char 
  7879 ;; Registers used:
  7880 ;;		wreg, status,2, status,0, prodl, prodh
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7886 ;;      Params:         0       8       0       0
  7887 ;;      Locals:         0      13       0       0
  7888 ;;      Temps:          0       4       0       0
  7889 ;;      Totals:         0      25       0       0
  7890 ;;Total ram usage:       25 bytes
  7891 ;; Hardware stack levels used: 1
  7892 ;; Hardware stack levels required when called: 3
  7893 ;; This function calls:
  7894 ;;		Nothing
  7895 ;; This function is called by:
  7896 ;;		_main
  7897 ;;		_setDisplayDigits
  7898 ;;		_efgtoa
  7899 ;; This function uses a non-reentrant model
  7900 ;;
  7901                           
  7902                           	psect	text32
  7903   000F3A                     __ptext32:
  7904                           	callstack 0
  7905   000F3A                     ___flmul:
  7906                           	callstack 23
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;incstack = 0
  7910   000F3A  0100               	movlb	0	; () banked
  7911   000F3C  5171               	movf	(___flmul@b+3)& (0+255),w,b
  7912   000F3E  0B80               	andlw	128
  7913   000F40  6F7A               	movwf	___flmul@sign& (0+255),b
  7914   000F42  5171               	movf	(___flmul@b+3)& (0+255),w,b
  7915   000F44  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  7916   000F46  6F7C               	movwf	___flmul@bexp& (0+255),b
  7917                           
  7918                           ; BSR set to: 0
  7919   000F48  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
  7920                           
  7921                           ; BSR set to: 0
  7922   000F4A  817C               	bsf	___flmul@bexp& (0+255),0,b
  7923                           
  7924                           ; BSR set to: 0
  7925   000F4C  517C               	movf	___flmul@bexp& (0+255),w,b
  7926   000F4E  B4D8               	btfsc	status,2,c
  7927   000F50  D00D               	goto	l6867
  7928                           
  7929                           ; BSR set to: 0
  7930   000F52  297C               	incf	___flmul@bexp& (0+255),w,b
  7931   000F54  A4D8               	btfss	status,2,c
  7932   000F56  D008               	goto	l6865
  7933                           
  7934                           ; BSR set to: 0
  7935   000F58  0E00               	movlw	0
  7936   000F5A  6F6E               	movwf	___flmul@b& (0+255),b
  7937   000F5C  0E00               	movlw	0
  7938   000F5E  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  7939   000F60  0E00               	movlw	0
  7940   000F62  6F70               	movwf	(___flmul@b+2)& (0+255),b
  7941   000F64  0E00               	movlw	0
  7942   000F66  6F71               	movwf	(___flmul@b+3)& (0+255),b
  7943   000F68                     l6865:
  7944                           
  7945                           ; BSR set to: 0
  7946   000F68  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  7947   000F6A  D008               	goto	l6869
  7948   000F6C                     l6867:
  7949                           
  7950                           ; BSR set to: 0
  7951   000F6C  0E00               	movlw	0
  7952   000F6E  6F6E               	movwf	___flmul@b& (0+255),b
  7953   000F70  0E00               	movlw	0
  7954   000F72  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  7955   000F74  0E00               	movlw	0
  7956   000F76  6F70               	movwf	(___flmul@b+2)& (0+255),b
  7957   000F78  0E00               	movlw	0
  7958   000F7A  6F71               	movwf	(___flmul@b+3)& (0+255),b
  7959   000F7C                     l6869:
  7960                           
  7961                           ; BSR set to: 0
  7962   000F7C  5175               	movf	(___flmul@a+3)& (0+255),w,b
  7963   000F7E  0B80               	andlw	128
  7964   000F80  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  7965                           
  7966                           ; BSR set to: 0
  7967   000F82  5175               	movf	(___flmul@a+3)& (0+255),w,b
  7968   000F84  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  7969   000F86  6F7B               	movwf	___flmul@aexp& (0+255),b
  7970                           
  7971                           ; BSR set to: 0
  7972   000F88  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
  7973                           
  7974                           ; BSR set to: 0
  7975   000F8A  817B               	bsf	___flmul@aexp& (0+255),0,b
  7976                           
  7977                           ; BSR set to: 0
  7978   000F8C  517B               	movf	___flmul@aexp& (0+255),w,b
  7979   000F8E  B4D8               	btfsc	status,2,c
  7980   000F90  D00D               	goto	l6885
  7981                           
  7982                           ; BSR set to: 0
  7983   000F92  297B               	incf	___flmul@aexp& (0+255),w,b
  7984   000F94  A4D8               	btfss	status,2,c
  7985   000F96  D008               	goto	l6883
  7986                           
  7987                           ; BSR set to: 0
  7988   000F98  0E00               	movlw	0
  7989   000F9A  6F72               	movwf	___flmul@a& (0+255),b
  7990   000F9C  0E00               	movlw	0
  7991   000F9E  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7992   000FA0  0E00               	movlw	0
  7993   000FA2  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7994   000FA4  0E00               	movlw	0
  7995   000FA6  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7996   000FA8                     l6883:
  7997                           
  7998                           ; BSR set to: 0
  7999   000FA8  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  8000   000FAA  D008               	goto	l961
  8001   000FAC                     l6885:
  8002                           
  8003                           ; BSR set to: 0
  8004   000FAC  0E00               	movlw	0
  8005   000FAE  6F72               	movwf	___flmul@a& (0+255),b
  8006   000FB0  0E00               	movlw	0
  8007   000FB2  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8008   000FB4  0E00               	movlw	0
  8009   000FB6  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8010   000FB8  0E00               	movlw	0
  8011   000FBA  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8012   000FBC                     l961:
  8013                           
  8014                           ; BSR set to: 0
  8015   000FBC  517B               	movf	___flmul@aexp& (0+255),w,b
  8016   000FBE  B4D8               	btfsc	status,2,c
  8017   000FC0  D003               	goto	u8580
  8018                           
  8019                           ; BSR set to: 0
  8020   000FC2  517C               	movf	___flmul@bexp& (0+255),w,b
  8021   000FC4  A4D8               	btfss	status,2,c
  8022   000FC6  D009               	goto	l6893
  8023   000FC8                     u8580:
  8024                           
  8025                           ; BSR set to: 0
  8026   000FC8  0E00               	movlw	0
  8027   000FCA  6F6E               	movwf	?___flmul& (0+255),b
  8028   000FCC  0E00               	movlw	0
  8029   000FCE  6F6F               	movwf	(?___flmul+1)& (0+255),b
  8030   000FD0  0E00               	movlw	0
  8031   000FD2  6F70               	movwf	(?___flmul+2)& (0+255),b
  8032   000FD4  0E00               	movlw	0
  8033   000FD6  6F71               	movwf	(?___flmul+3)& (0+255),b
  8034   000FD8  0012               	return	
  8035   000FDA                     l6893:
  8036                           
  8037                           ; BSR set to: 0
  8038   000FDA  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8039   000FDC  036E               	mulwf	___flmul@b& (0+255),b
  8040   000FDE  CFF3 F085          	movff	prodl,___flmul@temp
  8041   000FE2  CFF4 F086          	movff	prodh,___flmul@temp+1
  8042                           
  8043                           ; BSR set to: 0
  8044   000FE6  5185               	movf	___flmul@temp& (0+255),w,b
  8045   000FE8  6F7D               	movwf	___flmul@grs& (0+255),b
  8046   000FEA  6B7E               	clrf	(___flmul@grs+1)& (0+255),b
  8047   000FEC  6B7F               	clrf	(___flmul@grs+2)& (0+255),b
  8048   000FEE  6B80               	clrf	(___flmul@grs+3)& (0+255),b
  8049                           
  8050                           ; BSR set to: 0
  8051   000FF0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8052   000FF2  6F81               	movwf	___flmul@prod& (0+255),b
  8053   000FF4  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  8054   000FF6  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  8055   000FF8  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  8056   000FFA  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8057   000FFC  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8058   000FFE  CFF3 F085          	movff	prodl,___flmul@temp
  8059   001002  CFF4 F086          	movff	prodh,___flmul@temp+1
  8060                           
  8061                           ; BSR set to: 0
  8062   001006  5185               	movf	___flmul@temp& (0+255),w,b
  8063   001008  277D               	addwf	___flmul@grs& (0+255),f,b
  8064   00100A  0E00               	movlw	0
  8065   00100C  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8066   00100E  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8067   001010  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8068                           
  8069                           ; BSR set to: 0
  8070   001012  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8071   001014  2781               	addwf	___flmul@prod& (0+255),f,b
  8072   001016  0E00               	movlw	0
  8073   001018  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8074   00101A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8075   00101C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8076   00101E  5172               	movf	___flmul@a& (0+255),w,b
  8077   001020  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8078   001022  CFF3 F085          	movff	prodl,___flmul@temp
  8079   001026  CFF4 F086          	movff	prodh,___flmul@temp+1
  8080                           
  8081                           ; BSR set to: 0
  8082   00102A  5185               	movf	___flmul@temp& (0+255),w,b
  8083   00102C  277D               	addwf	___flmul@grs& (0+255),f,b
  8084   00102E  0E00               	movlw	0
  8085   001030  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8086   001032  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8087   001034  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8088                           
  8089                           ; BSR set to: 0
  8090   001036  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8091   001038  2781               	addwf	___flmul@prod& (0+255),f,b
  8092   00103A  0E00               	movlw	0
  8093   00103C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8094   00103E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8095   001040  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8096                           
  8097                           ; BSR set to: 0
  8098   001042  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
  8099   001046  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
  8100   00104A  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
  8101   00104E  6B7D               	clrf	___flmul@grs& (0+255),b
  8102                           
  8103                           ; BSR set to: 0
  8104   001050  5172               	movf	___flmul@a& (0+255),w,b
  8105   001052  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8106   001054  CFF3 F085          	movff	prodl,___flmul@temp
  8107   001058  CFF4 F086          	movff	prodh,___flmul@temp+1
  8108                           
  8109                           ; BSR set to: 0
  8110   00105C  5185               	movf	___flmul@temp& (0+255),w,b
  8111   00105E  277D               	addwf	___flmul@grs& (0+255),f,b
  8112   001060  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8113   001062  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8114   001064  0E00               	movlw	0
  8115   001066  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8116   001068  0E00               	movlw	0
  8117   00106A  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8118                           
  8119                           ; BSR set to: 0
  8120   00106C  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8121   00106E  036E               	mulwf	___flmul@b& (0+255),b
  8122   001070  CFF3 F085          	movff	prodl,___flmul@temp
  8123   001074  CFF4 F086          	movff	prodh,___flmul@temp+1
  8124                           
  8125                           ; BSR set to: 0
  8126   001078  5185               	movf	___flmul@temp& (0+255),w,b
  8127   00107A  277D               	addwf	___flmul@grs& (0+255),f,b
  8128   00107C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8129   00107E  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8130   001080  0E00               	movlw	0
  8131   001082  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8132   001084  0E00               	movlw	0
  8133   001086  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8134                           
  8135                           ; BSR set to: 0
  8136   001088  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
  8137   00108C  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
  8138   001090  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
  8139   001094  6B7D               	clrf	___flmul@grs& (0+255),b
  8140   001096  5172               	movf	___flmul@a& (0+255),w,b
  8141   001098  036E               	mulwf	___flmul@b& (0+255),b
  8142   00109A  CFF3 F085          	movff	prodl,___flmul@temp
  8143   00109E  CFF4 F086          	movff	prodh,___flmul@temp+1
  8144                           
  8145                           ; BSR set to: 0
  8146   0010A2  5185               	movf	___flmul@temp& (0+255),w,b
  8147   0010A4  277D               	addwf	___flmul@grs& (0+255),f,b
  8148   0010A6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8149   0010A8  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8150   0010AA  0E00               	movlw	0
  8151   0010AC  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8152   0010AE  0E00               	movlw	0
  8153   0010B0  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8154                           
  8155                           ; BSR set to: 0
  8156   0010B2  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8157   0010B4  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8158   0010B6  CFF3 F085          	movff	prodl,___flmul@temp
  8159   0010BA  CFF4 F086          	movff	prodh,___flmul@temp+1
  8160   0010BE  5185               	movf	___flmul@temp& (0+255),w,b
  8161   0010C0  2781               	addwf	___flmul@prod& (0+255),f,b
  8162   0010C2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8163   0010C4  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8164   0010C6  0E00               	movlw	0
  8165   0010C8  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8166   0010CA  0E00               	movlw	0
  8167   0010CC  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8168                           
  8169                           ; BSR set to: 0
  8170   0010CE  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8171   0010D0  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8172   0010D2  CFF3 F085          	movff	prodl,___flmul@temp
  8173   0010D6  CFF4 F086          	movff	prodh,___flmul@temp+1
  8174                           
  8175                           ; BSR set to: 0
  8176   0010DA  5185               	movf	___flmul@temp& (0+255),w,b
  8177   0010DC  2781               	addwf	___flmul@prod& (0+255),f,b
  8178   0010DE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8179   0010E0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8180   0010E2  0E00               	movlw	0
  8181   0010E4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8182   0010E6  0E00               	movlw	0
  8183   0010E8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8184   0010EA  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8185   0010EC  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8186   0010EE  CFF3 F085          	movff	prodl,___flmul@temp
  8187   0010F2  CFF4 F086          	movff	prodh,___flmul@temp+1
  8188                           
  8189                           ; BSR set to: 0
  8190   0010F6  5185               	movf	___flmul@temp& (0+255),w,b
  8191   0010F8  6F76               	movwf	??___flmul& (0+255),b
  8192   0010FA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8193   0010FC  6F77               	movwf	(??___flmul+1)& (0+255),b
  8194   0010FE  6B78               	clrf	(??___flmul+2)& (0+255),b
  8195   001100  6B79               	clrf	(??___flmul+3)& (0+255),b
  8196   001102  C078  F079         	movff	??___flmul+2,??___flmul+3
  8197   001106  C077  F078         	movff	??___flmul+1,??___flmul+2
  8198   00110A  C076  F077         	movff	??___flmul,??___flmul+1
  8199   00110E  6B76               	clrf	??___flmul& (0+255),b
  8200   001110  5176               	movf	??___flmul& (0+255),w,b
  8201   001112  2781               	addwf	___flmul@prod& (0+255),f,b
  8202   001114  5177               	movf	(??___flmul+1)& (0+255),w,b
  8203   001116  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8204   001118  5178               	movf	(??___flmul+2)& (0+255),w,b
  8205   00111A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8206   00111C  5179               	movf	(??___flmul+3)& (0+255),w,b
  8207   00111E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8208                           
  8209                           ; BSR set to: 0
  8210   001120  C07D  F076         	movff	___flmul@grs,??___flmul
  8211   001124  C07E  F077         	movff	___flmul@grs+1,??___flmul+1
  8212   001128  C07F  F078         	movff	___flmul@grs+2,??___flmul+2
  8213   00112C  C080  F079         	movff	___flmul@grs+3,??___flmul+3
  8214   001130  0E19               	movlw	25
  8215   001132  D005               	goto	u8590
  8216   001134                     u8595:
  8217   001134  90D8               	bcf	status,0,c
  8218   001136  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  8219   001138  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  8220   00113A  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  8221   00113C  3376               	rrcf	??___flmul& (0+255),f,b
  8222   00113E                     u8590:
  8223   00113E  2EE8               	decfsz	wreg,f,c
  8224   001140  D7F9               	goto	u8595
  8225   001142  5176               	movf	??___flmul& (0+255),w,b
  8226   001144  2781               	addwf	___flmul@prod& (0+255),f,b
  8227   001146  5177               	movf	(??___flmul+1)& (0+255),w,b
  8228   001148  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8229   00114A  5178               	movf	(??___flmul+2)& (0+255),w,b
  8230   00114C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8231   00114E  5179               	movf	(??___flmul+3)& (0+255),w,b
  8232   001150  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8233                           
  8234                           ; BSR set to: 0
  8235   001152  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
  8236   001156  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
  8237   00115A  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
  8238   00115E  6B7D               	clrf	___flmul@grs& (0+255),b
  8239                           
  8240                           ; BSR set to: 0
  8241   001160  517B               	movf	___flmul@aexp& (0+255),w,b
  8242   001162  C07C  F076         	movff	___flmul@bexp,??___flmul
  8243   001166  6B77               	clrf	(??___flmul+1)& (0+255),b
  8244   001168  2776               	addwf	??___flmul& (0+255),f,b
  8245   00116A  0E00               	movlw	0
  8246   00116C  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  8247   00116E  0E82               	movlw	130
  8248   001170  2576               	addwf	??___flmul& (0+255),w,b
  8249   001172  6F85               	movwf	___flmul@temp& (0+255),b
  8250   001174  0EFF               	movlw	255
  8251   001176  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  8252   001178  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  8253   00117A  D00F               	goto	l6941
  8254   00117C                     l6935:
  8255                           
  8256                           ; BSR set to: 0
  8257   00117C  90D8               	bcf	status,0,c
  8258   00117E  3781               	rlcf	___flmul@prod& (0+255),f,b
  8259   001180  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8260   001182  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8261   001184  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8262                           
  8263                           ; BSR set to: 0
  8264   001186  BF80               	btfsc	(___flmul@grs+3)& (0+255),7,b
  8265                           
  8266                           ; BSR set to: 0
  8267   001188  8181               	bsf	___flmul@prod& (0+255),0,b
  8268                           
  8269                           ; BSR set to: 0
  8270   00118A  90D8               	bcf	status,0,c
  8271   00118C  377D               	rlcf	___flmul@grs& (0+255),f,b
  8272   00118E  377E               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8273   001190  377F               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8274   001192  3780               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8275   001194  0785               	decf	___flmul@temp& (0+255),f,b
  8276   001196  A0D8               	btfss	status,0,c
  8277   001198  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  8278   00119A                     l6941:
  8279                           
  8280                           ; BSR set to: 0
  8281   00119A  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  8282   00119C  D7EF               	goto	l6935
  8283                           
  8284                           ; BSR set to: 0
  8285   00119E  6B7B               	clrf	___flmul@aexp& (0+255),b
  8286   0011A0  AF80               	btfss	(___flmul@grs+3)& (0+255),7,b
  8287   0011A2  D017               	goto	l970
  8288                           
  8289                           ; BSR set to: 0
  8290   0011A4  0EFF               	movlw	255
  8291   0011A6  157D               	andwf	___flmul@grs& (0+255),w,b
  8292   0011A8  6F76               	movwf	??___flmul& (0+255),b
  8293   0011AA  0EFF               	movlw	255
  8294   0011AC  157E               	andwf	(___flmul@grs+1)& (0+255),w,b
  8295   0011AE  6F77               	movwf	(??___flmul+1)& (0+255),b
  8296   0011B0  0EFF               	movlw	255
  8297   0011B2  157F               	andwf	(___flmul@grs+2)& (0+255),w,b
  8298   0011B4  6F78               	movwf	(??___flmul+2)& (0+255),b
  8299   0011B6  0E7F               	movlw	127
  8300   0011B8  1580               	andwf	(___flmul@grs+3)& (0+255),w,b
  8301   0011BA  6F79               	movwf	(??___flmul+3)& (0+255),b
  8302   0011BC  5176               	movf	??___flmul& (0+255),w,b
  8303   0011BE  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  8304   0011C0  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  8305   0011C2  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  8306   0011C4  B4D8               	btfsc	status,2,c
  8307   0011C6  D003               	goto	l971
  8308   0011C8                     u8630:
  8309                           
  8310                           ; BSR set to: 0
  8311   0011C8  0E01               	movlw	1
  8312   0011CA  6F7B               	movwf	___flmul@aexp& (0+255),b
  8313   0011CC  D002               	goto	l970
  8314   0011CE                     l971:
  8315                           
  8316                           ; BSR set to: 0
  8317   0011CE  B181               	btfsc	___flmul@prod& (0+255),0,b
  8318   0011D0  D7FB               	goto	u8630
  8319   0011D2                     l970:
  8320                           
  8321                           ; BSR set to: 0
  8322   0011D2  517B               	movf	___flmul@aexp& (0+255),w,b
  8323   0011D4  B4D8               	btfsc	status,2,c
  8324   0011D6  D01F               	goto	l6957
  8325                           
  8326                           ; BSR set to: 0
  8327   0011D8  0E01               	movlw	1
  8328   0011DA  2781               	addwf	___flmul@prod& (0+255),f,b
  8329   0011DC  0E00               	movlw	0
  8330   0011DE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8331   0011E0  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8332   0011E2  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8333                           
  8334                           ; BSR set to: 0
  8335   0011E4  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  8336   0011E6  D017               	goto	l6957
  8337                           
  8338                           ; BSR set to: 0
  8339   0011E8  C081  F076         	movff	___flmul@prod,??___flmul
  8340   0011EC  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  8341   0011F0  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  8342   0011F4  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  8343   0011F8  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  8344   0011FA  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  8345   0011FC  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  8346   0011FE  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  8347   001200  3376               	rrcf	??___flmul& (0+255),f,b
  8348   001202  C076  F081         	movff	??___flmul,___flmul@prod
  8349   001206  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  8350   00120A  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  8351   00120E  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  8352                           
  8353                           ; BSR set to: 0
  8354   001212  4B85               	infsnz	___flmul@temp& (0+255),f,b
  8355   001214  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  8356   001216                     l6957:
  8357                           
  8358                           ; BSR set to: 0
  8359   001216  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8360   001218  D00D               	goto	l6961
  8361   00121A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8362   00121C  E103               	bnz	u8670
  8363   00121E  2985               	incf	___flmul@temp& (0+255),w,b
  8364   001220  A0D8               	btfss	status,0,c
  8365   001222  D008               	goto	l6961
  8366   001224                     u8670:
  8367                           
  8368                           ; BSR set to: 0
  8369   001224  0E00               	movlw	0
  8370   001226  6F81               	movwf	___flmul@prod& (0+255),b
  8371   001228  0E00               	movlw	0
  8372   00122A  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  8373   00122C  0E80               	movlw	128
  8374   00122E  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  8375   001230  0E7F               	movlw	127
  8376   001232  D01F               	goto	L19
  8377   001234                     l6961:
  8378                           
  8379                           ; BSR set to: 0
  8380   001234  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8381   001236  D005               	goto	u8680
  8382   001238  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8383   00123A  E10D               	bnz	l978
  8384   00123C  0585               	decf	___flmul@temp& (0+255),w,b
  8385   00123E  B0D8               	btfsc	status,0,c
  8386   001240  D00A               	goto	l978
  8387   001242                     u8680:
  8388                           
  8389                           ; BSR set to: 0
  8390   001242  0E00               	movlw	0
  8391   001244  6F81               	movwf	___flmul@prod& (0+255),b
  8392   001246  0E00               	movlw	0
  8393   001248  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  8394   00124A  0E00               	movlw	0
  8395   00124C  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  8396   00124E  0E00               	movlw	0
  8397   001250  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  8398                           
  8399                           ; BSR set to: 0
  8400   001252  6B7A               	clrf	___flmul@sign& (0+255),b
  8401   001254  D00F               	goto	l6975
  8402   001256                     l978:
  8403                           
  8404                           ; BSR set to: 0
  8405   001256  C085  F07C         	movff	___flmul@temp,___flmul@bexp
  8406                           
  8407                           ; BSR set to: 0
  8408   00125A  0EFF               	movlw	255
  8409   00125C  1781               	andwf	___flmul@prod& (0+255),f,b
  8410   00125E  0EFF               	movlw	255
  8411   001260  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  8412   001262  0E7F               	movlw	127
  8413   001264  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  8414   001266  0E00               	movlw	0
  8415   001268  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  8416                           
  8417                           ; BSR set to: 0
  8418   00126A  B17C               	btfsc	___flmul@bexp& (0+255),0,b
  8419                           
  8420                           ; BSR set to: 0
  8421   00126C  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  8422                           
  8423                           ; BSR set to: 0
  8424   00126E  90D8               	bcf	status,0,c
  8425   001270  317C               	rrcf	___flmul@bexp& (0+255),w,b
  8426   001272                     L19:
  8427   001272  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  8428   001274                     l6975:
  8429                           
  8430                           ; BSR set to: 0
  8431   001274  517A               	movf	___flmul@sign& (0+255),w,b
  8432   001276  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8433                           
  8434                           ; BSR set to: 0
  8435   001278  C081  F06E         	movff	___flmul@prod,?___flmul
  8436   00127C  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  8437   001280  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  8438   001284  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  8439                           
  8440                           ; BSR set to: 0
  8441   001288  0012               	return		;funcret
  8442   00128A                     __end_of___flmul:
  8443                           	callstack 0
  8444                           
  8445 ;; *************** function _setButtonInterrupt *****************
  8446 ;; Defined at:
  8447 ;;		line 499 in file "main.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;		None
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;		None
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		None
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8461 ;;      Params:         0       0       0       0
  8462 ;;      Locals:         0       0       0       0
  8463 ;;      Temps:          0       0       0       0
  8464 ;;      Totals:         0       0       0       0
  8465 ;;Total ram usage:        0 bytes
  8466 ;; Hardware stack levels used: 1
  8467 ;; Hardware stack levels required when called: 3
  8468 ;; This function calls:
  8469 ;;		Nothing
  8470 ;; This function is called by:
  8471 ;;		_main
  8472 ;; This function uses a non-reentrant model
  8473 ;;
  8474                           
  8475                           	psect	text33
  8476   0031C6                     __ptext33:
  8477                           	callstack 0
  8478   0031C6                     _setButtonInterrupt:
  8479                           	callstack 27
  8480                           
  8481                           ;main.c: 501:     INTCON2bits.INTEDG1 = 1;
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;incstack = 0
  8485   0031C6  8AF1               	bsf	241,5,c	;volatile
  8486                           
  8487                           ;main.c: 502:     INTCON2bits.INTEDG2 = 1;
  8488   0031C8  88F1               	bsf	241,4,c	;volatile
  8489                           
  8490                           ;main.c: 504:     INTCON3bits.INT1IE = 1;
  8491   0031CA  86F0               	bsf	240,3,c	;volatile
  8492                           
  8493                           ;main.c: 505:     INTCON3bits.INT2IE = 1;
  8494   0031CC  88F0               	bsf	240,4,c	;volatile
  8495                           
  8496                           ;main.c: 507:     INTCON3bits.INT1IP = 0;
  8497   0031CE  9CF0               	bcf	240,6,c	;volatile
  8498                           
  8499                           ;main.c: 508:     INTCON3bits.INT2IP = 0;
  8500   0031D0  9EF0               	bcf	240,7,c	;volatile
  8501                           
  8502                           ;main.c: 511:     INTCON3bits.INT1IF = 0;
  8503   0031D2  90F0               	bcf	240,0,c	;volatile
  8504                           
  8505                           ;main.c: 512:     INTCON3bits.INT2IF = 0;
  8506   0031D4  92F0               	bcf	240,1,c	;volatile
  8507   0031D6  0012               	return		;funcret
  8508   0031D8                     __end_of_setButtonInterrupt:
  8509                           	callstack 0
  8510                           
  8511 ;; *************** function _adcSampling *****************
  8512 ;; Defined at:
  8513 ;;		line 139 in file "main.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;		None
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1    wreg      void 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8527 ;;      Params:         0       0       0       0
  8528 ;;      Locals:         0       0       0       0
  8529 ;;      Temps:          0       2       0       0
  8530 ;;      Totals:         0       2       0       0
  8531 ;;Total ram usage:        2 bytes
  8532 ;; Hardware stack levels used: 1
  8533 ;; Hardware stack levels required when called: 3
  8534 ;; This function calls:
  8535 ;;		Nothing
  8536 ;; This function is called by:
  8537 ;;		_main
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           	psect	text34
  8542   003162                     __ptext34:
  8543                           	callstack 0
  8544   003162                     _adcSampling:
  8545                           	callstack 27
  8546                           
  8547                           ;main.c: 141:     sampling = 1;
  8548                           
  8549                           ;incstack = 0
  8550   003162  0E01               	movlw	1
  8551   003164  0100               	movlb	0	; () banked
  8552   003166  6FFE               	movwf	_sampling& (0+255),b
  8553                           
  8554                           ; BSR set to: 0
  8555                           ;main.c: 144:     ADCON0bits.GO = 1;
  8556   003168  82C2               	bsf	194,1,c	;volatile
  8557   00316A                     l159:
  8558   00316A  B2C2               	btfsc	194,1,c	;volatile
  8559   00316C  D7FE               	goto	l159
  8560                           
  8561                           ;main.c: 148:     adcResult = ((uint16_t)ADRESH << 8) | ADRESL;
  8562   00316E  50C4               	movf	196,w,c	;volatile
  8563   003170  0100               	movlb	0	; () banked
  8564   003172  6F60               	movwf	??_adcSampling& (0+255),b
  8565   003174  50C3               	movf	195,w,c	;volatile
  8566   003176  6FF6               	movwf	_adcResult& (0+255),b
  8567   003178  C060  F0F7         	movff	??_adcSampling,_adcResult+1
  8568                           
  8569                           ; BSR set to: 0
  8570   00317C  0012               	return		;funcret
  8571   00317E                     __end_of_adcSampling:
  8572                           	callstack 0
  8573                           
  8574 ;; *************** function ___xxtofl *****************
  8575 ;; Defined at:
  8576 ;;		line 10 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/xxtofl.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  sign            1    wreg     unsigned char 
  8579 ;;  val             4    0[BANK0 ] long 
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;  sign            1    8[BANK0 ] unsigned char 
  8582 ;;  arg             4   10[BANK0 ] unsigned long 
  8583 ;;  exp             1    9[BANK0 ] unsigned char 
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  4    0[BANK0 ] unsigned char 
  8586 ;; Registers used:
  8587 ;;		wreg, status,2, status,0
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8593 ;;      Params:         0       4       0       0
  8594 ;;      Locals:         0       6       0       0
  8595 ;;      Temps:          0       4       0       0
  8596 ;;      Totals:         0      14       0       0
  8597 ;;Total ram usage:       14 bytes
  8598 ;; Hardware stack levels used: 1
  8599 ;; Hardware stack levels required when called: 3
  8600 ;; This function calls:
  8601 ;;		Nothing
  8602 ;; This function is called by:
  8603 ;;		_main
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           	psect	text35
  8608   00225C                     __ptext35:
  8609                           	callstack 0
  8610   00225C                     ___xxtofl:
  8611                           	callstack 27
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;incstack = 0
  8615                           ;___xxtofl@sign stored from wreg
  8616   00225C  0100               	movlb	0	; () banked
  8617   00225E  6F68               	movwf	___xxtofl@sign& (0+255),b
  8618   002260  0100               	movlb	0	; () banked
  8619   002262  5168               	movf	___xxtofl@sign& (0+255),w,b
  8620   002264  A4D8               	btfss	status,2,c
  8621                           
  8622                           ; BSR set to: 0
  8623   002266  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8624   002268  D01A               	goto	l1002
  8625                           
  8626                           ; BSR set to: 0
  8627   00226A  C060  F064         	movff	___xxtofl@val,??___xxtofl
  8628   00226E  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  8629   002272  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  8630   002276  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  8631   00227A  1F64               	comf	??___xxtofl& (0+255),f,b
  8632   00227C  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  8633   00227E  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  8634   002280  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  8635   002282  2B64               	incf	??___xxtofl& (0+255),f,b
  8636   002284  0E00               	movlw	0
  8637   002286  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  8638   002288  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  8639   00228A  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  8640   00228C  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  8641   002290  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  8642   002294  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  8643   002298  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  8644   00229C  D008               	goto	l7769
  8645   00229E                     l1002:
  8646                           
  8647                           ; BSR set to: 0
  8648   00229E  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  8649   0022A2  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8650   0022A6  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8651   0022AA  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8652   0022AE                     l7769:
  8653                           
  8654                           ; BSR set to: 0
  8655   0022AE  5160               	movf	___xxtofl@val& (0+255),w,b
  8656   0022B0  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  8657   0022B2  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  8658   0022B4  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  8659   0022B6  A4D8               	btfss	status,2,c
  8660   0022B8  D009               	goto	l7775
  8661                           
  8662                           ; BSR set to: 0
  8663   0022BA  0E00               	movlw	0
  8664   0022BC  6F60               	movwf	?___xxtofl& (0+255),b
  8665   0022BE  0E00               	movlw	0
  8666   0022C0  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  8667   0022C2  0E00               	movlw	0
  8668   0022C4  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  8669   0022C6  0E00               	movlw	0
  8670   0022C8  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  8671   0022CA  0012               	return	
  8672   0022CC                     l7775:
  8673                           
  8674                           ; BSR set to: 0
  8675   0022CC  0E96               	movlw	150
  8676   0022CE  6F69               	movwf	___xxtofl@exp& (0+255),b
  8677   0022D0  D006               	goto	l7779
  8678   0022D2                     l7777:
  8679                           
  8680                           ; BSR set to: 0
  8681   0022D2  2B69               	incf	___xxtofl@exp& (0+255),f,b
  8682   0022D4  90D8               	bcf	status,0,c
  8683   0022D6  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8684   0022D8  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8685   0022DA  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8686   0022DC  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  8687   0022DE                     l7779:
  8688                           
  8689                           ; BSR set to: 0
  8690   0022DE  0E00               	movlw	0
  8691   0022E0  156A               	andwf	___xxtofl@arg& (0+255),w,b
  8692   0022E2  6F64               	movwf	??___xxtofl& (0+255),b
  8693   0022E4  0E00               	movlw	0
  8694   0022E6  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8695   0022E8  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  8696   0022EA  0E00               	movlw	0
  8697   0022EC  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8698   0022EE  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  8699   0022F0  0EFE               	movlw	254
  8700   0022F2  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8701   0022F4  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  8702   0022F6  5164               	movf	??___xxtofl& (0+255),w,b
  8703   0022F8  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8704   0022FA  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8705   0022FC  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8706   0022FE  B4D8               	btfsc	status,2,c
  8707   002300  D00D               	goto	l1009
  8708   002302  D7E7               	goto	l7777
  8709   002304                     l7781:
  8710                           
  8711                           ; BSR set to: 0
  8712   002304  2B69               	incf	___xxtofl@exp& (0+255),f,b
  8713                           
  8714                           ; BSR set to: 0
  8715   002306  0E01               	movlw	1
  8716   002308  276A               	addwf	___xxtofl@arg& (0+255),f,b
  8717   00230A  0E00               	movlw	0
  8718   00230C  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8719   00230E  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8720   002310  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8721                           
  8722                           ; BSR set to: 0
  8723   002312  90D8               	bcf	status,0,c
  8724   002314  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8725   002316  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8726   002318  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8727   00231A  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  8728   00231C                     l1009:
  8729                           
  8730                           ; BSR set to: 0
  8731   00231C  0E00               	movlw	0
  8732   00231E  156A               	andwf	___xxtofl@arg& (0+255),w,b
  8733   002320  6F64               	movwf	??___xxtofl& (0+255),b
  8734   002322  0E00               	movlw	0
  8735   002324  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8736   002326  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  8737   002328  0E00               	movlw	0
  8738   00232A  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8739   00232C  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  8740   00232E  0EFF               	movlw	255
  8741   002330  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8742   002332  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  8743   002334  5164               	movf	??___xxtofl& (0+255),w,b
  8744   002336  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8745   002338  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8746   00233A  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8747   00233C  B4D8               	btfsc	status,2,c
  8748   00233E  D007               	goto	l7789
  8749   002340  D7E1               	goto	l7781
  8750   002342                     l7787:
  8751                           
  8752                           ; BSR set to: 0
  8753   002342  0769               	decf	___xxtofl@exp& (0+255),f,b
  8754   002344  90D8               	bcf	status,0,c
  8755   002346  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  8756   002348  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8757   00234A  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8758   00234C  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8759   00234E                     l7789:
  8760                           
  8761                           ; BSR set to: 0
  8762   00234E  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8763   002350  D003               	goto	u9860
  8764                           
  8765                           ; BSR set to: 0
  8766   002352  0E02               	movlw	2
  8767   002354  6169               	cpfslt	___xxtofl@exp& (0+255),b
  8768   002356  D7F5               	goto	l7787
  8769   002358                     u9860:
  8770                           
  8771                           ; BSR set to: 0
  8772   002358  A169               	btfss	___xxtofl@exp& (0+255),0,b
  8773                           
  8774                           ; BSR set to: 0
  8775   00235A  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  8776                           
  8777                           ; BSR set to: 0
  8778   00235C  90D8               	bcf	status,0,c
  8779   00235E  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  8780                           
  8781                           ; BSR set to: 0
  8782   002360  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  8783   002364  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  8784   002366  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  8785   002368  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  8786   00236A  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  8787   00236E  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  8788   002370  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  8789   002372  6B64               	clrf	??___xxtofl& (0+255),b
  8790   002374  5164               	movf	??___xxtofl& (0+255),w,b
  8791   002376  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  8792   002378  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  8793   00237A  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8794   00237C  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  8795   00237E  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8796   002380  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  8797   002382  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8798                           
  8799                           ; BSR set to: 0
  8800   002384  5168               	movf	___xxtofl@sign& (0+255),w,b
  8801   002386  A4D8               	btfss	status,2,c
  8802                           
  8803                           ; BSR set to: 0
  8804   002388  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8805   00238A  D001               	goto	l7805
  8806                           
  8807                           ; BSR set to: 0
  8808   00238C  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8809   00238E                     l7805:
  8810                           
  8811                           ; BSR set to: 0
  8812   00238E  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  8813   002392  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  8814   002396  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  8815   00239A  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  8816                           
  8817                           ; BSR set to: 0
  8818   00239E  0012               	return		;funcret
  8819   0023A0                     __end_of___xxtofl:
  8820                           	callstack 0
  8821                           
  8822 ;; *************** function _EUSART_TransmitString *****************
  8823 ;; Defined at:
  8824 ;;		line 663 in file "main.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;  a               2    1[BANK0 ] PTR unsigned char 
  8827 ;;		 -> STR_7(3), STR_5(7), STR_4(9), STR_3(3), 
  8828 ;;		 -> uart_buffer(10), STR_1(9), 
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;  i               2    5[BANK0 ] int 
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  1    wreg      void 
  8833 ;; Registers used:
  8834 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/0
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8840 ;;      Params:         0       2       0       0
  8841 ;;      Locals:         0       2       0       0
  8842 ;;      Temps:          0       2       0       0
  8843 ;;      Totals:         0       6       0       0
  8844 ;;Total ram usage:        6 bytes
  8845 ;; Hardware stack levels used: 1
  8846 ;; Hardware stack levels required when called: 4
  8847 ;; This function calls:
  8848 ;;		_EUSART_TransmitChar
  8849 ;; This function is called by:
  8850 ;;		_main
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text36
  8855   002B36                     __ptext36:
  8856                           	callstack 0
  8857   002B36                     _EUSART_TransmitString:
  8858                           	callstack 26
  8859                           
  8860                           ;main.c: 664:     int i;;main.c: 665:     for( i= 0; a[i] !='\0'; i++ ){
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;incstack = 0
  8864   002B36  0E00               	movlw	0
  8865   002B38  0100               	movlb	0	; () banked
  8866   002B3A  6F66               	movwf	(EUSART_TransmitString@i+1)& (0+255),b
  8867   002B3C  0E00               	movlw	0
  8868   002B3E  6F65               	movwf	EUSART_TransmitString@i& (0+255),b
  8869   002B40  D01C               	goto	l7601
  8870   002B42                     l7597:
  8871                           
  8872                           ;main.c: 666:        EUSART_TransmitChar(a[i]);
  8873   002B42  0100               	movlb	0	; () banked
  8874   002B44  5165               	movf	EUSART_TransmitString@i& (0+255),w,b
  8875   002B46  2561               	addwf	EUSART_TransmitString@a& (0+255),w,b
  8876   002B48  6F63               	movwf	??_EUSART_TransmitString& (0+255),b
  8877   002B4A  5166               	movf	(EUSART_TransmitString@i+1)& (0+255),w,b
  8878   002B4C  2162               	addwfc	(EUSART_TransmitString@a+1)& (0+255),w,b
  8879   002B4E  6F64               	movwf	(??_EUSART_TransmitString+1)& (0+255),b
  8880   002B50  C063  FFF6         	movff	??_EUSART_TransmitString,tblptrl
  8881   002B54  C064  FFF7         	movff	??_EUSART_TransmitString+1,tblptrh
  8882   002B58  6AF8               	clrf	tblptru,c
  8883   002B5A  0E02               	movlw	(high __ramtop+-1)
  8884   002B5C  64F7               	cpfsgt	tblptrh,c
  8885   002B5E  D003               	bra	u9667
  8886   002B60  0008               	tblrd		*
  8887   002B62  50F5               	movf	tablat,w,c
  8888   002B64  D005               	bra	u9660
  8889   002B66                     u9667:
  8890   002B66  CFF6 FFE1          	movff	tblptrl,fsr1l
  8891   002B6A  CFF7 FFE2          	movff	tblptrh,fsr1h
  8892   002B6E  50E7               	movf	indf1,w,c
  8893   002B70                     u9660:
  8894   002B70  ECF5  F018         	call	_EUSART_TransmitChar
  8895                           
  8896                           ;main.c: 667:     }
  8897   002B74  0100               	movlb	0	; () banked
  8898   002B76  4B65               	infsnz	EUSART_TransmitString@i& (0+255),f,b
  8899   002B78  2B66               	incf	(EUSART_TransmitString@i+1)& (0+255),f,b
  8900   002B7A                     l7601:
  8901                           
  8902                           ; BSR set to: 0
  8903   002B7A  5165               	movf	EUSART_TransmitString@i& (0+255),w,b
  8904   002B7C  2561               	addwf	EUSART_TransmitString@a& (0+255),w,b
  8905   002B7E  6F63               	movwf	??_EUSART_TransmitString& (0+255),b
  8906   002B80  5166               	movf	(EUSART_TransmitString@i+1)& (0+255),w,b
  8907   002B82  2162               	addwfc	(EUSART_TransmitString@a+1)& (0+255),w,b
  8908   002B84  6F64               	movwf	(??_EUSART_TransmitString+1)& (0+255),b
  8909   002B86  C063  FFF6         	movff	??_EUSART_TransmitString,tblptrl
  8910   002B8A  C064  FFF7         	movff	??_EUSART_TransmitString+1,tblptrh
  8911   002B8E  6AF8               	clrf	tblptru,c
  8912   002B90  0E02               	movlw	(high __ramtop+-1)
  8913   002B92  64F7               	cpfsgt	tblptrh,c
  8914   002B94  D003               	bra	u9677
  8915   002B96  0008               	tblrd		*
  8916   002B98  50F5               	movf	tablat,w,c
  8917   002B9A  D005               	bra	u9670
  8918   002B9C                     u9677:
  8919   002B9C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8920   002BA0  CFF7 FFE2          	movff	tblptrh,fsr1h
  8921   002BA4  50E7               	movf	indf1,w,c
  8922   002BA6                     u9670:
  8923   002BA6  0900               	iorlw	0
  8924   002BA8  B4D8               	btfsc	status,2,c
  8925   002BAA  0012               	return	
  8926   002BAC  D7CA               	goto	l7597
  8927   002BAE                     __end_of_EUSART_TransmitString:
  8928                           	callstack 0
  8929                           
  8930 ;; *************** function _EUSART_TransmitChar *****************
  8931 ;; Defined at:
  8932 ;;		line 658 in file "main.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  data            1    wreg     unsigned char 
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;  data            1    0[BANK0 ] unsigned char 
  8937 ;; Return value:  Size  Location     Type
  8938 ;;                  1    wreg      void 
  8939 ;; Registers used:
  8940 ;;		wreg
  8941 ;; Tracked objects:
  8942 ;;		On entry : 0/0
  8943 ;;		On exit  : 0/0
  8944 ;;		Unchanged: 0/0
  8945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8946 ;;      Params:         0       0       0       0
  8947 ;;      Locals:         0       1       0       0
  8948 ;;      Temps:          0       0       0       0
  8949 ;;      Totals:         0       1       0       0
  8950 ;;Total ram usage:        1 bytes
  8951 ;; Hardware stack levels used: 1
  8952 ;; Hardware stack levels required when called: 3
  8953 ;; This function calls:
  8954 ;;		Nothing
  8955 ;; This function is called by:
  8956 ;;		_EUSART_TransmitString
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           	psect	text37
  8961   0031EA                     __ptext37:
  8962                           	callstack 0
  8963   0031EA                     _EUSART_TransmitChar:
  8964                           	callstack 26
  8965                           
  8966                           ;incstack = 0
  8967                           ;EUSART_TransmitChar@data stored from wreg
  8968   0031EA  0100               	movlb	0	; () banked
  8969   0031EC  6F60               	movwf	EUSART_TransmitChar@data& (0+255),b
  8970   0031EE                     
  8971                           ;main.c: 659:     while (!TXSTAbits.TRMT);
  8972   0031EE  A2AC               	btfss	172,1,c	;volatile
  8973   0031F0  D7FE               	goto	l7537
  8974                           
  8975                           ;main.c: 660:     TXREG = data;
  8976   0031F2  C060  FFAD         	movff	EUSART_TransmitChar@data,4013	;volatile
  8977   0031F6  0012               	return		;funcret
  8978   0031F8                     __end_of_EUSART_TransmitChar:
  8979                           	callstack 0
  8980                           
  8981 ;; *************** function _EEPROMWrite *****************
  8982 ;; Defined at:
  8983 ;;		line 598 in file "main.c"
  8984 ;; Parameters:    Size  Location     Type
  8985 ;;  address         2    2[BANK0 ] unsigned short 
  8986 ;;  data            1    4[BANK0 ] unsigned char 
  8987 ;; Auto vars:     Size  Location     Type
  8988 ;;		None
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  1    wreg      void 
  8991 ;; Registers used:
  8992 ;;		wreg, status,2, cstack
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/0
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8998 ;;      Params:         0       3       0       0
  8999 ;;      Locals:         0       0       0       0
  9000 ;;      Temps:          0       1       0       0
  9001 ;;      Totals:         0       4       0       0
  9002 ;;Total ram usage:        4 bytes
  9003 ;; Hardware stack levels used: 1
  9004 ;; Hardware stack levels required when called: 4
  9005 ;; This function calls:
  9006 ;;		_I2CStart
  9007 ;;		_I2CStop
  9008 ;;		_I2CWrite
  9009 ;;		_getHighByte
  9010 ;;		_getLowByte
  9011 ;; This function is called by:
  9012 ;;		_main
  9013 ;; This function uses a non-reentrant model
  9014 ;;
  9015                           
  9016                           	psect	text38
  9017   002D22                     __ptext38:
  9018                           	callstack 0
  9019   002D22                     _EEPROMWrite:
  9020                           	callstack 26
  9021                           
  9022                           ;main.c: 599:     I2CStart();
  9023                           
  9024                           ;incstack = 0
  9025   002D22  EC0C  F019         	call	_I2CStart	;wreg free
  9026                           
  9027                           ;main.c: 600:     I2CWrite(0b10100000);
  9028   002D26  0EA0               	movlw	160
  9029   002D28  ECEC  F018         	call	_I2CWrite
  9030                           
  9031                           ;main.c: 602:     address_low_byte = getLowByte(address);
  9032   002D2C  C062  F060         	movff	EEPROMWrite@address,getLowByte@number
  9033   002D30  C063  F061         	movff	EEPROMWrite@address+1,getLowByte@number+1
  9034   002D34  EC14  F019         	call	_getLowByte	;wreg free
  9035   002D38  6E3D               	movwf	_address_low_byte^0,c
  9036                           
  9037                           ;main.c: 603:     address_high_byte = getHighByte(address);
  9038   002D3A  C062  F060         	movff	EEPROMWrite@address,getHighByte@number
  9039   002D3E  C063  F061         	movff	EEPROMWrite@address+1,getHighByte@number+1
  9040   002D42  EC17  F019         	call	_getHighByte	;wreg free
  9041   002D46  6E3C               	movwf	_address_high_byte^0,c
  9042                           
  9043                           ;main.c: 605:     I2CWrite(address_low_byte);
  9044   002D48  503D               	movf	_address_low_byte^0,w,c
  9045   002D4A  ECEC  F018         	call	_I2CWrite
  9046                           
  9047                           ;main.c: 606:     I2CWrite(address_high_byte);
  9048   002D4E  503C               	movf	_address_high_byte^0,w,c
  9049   002D50  ECEC  F018         	call	_I2CWrite
  9050                           
  9051                           ;main.c: 607:     I2CWrite(data);
  9052   002D54  0100               	movlb	0	; () banked
  9053   002D56  5164               	movf	EEPROMWrite@data& (0+255),w,b
  9054   002D58  ECEC  F018         	call	_I2CWrite
  9055                           
  9056                           ;main.c: 608:     I2CStop();
  9057   002D5C  EC08  F019         	call	_I2CStop	;wreg free
  9058                           
  9059                           ;main.c: 610:     _delay((unsigned long)((5)*(2000000/4000.0)));
  9060   002D60  0E04               	movlw	4
  9061   002D62  0100               	movlb	0	; () banked
  9062   002D64  6F65               	movwf	??_EEPROMWrite& (0+255),b
  9063   002D66  0E3D               	movlw	61
  9064   002D68                     u10107:
  9065   002D68  2EE8               	decfsz	wreg,f,c
  9066   002D6A  D7FE               	bra	u10107
  9067   002D6C  2F65               	decfsz	??_EEPROMWrite& (0+255),f,b
  9068   002D6E  D7FC               	bra	u10107
  9069   002D70  D000               	nop2	
  9070   002D72  0012               	return		;funcret
  9071   002D74                     __end_of_EEPROMWrite:
  9072                           	callstack 0
  9073                           
  9074 ;; *************** function _EEPROMRead *****************
  9075 ;; Defined at:
  9076 ;;		line 613 in file "main.c"
  9077 ;; Parameters:    Size  Location     Type
  9078 ;;  address         2    2[BANK0 ] unsigned short 
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;  data            1    4[BANK0 ] unsigned char 
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  1    wreg      unsigned char 
  9083 ;; Registers used:
  9084 ;;		wreg, status,2, cstack
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9090 ;;      Params:         0       2       0       0
  9091 ;;      Locals:         0       1       0       0
  9092 ;;      Temps:          0       0       0       0
  9093 ;;      Totals:         0       3       0       0
  9094 ;;Total ram usage:        3 bytes
  9095 ;; Hardware stack levels used: 1
  9096 ;; Hardware stack levels required when called: 4
  9097 ;; This function calls:
  9098 ;;		_I2CRead
  9099 ;;		_I2CRestart
  9100 ;;		_I2CStart
  9101 ;;		_I2CStop
  9102 ;;		_I2CWrite
  9103 ;;		_getHighByte
  9104 ;;		_getLowByte
  9105 ;; This function is called by:
  9106 ;;		_main
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110                           	psect	text39
  9111   002DC6                     __ptext39:
  9112                           	callstack 0
  9113   002DC6                     _EEPROMRead:
  9114                           	callstack 26
  9115                           
  9116                           ;main.c: 614:     uint8_t data;;main.c: 616:     address_low_byte = getLowByte(address);
  9117                           
  9118                           ;incstack = 0
  9119   002DC6  C062  F060         	movff	EEPROMRead@address,getLowByte@number
  9120   002DCA  C063  F061         	movff	EEPROMRead@address+1,getLowByte@number+1
  9121   002DCE  EC14  F019         	call	_getLowByte	;wreg free
  9122   002DD2  6E3D               	movwf	_address_low_byte^0,c
  9123                           
  9124                           ;main.c: 617:     address_high_byte = getHighByte(address);
  9125   002DD4  C062  F060         	movff	EEPROMRead@address,getHighByte@number
  9126   002DD8  C063  F061         	movff	EEPROMRead@address+1,getHighByte@number+1
  9127   002DDC  EC17  F019         	call	_getHighByte	;wreg free
  9128   002DE0  6E3C               	movwf	_address_high_byte^0,c
  9129                           
  9130                           ;main.c: 619:     I2CStart();
  9131   002DE2  EC0C  F019         	call	_I2CStart	;wreg free
  9132                           
  9133                           ;main.c: 620:     I2CWrite(0b10100000);
  9134   002DE6  0EA0               	movlw	160
  9135   002DE8  ECEC  F018         	call	_I2CWrite
  9136                           
  9137                           ;main.c: 621:     I2CWrite(address_low_byte);
  9138   002DEC  503D               	movf	_address_low_byte^0,w,c
  9139   002DEE  ECEC  F018         	call	_I2CWrite
  9140                           
  9141                           ;main.c: 622:     I2CWrite(address_high_byte);
  9142   002DF2  503C               	movf	_address_high_byte^0,w,c
  9143   002DF4  ECEC  F018         	call	_I2CWrite
  9144                           
  9145                           ;main.c: 623:     I2CRestart();
  9146   002DF8  EC10  F019         	call	_I2CRestart	;wreg free
  9147                           
  9148                           ;main.c: 624:     I2CWrite(0b10100000 | 1);
  9149   002DFC  0EA1               	movlw	161
  9150   002DFE  ECEC  F018         	call	_I2CWrite
  9151                           
  9152                           ;main.c: 625:     data = I2CRead(1);
  9153   002E02  0E01               	movlw	1
  9154   002E04  EC8F  F018         	call	_I2CRead
  9155   002E08  0100               	movlb	0	; () banked
  9156   002E0A  6F64               	movwf	EEPROMRead@data& (0+255),b
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;main.c: 626:     I2CStop();
  9160   002E0C  EC08  F019         	call	_I2CStop	;wreg free
  9161                           
  9162                           ;main.c: 627:     return data;
  9163   002E10  0100               	movlb	0	; () banked
  9164   002E12  5164               	movf	EEPROMRead@data& (0+255),w,b
  9165                           
  9166                           ; BSR set to: 0
  9167   002E14  0012               	return		;funcret
  9168   002E16                     __end_of_EEPROMRead:
  9169                           	callstack 0
  9170                           
  9171 ;; *************** function _getLowByte *****************
  9172 ;; Defined at:
  9173 ;;		line 131 in file "main.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;  number          2    0[BANK0 ] unsigned short 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;		None
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1    wreg      unsigned char 
  9180 ;; Registers used:
  9181 ;;		wreg, status,2
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9187 ;;      Params:         0       2       0       0
  9188 ;;      Locals:         0       0       0       0
  9189 ;;      Temps:          0       0       0       0
  9190 ;;      Totals:         0       2       0       0
  9191 ;;Total ram usage:        2 bytes
  9192 ;; Hardware stack levels used: 1
  9193 ;; Hardware stack levels required when called: 3
  9194 ;; This function calls:
  9195 ;;		Nothing
  9196 ;; This function is called by:
  9197 ;;		_main
  9198 ;;		_EEPROMWrite
  9199 ;;		_EEPROMRead
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           	psect	text40
  9204   003228                     __ptext40:
  9205                           	callstack 0
  9206   003228                     _getLowByte:
  9207                           	callstack 27
  9208                           
  9209                           ;main.c: 132:     return ( number & 0xFF);
  9210                           
  9211                           ; BSR set to: 0
  9212                           ;incstack = 0
  9213   003228  0100               	movlb	0	; () banked
  9214   00322A  5160               	movf	getLowByte@number& (0+255),w,b
  9215                           
  9216                           ; BSR set to: 0
  9217   00322C  0012               	return		;funcret
  9218   00322E                     __end_of_getLowByte:
  9219                           	callstack 0
  9220                           
  9221 ;; *************** function _getHighByte *****************
  9222 ;; Defined at:
  9223 ;;		line 135 in file "main.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  number          2    0[BANK0 ] unsigned short 
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;		None
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  1    wreg      unsigned char 
  9230 ;; Registers used:
  9231 ;;		wreg, status,2
  9232 ;; Tracked objects:
  9233 ;;		On entry : 0/0
  9234 ;;		On exit  : 0/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9237 ;;      Params:         0       2       0       0
  9238 ;;      Locals:         0       0       0       0
  9239 ;;      Temps:          0       0       0       0
  9240 ;;      Totals:         0       2       0       0
  9241 ;;Total ram usage:        2 bytes
  9242 ;; Hardware stack levels used: 1
  9243 ;; Hardware stack levels required when called: 3
  9244 ;; This function calls:
  9245 ;;		Nothing
  9246 ;; This function is called by:
  9247 ;;		_main
  9248 ;;		_EEPROMWrite
  9249 ;;		_EEPROMRead
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text41
  9254   00322E                     __ptext41:
  9255                           	callstack 0
  9256   00322E                     _getHighByte:
  9257                           	callstack 27
  9258                           
  9259                           ;main.c: 136:     return ((number >> 8) & 0xFF);
  9260                           
  9261                           ; BSR set to: 0
  9262                           ;incstack = 0
  9263   00322E  0100               	movlb	0	; () banked
  9264   003230  5161               	movf	(getHighByte@number+1)& (0+255),w,b
  9265                           
  9266                           ; BSR set to: 0
  9267   003232  0012               	return		;funcret
  9268   003234                     __end_of_getHighByte:
  9269                           	callstack 0
  9270                           
  9271 ;; *************** function _I2CWrite *****************
  9272 ;; Defined at:
  9273 ;;		line 581 in file "main.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;  data            1    wreg     unsigned char 
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;  data            1    0[BANK0 ] unsigned char 
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  1    wreg      void 
  9280 ;; Registers used:
  9281 ;;		wreg
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9287 ;;      Params:         0       0       0       0
  9288 ;;      Locals:         0       1       0       0
  9289 ;;      Temps:          0       0       0       0
  9290 ;;      Totals:         0       1       0       0
  9291 ;;Total ram usage:        1 bytes
  9292 ;; Hardware stack levels used: 1
  9293 ;; Hardware stack levels required when called: 3
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		_EEPROMWrite
  9298 ;;		_EEPROMRead
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	text42
  9303   0031D8                     __ptext42:
  9304                           	callstack 0
  9305   0031D8                     _I2CWrite:
  9306                           	callstack 26
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;incstack = 0
  9310                           ;I2CWrite@data stored from wreg
  9311   0031D8  0100               	movlb	0	; () banked
  9312   0031DA  6F60               	movwf	I2CWrite@data& (0+255),b
  9313                           
  9314                           ;main.c: 582:     SSPBUF = data;
  9315   0031DC  C060  FFC9         	movff	I2CWrite@data,4041	;volatile
  9316   0031E0                     l283:
  9317   0031E0  B0C7               	btfsc	199,0,c	;volatile
  9318   0031E2  D7FE               	goto	l283
  9319   0031E4                     u9520:
  9320   0031E4  ACC5               	btfss	197,6,c	;volatile
  9321   0031E6  0012               	return	
  9322   0031E8  D7FD               	goto	u9520
  9323   0031EA                     __end_of_I2CWrite:
  9324                           	callstack 0
  9325                           
  9326 ;; *************** function _I2CStop *****************
  9327 ;; Defined at:
  9328 ;;		line 571 in file "main.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;		None
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;		None
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  1    wreg      void 
  9335 ;; Registers used:
  9336 ;;		None
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9342 ;;      Params:         0       0       0       0
  9343 ;;      Locals:         0       0       0       0
  9344 ;;      Temps:          0       0       0       0
  9345 ;;      Totals:         0       0       0       0
  9346 ;;Total ram usage:        0 bytes
  9347 ;; Hardware stack levels used: 1
  9348 ;; Hardware stack levels required when called: 3
  9349 ;; This function calls:
  9350 ;;		Nothing
  9351 ;; This function is called by:
  9352 ;;		_EEPROMWrite
  9353 ;;		_EEPROMRead
  9354 ;; This function uses a non-reentrant model
  9355 ;;
  9356                           
  9357                           	psect	text43
  9358   003210                     __ptext43:
  9359                           	callstack 0
  9360   003210                     _I2CStop:
  9361                           	callstack 26
  9362                           
  9363                           ;main.c: 572:     SSPCON2bits.PEN = 1;
  9364                           
  9365                           ;incstack = 0
  9366   003210  84C5               	bsf	197,2,c	;volatile
  9367   003212                     l271:
  9368   003212  A4C5               	btfss	197,2,c	;volatile
  9369   003214  0012               	return	
  9370   003216  D7FD               	goto	l271
  9371   003218                     __end_of_I2CStop:
  9372                           	callstack 0
  9373                           
  9374 ;; *************** function _I2CStart *****************
  9375 ;; Defined at:
  9376 ;;		line 566 in file "main.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;		None
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;		None
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  1    wreg      void 
  9383 ;; Registers used:
  9384 ;;		None
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9390 ;;      Params:         0       0       0       0
  9391 ;;      Locals:         0       0       0       0
  9392 ;;      Temps:          0       0       0       0
  9393 ;;      Totals:         0       0       0       0
  9394 ;;Total ram usage:        0 bytes
  9395 ;; Hardware stack levels used: 1
  9396 ;; Hardware stack levels required when called: 3
  9397 ;; This function calls:
  9398 ;;		Nothing
  9399 ;; This function is called by:
  9400 ;;		_EEPROMWrite
  9401 ;;		_EEPROMRead
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405                           	psect	text44
  9406   003218                     __ptext44:
  9407                           	callstack 0
  9408   003218                     _I2CStart:
  9409                           	callstack 26
  9410                           
  9411                           ;main.c: 567:     SSPCON2bits.SEN = 1;
  9412                           
  9413                           ;incstack = 0
  9414   003218  80C5               	bsf	197,0,c	;volatile
  9415   00321A                     l265:
  9416   00321A  A0C5               	btfss	197,0,c	;volatile
  9417   00321C  0012               	return	
  9418   00321E  D7FD               	goto	l265
  9419   003220                     __end_of_I2CStart:
  9420                           	callstack 0
  9421                           
  9422 ;; *************** function _I2CRestart *****************
  9423 ;; Defined at:
  9424 ;;		line 576 in file "main.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;		None
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;		None
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  1    wreg      void 
  9431 ;; Registers used:
  9432 ;;		None
  9433 ;; Tracked objects:
  9434 ;;		On entry : 0/0
  9435 ;;		On exit  : 0/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9438 ;;      Params:         0       0       0       0
  9439 ;;      Locals:         0       0       0       0
  9440 ;;      Temps:          0       0       0       0
  9441 ;;      Totals:         0       0       0       0
  9442 ;;Total ram usage:        0 bytes
  9443 ;; Hardware stack levels used: 1
  9444 ;; Hardware stack levels required when called: 3
  9445 ;; This function calls:
  9446 ;;		Nothing
  9447 ;; This function is called by:
  9448 ;;		_EEPROMRead
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           	psect	text45
  9453   003220                     __ptext45:
  9454                           	callstack 0
  9455   003220                     _I2CRestart:
  9456                           	callstack 26
  9457                           
  9458                           ;main.c: 577:     SSPCON2bits.RSEN = 1;
  9459                           
  9460                           ;incstack = 0
  9461   003220  82C5               	bsf	197,1,c	;volatile
  9462   003222                     l277:
  9463   003222  A2C5               	btfss	197,1,c	;volatile
  9464   003224  0012               	return	
  9465   003226  D7FD               	goto	l277
  9466   003228                     __end_of_I2CRestart:
  9467                           	callstack 0
  9468                           
  9469 ;; *************** function _I2CRead *****************
  9470 ;; Defined at:
  9471 ;;		line 587 in file "main.c"
  9472 ;; Parameters:    Size  Location     Type
  9473 ;;  ack             1    wreg     unsigned char 
  9474 ;; Auto vars:     Size  Location     Type
  9475 ;;  ack             1    0[BANK0 ] unsigned char 
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  1    wreg      unsigned char 
  9478 ;; Registers used:
  9479 ;;		wreg, status,2
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9485 ;;      Params:         0       0       0       0
  9486 ;;      Locals:         0       1       0       0
  9487 ;;      Temps:          0       0       0       0
  9488 ;;      Totals:         0       1       0       0
  9489 ;;Total ram usage:        1 bytes
  9490 ;; Hardware stack levels used: 1
  9491 ;; Hardware stack levels required when called: 3
  9492 ;; This function calls:
  9493 ;;		Nothing
  9494 ;; This function is called by:
  9495 ;;		_EEPROMRead
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           	psect	text46
  9500   00311E                     __ptext46:
  9501                           	callstack 0
  9502   00311E                     _I2CRead:
  9503                           	callstack 26
  9504                           
  9505                           ;incstack = 0
  9506                           ;I2CRead@ack stored from wreg
  9507   00311E  0100               	movlb	0	; () banked
  9508   003120  6F60               	movwf	I2CRead@ack& (0+255),b
  9509                           
  9510                           ;main.c: 588:     SSPCON2bits.RCEN = 1;
  9511   003122  86C5               	bsf	197,3,c	;volatile
  9512   003124                     l292:
  9513   003124  A0C7               	btfss	199,0,c	;volatile
  9514   003126  D7FE               	goto	l292
  9515                           
  9516                           ;main.c: 590:     received_data = SSPBUF;
  9517   003128  CFC9 F03E          	movff	4041,_received_data	;volatile
  9518                           
  9519                           ;main.c: 592:     SSPCON2bits.ACKDT = ack;
  9520   00312C  0100               	movlb	0	; () banked
  9521   00312E  B160               	btfsc	I2CRead@ack& (0+255),0,b
  9522   003130  D002               	bra	u9555
  9523   003132  9AC5               	bcf	197,5,c	;volatile
  9524   003134  D001               	bra	u9556
  9525   003136                     u9555:
  9526   003136  8AC5               	bsf	197,5,c	;volatile
  9527   003138                     u9556:
  9528                           
  9529                           ;main.c: 593:     SSPCON2bits.ACKEN = 1;
  9530   003138  88C5               	bsf	197,4,c	;volatile
  9531   00313A                     l295:
  9532   00313A  B8C5               	btfsc	197,4,c	;volatile
  9533   00313C  D7FE               	goto	l295
  9534                           
  9535                           ;main.c: 595:     return received_data;
  9536   00313E  503E               	movf	_received_data^0,w,c
  9537   003140  0012               	return		;funcret
  9538   003142                     __end_of_I2CRead:
  9539                           	callstack 0
  9540                           
  9541 ;; *************** function _ISR *****************
  9542 ;; Defined at:
  9543 ;;		line 177 in file "main.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;		None
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;		None
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  1    wreg      void 
  9550 ;; Registers used:
  9551 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9552 ;; Tracked objects:
  9553 ;;		On entry : 0/0
  9554 ;;		On exit  : 0/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9557 ;;      Params:         0       0       0       0
  9558 ;;      Locals:         0       0       0       0
  9559 ;;      Temps:          8       0       0       0
  9560 ;;      Totals:         8       0       0       0
  9561 ;;Total ram usage:        8 bytes
  9562 ;; Hardware stack levels used: 1
  9563 ;; Hardware stack levels required when called: 2
  9564 ;; This function calls:
  9565 ;;		i2_EUSART_TransmitString
  9566 ;;		i2_adcSampling
  9567 ;;		i2_setDisplayDigits
  9568 ;;		i2_show7Segment
  9569 ;; This function is called by:
  9570 ;;		Interrupt level 2
  9571 ;; This function uses a non-reentrant model
  9572 ;;
  9573                           
  9574                           	psect	intcode
  9575   000008                     __pintcode:
  9576                           	callstack 0
  9577   000008                     _ISR:
  9578                           	callstack 20
  9579                           
  9580                           ;incstack = 0
  9581   000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9582   00000A  CFE1 F024          	movff	fsr1l,??_ISR
  9583   00000E  CFE2 F025          	movff	fsr1h,??_ISR+1
  9584   000012  CFF3 F026          	movff	prodl,??_ISR+2
  9585   000016  CFF4 F027          	movff	prodh,??_ISR+3
  9586   00001A  CFF6 F028          	movff	tblptrl,??_ISR+4
  9587   00001E  CFF7 F029          	movff	tblptrh,??_ISR+5
  9588   000022  CFF8 F02A          	movff	tblptru,??_ISR+6
  9589   000026  CFF5 F02B          	movff	tablat,??_ISR+7
  9590                           
  9591                           ;main.c: 179:     if ( PIR1bits.TMR1IF) {
  9592   00002A  A09E               	btfss	158,0,c	;volatile
  9593   00002C  D019               	goto	i2l4809
  9594                           
  9595                           ;main.c: 180:         PIR1bits.TMR1IF = 0;
  9596   00002E  909E               	bcf	158,0,c	;volatile
  9597                           
  9598                           ;main.c: 182:         TMR1 = 0;
  9599   000030  0E00               	movlw	0
  9600   000032  6ECF               	movwf	207,c	;volatile
  9601   000034  0E00               	movlw	0
  9602   000036  6ECE               	movwf	206,c	;volatile
  9603                           
  9604                           ;main.c: 184:         if (fsm_state == 1 || fsm_state == 2 ) {
  9605   000038  0100               	movlb	0	; () banked
  9606   00003A  05F9               	decf	_fsm_state& (0+255),w,b
  9607   00003C  B4D8               	btfsc	status,2,c
  9608   00003E  D004               	goto	i2u544_40
  9609                           
  9610                           ; BSR set to: 0
  9611   000040  0E02               	movlw	2
  9612   000042  19F9               	xorwf	_fsm_state& (0+255),w,b
  9613   000044  A4D8               	btfss	status,2,c
  9614   000046  D008               	goto	i2l4805
  9615   000048                     i2u544_40:
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;main.c: 186:             overflowCount++;
  9619   000048  2A3F               	incf	_overflowCount^0,f,c
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;main.c: 188:             if (overflowCount >= 57) {
  9623   00004A  0E38               	movlw	56
  9624   00004C  643F               	cpfsgt	_overflowCount^0,c
  9625   00004E  D008               	goto	i2l4809
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;main.c: 189:                 overflowCount = 0;
  9629   000050  6A3F               	clrf	_overflowCount^0,c
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;main.c: 192:                 adcSampling();
  9633   000052  ECBF  F018         	call	i2_adcSampling	;wreg free
  9634   000056  D004               	goto	i2l4809
  9635   000058                     i2l4805:
  9636                           
  9637                           ; BSR set to: 0
  9638   000058  0E07               	movlw	7
  9639   00005A  19F9               	xorwf	_fsm_state& (0+255),w,b
  9640   00005C  B4D8               	btfsc	status,2,c
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;main.c: 197:             LATAbits.LA5 ^= 1;
  9644   00005E  7A89               	btg	137,5,c	;volatile
  9645   000060                     i2l4809:
  9646                           
  9647                           ;main.c: 202:     if ( INTCON3bits.INT1IF || INTCON3bits.INT2IF ) {
  9648   000060  B0F0               	btfsc	240,0,c	;volatile
  9649   000062  D002               	goto	i2u548_40
  9650   000064  A2F0               	btfss	240,1,c	;volatile
  9651   000066  D089               	goto	i2l200
  9652   000068                     i2u548_40:
  9653                           
  9654                           ;main.c: 204:         button_counter++;
  9655   000068  4A2C               	infsnz	_button_counter^0,f,c
  9656   00006A  2A2D               	incf	(_button_counter+1)^0,f,c
  9657                           
  9658                           ;main.c: 206:         if( INTCON3bits.INT2IF && button_counter > 800 ){
  9659   00006C  A2F0               	btfss	240,1,c	;volatile
  9660   00006E  D051               	goto	i2l177
  9661   000070  0E21               	movlw	33
  9662   000072  5C2C               	subwf	_button_counter^0,w,c
  9663   000074  0E03               	movlw	3
  9664   000076  582D               	subwfb	(_button_counter+1)^0,w,c
  9665   000078  A0D8               	btfss	status,0,c
  9666   00007A  D04B               	goto	i2l177
  9667                           
  9668                           ;main.c: 208:             INTCON3bits.INT2IF = 0;
  9669   00007C  92F0               	bcf	240,1,c	;volatile
  9670                           
  9671                           ;main.c: 210:             displayAddress = 1;
  9672   00007E  0E01               	movlw	1
  9673   000080  6E35               	movwf	_displayAddress^0,c
  9674                           
  9675                           ;main.c: 212:             displaySample = 1;
  9676   000082  0E01               	movlw	1
  9677   000084  6E34               	movwf	_displaySample^0,c
  9678                           
  9679                           ;main.c: 213:             button_counter = 0;
  9680   000086  0E00               	movlw	0
  9681   000088  6E2D               	movwf	(_button_counter+1)^0,c
  9682   00008A  0E00               	movlw	0
  9683   00008C  6E2C               	movwf	_button_counter^0,c
  9684                           
  9685                           ;main.c: 215:             switch(fsm_state){
  9686   00008E  D026               	goto	i2l4837
  9687   000090                     i2l4823:
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;main.c: 217:                     fsm_state = 1;
  9691   000090  0E01               	movlw	1
  9692   000092  6FF9               	movwf	_fsm_state& (0+255),b
  9693                           
  9694                           ;main.c: 218:                     address_index = 0;
  9695   000094  0E00               	movlw	0
  9696   000096  6FF3               	movwf	(_address_index+1)& (0+255),b
  9697   000098  0E00               	movlw	0
  9698   00009A  6FF2               	movwf	_address_index& (0+255),b
  9699                           
  9700                           ;main.c: 219:                     if( turnOnDisplay == 0 ){
  9701   00009C  51FA               	movf	_turnOnDisplay& (0+255),w,b
  9702   00009E  A4D8               	btfss	status,2,c
  9703   0000A0  D05B               	goto	i2l4855
  9704                           
  9705                           ; BSR set to: 0
  9706                           ;main.c: 220:                         adcSampling();
  9707   0000A2  ECBF  F018         	call	i2_adcSampling	;wreg free
  9708   0000A6  D058               	goto	i2l4855
  9709   0000A8                     i2l4827:
  9710                           
  9711                           ; BSR set to: 0
  9712                           ;main.c: 225:                     fsm_state = 2;
  9713   0000A8  0E02               	movlw	2
  9714   0000AA  6FF9               	movwf	_fsm_state& (0+255),b
  9715                           
  9716                           ;main.c: 226:                     address_index = 0;
  9717   0000AC  0E00               	movlw	0
  9718   0000AE  6FF3               	movwf	(_address_index+1)& (0+255),b
  9719   0000B0  0E00               	movlw	0
  9720   0000B2  6FF2               	movwf	_address_index& (0+255),b
  9721                           
  9722                           ;main.c: 227:                     break;
  9723   0000B4  D051               	goto	i2l4855
  9724   0000B6                     i2l4829:
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;main.c: 230:                     fsm_state = 3;
  9728   0000B6  0E03               	movlw	3
  9729   0000B8  6FF9               	movwf	_fsm_state& (0+255),b
  9730                           
  9731                           ;main.c: 231:                     address_index = 0;
  9732   0000BA  0E00               	movlw	0
  9733   0000BC  6FF3               	movwf	(_address_index+1)& (0+255),b
  9734   0000BE  0E00               	movlw	0
  9735   0000C0  6FF2               	movwf	_address_index& (0+255),b
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;main.c: 232:                     EUSART_TransmitString("START \r\n");
  9739   0000C2  0E01               	movlw	low STR_1
  9740   0000C4  6E02               	movwf	i2EUSART_TransmitString@a^0,c
  9741   0000C6  5002               	movf	i2EUSART_TransmitString@a^0,w,c
  9742   0000C8  A4D8               	btfss	status,2,c
  9743   0000CA  0E03               	movlw	high __smallconst
  9744   0000CC  6E03               	movwf	(i2EUSART_TransmitString@a+1)^0,c
  9745   0000CE  ECD7  F015         	call	i2_EUSART_TransmitString	;wreg free
  9746                           
  9747                           ;main.c: 233:                     break;
  9748   0000D2  D042               	goto	i2l4855
  9749   0000D4                     i2l4833:
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;main.c: 236:                     fsm_state = 4;
  9753   0000D4  0E04               	movlw	4
  9754   0000D6  D033               	goto	L22
  9755   0000D8                     i2l185:
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;main.c: 240:                     fsm_state = 0;
  9759   0000D8  6BF9               	clrf	_fsm_state& (0+255),b
  9760                           
  9761                           ;main.c: 241:                     break;
  9762   0000DA  D03E               	goto	i2l4855
  9763   0000DC                     i2l4837:
  9764   0000DC  0100               	movlb	0	; () banked
  9765   0000DE  51F9               	movf	_fsm_state& (0+255),w,b
  9766                           
  9767                           ; Switch size 1, requested type "simple"
  9768                           ; Number of cases is 8, Range of values is 0 to 7
  9769                           ; switch strategies available:
  9770                           ; Name         Instructions Cycles
  9771                           ; simple_byte           25    13 (average)
  9772                           ;	Chosen strategy is simple_byte
  9773   0000E0  0A00               	xorlw	0	; case 0
  9774   0000E2  B4D8               	btfsc	status,2,c
  9775   0000E4  D7D5               	goto	i2l4823
  9776   0000E6  0A01               	xorlw	1	; case 1
  9777   0000E8  B4D8               	btfsc	status,2,c
  9778   0000EA  D7DE               	goto	i2l4827
  9779   0000EC  0A03               	xorlw	3	; case 2
  9780   0000EE  B4D8               	btfsc	status,2,c
  9781   0000F0  D7E2               	goto	i2l4829
  9782   0000F2  0A01               	xorlw	1	; case 3
  9783   0000F4  B4D8               	btfsc	status,2,c
  9784   0000F6  D7EE               	goto	i2l4833
  9785   0000F8  0A07               	xorlw	7	; case 4
  9786   0000FA  B4D8               	btfsc	status,2,c
  9787   0000FC  D7ED               	goto	i2l185
  9788   0000FE  0A01               	xorlw	1	; case 5
  9789   000100  B4D8               	btfsc	status,2,c
  9790   000102  D7EA               	goto	i2l185
  9791   000104  0A03               	xorlw	3	; case 6
  9792   000106  B4D8               	btfsc	status,2,c
  9793   000108  D7E7               	goto	i2l185
  9794   00010A  0A01               	xorlw	1	; case 7
  9795   00010C  B4D8               	btfsc	status,2,c
  9796   00010E  D7E4               	goto	i2l185
  9797   000110  D023               	goto	i2l4855
  9798   000112                     i2l177:
  9799   000112  A0F0               	btfss	240,0,c	;volatile
  9800   000114  D021               	goto	i2l4855
  9801   000116  0E21               	movlw	33
  9802   000118  5C2C               	subwf	_button_counter^0,w,c
  9803   00011A  0E03               	movlw	3
  9804   00011C  582D               	subwfb	(_button_counter+1)^0,w,c
  9805   00011E  A0D8               	btfss	status,0,c
  9806   000120  D01B               	goto	i2l4855
  9807                           
  9808                           ;main.c: 260:             INTCON3bits.INT1IF = 0;
  9809   000122  90F0               	bcf	240,0,c	;volatile
  9810                           
  9811                           ;main.c: 262:             displayAddress = 0;
  9812   000124  6A35               	clrf	_displayAddress^0,c
  9813                           
  9814                           ;main.c: 263:             displaySample = 1;
  9815   000126  0E01               	movlw	1
  9816   000128  6E34               	movwf	_displaySample^0,c
  9817                           
  9818                           ;main.c: 264:             button_counter = 0;
  9819   00012A  0E00               	movlw	0
  9820   00012C  6E2D               	movwf	(_button_counter+1)^0,c
  9821   00012E  0E00               	movlw	0
  9822   000130  6E2C               	movwf	_button_counter^0,c
  9823                           
  9824                           ;main.c: 267:             switch(fsm_state){
  9825   000132  D007               	goto	i2l4853
  9826   000134                     i2l4845:
  9827                           
  9828                           ; BSR set to: 0
  9829                           ;main.c: 269:                     fsm_state = 5;
  9830   000134  0E05               	movlw	5
  9831   000136  D003               	goto	L22
  9832   000138                     i2l4847:
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;main.c: 273:                     fsm_state = 6;
  9836   000138  0E06               	movlw	6
  9837   00013A  D001               	goto	L22
  9838   00013C                     i2l4849:
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;main.c: 277:                     fsm_state = 7;
  9842   00013C  0E07               	movlw	7
  9843   00013E                     L22:
  9844   00013E  6FF9               	movwf	_fsm_state& (0+255),b
  9845                           
  9846                           ;main.c: 278:                     break;
  9847   000140  D00B               	goto	i2l4855
  9848   000142                     i2l4853:
  9849   000142  0100               	movlb	0	; () banked
  9850   000144  51F9               	movf	_fsm_state& (0+255),w,b
  9851                           
  9852                           ; Switch size 1, requested type "simple"
  9853                           ; Number of cases is 3, Range of values is 4 to 6
  9854                           ; switch strategies available:
  9855                           ; Name         Instructions Cycles
  9856                           ; simple_byte           10     6 (average)
  9857                           ;	Chosen strategy is simple_byte
  9858   000146  0A04               	xorlw	4	; case 4
  9859   000148  B4D8               	btfsc	status,2,c
  9860   00014A  D7F4               	goto	i2l4845
  9861   00014C  0A01               	xorlw	1	; case 5
  9862   00014E  B4D8               	btfsc	status,2,c
  9863   000150  D7F3               	goto	i2l4847
  9864   000152  0A03               	xorlw	3	; case 6
  9865   000154  B4D8               	btfsc	status,2,c
  9866   000156  D7F2               	goto	i2l4849
  9867   000158                     i2l4855:
  9868                           
  9869                           ;main.c: 285:         if( turnOnDisplay == 1 && button_counter < 10 ){
  9870   000158  0100               	movlb	0	; () banked
  9871   00015A  05FA               	decf	_turnOnDisplay& (0+255),w,b
  9872   00015C  A4D8               	btfss	status,2,c
  9873   00015E  D00B               	goto	i2l4863
  9874                           
  9875                           ; BSR set to: 0
  9876   000160  502D               	movf	(_button_counter+1)^0,w,c
  9877   000162  E109               	bnz	i2l4863
  9878   000164  0E0A               	movlw	10
  9879   000166  5C2C               	subwf	_button_counter^0,w,c
  9880   000168  B0D8               	btfsc	status,0,c
  9881   00016A  D005               	goto	i2l4863
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;main.c: 286:             setDisplayDigits();
  9885   00016C  ECAC  F00E         	call	i2_setDisplayDigits	;wreg free
  9886                           
  9887                           ;main.c: 287:             show7Segment();
  9888   000170  ECDE  F017         	call	i2_show7Segment	;wreg free
  9889                           
  9890                           ;main.c: 288:         }else{
  9891   000174  D002               	goto	i2l200
  9892   000176                     i2l4863:
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;main.c: 289:             turnOnDisplay = 1;
  9896   000176  0E01               	movlw	1
  9897   000178  6FFA               	movwf	_turnOnDisplay& (0+255),b
  9898   00017A                     i2l200:
  9899   00017A  C02B  FFF5         	movff	??_ISR+7,tablat
  9900   00017E  C02A  FFF8         	movff	??_ISR+6,tblptru
  9901   000182  C029  FFF7         	movff	??_ISR+5,tblptrh
  9902   000186  C028  FFF6         	movff	??_ISR+4,tblptrl
  9903   00018A  C027  FFF4         	movff	??_ISR+3,prodh
  9904   00018E  C026  FFF3         	movff	??_ISR+2,prodl
  9905   000192  C025  FFE2         	movff	??_ISR+1,fsr1h
  9906   000196  C024  FFE1         	movff	??_ISR,fsr1l
  9907   00019A  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9908   00019C  0011               	retfie		f
  9909   00019E                     __end_of_ISR:
  9910                           	callstack 0
  9911                           
  9912 ;; *************** function i2_show7Segment *****************
  9913 ;; Defined at:
  9914 ;;		line 733 in file "main.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;		None
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;		None
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  1    wreg      void 
  9921 ;; Registers used:
  9922 ;;		wreg, status,2, status,0, cstack
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9928 ;;      Params:         0       0       0       0
  9929 ;;      Locals:         0       0       0       0
  9930 ;;      Temps:          0       0       0       0
  9931 ;;      Totals:         0       0       0       0
  9932 ;;Total ram usage:        0 bytes
  9933 ;; Hardware stack levels used: 1
  9934 ;; Hardware stack levels required when called: 1
  9935 ;; This function calls:
  9936 ;;		i2_displayDigits
  9937 ;;		i2_get7SegmentPattern
  9938 ;; This function is called by:
  9939 ;;		_ISR
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           	psect	text48
  9944   002FBC                     __ptext48:
  9945                           	callstack 0
  9946   002FBC                     i2_show7Segment:
  9947                           	callstack 20
  9948                           
  9949                           ;main.c: 735:     segPattern0 = get7SegmentPattern( displayDigit0 );
  9950                           
  9951                           ;incstack = 0
  9952   002FBC  5038               	movf	_displayDigit0^0,w,c
  9953   002FBE  EC6C  F014         	call	i2_get7SegmentPattern
  9954   002FC2  6E3B               	movwf	_segPattern0^0,c
  9955                           
  9956                           ;main.c: 737:     if( displaySample == 1 && ( fsm_state == 1 || fsm_state == 2 ) ){
  9957   002FC4  0434               	decf	_displaySample^0,w,c
  9958   002FC6  A4D8               	btfss	status,2,c
  9959   002FC8  D00B               	goto	i2l4781
  9960   002FCA  0100               	movlb	0	; () banked
  9961   002FCC  05F9               	decf	_fsm_state& (0+255),w,b
  9962   002FCE  B4D8               	btfsc	status,2,c
  9963   002FD0  D004               	goto	i2u541_40
  9964                           
  9965                           ; BSR set to: 0
  9966   002FD2  0E02               	movlw	2
  9967   002FD4  19F9               	xorwf	_fsm_state& (0+255),w,b
  9968   002FD6  A4D8               	btfss	status,2,c
  9969   002FD8  D003               	goto	i2l4781
  9970   002FDA                     i2u541_40:
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;main.c: 738:         segPattern0 = segPattern0 | 0b10000000;
  9974   002FDA  503B               	movf	_segPattern0^0,w,c
  9975   002FDC  0980               	iorlw	128
  9976   002FDE  6E3B               	movwf	_segPattern0^0,c
  9977   002FE0                     i2l4781:
  9978                           
  9979                           ;main.c: 741:     segPattern1 = get7SegmentPattern( displayDigit1 );
  9980   002FE0  5037               	movf	_displayDigit1^0,w,c
  9981   002FE2  EC6C  F014         	call	i2_get7SegmentPattern
  9982   002FE6  6E3A               	movwf	_segPattern1^0,c
  9983                           
  9984                           ;main.c: 742:     segPattern2 = get7SegmentPattern( displayDigit2 );
  9985   002FE8  5036               	movf	_displayDigit2^0,w,c
  9986   002FEA  EC6C  F014         	call	i2_get7SegmentPattern
  9987   002FEE  6E39               	movwf	_segPattern2^0,c
  9988                           
  9989                           ;main.c: 744:     displayDigits( segPattern0, segPattern1, segPattern2 );
  9990   002FF0  C03A  F001         	movff	_segPattern1,i2displayDigits@digit1
  9991   002FF4  C039  F002         	movff	_segPattern2,i2displayDigits@digit2
  9992   002FF8  503B               	movf	_segPattern0^0,w,c
  9993   002FFA  EC13  F014         	call	i2_displayDigits
  9994   002FFE  0012               	return		;funcret
  9995   003000                     __end_ofi2_show7Segment:
  9996                           	callstack 0
  9997                           
  9998 ;; *************** function i2_get7SegmentPattern *****************
  9999 ;; Defined at:
 10000 ;;		line 516 in file "main.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;  digit           1    wreg     unsigned char 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;  digit           1    0[COMRAM] unsigned char 
 10005 ;;  pattern         1    1[COMRAM] unsigned char 
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  1    wreg      unsigned char 
 10008 ;; Registers used:
 10009 ;;		wreg, status,2, status,0
 10010 ;; Tracked objects:
 10011 ;;		On entry : 0/0
 10012 ;;		On exit  : 0/0
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10015 ;;      Params:         0       0       0       0
 10016 ;;      Locals:         2       0       0       0
 10017 ;;      Temps:          0       0       0       0
 10018 ;;      Totals:         2       0       0       0
 10019 ;;Total ram usage:        2 bytes
 10020 ;; Hardware stack levels used: 1
 10021 ;; This function calls:
 10022 ;;		Nothing
 10023 ;; This function is called by:
 10024 ;;		i2_show7Segment
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           	psect	text49
 10029   0028D8                     __ptext49:
 10030                           	callstack 0
 10031   0028D8                     i2_get7SegmentPattern:
 10032                           	callstack 20
 10033                           
 10034                           ;incstack = 0
 10035                           ;i2get7SegmentPattern@digit stored from wreg
 10036   0028D8  6E01               	movwf	i2get7SegmentPattern@digit^0,c
 10037                           
 10038                           ;main.c: 519:     uint8_t pattern;;main.c: 521:     switch (digit) {
 10039   0028DA  D021               	goto	i2l4243
 10040   0028DC                     i2l4209:
 10041   0028DC  0E3F               	movlw	63
 10042   0028DE  D01B               	goto	L36
 10043   0028E0                     i2l4211:
 10044   0028E0  0E06               	movlw	6
 10045   0028E2  D019               	goto	L36
 10046   0028E4                     i2l4213:
 10047   0028E4  0E5B               	movlw	91
 10048   0028E6  D017               	goto	L36
 10049   0028E8                     i2l4215:
 10050   0028E8  0E4F               	movlw	79
 10051   0028EA  D015               	goto	L36
 10052   0028EC                     i2l4217:
 10053   0028EC  0E66               	movlw	102
 10054   0028EE  D013               	goto	L36
 10055   0028F0                     i2l4219:
 10056   0028F0  0E6D               	movlw	109
 10057   0028F2  D011               	goto	L36
 10058   0028F4                     i2l4221:
 10059   0028F4  0E7D               	movlw	125
 10060   0028F6  D00F               	goto	L36
 10061   0028F8                     i2l4223:
 10062   0028F8  0E07               	movlw	7
 10063   0028FA  D00D               	goto	L36
 10064   0028FC                     i2l4225:
 10065   0028FC  0E7F               	movlw	127
 10066   0028FE  D00B               	goto	L36
 10067   002900                     i2l4227:
 10068   002900  0E6F               	movlw	111
 10069   002902  D009               	goto	L36
 10070   002904                     i2l4229:
 10071   002904  0E79               	movlw	121
 10072   002906  D007               	goto	L36
 10073   002908                     i2l4231:
 10074   002908  0E77               	movlw	119
 10075   00290A  D005               	goto	L36
 10076   00290C                     i2l4233:
 10077   00290C  0E39               	movlw	57
 10078   00290E  D003               	goto	L36
 10079   002910                     i2l4237:
 10080   002910  0E38               	movlw	56
 10081   002912  D001               	goto	L36
 10082   002914                     i2l4239:
 10083   002914  0E31               	movlw	49
 10084   002916                     L36:
 10085   002916  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10086   002918  D034               	goto	i2l240
 10087   00291A                     i2l256:
 10088   00291A  6A02               	clrf	i2get7SegmentPattern@pattern^0,c
 10089   00291C  D032               	goto	i2l240
 10090   00291E                     i2l4243:
 10091   00291E  5001               	movf	i2get7SegmentPattern@digit^0,w,c
 10092                           
 10093                           ; Switch size 1, requested type "simple"
 10094                           ; Number of cases is 16, Range of values is 0 to 114
 10095                           ; switch strategies available:
 10096                           ; Name         Instructions Cycles
 10097                           ; simple_byte           49    25 (average)
 10098                           ;	Chosen strategy is simple_byte
 10099   002920  0A00               	xorlw	0	; case 0
 10100   002922  B4D8               	btfsc	status,2,c
 10101   002924  D7DB               	goto	i2l4209
 10102   002926  0A01               	xorlw	1	; case 1
 10103   002928  B4D8               	btfsc	status,2,c
 10104   00292A  D7DA               	goto	i2l4211
 10105   00292C  0A03               	xorlw	3	; case 2
 10106   00292E  B4D8               	btfsc	status,2,c
 10107   002930  D7D9               	goto	i2l4213
 10108   002932  0A01               	xorlw	1	; case 3
 10109   002934  B4D8               	btfsc	status,2,c
 10110   002936  D7D8               	goto	i2l4215
 10111   002938  0A07               	xorlw	7	; case 4
 10112   00293A  B4D8               	btfsc	status,2,c
 10113   00293C  D7D7               	goto	i2l4217
 10114   00293E  0A01               	xorlw	1	; case 5
 10115   002940  B4D8               	btfsc	status,2,c
 10116   002942  D7D6               	goto	i2l4219
 10117   002944  0A03               	xorlw	3	; case 6
 10118   002946  B4D8               	btfsc	status,2,c
 10119   002948  D7D5               	goto	i2l4221
 10120   00294A  0A01               	xorlw	1	; case 7
 10121   00294C  B4D8               	btfsc	status,2,c
 10122   00294E  D7D4               	goto	i2l4223
 10123   002950  0A0F               	xorlw	15	; case 8
 10124   002952  B4D8               	btfsc	status,2,c
 10125   002954  D7D3               	goto	i2l4225
 10126   002956  0A01               	xorlw	1	; case 9
 10127   002958  B4D8               	btfsc	status,2,c
 10128   00295A  D7D2               	goto	i2l4227
 10129   00295C  0A48               	xorlw	72	; case 65
 10130   00295E  B4D8               	btfsc	status,2,c
 10131   002960  D7D3               	goto	i2l4231
 10132   002962  0A02               	xorlw	2	; case 67
 10133   002964  B4D8               	btfsc	status,2,c
 10134   002966  D7D2               	goto	i2l4233
 10135   002968  0A0F               	xorlw	15	; case 76
 10136   00296A  B4D8               	btfsc	status,2,c
 10137   00296C  D7D1               	goto	i2l4237
 10138   00296E  0A1F               	xorlw	31	; case 83
 10139   002970  B4D8               	btfsc	status,2,c
 10140   002972  D7BE               	goto	i2l4219
 10141   002974  0A0A               	xorlw	10	; case 89
 10142   002976  B4D8               	btfsc	status,2,c
 10143   002978  D7C5               	goto	i2l4229
 10144   00297A  0A2B               	xorlw	43	; case 114
 10145   00297C  B4D8               	btfsc	status,2,c
 10146   00297E  D7CA               	goto	i2l4239
 10147   002980  D7CC               	goto	i2l256
 10148   002982                     i2l240:
 10149                           
 10150                           ;main.c: 541:     return pattern;
 10151   002982  5002               	movf	i2get7SegmentPattern@pattern^0,w,c
 10152   002984  0012               	return		;funcret
 10153   002986                     __end_ofi2_get7SegmentPattern:
 10154                           	callstack 0
 10155                           
 10156 ;; *************** function i2_displayDigits *****************
 10157 ;; Defined at:
 10158 ;;		line 544 in file "main.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;  digit0          1    wreg     unsigned char 
 10161 ;;  digit1          1    0[COMRAM] unsigned char 
 10162 ;;  digit2          1    1[COMRAM] unsigned char 
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;  digit0          1    4[COMRAM] unsigned char 
 10165 ;;  i               2    5[COMRAM] int 
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  1    wreg      void 
 10168 ;; Registers used:
 10169 ;;		wreg, status,2, status,0
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10175 ;;      Params:         2       0       0       0
 10176 ;;      Locals:         3       0       0       0
 10177 ;;      Temps:          2       0       0       0
 10178 ;;      Totals:         7       0       0       0
 10179 ;;Total ram usage:        7 bytes
 10180 ;; Hardware stack levels used: 1
 10181 ;; This function calls:
 10182 ;;		Nothing
 10183 ;; This function is called by:
 10184 ;;		i2_show7Segment
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188                           	psect	text50
 10189   002826                     __ptext50:
 10190                           	callstack 0
 10191   002826                     i2_displayDigits:
 10192                           	callstack 20
 10193                           
 10194                           ;incstack = 0
 10195                           ;i2displayDigits@digit0 stored from wreg
 10196   002826  6E05               	movwf	i2displayDigits@digit0^0,c
 10197                           
 10198                           ;main.c: 545:     int i;;main.c: 546:     for ( i = 0 ; i < 8 ; i++ ){
 10199   002828  0E00               	movlw	0
 10200   00282A  6E07               	movwf	(i2displayDigits@i+1)^0,c
 10201   00282C  0E00               	movlw	0
 10202   00282E  6E06               	movwf	i2displayDigits@i^0,c
 10203   002830                     i2l4251:
 10204                           
 10205                           ;main.c: 548:         PORTCbits.RC5 = (digit0 >> i) & (0x01);
 10206   002830  C006  F003         	movff	i2displayDigits@i,??i2_displayDigits
 10207   002834  C005  F004         	movff	i2displayDigits@digit0,??i2_displayDigits+1
 10208   002838  2A03               	incf	??i2_displayDigits^0,f,c
 10209   00283A  D002               	goto	i2u465_44
 10210   00283C                     i2u465_45:
 10211   00283C  90D8               	bcf	status,0,c
 10212   00283E  3204               	rrcf	(??i2_displayDigits+1)^0,f,c
 10213   002840                     i2u465_44:
 10214   002840  2E03               	decfsz	??i2_displayDigits^0,f,c
 10215   002842  D7FC               	goto	i2u465_45
 10216   002844  0E01               	movlw	1
 10217   002846  1604               	andwf	(??i2_displayDigits+1)^0,f,c
 10218   002848  3A04               	swapf	(??i2_displayDigits+1)^0,f,c
 10219   00284A  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 10220   00284C  5082               	movf	130,w,c	;volatile
 10221   00284E  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 10222   002850  0BDF               	andlw	-33
 10223   002852  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 10224   002854  6E82               	movwf	130,c	;volatile
 10225                           
 10226                           ;main.c: 549:         PORTCbits.RC4 = (digit1 >> i) & (0x01);
 10227   002856  C006  F003         	movff	i2displayDigits@i,??i2_displayDigits
 10228   00285A  C001  F004         	movff	i2displayDigits@digit1,??i2_displayDigits+1
 10229   00285E  2A03               	incf	??i2_displayDigits^0,f,c
 10230   002860  D002               	goto	i2u466_44
 10231   002862                     i2u466_45:
 10232   002862  90D8               	bcf	status,0,c
 10233   002864  3204               	rrcf	(??i2_displayDigits+1)^0,f,c
 10234   002866                     i2u466_44:
 10235   002866  2E03               	decfsz	??i2_displayDigits^0,f,c
 10236   002868  D7FC               	goto	i2u466_45
 10237   00286A  0E01               	movlw	1
 10238   00286C  1604               	andwf	(??i2_displayDigits+1)^0,f,c
 10239   00286E  3A04               	swapf	(??i2_displayDigits+1)^0,f,c
 10240   002870  5082               	movf	130,w,c	;volatile
 10241   002872  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 10242   002874  0BEF               	andlw	-17
 10243   002876  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 10244   002878  6E82               	movwf	130,c	;volatile
 10245                           
 10246                           ;main.c: 550:         PORTCbits.RC3 = (digit2 >> i) & (0x01);
 10247   00287A  C006  F003         	movff	i2displayDigits@i,??i2_displayDigits
 10248   00287E  C002  F004         	movff	i2displayDigits@digit2,??i2_displayDigits+1
 10249   002882  2A03               	incf	??i2_displayDigits^0,f,c
 10250   002884  D002               	goto	i2u467_44
 10251   002886                     i2u467_45:
 10252   002886  90D8               	bcf	status,0,c
 10253   002888  3204               	rrcf	(??i2_displayDigits+1)^0,f,c
 10254   00288A                     i2u467_44:
 10255   00288A  2E03               	decfsz	??i2_displayDigits^0,f,c
 10256   00288C  D7FC               	goto	i2u467_45
 10257   00288E  0E01               	movlw	1
 10258   002890  1604               	andwf	(??i2_displayDigits+1)^0,f,c
 10259   002892  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 10260   002894  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 10261   002896  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 10262   002898  5082               	movf	130,w,c	;volatile
 10263   00289A  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 10264   00289C  0BF7               	andlw	-9
 10265   00289E  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 10266   0028A0  6E82               	movwf	130,c	;volatile
 10267                           
 10268                           ;main.c: 553:         PORTCbits.RC6 = 1;
 10269   0028A2  8C82               	bsf	130,6,c	;volatile
 10270                           
 10271                           ;main.c: 554:         _delay((unsigned long)((500)*(2000000/4000000.0)));
 10272   0028A4  0E53               	movlw	83
 10273   0028A6                     i2u1011_47:
 10274   0028A6  2EE8               	decfsz	wreg,f,c
 10275   0028A8  D7FE               	bra	i2u1011_47
 10276   0028AA  0000               	nop	
 10277                           
 10278                           ;main.c: 555:         PORTCbits.RC6 = 0;
 10279   0028AC  9C82               	bcf	130,6,c	;volatile
 10280                           
 10281                           ;main.c: 556:         _delay((unsigned long)((500)*(2000000/4000000.0)));
 10282   0028AE  0E53               	movlw	83
 10283   0028B0                     i2u1012_47:
 10284   0028B0  2EE8               	decfsz	wreg,f,c
 10285   0028B2  D7FE               	bra	i2u1012_47
 10286   0028B4  0000               	nop	
 10287                           
 10288                           ;main.c: 557:     }
 10289   0028B6  4A06               	infsnz	i2displayDigits@i^0,f,c
 10290   0028B8  2A07               	incf	(i2displayDigits@i+1)^0,f,c
 10291   0028BA  BE07               	btfsc	(i2displayDigits@i+1)^0,7,c
 10292   0028BC  D7B9               	goto	i2l4251
 10293   0028BE  5007               	movf	(i2displayDigits@i+1)^0,w,c
 10294   0028C0  E104               	bnz	i2u468_40
 10295   0028C2  0E08               	movlw	8
 10296   0028C4  5C06               	subwf	i2displayDigits@i^0,w,c
 10297   0028C6  A0D8               	btfss	status,0,c
 10298   0028C8  D7B3               	goto	i2l4251
 10299   0028CA                     i2u468_40:
 10300                           
 10301                           ;main.c: 560:     PORTCbits.RC7 = 1;
 10302   0028CA  8E82               	bsf	130,7,c	;volatile
 10303                           
 10304                           ;main.c: 561:     _delay((unsigned long)((500)*(2000000/4000000.0)));
 10305   0028CC  0E53               	movlw	83
 10306   0028CE                     i2u1013_47:
 10307   0028CE  2EE8               	decfsz	wreg,f,c
 10308   0028D0  D7FE               	bra	i2u1013_47
 10309   0028D2  0000               	nop	
 10310                           
 10311                           ;main.c: 562:     PORTCbits.RC7 = 0;
 10312   0028D4  9E82               	bcf	130,7,c	;volatile
 10313   0028D6  0012               	return		;funcret
 10314   0028D8                     __end_ofi2_displayDigits:
 10315                           	callstack 0
 10316                           
 10317 ;; *************** function i2_setDisplayDigits *****************
 10318 ;; Defined at:
 10319 ;;		line 670 in file "main.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;		None
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;		None
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  1    wreg      void 
 10326 ;; Registers used:
 10327 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10333 ;;      Params:         0       0       0       0
 10334 ;;      Locals:         0       0       0       0
 10335 ;;      Temps:          0       0       0       0
 10336 ;;      Totals:         0       0       0       0
 10337 ;;Total ram usage:        0 bytes
 10338 ;; Hardware stack levels used: 1
 10339 ;; Hardware stack levels required when called: 1
 10340 ;; This function calls:
 10341 ;;		i2___flmul
 10342 ;;		i2___fltol
 10343 ;;		i2___lwdiv
 10344 ;;		i2___lwmod
 10345 ;; This function is called by:
 10346 ;;		_ISR
 10347 ;; This function uses a non-reentrant model
 10348 ;;
 10349                           
 10350                           	psect	text51
 10351   001D58                     __ptext51:
 10352                           	callstack 0
 10353   001D58                     i2_setDisplayDigits:
 10354                           	callstack 20
 10355                           
 10356                           ;main.c: 671:     if (fsm_state == 0) {
 10357                           
 10358                           ;incstack = 0
 10359   001D58  0100               	movlb	0	; () banked
 10360   001D5A  51F9               	movf	_fsm_state& (0+255),w,b
 10361   001D5C  A4D8               	btfss	status,2,c
 10362   001D5E  D007               	goto	i2l4721
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;main.c: 673:         displayDigit0 = 11;
 10366   001D60  0E0B               	movlw	11
 10367   001D62  6E38               	movwf	_displayDigit0^0,c
 10368                           
 10369                           ;main.c: 674:         displayDigit1 = 'A';
 10370   001D64  0E41               	movlw	65
 10371   001D66  6E37               	movwf	_displayDigit1^0,c
 10372                           
 10373                           ;main.c: 675:         displayDigit2 = 11;
 10374   001D68  0E0B               	movlw	11
 10375   001D6A  6E36               	movwf	_displayDigit2^0,c
 10376                           
 10377                           ;main.c: 677:     } else if (fsm_state == 1) {
 10378   001D6C  0012               	return	
 10379   001D6E                     i2l4721:
 10380                           
 10381                           ; BSR set to: 0
 10382   001D6E  05F9               	decf	_fsm_state& (0+255),w,b
 10383   001D70  A4D8               	btfss	status,2,c
 10384   001D72  D057               	goto	i2l4735
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;main.c: 679:         c_target = (unsigned int) (adc_voltage * 100);
 10388   001D74  0E00               	movlw	0
 10389   001D76  6E05               	movwf	i2___flmul@a^0,c
 10390   001D78  0E00               	movlw	0
 10391   001D7A  6E06               	movwf	(i2___flmul@a+1)^0,c
 10392   001D7C  0EC8               	movlw	200
 10393   001D7E  6E07               	movwf	(i2___flmul@a+2)^0,c
 10394   001D80  0E42               	movlw	66
 10395   001D82  6E08               	movwf	(i2___flmul@a+3)^0,c
 10396   001D84  C0EA  F001         	movff	_adc_voltage,i2___flmul@b
 10397   001D88  C0EB  F002         	movff	_adc_voltage+1,i2___flmul@b+1
 10398   001D8C  C0EC  F003         	movff	_adc_voltage+2,i2___flmul@b+2
 10399   001D90  C0ED  F004         	movff	_adc_voltage+3,i2___flmul@b+3
 10400   001D94  EC45  F009         	call	i2___flmul	;wreg free
 10401   001D98  C001  F01A         	movff	?i2___flmul,i2___fltol@f1
 10402   001D9C  C002  F01B         	movff	?i2___flmul+1,i2___fltol@f1+1
 10403   001DA0  C003  F01C         	movff	?i2___flmul+2,i2___fltol@f1+2
 10404   001DA4  C004  F01D         	movff	?i2___flmul+3,i2___fltol@f1+3
 10405   001DA8  EC5D  F013         	call	i2___fltol	;wreg free
 10406   001DAC  C01A  F032         	movff	?i2___fltol,_c_target
 10407   001DB0  C01B  F033         	movff	?i2___fltol+1,_c_target+1
 10408                           
 10409                           ;main.c: 680:         c_remainder = c_target % 100;
 10410   001DB4  C032  F001         	movff	_c_target,i2___lwmod@dividend
 10411   001DB8  C033  F002         	movff	_c_target+1,i2___lwmod@dividend+1
 10412   001DBC  0E00               	movlw	0
 10413   001DBE  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 10414   001DC0  0E64               	movlw	100
 10415   001DC2  6E03               	movwf	i2___lwmod@divisor^0,c
 10416   001DC4  EC00  F018         	call	i2___lwmod	;wreg free
 10417   001DC8  C001  F030         	movff	?i2___lwmod,_c_remainder
 10418   001DCC  C002  F031         	movff	?i2___lwmod+1,_c_remainder+1
 10419                           
 10420                           ;main.c: 681:         c_number = c_target / 100;
 10421   001DD0  C032  F001         	movff	_c_target,i2___lwdiv@dividend
 10422   001DD4  C033  F002         	movff	_c_target+1,i2___lwdiv@dividend+1
 10423   001DD8  0E00               	movlw	0
 10424   001DDA  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 10425   001DDC  0E64               	movlw	100
 10426   001DDE  6E03               	movwf	i2___lwdiv@divisor^0,c
 10427   001DE0  ECBA  F016         	call	i2___lwdiv	;wreg free
 10428   001DE4  C001  F02E         	movff	?i2___lwdiv,_c_number
 10429   001DE8  C002  F02F         	movff	?i2___lwdiv+1,_c_number+1
 10430                           
 10431                           ;main.c: 683:         displayDigit0 = (uint8_t) c_number;
 10432   001DEC  C02E  F038         	movff	_c_number,_displayDigit0
 10433                           
 10434                           ;main.c: 684:         displayDigit1 = (uint8_t) (c_remainder / 10);
 10435   001DF0  C030  F001         	movff	_c_remainder,i2___lwdiv@dividend
 10436   001DF4  C031  F002         	movff	_c_remainder+1,i2___lwdiv@dividend+1
 10437   001DF8  0E00               	movlw	0
 10438   001DFA  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 10439   001DFC  0E0A               	movlw	10
 10440   001DFE  6E03               	movwf	i2___lwdiv@divisor^0,c
 10441   001E00  ECBA  F016         	call	i2___lwdiv	;wreg free
 10442   001E04  5001               	movf	?i2___lwdiv^0,w,c
 10443   001E06  6E37               	movwf	_displayDigit1^0,c
 10444                           
 10445                           ;main.c: 685:         displayDigit2 = c_remainder % 10;
 10446   001E08  C030  F001         	movff	_c_remainder,i2___lwmod@dividend
 10447   001E0C  C031  F002         	movff	_c_remainder+1,i2___lwmod@dividend+1
 10448   001E10  0E00               	movlw	0
 10449   001E12  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 10450   001E14  0E0A               	movlw	10
 10451   001E16  6E03               	movwf	i2___lwmod@divisor^0,c
 10452   001E18  EC00  F018         	call	i2___lwmod	;wreg free
 10453   001E1C  5001               	movf	?i2___lwmod^0,w,c
 10454   001E1E  6E36               	movwf	_displayDigit2^0,c
 10455                           
 10456                           ;main.c: 687:     } else if (fsm_state == 2) {
 10457   001E20  0012               	return	
 10458   001E22                     i2l4735:
 10459                           
 10460                           ; BSR set to: 0
 10461   001E22  0E02               	movlw	2
 10462   001E24  19F9               	xorwf	_fsm_state& (0+255),w,b
 10463   001E26  A4D8               	btfss	status,2,c
 10464   001E28  D04D               	goto	i2l4749
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;main.c: 689:         c_target = (unsigned int) (adc_voltage * 100);
 10468   001E2A  0E00               	movlw	0
 10469   001E2C  6E05               	movwf	i2___flmul@a^0,c
 10470   001E2E  0E00               	movlw	0
 10471   001E30  6E06               	movwf	(i2___flmul@a+1)^0,c
 10472   001E32  0EC8               	movlw	200
 10473   001E34  6E07               	movwf	(i2___flmul@a+2)^0,c
 10474   001E36  0E42               	movlw	66
 10475   001E38  6E08               	movwf	(i2___flmul@a+3)^0,c
 10476   001E3A  C0EA  F001         	movff	_adc_voltage,i2___flmul@b
 10477   001E3E  C0EB  F002         	movff	_adc_voltage+1,i2___flmul@b+1
 10478   001E42  C0EC  F003         	movff	_adc_voltage+2,i2___flmul@b+2
 10479   001E46  C0ED  F004         	movff	_adc_voltage+3,i2___flmul@b+3
 10480   001E4A  EC45  F009         	call	i2___flmul	;wreg free
 10481   001E4E  C001  F01A         	movff	?i2___flmul,i2___fltol@f1
 10482   001E52  C002  F01B         	movff	?i2___flmul+1,i2___fltol@f1+1
 10483   001E56  C003  F01C         	movff	?i2___flmul+2,i2___fltol@f1+2
 10484   001E5A  C004  F01D         	movff	?i2___flmul+3,i2___fltol@f1+3
 10485   001E5E  EC5D  F013         	call	i2___fltol	;wreg free
 10486   001E62  C01A  F032         	movff	?i2___fltol,_c_target
 10487   001E66  C01B  F033         	movff	?i2___fltol+1,_c_target+1
 10488                           
 10489                           ;main.c: 690:         c_remainder = c_target % 100;
 10490   001E6A  C032  F001         	movff	_c_target,i2___lwmod@dividend
 10491   001E6E  C033  F002         	movff	_c_target+1,i2___lwmod@dividend+1
 10492   001E72  0E00               	movlw	0
 10493   001E74  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 10494   001E76  0E64               	movlw	100
 10495   001E78  6E03               	movwf	i2___lwmod@divisor^0,c
 10496   001E7A  EC00  F018         	call	i2___lwmod	;wreg free
 10497   001E7E  C001  F030         	movff	?i2___lwmod,_c_remainder
 10498   001E82  C002  F031         	movff	?i2___lwmod+1,_c_remainder+1
 10499                           
 10500                           ;main.c: 691:         c_number = c_target / 100;
 10501   001E86  C032  F001         	movff	_c_target,i2___lwdiv@dividend
 10502   001E8A  C033  F002         	movff	_c_target+1,i2___lwdiv@dividend+1
 10503   001E8E  0E00               	movlw	0
 10504   001E90  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 10505   001E92  0E64               	movlw	100
 10506   001E94  6E03               	movwf	i2___lwdiv@divisor^0,c
 10507   001E96  ECBA  F016         	call	i2___lwdiv	;wreg free
 10508   001E9A  C001  F02E         	movff	?i2___lwdiv,_c_number
 10509   001E9E  C002  F02F         	movff	?i2___lwdiv+1,_c_number+1
 10510                           
 10511                           ;main.c: 693:         displayDigit0 = (uint8_t) c_number;
 10512   001EA2  C02E  F038         	movff	_c_number,_displayDigit0
 10513                           
 10514                           ;main.c: 694:         displayDigit1 = (uint8_t) (c_remainder / 10);
 10515   001EA6  C030  F001         	movff	_c_remainder,i2___lwdiv@dividend
 10516   001EAA  C031  F002         	movff	_c_remainder+1,i2___lwdiv@dividend+1
 10517   001EAE  0E00               	movlw	0
 10518   001EB0  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 10519   001EB2  0E0A               	movlw	10
 10520   001EB4  6E03               	movwf	i2___lwdiv@divisor^0,c
 10521   001EB6  ECBA  F016         	call	i2___lwdiv	;wreg free
 10522   001EBA  5001               	movf	?i2___lwdiv^0,w,c
 10523   001EBC  6E37               	movwf	_displayDigit1^0,c
 10524                           
 10525                           ;main.c: 695:         displayDigit2 = 'C';
 10526   001EBE  0E43               	movlw	67
 10527   001EC0  6E36               	movwf	_displayDigit2^0,c
 10528                           
 10529                           ;main.c: 697:     } else if (fsm_state == 3) {
 10530   001EC2  0012               	return	
 10531   001EC4                     i2l4749:
 10532                           
 10533                           ; BSR set to: 0
 10534   001EC4  0E03               	movlw	3
 10535   001EC6  19F9               	xorwf	_fsm_state& (0+255),w,b
 10536   001EC8  A4D8               	btfss	status,2,c
 10537   001ECA  D007               	goto	i2l4753
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;main.c: 699:         displayDigit0 = 11;
 10541   001ECC  0E0B               	movlw	11
 10542   001ECE  6E38               	movwf	_displayDigit0^0,c
 10543                           
 10544                           ;main.c: 700:         displayDigit1 = 'C';
 10545   001ED0  0E43               	movlw	67
 10546   001ED2  6E37               	movwf	_displayDigit1^0,c
 10547                           
 10548                           ;main.c: 701:         displayDigit2 = 11;
 10549   001ED4  0E0B               	movlw	11
 10550   001ED6  6E36               	movwf	_displayDigit2^0,c
 10551                           
 10552                           ;main.c: 703:     } else if (fsm_state == 4) {
 10553   001ED8  0012               	return	
 10554   001EDA                     i2l4753:
 10555                           
 10556                           ; BSR set to: 0
 10557   001EDA  0E04               	movlw	4
 10558   001EDC  19F9               	xorwf	_fsm_state& (0+255),w,b
 10559   001EDE  A4D8               	btfss	status,2,c
 10560   001EE0  D006               	goto	i2l4759
 10561                           
 10562                           ; BSR set to: 0
 10563                           ;main.c: 705:         displayDigit0 = 'S';
 10564   001EE2  0E53               	movlw	83
 10565   001EE4  6E38               	movwf	_displayDigit0^0,c
 10566                           
 10567                           ; BSR set to: 0
 10568                           ;main.c: 706:         displayDigit1 = 0;
 10569   001EE6  6A37               	clrf	_displayDigit1^0,c
 10570                           
 10571                           ;main.c: 707:         displayDigit2 = 11;
 10572   001EE8  0E0B               	movlw	11
 10573   001EEA  6E36               	movwf	_displayDigit2^0,c
 10574                           
 10575                           ;main.c: 709:     } else if (fsm_state == 5) {
 10576   001EEC  0012               	return	
 10577   001EEE                     i2l4759:
 10578                           
 10579                           ; BSR set to: 0
 10580   001EEE  0E05               	movlw	5
 10581   001EF0  19F9               	xorwf	_fsm_state& (0+255),w,b
 10582   001EF2  A4D8               	btfss	status,2,c
 10583   001EF4  D007               	goto	i2l4763
 10584                           
 10585                           ; BSR set to: 0
 10586                           ;main.c: 711:         displayDigit0 = 'S';
 10587   001EF6  0E53               	movlw	83
 10588   001EF8  6E38               	movwf	_displayDigit0^0,c
 10589                           
 10590                           ;main.c: 712:         displayDigit1 = 1;
 10591   001EFA  0E01               	movlw	1
 10592   001EFC  6E37               	movwf	_displayDigit1^0,c
 10593                           
 10594                           ;main.c: 713:         displayDigit2 = 11;
 10595   001EFE  0E0B               	movlw	11
 10596   001F00  6E36               	movwf	_displayDigit2^0,c
 10597                           
 10598                           ;main.c: 715:     } else if (fsm_state == 6) {
 10599   001F02  0012               	return	
 10600   001F04                     i2l4763:
 10601                           
 10602                           ; BSR set to: 0
 10603   001F04  0E06               	movlw	6
 10604   001F06  19F9               	xorwf	_fsm_state& (0+255),w,b
 10605   001F08  A4D8               	btfss	status,2,c
 10606   001F0A  D007               	goto	i2l4767
 10607                           
 10608                           ; BSR set to: 0
 10609                           ;main.c: 717:         displayDigit0 = 'S';
 10610   001F0C  0E53               	movlw	83
 10611   001F0E  6E38               	movwf	_displayDigit0^0,c
 10612                           
 10613                           ;main.c: 718:         displayDigit1 = 2;
 10614   001F10  0E02               	movlw	2
 10615   001F12  6E37               	movwf	_displayDigit1^0,c
 10616                           
 10617                           ;main.c: 719:         displayDigit2 = 11;
 10618   001F14  0E0B               	movlw	11
 10619   001F16  6E36               	movwf	_displayDigit2^0,c
 10620                           
 10621                           ;main.c: 721:     } else if (fsm_state == 7) {
 10622   001F18  0012               	return	
 10623   001F1A                     i2l4767:
 10624                           
 10625                           ; BSR set to: 0
 10626   001F1A  0E07               	movlw	7
 10627   001F1C  19F9               	xorwf	_fsm_state& (0+255),w,b
 10628   001F1E  A4D8               	btfss	status,2,c
 10629   001F20  D007               	goto	i2l336
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;main.c: 723:         displayDigit0 = 'C';
 10633   001F22  0E43               	movlw	67
 10634   001F24  6E38               	movwf	_displayDigit0^0,c
 10635                           
 10636                           ;main.c: 724:         displayDigit1 = 'L';
 10637   001F26  0E4C               	movlw	76
 10638   001F28  6E37               	movwf	_displayDigit1^0,c
 10639                           
 10640                           ;main.c: 725:         displayDigit2 = 'r';
 10641   001F2A  0E72               	movlw	114
 10642   001F2C  6E36               	movwf	_displayDigit2^0,c
 10643                           
 10644                           ;main.c: 727:     }
 10645   001F2E  0012               	return	
 10646   001F30                     i2l336:
 10647                           
 10648                           ; BSR set to: 0
 10649                           ;main.c: 729:         __nop();
 10650   001F30  0000               	nop	
 10651   001F32  0012               	return		;funcret
 10652   001F34                     __end_ofi2_setDisplayDigits:
 10653                           	callstack 0
 10654                           
 10655 ;; *************** function i2___lwmod *****************
 10656 ;; Defined at:
 10657 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwmod.c"
 10658 ;; Parameters:    Size  Location     Type
 10659 ;;  dividend        2    0[COMRAM] unsigned int 
 10660 ;;  divisor         2    2[COMRAM] unsigned int 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;  counter         1    4[COMRAM] unsigned char 
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  2    0[COMRAM] unsigned int 
 10665 ;; Registers used:
 10666 ;;		wreg, status,2, status,0
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10672 ;;      Params:         4       0       0       0
 10673 ;;      Locals:         1       0       0       0
 10674 ;;      Temps:          0       0       0       0
 10675 ;;      Totals:         5       0       0       0
 10676 ;;Total ram usage:        5 bytes
 10677 ;; Hardware stack levels used: 1
 10678 ;; This function calls:
 10679 ;;		Nothing
 10680 ;; This function is called by:
 10681 ;;		i2_setDisplayDigits
 10682 ;; This function uses a non-reentrant model
 10683 ;;
 10684                           
 10685                           	psect	text52
 10686   003000                     __ptext52:
 10687                           	callstack 0
 10688   003000                     i2___lwmod:
 10689                           	callstack 20
 10690                           
 10691                           ;incstack = 0
 10692   003000  5003               	movf	i2___lwmod@divisor^0,w,c
 10693   003002  1004               	iorwf	(i2___lwmod@divisor+1)^0,w,c
 10694   003004  B4D8               	btfsc	status,2,c
 10695   003006  D018               	goto	i2l848
 10696   003008  0E01               	movlw	1
 10697   00300A  6E05               	movwf	i2___lwmod@counter^0,c
 10698   00300C  D004               	goto	i2l4345
 10699   00300E                     i2l4343:
 10700   00300E  90D8               	bcf	status,0,c
 10701   003010  3603               	rlcf	i2___lwmod@divisor^0,f,c
 10702   003012  3604               	rlcf	(i2___lwmod@divisor+1)^0,f,c
 10703   003014  2A05               	incf	i2___lwmod@counter^0,f,c
 10704   003016                     i2l4345:
 10705   003016  AE04               	btfss	(i2___lwmod@divisor+1)^0,7,c
 10706   003018  D7FA               	goto	i2l4343
 10707   00301A                     i2u481_40:
 10708   00301A  5003               	movf	i2___lwmod@divisor^0,w,c
 10709   00301C  5C01               	subwf	i2___lwmod@dividend^0,w,c
 10710   00301E  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
 10711   003020  5802               	subwfb	(i2___lwmod@dividend+1)^0,w,c
 10712   003022  A0D8               	btfss	status,0,c
 10713   003024  D004               	goto	i2l4351
 10714   003026  5003               	movf	i2___lwmod@divisor^0,w,c
 10715   003028  5E01               	subwf	i2___lwmod@dividend^0,f,c
 10716   00302A  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
 10717   00302C  5A02               	subwfb	(i2___lwmod@dividend+1)^0,f,c
 10718   00302E                     i2l4351:
 10719   00302E  90D8               	bcf	status,0,c
 10720   003030  3204               	rrcf	(i2___lwmod@divisor+1)^0,f,c
 10721   003032  3203               	rrcf	i2___lwmod@divisor^0,f,c
 10722   003034  2E05               	decfsz	i2___lwmod@counter^0,f,c
 10723   003036  D7F1               	goto	i2u481_40
 10724   003038                     i2l848:
 10725   003038  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
 10726   00303C  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 10727   003040  0012               	return		;funcret
 10728   003042                     __end_ofi2___lwmod:
 10729                           	callstack 0
 10730                           
 10731 ;; *************** function i2___lwdiv *****************
 10732 ;; Defined at:
 10733 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwdiv.c"
 10734 ;; Parameters:    Size  Location     Type
 10735 ;;  dividend        2    0[COMRAM] unsigned int 
 10736 ;;  divisor         2    2[COMRAM] unsigned int 
 10737 ;; Auto vars:     Size  Location     Type
 10738 ;;  quotient        2    4[COMRAM] unsigned int 
 10739 ;;  counter         1    6[COMRAM] unsigned char 
 10740 ;; Return value:  Size  Location     Type
 10741 ;;                  2    0[COMRAM] unsigned int 
 10742 ;; Registers used:
 10743 ;;		wreg, status,2, status,0
 10744 ;; Tracked objects:
 10745 ;;		On entry : 0/0
 10746 ;;		On exit  : 0/0
 10747 ;;		Unchanged: 0/0
 10748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10749 ;;      Params:         4       0       0       0
 10750 ;;      Locals:         3       0       0       0
 10751 ;;      Temps:          0       0       0       0
 10752 ;;      Totals:         7       0       0       0
 10753 ;;Total ram usage:        7 bytes
 10754 ;; Hardware stack levels used: 1
 10755 ;; This function calls:
 10756 ;;		Nothing
 10757 ;; This function is called by:
 10758 ;;		i2_setDisplayDigits
 10759 ;; This function uses a non-reentrant model
 10760 ;;
 10761                           
 10762                           	psect	text53
 10763   002D74                     __ptext53:
 10764                           	callstack 0
 10765   002D74                     i2___lwdiv:
 10766                           	callstack 20
 10767                           
 10768                           ;incstack = 0
 10769   002D74  0E00               	movlw	0
 10770   002D76  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
 10771   002D78  0E00               	movlw	0
 10772   002D7A  6E05               	movwf	i2___lwdiv@quotient^0,c
 10773   002D7C  5003               	movf	i2___lwdiv@divisor^0,w,c
 10774   002D7E  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 10775   002D80  B4D8               	btfsc	status,2,c
 10776   002D82  D01C               	goto	i2l838
 10777   002D84  0E01               	movlw	1
 10778   002D86  6E07               	movwf	i2___lwdiv@counter^0,c
 10779   002D88  D004               	goto	i2l4325
 10780   002D8A                     i2l4323:
 10781   002D8A  90D8               	bcf	status,0,c
 10782   002D8C  3603               	rlcf	i2___lwdiv@divisor^0,f,c
 10783   002D8E  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 10784   002D90  2A07               	incf	i2___lwdiv@counter^0,f,c
 10785   002D92                     i2l4325:
 10786   002D92  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 10787   002D94  D7FA               	goto	i2l4323
 10788   002D96                     i2u478_40:
 10789   002D96  90D8               	bcf	status,0,c
 10790   002D98  3605               	rlcf	i2___lwdiv@quotient^0,f,c
 10791   002D9A  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 10792   002D9C  5003               	movf	i2___lwdiv@divisor^0,w,c
 10793   002D9E  5C01               	subwf	i2___lwdiv@dividend^0,w,c
 10794   002DA0  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 10795   002DA2  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 10796   002DA4  A0D8               	btfss	status,0,c
 10797   002DA6  D005               	goto	i2l4335
 10798   002DA8  5003               	movf	i2___lwdiv@divisor^0,w,c
 10799   002DAA  5E01               	subwf	i2___lwdiv@dividend^0,f,c
 10800   002DAC  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 10801   002DAE  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 10802   002DB0  8005               	bsf	i2___lwdiv@quotient^0,0,c
 10803   002DB2                     i2l4335:
 10804   002DB2  90D8               	bcf	status,0,c
 10805   002DB4  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 10806   002DB6  3203               	rrcf	i2___lwdiv@divisor^0,f,c
 10807   002DB8  2E07               	decfsz	i2___lwdiv@counter^0,f,c
 10808   002DBA  D7ED               	goto	i2u478_40
 10809   002DBC                     i2l838:
 10810   002DBC  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 10811   002DC0  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 10812   002DC4  0012               	return		;funcret
 10813   002DC6                     __end_ofi2___lwdiv:
 10814                           	callstack 0
 10815                           
 10816 ;; *************** function i2___fltol *****************
 10817 ;; Defined at:
 10818 ;;		line 43 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/fltol.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;  f1              4   25[COMRAM] unsigned int 
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;  exp1            1   34[COMRAM] unsigned char 
 10823 ;;  sign1           1   33[COMRAM] unsigned char 
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  4   25[COMRAM] long 
 10826 ;; Registers used:
 10827 ;;		wreg, status,2, status,0
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/0
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10833 ;;      Params:         4       0       0       0
 10834 ;;      Locals:         2       0       0       0
 10835 ;;      Temps:          4       0       0       0
 10836 ;;      Totals:        10       0       0       0
 10837 ;;Total ram usage:       10 bytes
 10838 ;; Hardware stack levels used: 1
 10839 ;; This function calls:
 10840 ;;		Nothing
 10841 ;; This function is called by:
 10842 ;;		i2_setDisplayDigits
 10843 ;; This function uses a non-reentrant model
 10844 ;;
 10845                           
 10846                           	psect	text54
 10847   0026BA                     __ptext54:
 10848                           	callstack 0
 10849   0026BA                     i2___fltol:
 10850                           	callstack 20
 10851                           
 10852                           ;incstack = 0
 10853   0026BA  341C               	rlcf	(i2___fltol@f1+2)^0,w,c
 10854   0026BC  341D               	rlcf	(i2___fltol@f1+3)^0,w,c
 10855   0026BE  6E23               	movwf	i2___fltol@exp1^0,c
 10856   0026C0  5023               	movf	i2___fltol@exp1^0,w,c
 10857   0026C2  A4D8               	btfss	status,2,c
 10858   0026C4  D009               	goto	i2l4279
 10859   0026C6                     i2u470_40:
 10860   0026C6  0E00               	movlw	0
 10861   0026C8  6E1A               	movwf	?i2___fltol^0,c
 10862   0026CA  0E00               	movlw	0
 10863   0026CC  6E1B               	movwf	(?i2___fltol+1)^0,c
 10864   0026CE  0E00               	movlw	0
 10865   0026D0  6E1C               	movwf	(?i2___fltol+2)^0,c
 10866   0026D2  0E00               	movlw	0
 10867   0026D4  6E1D               	movwf	(?i2___fltol+3)^0,c
 10868   0026D6  0012               	return	
 10869   0026D8                     i2l4279:
 10870   0026D8  C01A  F01E         	movff	i2___fltol@f1,??i2___fltol
 10871   0026DC  C01B  F01F         	movff	i2___fltol@f1+1,??i2___fltol+1
 10872   0026E0  C01C  F020         	movff	i2___fltol@f1+2,??i2___fltol+2
 10873   0026E4  C01D  F021         	movff	i2___fltol@f1+3,??i2___fltol+3
 10874   0026E8  0E20               	movlw	32
 10875   0026EA  D005               	goto	i2u471_40
 10876   0026EC                     i2u471_45:
 10877   0026EC  90D8               	bcf	status,0,c
 10878   0026EE  3221               	rrcf	(??i2___fltol+3)^0,f,c
 10879   0026F0  3220               	rrcf	(??i2___fltol+2)^0,f,c
 10880   0026F2  321F               	rrcf	(??i2___fltol+1)^0,f,c
 10881   0026F4  321E               	rrcf	??i2___fltol^0,f,c
 10882   0026F6                     i2u471_40:
 10883   0026F6  2EE8               	decfsz	wreg,f,c
 10884   0026F8  D7F9               	goto	i2u471_45
 10885   0026FA  501E               	movf	??i2___fltol^0,w,c
 10886   0026FC  6E22               	movwf	i2___fltol@sign1^0,c
 10887   0026FE  8E1C               	bsf	(i2___fltol@f1+2)^0,7,c
 10888   002700  0EFF               	movlw	255
 10889   002702  161A               	andwf	i2___fltol@f1^0,f,c
 10890   002704  0EFF               	movlw	255
 10891   002706  161B               	andwf	(i2___fltol@f1+1)^0,f,c
 10892   002708  0EFF               	movlw	255
 10893   00270A  161C               	andwf	(i2___fltol@f1+2)^0,f,c
 10894   00270C  0E00               	movlw	0
 10895   00270E  161D               	andwf	(i2___fltol@f1+3)^0,f,c
 10896   002710  0E96               	movlw	150
 10897   002712  5E23               	subwf	i2___fltol@exp1^0,f,c
 10898   002714  AE23               	btfss	i2___fltol@exp1^0,7,c
 10899   002716  D00D               	goto	i2l4299
 10900   002718  5023               	movf	i2___fltol@exp1^0,w,c
 10901   00271A  0A80               	xorlw	128
 10902   00271C  0F97               	addlw	151
 10903   00271E  A0D8               	btfss	status,0,c
 10904   002720  D7D2               	goto	i2u470_40
 10905   002722                     i2l4295:
 10906   002722  90D8               	bcf	status,0,c
 10907   002724  321D               	rrcf	(i2___fltol@f1+3)^0,f,c
 10908   002726  321C               	rrcf	(i2___fltol@f1+2)^0,f,c
 10909   002728  321B               	rrcf	(i2___fltol@f1+1)^0,f,c
 10910   00272A  321A               	rrcf	i2___fltol@f1^0,f,c
 10911   00272C  3E23               	incfsz	i2___fltol@exp1^0,f,c
 10912   00272E  D7F9               	goto	i2l4295
 10913   002730  D00D               	goto	i2u475_40
 10914   002732                     i2l4299:
 10915   002732  0E1F               	movlw	31
 10916   002734  6423               	cpfsgt	i2___fltol@exp1^0,c
 10917   002736  D007               	goto	i2l4307
 10918   002738  D7C6               	goto	i2u470_40
 10919   00273A                     i2l4305:
 10920   00273A  90D8               	bcf	status,0,c
 10921   00273C  361A               	rlcf	i2___fltol@f1^0,f,c
 10922   00273E  361B               	rlcf	(i2___fltol@f1+1)^0,f,c
 10923   002740  361C               	rlcf	(i2___fltol@f1+2)^0,f,c
 10924   002742  361D               	rlcf	(i2___fltol@f1+3)^0,f,c
 10925   002744  0623               	decf	i2___fltol@exp1^0,f,c
 10926   002746                     i2l4307:
 10927   002746  5023               	movf	i2___fltol@exp1^0,w,c
 10928   002748  A4D8               	btfss	status,2,c
 10929   00274A  D7F7               	goto	i2l4305
 10930   00274C                     i2u475_40:
 10931   00274C  5022               	movf	i2___fltol@sign1^0,w,c
 10932   00274E  B4D8               	btfsc	status,2,c
 10933   002750  D008               	goto	i2l4313
 10934   002752  1E1D               	comf	(i2___fltol@f1+3)^0,f,c
 10935   002754  1E1C               	comf	(i2___fltol@f1+2)^0,f,c
 10936   002756  1E1B               	comf	(i2___fltol@f1+1)^0,f,c
 10937   002758  6C1A               	negf	i2___fltol@f1^0,c
 10938   00275A  0E00               	movlw	0
 10939   00275C  221B               	addwfc	(i2___fltol@f1+1)^0,f,c
 10940   00275E  221C               	addwfc	(i2___fltol@f1+2)^0,f,c
 10941   002760  221D               	addwfc	(i2___fltol@f1+3)^0,f,c
 10942   002762                     i2l4313:
 10943   002762  C01A  F01A         	movff	i2___fltol@f1,?i2___fltol
 10944   002766  C01B  F01B         	movff	i2___fltol@f1+1,?i2___fltol+1
 10945   00276A  C01C  F01C         	movff	i2___fltol@f1+2,?i2___fltol+2
 10946   00276E  C01D  F01D         	movff	i2___fltol@f1+3,?i2___fltol+3
 10947   002772  0012               	return		;funcret
 10948   002774                     __end_ofi2___fltol:
 10949                           	callstack 0
 10950                           
 10951 ;; *************** function i2___flmul *****************
 10952 ;; Defined at:
 10953 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcmul.c"
 10954 ;; Parameters:    Size  Location     Type
 10955 ;;  b               4    0[COMRAM] long 
 10956 ;;  a               4    4[COMRAM] long 
 10957 ;; Auto vars:     Size  Location     Type
 10958 ;;  prod            4   19[COMRAM] struct .
 10959 ;;  grs             4   13[COMRAM] unsigned long 
 10960 ;;  temp            2   23[COMRAM] struct .
 10961 ;;  bexp            1   18[COMRAM] unsigned char 
 10962 ;;  aexp            1   17[COMRAM] unsigned char 
 10963 ;;  sign            1   12[COMRAM] unsigned char 
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  4    0[COMRAM] unsigned char 
 10966 ;; Registers used:
 10967 ;;		wreg, status,2, status,0, prodl, prodh
 10968 ;; Tracked objects:
 10969 ;;		On entry : 0/0
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10973 ;;      Params:         8       0       0       0
 10974 ;;      Locals:        13       0       0       0
 10975 ;;      Temps:          4       0       0       0
 10976 ;;      Totals:        25       0       0       0
 10977 ;;Total ram usage:       25 bytes
 10978 ;; Hardware stack levels used: 1
 10979 ;; This function calls:
 10980 ;;		Nothing
 10981 ;; This function is called by:
 10982 ;;		i2_setDisplayDigits
 10983 ;; This function uses a non-reentrant model
 10984 ;;
 10985                           
 10986                           	psect	text55
 10987   00128A                     __ptext55:
 10988                           	callstack 0
 10989   00128A                     i2___flmul:
 10990                           	callstack 20
 10991                           
 10992                           ;incstack = 0
 10993   00128A  5004               	movf	(i2___flmul@b+3)^0,w,c
 10994   00128C  0B80               	andlw	128
 10995   00128E  6E0D               	movwf	i2___flmul@sign^0,c
 10996   001290  5004               	movf	(i2___flmul@b+3)^0,w,c
 10997   001292  2404               	addwf	(i2___flmul@b+3)^0,w,c
 10998   001294  6E13               	movwf	i2___flmul@bexp^0,c
 10999   001296  BE03               	btfsc	(i2___flmul@b+2)^0,7,c
 11000   001298  8013               	bsf	i2___flmul@bexp^0,0,c
 11001   00129A  5013               	movf	i2___flmul@bexp^0,w,c
 11002   00129C  B4D8               	btfsc	status,2,c
 11003   00129E  D00D               	goto	i2l4369
 11004   0012A0  2813               	incf	i2___flmul@bexp^0,w,c
 11005   0012A2  A4D8               	btfss	status,2,c
 11006   0012A4  D008               	goto	i2l4367
 11007   0012A6  0E00               	movlw	0
 11008   0012A8  6E01               	movwf	i2___flmul@b^0,c
 11009   0012AA  0E00               	movlw	0
 11010   0012AC  6E02               	movwf	(i2___flmul@b+1)^0,c
 11011   0012AE  0E00               	movlw	0
 11012   0012B0  6E03               	movwf	(i2___flmul@b+2)^0,c
 11013   0012B2  0E00               	movlw	0
 11014   0012B4  6E04               	movwf	(i2___flmul@b+3)^0,c
 11015   0012B6                     i2l4367:
 11016   0012B6  8E03               	bsf	(i2___flmul@b+2)^0,7,c
 11017   0012B8  D008               	goto	i2l4371
 11018   0012BA                     i2l4369:
 11019   0012BA  0E00               	movlw	0
 11020   0012BC  6E01               	movwf	i2___flmul@b^0,c
 11021   0012BE  0E00               	movlw	0
 11022   0012C0  6E02               	movwf	(i2___flmul@b+1)^0,c
 11023   0012C2  0E00               	movlw	0
 11024   0012C4  6E03               	movwf	(i2___flmul@b+2)^0,c
 11025   0012C6  0E00               	movlw	0
 11026   0012C8  6E04               	movwf	(i2___flmul@b+3)^0,c
 11027   0012CA                     i2l4371:
 11028   0012CA  5008               	movf	(i2___flmul@a+3)^0,w,c
 11029   0012CC  0B80               	andlw	128
 11030   0012CE  1A0D               	xorwf	i2___flmul@sign^0,f,c
 11031   0012D0  5008               	movf	(i2___flmul@a+3)^0,w,c
 11032   0012D2  2408               	addwf	(i2___flmul@a+3)^0,w,c
 11033   0012D4  6E12               	movwf	i2___flmul@aexp^0,c
 11034   0012D6  BE07               	btfsc	(i2___flmul@a+2)^0,7,c
 11035   0012D8  8012               	bsf	i2___flmul@aexp^0,0,c
 11036   0012DA  5012               	movf	i2___flmul@aexp^0,w,c
 11037   0012DC  B4D8               	btfsc	status,2,c
 11038   0012DE  D00D               	goto	i2l4387
 11039   0012E0  2812               	incf	i2___flmul@aexp^0,w,c
 11040   0012E2  A4D8               	btfss	status,2,c
 11041   0012E4  D008               	goto	i2l4385
 11042   0012E6  0E00               	movlw	0
 11043   0012E8  6E05               	movwf	i2___flmul@a^0,c
 11044   0012EA  0E00               	movlw	0
 11045   0012EC  6E06               	movwf	(i2___flmul@a+1)^0,c
 11046   0012EE  0E00               	movlw	0
 11047   0012F0  6E07               	movwf	(i2___flmul@a+2)^0,c
 11048   0012F2  0E00               	movlw	0
 11049   0012F4  6E08               	movwf	(i2___flmul@a+3)^0,c
 11050   0012F6                     i2l4385:
 11051   0012F6  8E07               	bsf	(i2___flmul@a+2)^0,7,c
 11052   0012F8  D008               	goto	i2l961
 11053   0012FA                     i2l4387:
 11054   0012FA  0E00               	movlw	0
 11055   0012FC  6E05               	movwf	i2___flmul@a^0,c
 11056   0012FE  0E00               	movlw	0
 11057   001300  6E06               	movwf	(i2___flmul@a+1)^0,c
 11058   001302  0E00               	movlw	0
 11059   001304  6E07               	movwf	(i2___flmul@a+2)^0,c
 11060   001306  0E00               	movlw	0
 11061   001308  6E08               	movwf	(i2___flmul@a+3)^0,c
 11062   00130A                     i2l961:
 11063   00130A  5012               	movf	i2___flmul@aexp^0,w,c
 11064   00130C  B4D8               	btfsc	status,2,c
 11065   00130E  D003               	goto	i2u490_40
 11066   001310  5013               	movf	i2___flmul@bexp^0,w,c
 11067   001312  A4D8               	btfss	status,2,c
 11068   001314  D009               	goto	i2l4395
 11069   001316                     i2u490_40:
 11070   001316  0E00               	movlw	0
 11071   001318  6E01               	movwf	?i2___flmul^0,c
 11072   00131A  0E00               	movlw	0
 11073   00131C  6E02               	movwf	(?i2___flmul+1)^0,c
 11074   00131E  0E00               	movlw	0
 11075   001320  6E03               	movwf	(?i2___flmul+2)^0,c
 11076   001322  0E00               	movlw	0
 11077   001324  6E04               	movwf	(?i2___flmul+3)^0,c
 11078   001326  0012               	return	
 11079   001328                     i2l4395:
 11080   001328  5007               	movf	(i2___flmul@a+2)^0,w,c
 11081   00132A  0201               	mulwf	i2___flmul@b^0,c
 11082   00132C  CFF3 F018          	movff	prodl,i2___flmul@temp
 11083   001330  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11084   001334  5018               	movf	i2___flmul@temp^0,w,c
 11085   001336  6E0E               	movwf	i2___flmul@grs^0,c
 11086   001338  6A0F               	clrf	(i2___flmul@grs+1)^0,c
 11087   00133A  6A10               	clrf	(i2___flmul@grs+2)^0,c
 11088   00133C  6A11               	clrf	(i2___flmul@grs+3)^0,c
 11089   00133E  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11090   001340  6E14               	movwf	i2___flmul@prod^0,c
 11091   001342  6A15               	clrf	(i2___flmul@prod+1)^0,c
 11092   001344  6A16               	clrf	(i2___flmul@prod+2)^0,c
 11093   001346  6A17               	clrf	(i2___flmul@prod+3)^0,c
 11094   001348  5006               	movf	(i2___flmul@a+1)^0,w,c
 11095   00134A  0202               	mulwf	(i2___flmul@b+1)^0,c
 11096   00134C  CFF3 F018          	movff	prodl,i2___flmul@temp
 11097   001350  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11098   001354  5018               	movf	i2___flmul@temp^0,w,c
 11099   001356  260E               	addwf	i2___flmul@grs^0,f,c
 11100   001358  0E00               	movlw	0
 11101   00135A  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 11102   00135C  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 11103   00135E  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 11104   001360  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11105   001362  2614               	addwf	i2___flmul@prod^0,f,c
 11106   001364  0E00               	movlw	0
 11107   001366  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11108   001368  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11109   00136A  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11110   00136C  5005               	movf	i2___flmul@a^0,w,c
 11111   00136E  0203               	mulwf	(i2___flmul@b+2)^0,c
 11112   001370  CFF3 F018          	movff	prodl,i2___flmul@temp
 11113   001374  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11114   001378  5018               	movf	i2___flmul@temp^0,w,c
 11115   00137A  260E               	addwf	i2___flmul@grs^0,f,c
 11116   00137C  0E00               	movlw	0
 11117   00137E  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 11118   001380  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 11119   001382  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 11120   001384  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11121   001386  2614               	addwf	i2___flmul@prod^0,f,c
 11122   001388  0E00               	movlw	0
 11123   00138A  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11124   00138C  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11125   00138E  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11126   001390  C010  F011         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 11127   001394  C00F  F010         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 11128   001398  C00E  F00F         	movff	i2___flmul@grs,i2___flmul@grs+1
 11129   00139C  6A0E               	clrf	i2___flmul@grs^0,c
 11130   00139E  5005               	movf	i2___flmul@a^0,w,c
 11131   0013A0  0202               	mulwf	(i2___flmul@b+1)^0,c
 11132   0013A2  CFF3 F018          	movff	prodl,i2___flmul@temp
 11133   0013A6  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11134   0013AA  5018               	movf	i2___flmul@temp^0,w,c
 11135   0013AC  260E               	addwf	i2___flmul@grs^0,f,c
 11136   0013AE  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11137   0013B0  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 11138   0013B2  0E00               	movlw	0
 11139   0013B4  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 11140   0013B6  0E00               	movlw	0
 11141   0013B8  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 11142   0013BA  5006               	movf	(i2___flmul@a+1)^0,w,c
 11143   0013BC  0201               	mulwf	i2___flmul@b^0,c
 11144   0013BE  CFF3 F018          	movff	prodl,i2___flmul@temp
 11145   0013C2  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11146   0013C6  5018               	movf	i2___flmul@temp^0,w,c
 11147   0013C8  260E               	addwf	i2___flmul@grs^0,f,c
 11148   0013CA  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11149   0013CC  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 11150   0013CE  0E00               	movlw	0
 11151   0013D0  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 11152   0013D2  0E00               	movlw	0
 11153   0013D4  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 11154   0013D6  C010  F011         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 11155   0013DA  C00F  F010         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 11156   0013DE  C00E  F00F         	movff	i2___flmul@grs,i2___flmul@grs+1
 11157   0013E2  6A0E               	clrf	i2___flmul@grs^0,c
 11158   0013E4  5005               	movf	i2___flmul@a^0,w,c
 11159   0013E6  0201               	mulwf	i2___flmul@b^0,c
 11160   0013E8  CFF3 F018          	movff	prodl,i2___flmul@temp
 11161   0013EC  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11162   0013F0  5018               	movf	i2___flmul@temp^0,w,c
 11163   0013F2  260E               	addwf	i2___flmul@grs^0,f,c
 11164   0013F4  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11165   0013F6  220F               	addwfc	(i2___flmul@grs+1)^0,f,c
 11166   0013F8  0E00               	movlw	0
 11167   0013FA  2210               	addwfc	(i2___flmul@grs+2)^0,f,c
 11168   0013FC  0E00               	movlw	0
 11169   0013FE  2211               	addwfc	(i2___flmul@grs+3)^0,f,c
 11170   001400  5007               	movf	(i2___flmul@a+2)^0,w,c
 11171   001402  0202               	mulwf	(i2___flmul@b+1)^0,c
 11172   001404  CFF3 F018          	movff	prodl,i2___flmul@temp
 11173   001408  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11174   00140C  5018               	movf	i2___flmul@temp^0,w,c
 11175   00140E  2614               	addwf	i2___flmul@prod^0,f,c
 11176   001410  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11177   001412  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11178   001414  0E00               	movlw	0
 11179   001416  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11180   001418  0E00               	movlw	0
 11181   00141A  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11182   00141C  5006               	movf	(i2___flmul@a+1)^0,w,c
 11183   00141E  0203               	mulwf	(i2___flmul@b+2)^0,c
 11184   001420  CFF3 F018          	movff	prodl,i2___flmul@temp
 11185   001424  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11186   001428  5018               	movf	i2___flmul@temp^0,w,c
 11187   00142A  2614               	addwf	i2___flmul@prod^0,f,c
 11188   00142C  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11189   00142E  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11190   001430  0E00               	movlw	0
 11191   001432  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11192   001434  0E00               	movlw	0
 11193   001436  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11194   001438  5007               	movf	(i2___flmul@a+2)^0,w,c
 11195   00143A  0203               	mulwf	(i2___flmul@b+2)^0,c
 11196   00143C  CFF3 F018          	movff	prodl,i2___flmul@temp
 11197   001440  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11198   001444  5018               	movf	i2___flmul@temp^0,w,c
 11199   001446  6E09               	movwf	??i2___flmul^0,c
 11200   001448  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11201   00144A  6E0A               	movwf	(??i2___flmul+1)^0,c
 11202   00144C  6A0B               	clrf	(??i2___flmul+2)^0,c
 11203   00144E  6A0C               	clrf	(??i2___flmul+3)^0,c
 11204   001450  C00B  F00C         	movff	??i2___flmul+2,??i2___flmul+3
 11205   001454  C00A  F00B         	movff	??i2___flmul+1,??i2___flmul+2
 11206   001458  C009  F00A         	movff	??i2___flmul,??i2___flmul+1
 11207   00145C  6A09               	clrf	??i2___flmul^0,c
 11208   00145E  5009               	movf	??i2___flmul^0,w,c
 11209   001460  2614               	addwf	i2___flmul@prod^0,f,c
 11210   001462  500A               	movf	(??i2___flmul+1)^0,w,c
 11211   001464  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11212   001466  500B               	movf	(??i2___flmul+2)^0,w,c
 11213   001468  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11214   00146A  500C               	movf	(??i2___flmul+3)^0,w,c
 11215   00146C  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11216   00146E  C00E  F009         	movff	i2___flmul@grs,??i2___flmul
 11217   001472  C00F  F00A         	movff	i2___flmul@grs+1,??i2___flmul+1
 11218   001476  C010  F00B         	movff	i2___flmul@grs+2,??i2___flmul+2
 11219   00147A  C011  F00C         	movff	i2___flmul@grs+3,??i2___flmul+3
 11220   00147E  0E19               	movlw	25
 11221   001480  D005               	goto	i2u491_40
 11222   001482                     i2u491_45:
 11223   001482  90D8               	bcf	status,0,c
 11224   001484  320C               	rrcf	(??i2___flmul+3)^0,f,c
 11225   001486  320B               	rrcf	(??i2___flmul+2)^0,f,c
 11226   001488  320A               	rrcf	(??i2___flmul+1)^0,f,c
 11227   00148A  3209               	rrcf	??i2___flmul^0,f,c
 11228   00148C                     i2u491_40:
 11229   00148C  2EE8               	decfsz	wreg,f,c
 11230   00148E  D7F9               	goto	i2u491_45
 11231   001490  5009               	movf	??i2___flmul^0,w,c
 11232   001492  2614               	addwf	i2___flmul@prod^0,f,c
 11233   001494  500A               	movf	(??i2___flmul+1)^0,w,c
 11234   001496  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11235   001498  500B               	movf	(??i2___flmul+2)^0,w,c
 11236   00149A  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11237   00149C  500C               	movf	(??i2___flmul+3)^0,w,c
 11238   00149E  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11239   0014A0  C010  F011         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 11240   0014A4  C00F  F010         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 11241   0014A8  C00E  F00F         	movff	i2___flmul@grs,i2___flmul@grs+1
 11242   0014AC  6A0E               	clrf	i2___flmul@grs^0,c
 11243   0014AE  5012               	movf	i2___flmul@aexp^0,w,c
 11244   0014B0  C013  F009         	movff	i2___flmul@bexp,??i2___flmul
 11245   0014B4  6A0A               	clrf	(??i2___flmul+1)^0,c
 11246   0014B6  2609               	addwf	??i2___flmul^0,f,c
 11247   0014B8  0E00               	movlw	0
 11248   0014BA  220A               	addwfc	(??i2___flmul+1)^0,f,c
 11249   0014BC  0E82               	movlw	130
 11250   0014BE  2409               	addwf	??i2___flmul^0,w,c
 11251   0014C0  6E18               	movwf	i2___flmul@temp^0,c
 11252   0014C2  0EFF               	movlw	255
 11253   0014C4  200A               	addwfc	(??i2___flmul+1)^0,w,c
 11254   0014C6  6E19               	movwf	(i2___flmul@temp+1)^0,c
 11255   0014C8  D00F               	goto	i2l4443
 11256   0014CA                     i2l4437:
 11257   0014CA  90D8               	bcf	status,0,c
 11258   0014CC  3614               	rlcf	i2___flmul@prod^0,f,c
 11259   0014CE  3615               	rlcf	(i2___flmul@prod+1)^0,f,c
 11260   0014D0  3616               	rlcf	(i2___flmul@prod+2)^0,f,c
 11261   0014D2  3617               	rlcf	(i2___flmul@prod+3)^0,f,c
 11262   0014D4  BE11               	btfsc	(i2___flmul@grs+3)^0,7,c
 11263   0014D6  8014               	bsf	i2___flmul@prod^0,0,c
 11264   0014D8  90D8               	bcf	status,0,c
 11265   0014DA  360E               	rlcf	i2___flmul@grs^0,f,c
 11266   0014DC  360F               	rlcf	(i2___flmul@grs+1)^0,f,c
 11267   0014DE  3610               	rlcf	(i2___flmul@grs+2)^0,f,c
 11268   0014E0  3611               	rlcf	(i2___flmul@grs+3)^0,f,c
 11269   0014E2  0618               	decf	i2___flmul@temp^0,f,c
 11270   0014E4  A0D8               	btfss	status,0,c
 11271   0014E6  0619               	decf	(i2___flmul@temp+1)^0,f,c
 11272   0014E8                     i2l4443:
 11273   0014E8  AE16               	btfss	(i2___flmul@prod+2)^0,7,c
 11274   0014EA  D7EF               	goto	i2l4437
 11275   0014EC  6A12               	clrf	i2___flmul@aexp^0,c
 11276   0014EE  AE11               	btfss	(i2___flmul@grs+3)^0,7,c
 11277   0014F0  D017               	goto	i2l970
 11278   0014F2  0EFF               	movlw	255
 11279   0014F4  140E               	andwf	i2___flmul@grs^0,w,c
 11280   0014F6  6E09               	movwf	??i2___flmul^0,c
 11281   0014F8  0EFF               	movlw	255
 11282   0014FA  140F               	andwf	(i2___flmul@grs+1)^0,w,c
 11283   0014FC  6E0A               	movwf	(??i2___flmul+1)^0,c
 11284   0014FE  0EFF               	movlw	255
 11285   001500  1410               	andwf	(i2___flmul@grs+2)^0,w,c
 11286   001502  6E0B               	movwf	(??i2___flmul+2)^0,c
 11287   001504  0E7F               	movlw	127
 11288   001506  1411               	andwf	(i2___flmul@grs+3)^0,w,c
 11289   001508  6E0C               	movwf	(??i2___flmul+3)^0,c
 11290   00150A  5009               	movf	??i2___flmul^0,w,c
 11291   00150C  100A               	iorwf	(??i2___flmul+1)^0,w,c
 11292   00150E  100B               	iorwf	(??i2___flmul+2)^0,w,c
 11293   001510  100C               	iorwf	(??i2___flmul+3)^0,w,c
 11294   001512  B4D8               	btfsc	status,2,c
 11295   001514  D003               	goto	i2l971
 11296   001516                     i2u495_40:
 11297   001516  0E01               	movlw	1
 11298   001518  6E12               	movwf	i2___flmul@aexp^0,c
 11299   00151A  D002               	goto	i2l970
 11300   00151C                     i2l971:
 11301   00151C  B014               	btfsc	i2___flmul@prod^0,0,c
 11302   00151E  D7FB               	goto	i2u495_40
 11303   001520                     i2l970:
 11304   001520  5012               	movf	i2___flmul@aexp^0,w,c
 11305   001522  B4D8               	btfsc	status,2,c
 11306   001524  D01F               	goto	i2l4459
 11307   001526  0E01               	movlw	1
 11308   001528  2614               	addwf	i2___flmul@prod^0,f,c
 11309   00152A  0E00               	movlw	0
 11310   00152C  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11311   00152E  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11312   001530  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11313   001532  A017               	btfss	(i2___flmul@prod+3)^0,0,c
 11314   001534  D017               	goto	i2l4459
 11315   001536  C014  F009         	movff	i2___flmul@prod,??i2___flmul
 11316   00153A  C015  F00A         	movff	i2___flmul@prod+1,??i2___flmul+1
 11317   00153E  C016  F00B         	movff	i2___flmul@prod+2,??i2___flmul+2
 11318   001542  C017  F00C         	movff	i2___flmul@prod+3,??i2___flmul+3
 11319   001546  340C               	rlcf	(??i2___flmul+3)^0,w,c
 11320   001548  320C               	rrcf	(??i2___flmul+3)^0,f,c
 11321   00154A  320B               	rrcf	(??i2___flmul+2)^0,f,c
 11322   00154C  320A               	rrcf	(??i2___flmul+1)^0,f,c
 11323   00154E  3209               	rrcf	??i2___flmul^0,f,c
 11324   001550  C009  F014         	movff	??i2___flmul,i2___flmul@prod
 11325   001554  C00A  F015         	movff	??i2___flmul+1,i2___flmul@prod+1
 11326   001558  C00B  F016         	movff	??i2___flmul+2,i2___flmul@prod+2
 11327   00155C  C00C  F017         	movff	??i2___flmul+3,i2___flmul@prod+3
 11328   001560  4A18               	infsnz	i2___flmul@temp^0,f,c
 11329   001562  2A19               	incf	(i2___flmul@temp+1)^0,f,c
 11330   001564                     i2l4459:
 11331   001564  BE19               	btfsc	(i2___flmul@temp+1)^0,7,c
 11332   001566  D00D               	goto	i2l4463
 11333   001568  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11334   00156A  E103               	bnz	i2u499_40
 11335   00156C  2818               	incf	i2___flmul@temp^0,w,c
 11336   00156E  A0D8               	btfss	status,0,c
 11337   001570  D008               	goto	i2l4463
 11338   001572                     i2u499_40:
 11339   001572  0E00               	movlw	0
 11340   001574  6E14               	movwf	i2___flmul@prod^0,c
 11341   001576  0E00               	movlw	0
 11342   001578  6E15               	movwf	(i2___flmul@prod+1)^0,c
 11343   00157A  0E80               	movlw	128
 11344   00157C  6E16               	movwf	(i2___flmul@prod+2)^0,c
 11345   00157E  0E7F               	movlw	127
 11346   001580  D01F               	goto	L37
 11347   001582                     i2l4463:
 11348   001582  BE19               	btfsc	(i2___flmul@temp+1)^0,7,c
 11349   001584  D005               	goto	i2u500_40
 11350   001586  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11351   001588  E10D               	bnz	i2l978
 11352   00158A  0418               	decf	i2___flmul@temp^0,w,c
 11353   00158C  B0D8               	btfsc	status,0,c
 11354   00158E  D00A               	goto	i2l978
 11355   001590                     i2u500_40:
 11356   001590  0E00               	movlw	0
 11357   001592  6E14               	movwf	i2___flmul@prod^0,c
 11358   001594  0E00               	movlw	0
 11359   001596  6E15               	movwf	(i2___flmul@prod+1)^0,c
 11360   001598  0E00               	movlw	0
 11361   00159A  6E16               	movwf	(i2___flmul@prod+2)^0,c
 11362   00159C  0E00               	movlw	0
 11363   00159E  6E17               	movwf	(i2___flmul@prod+3)^0,c
 11364   0015A0  6A0D               	clrf	i2___flmul@sign^0,c
 11365   0015A2  D00F               	goto	i2l4477
 11366   0015A4                     i2l978:
 11367   0015A4  C018  F013         	movff	i2___flmul@temp,i2___flmul@bexp
 11368   0015A8  0EFF               	movlw	255
 11369   0015AA  1614               	andwf	i2___flmul@prod^0,f,c
 11370   0015AC  0EFF               	movlw	255
 11371   0015AE  1615               	andwf	(i2___flmul@prod+1)^0,f,c
 11372   0015B0  0E7F               	movlw	127
 11373   0015B2  1616               	andwf	(i2___flmul@prod+2)^0,f,c
 11374   0015B4  0E00               	movlw	0
 11375   0015B6  1617               	andwf	(i2___flmul@prod+3)^0,f,c
 11376   0015B8  B013               	btfsc	i2___flmul@bexp^0,0,c
 11377   0015BA  8E16               	bsf	(i2___flmul@prod+2)^0,7,c
 11378   0015BC  90D8               	bcf	status,0,c
 11379   0015BE  3013               	rrcf	i2___flmul@bexp^0,w,c
 11380   0015C0                     L37:
 11381   0015C0  6E17               	movwf	(i2___flmul@prod+3)^0,c
 11382   0015C2                     i2l4477:
 11383   0015C2  500D               	movf	i2___flmul@sign^0,w,c
 11384   0015C4  1217               	iorwf	(i2___flmul@prod+3)^0,f,c
 11385   0015C6  C014  F001         	movff	i2___flmul@prod,?i2___flmul
 11386   0015CA  C015  F002         	movff	i2___flmul@prod+1,?i2___flmul+1
 11387   0015CE  C016  F003         	movff	i2___flmul@prod+2,?i2___flmul+2
 11388   0015D2  C017  F004         	movff	i2___flmul@prod+3,?i2___flmul+3
 11389   0015D6  0012               	return		;funcret
 11390   0015D8                     __end_ofi2___flmul:
 11391                           	callstack 0
 11392                           
 11393 ;; *************** function i2_adcSampling *****************
 11394 ;; Defined at:
 11395 ;;		line 139 in file "main.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;		None
 11398 ;; Auto vars:     Size  Location     Type
 11399 ;;		None
 11400 ;; Return value:  Size  Location     Type
 11401 ;;                  1    wreg      void 
 11402 ;; Registers used:
 11403 ;;		wreg, status,2
 11404 ;; Tracked objects:
 11405 ;;		On entry : 0/0
 11406 ;;		On exit  : 0/0
 11407 ;;		Unchanged: 0/0
 11408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11409 ;;      Params:         0       0       0       0
 11410 ;;      Locals:         0       0       0       0
 11411 ;;      Temps:          2       0       0       0
 11412 ;;      Totals:         2       0       0       0
 11413 ;;Total ram usage:        2 bytes
 11414 ;; Hardware stack levels used: 1
 11415 ;; This function calls:
 11416 ;;		Nothing
 11417 ;; This function is called by:
 11418 ;;		_ISR
 11419 ;; This function uses a non-reentrant model
 11420 ;;
 11421                           
 11422                           	psect	text56
 11423   00317E                     __ptext56:
 11424                           	callstack 0
 11425   00317E                     i2_adcSampling:
 11426                           	callstack 21
 11427                           
 11428                           ;main.c: 141:     sampling = 1;
 11429                           
 11430                           ;incstack = 0
 11431   00317E  0E01               	movlw	1
 11432   003180  0100               	movlb	0	; () banked
 11433   003182  6FFE               	movwf	_sampling& (0+255),b
 11434                           
 11435                           ; BSR set to: 0
 11436                           ;main.c: 144:     ADCON0bits.GO = 1;
 11437   003184  82C2               	bsf	194,1,c	;volatile
 11438   003186                     i2l159:
 11439   003186  B2C2               	btfsc	194,1,c	;volatile
 11440   003188  D7FE               	goto	i2l159
 11441                           
 11442                           ;main.c: 148:     adcResult = ((uint16_t)ADRESH << 8) | ADRESL;
 11443   00318A  50C4               	movf	196,w,c	;volatile
 11444   00318C  6E01               	movwf	??i2_adcSampling^0,c
 11445   00318E  50C3               	movf	195,w,c	;volatile
 11446   003190  0100               	movlb	0	; () banked
 11447   003192  6FF6               	movwf	_adcResult& (0+255),b
 11448   003194  C001  F0F7         	movff	??i2_adcSampling,_adcResult+1
 11449                           
 11450                           ; BSR set to: 0
 11451   003198  0012               	return		;funcret
 11452   00319A                     __end_ofi2_adcSampling:
 11453                           	callstack 0
 11454                           
 11455 ;; *************** function i2_EUSART_TransmitString *****************
 11456 ;; Defined at:
 11457 ;;		line 663 in file "main.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;  a               2    1[COMRAM] PTR unsigned char 
 11460 ;;		 -> STR_7(3), STR_5(7), STR_4(9), STR_3(3), 
 11461 ;;		 -> uart_buffer(10), STR_1(9), 
 11462 ;; Auto vars:     Size  Location     Type
 11463 ;;  i               2    5[COMRAM] int 
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  1    wreg      void 
 11466 ;; Registers used:
 11467 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11473 ;;      Params:         2       0       0       0
 11474 ;;      Locals:         2       0       0       0
 11475 ;;      Temps:          2       0       0       0
 11476 ;;      Totals:         6       0       0       0
 11477 ;;Total ram usage:        6 bytes
 11478 ;; Hardware stack levels used: 1
 11479 ;; Hardware stack levels required when called: 1
 11480 ;; This function calls:
 11481 ;;		i2_EUSART_TransmitChar
 11482 ;; This function is called by:
 11483 ;;		_ISR
 11484 ;; This function uses a non-reentrant model
 11485 ;;
 11486                           
 11487                           	psect	text57
 11488   002BAE                     __ptext57:
 11489                           	callstack 0
 11490   002BAE                     i2_EUSART_TransmitString:
 11491                           	callstack 20
 11492                           
 11493                           ;main.c: 664:     int i;;main.c: 665:     for( i= 0; a[i] !='\0'; i++ ){
 11494                           
 11495                           ; BSR set to: 0
 11496                           ;incstack = 0
 11497   002BAE  0E00               	movlw	0
 11498   002BB0  6E07               	movwf	(i2EUSART_TransmitString@i+1)^0,c
 11499   002BB2  0E00               	movlw	0
 11500   002BB4  6E06               	movwf	i2EUSART_TransmitString@i^0,c
 11501   002BB6  D01A               	goto	i2l4715
 11502   002BB8                     i2l4711:
 11503                           
 11504                           ;main.c: 666:        EUSART_TransmitChar(a[i]);
 11505   002BB8  5006               	movf	i2EUSART_TransmitString@i^0,w,c
 11506   002BBA  2402               	addwf	i2EUSART_TransmitString@a^0,w,c
 11507   002BBC  6E04               	movwf	??i2_EUSART_TransmitString^0,c
 11508   002BBE  5007               	movf	(i2EUSART_TransmitString@i+1)^0,w,c
 11509   002BC0  2003               	addwfc	(i2EUSART_TransmitString@a+1)^0,w,c
 11510   002BC2  6E05               	movwf	(??i2_EUSART_TransmitString+1)^0,c
 11511   002BC4  C004  FFF6         	movff	??i2_EUSART_TransmitString,tblptrl
 11512   002BC8  C005  FFF7         	movff	??i2_EUSART_TransmitString+1,tblptrh
 11513   002BCC  6AF8               	clrf	tblptru,c
 11514   002BCE  0E02               	movlw	(high __ramtop+-1)
 11515   002BD0  64F7               	cpfsgt	tblptrh,c
 11516   002BD2  D003               	bra	i2u528_47
 11517   002BD4  0008               	tblrd		*
 11518   002BD6  50F5               	movf	tablat,w,c
 11519   002BD8  D005               	bra	i2u528_40
 11520   002BDA                     i2u528_47:
 11521   002BDA  CFF6 FFE1          	movff	tblptrl,fsr1l
 11522   002BDE  CFF7 FFE2          	movff	tblptrh,fsr1h
 11523   002BE2  50E7               	movf	indf1,w,c
 11524   002BE4                     i2u528_40:
 11525   002BE4  EC02  F019         	call	i2_EUSART_TransmitChar
 11526                           
 11527                           ;main.c: 667:     }
 11528   002BE8  4A06               	infsnz	i2EUSART_TransmitString@i^0,f,c
 11529   002BEA  2A07               	incf	(i2EUSART_TransmitString@i+1)^0,f,c
 11530   002BEC                     i2l4715:
 11531   002BEC  5006               	movf	i2EUSART_TransmitString@i^0,w,c
 11532   002BEE  2402               	addwf	i2EUSART_TransmitString@a^0,w,c
 11533   002BF0  6E04               	movwf	??i2_EUSART_TransmitString^0,c
 11534   002BF2  5007               	movf	(i2EUSART_TransmitString@i+1)^0,w,c
 11535   002BF4  2003               	addwfc	(i2EUSART_TransmitString@a+1)^0,w,c
 11536   002BF6  6E05               	movwf	(??i2_EUSART_TransmitString+1)^0,c
 11537   002BF8  C004  FFF6         	movff	??i2_EUSART_TransmitString,tblptrl
 11538   002BFC  C005  FFF7         	movff	??i2_EUSART_TransmitString+1,tblptrh
 11539   002C00  6AF8               	clrf	tblptru,c
 11540   002C02  0E02               	movlw	(high __ramtop+-1)
 11541   002C04  64F7               	cpfsgt	tblptrh,c
 11542   002C06  D003               	bra	i2u529_47
 11543   002C08  0008               	tblrd		*
 11544   002C0A  50F5               	movf	tablat,w,c
 11545   002C0C  D005               	bra	i2u529_40
 11546   002C0E                     i2u529_47:
 11547   002C0E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11548   002C12  CFF7 FFE2          	movff	tblptrh,fsr1h
 11549   002C16  50E7               	movf	indf1,w,c
 11550   002C18                     i2u529_40:
 11551   002C18  0900               	iorlw	0
 11552   002C1A  B4D8               	btfsc	status,2,c
 11553   002C1C  0012               	return	
 11554   002C1E  D7CC               	goto	i2l4711
 11555   002C20                     __end_ofi2_EUSART_TransmitString:
 11556                           	callstack 0
 11557                           
 11558 ;; *************** function i2_EUSART_TransmitChar *****************
 11559 ;; Defined at:
 11560 ;;		line 658 in file "main.c"
 11561 ;; Parameters:    Size  Location     Type
 11562 ;;  data            1    wreg     unsigned char 
 11563 ;; Auto vars:     Size  Location     Type
 11564 ;;  data            1    0[COMRAM] unsigned char 
 11565 ;; Return value:  Size  Location     Type
 11566 ;;                  1    wreg      void 
 11567 ;; Registers used:
 11568 ;;		wreg
 11569 ;; Tracked objects:
 11570 ;;		On entry : 0/0
 11571 ;;		On exit  : 0/0
 11572 ;;		Unchanged: 0/0
 11573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11574 ;;      Params:         0       0       0       0
 11575 ;;      Locals:         1       0       0       0
 11576 ;;      Temps:          0       0       0       0
 11577 ;;      Totals:         1       0       0       0
 11578 ;;Total ram usage:        1 bytes
 11579 ;; Hardware stack levels used: 1
 11580 ;; This function calls:
 11581 ;;		Nothing
 11582 ;; This function is called by:
 11583 ;;		i2_EUSART_TransmitString
 11584 ;; This function uses a non-reentrant model
 11585 ;;
 11586                           
 11587                           	psect	text58
 11588   003204                     __ptext58:
 11589                           	callstack 0
 11590   003204                     i2_EUSART_TransmitChar:
 11591                           	callstack 20
 11592                           
 11593                           ;incstack = 0
 11594                           ;i2EUSART_TransmitChar@data stored from wreg
 11595   003204  6E01               	movwf	i2EUSART_TransmitChar@data^0,c
 11596   003206                     
 11597                           ;main.c: 659:     while (!TXSTAbits.TRMT);
 11598   003206  A2AC               	btfss	172,1,c	;volatile
 11599   003208  D7FE               	goto	i2l4269
 11600                           
 11601                           ;main.c: 660:     TXREG = data;
 11602   00320A  C001  FFAD         	movff	i2EUSART_TransmitChar@data,4013	;volatile
 11603   00320E  0012               	return		;funcret
 11604   003210                     __end_ofi2_EUSART_TransmitChar:
 11605                           	callstack 0
 11606                           
 11607                           	psect	rparam
 11608   000001                     ___rparam_used  equ	1
 11609   000000                     ___param_bank   equ	0
 11610   000000                     __Lparam        equ	__Lrparam
 11611   000000                     __Hparam        equ	__Hrparam
 11612                           
 11613                           	psect	temp
 11614   00004E                     btemp:
 11615                           	callstack 0
 11616   00004E                     	ds	1
 11617   00004E                     int$flags       set	btemp
 11618   00004F                     wtemp8          set	btemp+1
 11619   00004F                     ttemp5          set	btemp+1
 11620   000052                     ttemp6          set	btemp+4
 11621   000056                     ttemp7          set	btemp+8
 11622                           
 11623                           	psect	config
 11624                           
 11625                           ;Config register CONFIG1L @ 0x300000
 11626                           ;	CPU System Clock Selection bits
 11627                           ;	CPUDIV = NOCLKDIV, No CPU System Clock divide
 11628                           ;	USB Clock Selection bit
 11629                           ;	USBDIV = OFF, USB clock comes directly from the OSC1/OSC2 oscillator block; no divide
 11630   300000                     	org	3145728
 11631   300000  00                 	db	0
 11632                           
 11633                           ;Config register CONFIG1H @ 0x300001
 11634                           ;	Oscillator Selection bits
 11635                           ;	FOSC = IRC, Internal RC oscillator
 11636                           ;	4 X PLL Enable bit
 11637                           ;	PLLEN = OFF, PLL is under software control
 11638                           ;	Primary Clock Enable bit
 11639                           ;	PCLKEN = ON, Primary clock enabled
 11640                           ;	Fail-Safe Clock Monitor Enable
 11641                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 11642                           ;	Internal/External Oscillator Switchover bit
 11643                           ;	IESO = ON, Oscillator Switchover mode enabled
 11644   300001                     	org	3145729
 11645   300001  E8                 	db	232
 11646                           
 11647                           ;Config register CONFIG2L @ 0x300002
 11648                           ;	Power-up Timer Enable bit
 11649                           ;	PWRTEN = OFF, PWRT disabled
 11650                           ;	Brown-out Reset Enable bits
 11651                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11652                           ;	Brown-out Reset Voltage bits
 11653                           ;	BORV = 19, VBOR set to 1.9 V nominal
 11654   300002                     	org	3145730
 11655   300002  1F                 	db	31
 11656                           
 11657                           ;Config register CONFIG2H @ 0x300003
 11658                           ;	Watchdog Timer Enable bit
 11659                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 11660                           ;	Watchdog Timer Postscale Select bits
 11661                           ;	WDTPS = 32768, 1:32768
 11662   300003                     	org	3145731
 11663   300003  1E                 	db	30
 11664                           
 11665                           ; Padding undefined space
 11666   300004                     	org	3145732
 11667   300004  FF                 	db	255
 11668                           
 11669                           ;Config register CONFIG3H @ 0x300005
 11670                           ;	HFINTOSC Fast Start-up bit
 11671                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 11672                           ;	MCLR Pin Enable bit
 11673                           ;	MCLRE = ON, MCLR pin enabled; RA3 input pin disabled
 11674   300005                     	org	3145733
 11675   300005  88                 	db	136
 11676                           
 11677                           ;Config register CONFIG4L @ 0x300006
 11678                           ;	Stack Full/Underflow Reset Enable bit
 11679                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11680                           ;	Single-Supply ICSP Enable bit
 11681                           ;	LVP = OFF, Single-Supply ICSP disabled
 11682                           ;	Boot Block Size Select bit
 11683                           ;	BBSIZ = OFF, 1kW boot block size
 11684                           ;	Extended Instruction Set Enable bit
 11685                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11686                           ;	Background Debugger Enable bit
 11687                           ;	DEBUG = 0x1, unprogrammed default
 11688   300006                     	org	3145734
 11689   300006  81                 	db	129
 11690                           
 11691                           ; Padding undefined space
 11692   300007                     	org	3145735
 11693   300007  FF                 	db	255
 11694                           
 11695                           ;Config register CONFIG5L @ 0x300008
 11696                           ;	Code Protection bit
 11697                           ;	CP0 = OFF, Block 0 not code-protected
 11698                           ;	Code Protection bit
 11699                           ;	CP1 = OFF, Block 1 not code-protected
 11700   300008                     	org	3145736
 11701   300008  03                 	db	3
 11702                           
 11703                           ;Config register CONFIG5H @ 0x300009
 11704                           ;	Boot Block Code Protection bit
 11705                           ;	CPB = OFF, Boot block not code-protected
 11706                           ;	Data EEPROM Code Protection bit
 11707                           ;	CPD = OFF, Data EEPROM not code-protected
 11708   300009                     	org	3145737
 11709   300009  C0                 	db	192
 11710                           
 11711                           ;Config register CONFIG6L @ 0x30000A
 11712                           ;	Table Write Protection bit
 11713                           ;	WRT0 = OFF, Block 0 not write-protected
 11714                           ;	Table Write Protection bit
 11715                           ;	WRT1 = OFF, Block 1 not write-protected
 11716   30000A                     	org	3145738
 11717   30000A  03                 	db	3
 11718                           
 11719                           ;Config register CONFIG6H @ 0x30000B
 11720                           ;	Configuration Register Write Protection bit
 11721                           ;	WRTC = OFF, Configuration registers not write-protected
 11722                           ;	Boot Block Write Protection bit
 11723                           ;	WRTB = OFF, Boot block not write-protected
 11724                           ;	Data EEPROM Write Protection bit
 11725                           ;	WRTD = OFF, Data EEPROM not write-protected
 11726   30000B                     	org	3145739
 11727   30000B  E0                 	db	224
 11728                           
 11729                           ;Config register CONFIG7L @ 0x30000C
 11730                           ;	Table Read Protection bit
 11731                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
 11732                           ;	Table Read Protection bit
 11733                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
 11734   30000C                     	org	3145740
 11735   30000C  03                 	db	3
 11736                           
 11737                           ;Config register CONFIG7H @ 0x30000D
 11738                           ;	Boot Block Table Read Protection bit
 11739                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
 11740   30000D                     	org	3145741
 11741   30000D  40                 	db	64
 11742                           tosu	equ	0xFFF
 11743                           tosh	equ	0xFFE
 11744                           tosl	equ	0xFFD
 11745                           stkptr	equ	0xFFC
 11746                           pclatu	equ	0xFFB
 11747                           pclath	equ	0xFFA
 11748                           pcl	equ	0xFF9
 11749                           tblptru	equ	0xFF8
 11750                           tblptrh	equ	0xFF7
 11751                           tblptrl	equ	0xFF6
 11752                           tablat	equ	0xFF5
 11753                           prodh	equ	0xFF4
 11754                           prodl	equ	0xFF3
 11755                           indf0	equ	0xFEF
 11756                           postinc0	equ	0xFEE
 11757                           postdec0	equ	0xFED
 11758                           preinc0	equ	0xFEC
 11759                           plusw0	equ	0xFEB
 11760                           fsr0h	equ	0xFEA
 11761                           fsr0l	equ	0xFE9
 11762                           wreg	equ	0xFE8
 11763                           indf1	equ	0xFE7
 11764                           postinc1	equ	0xFE6
 11765                           postdec1	equ	0xFE5
 11766                           preinc1	equ	0xFE4
 11767                           plusw1	equ	0xFE3
 11768                           fsr1h	equ	0xFE2
 11769                           fsr1l	equ	0xFE1
 11770                           bsr	equ	0xFE0
 11771                           indf2	equ	0xFDF
 11772                           postinc2	equ	0xFDE
 11773                           postdec2	equ	0xFDD
 11774                           preinc2	equ	0xFDC
 11775                           plusw2	equ	0xFDB
 11776                           fsr2h	equ	0xFDA
 11777                           fsr2l	equ	0xFD9
 11778                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    0
    Data        4
    BSS         139
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      77
    BANK0           160    130     159
    BANK1           256     14      94
    BANK2           256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    EUSART_TransmitString@a	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[9]), STR_3(CODE[3]), STR_4(CODE[9]), STR_5(CODE[7]), 
		 -> STR_7(CODE[3]), uart_buffer(COMRAM[10]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S1626$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    S1626$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_11(CODE[4]), STR_8(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    i2_show7Segment->i2_displayDigits
    i2_setDisplayDigits->i2___fltol
    i2___fltol->i2___flmul
    i2_EUSART_TransmitString->i2_EUSART_TransmitChar

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _show7Segment->_displayDigits
    _setDisplayDigits->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _EUSART_TransmitString->_EUSART_TransmitChar
    _EEPROMWrite->_getHighByte
    _EEPROMWrite->_getLowByte
    _EEPROMRead->_getHighByte
    _EEPROMRead->_getLowByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   36134
                                            128 BANK0      2     2      0
                                             12 BANK1      2     2      0
                         _EEPROMRead
                        _EEPROMWrite
              _EUSART_TransmitString
                            ___flmul
                           ___xxtofl
                        _adcSampling
                        _getHighByte
                         _getLowByte
                 _setButtonInterrupt
                   _setDisplayDigits
                           _setupADC
                        _setupEUSART
                           _setupI2C
                        _setupTimer1
                       _show7Segment
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   25760
                                            122 BANK0      6     0      6
                                              0 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   25266
                                            116 BANK0      6     1      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     8      5   24912
                                            104 BANK0     12     7      5
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   8     5      3     372
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   23050
                                             51 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     164
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     3      6    1458
                                             16 BANK0      9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     670
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     464
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     308
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     144
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     690
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     282
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4302
                                             39 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4188
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      96
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     420
                                             39 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     204
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2466
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (1) _show7Segment                                         0     0      0     600
                      _displayDigits
                 _get7SegmentPattern
 ---------------------------------------------------------------------------------
 (2) _get7SegmentPattern                                   2     2      0     213
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _displayDigits                                        7     5      2     387
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _setupTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupEUSART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setDisplayDigits                                     0     0      0    4512
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     360
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     390
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     504
                                             39 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3258
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _setButtonInterrupt                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcSampling                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     744
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _EUSART_TransmitString                                6     4      2     285
                                              1 BANK0      6     4      2
                _EUSART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _EUSART_TransmitChar                                  1     1      0      69
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROMWrite                                          4     1      3     351
                                              2 BANK0      4     1      3
                           _I2CStart
                            _I2CStop
                           _I2CWrite
                        _getHighByte
                         _getLowByte
 ---------------------------------------------------------------------------------
 (1) _EEPROMRead                                           3     1      2     408
                                              2 BANK0      3     1      2
                            _I2CRead
                         _I2CRestart
                           _I2CStart
                            _I2CStop
                           _I2CWrite
                        _getHighByte
                         _getLowByte
 ---------------------------------------------------------------------------------
 (1) _getLowByte                                           2     0      2      60
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getHighByte                                          2     0      2      60
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2CWrite                                             1     1      0      69
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2CStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CRestart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CRead                                              1     1      0      69
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  8     8      0    2411
                                             35 COMRAM     8     8      0
            i2_EUSART_TransmitString
                      i2_adcSampling
                 i2_setDisplayDigits
                     i2_show7Segment
 ---------------------------------------------------------------------------------
 (10) i2_show7Segment                                      0     0      0     255
                    i2_displayDigits
               i2_get7SegmentPattern
 ---------------------------------------------------------------------------------
 (11) i2_get7SegmentPattern                                2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) i2_displayDigits                                     7     5      2     187
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) i2_setDisplayDigits                                  0     0      0    2036
                          i2___flmul
                          i2___fltol
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     165
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     170
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) i2___fltol                                          10     6      4     231
                                             25 COMRAM    10     6      4
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___flmul                                          25    17      8    1470
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (10) i2_adcSampling                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) i2_EUSART_TransmitString                             6     4      2     120
                                              1 COMRAM     6     4      2
              i2_EUSART_TransmitChar
 ---------------------------------------------------------------------------------
 (11) i2_EUSART_TransmitChar                               1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMRead
     _I2CRead
     _I2CRestart
     _I2CStart
     _I2CStop
     _I2CWrite
     _getHighByte
     _getLowByte
   _EEPROMWrite
     _I2CStart
     _I2CStop
     _I2CWrite
     _getHighByte
     _getLowByte
   _EUSART_TransmitString
     _EUSART_TransmitChar
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _adcSampling
   _getHighByte
   _getLowByte
   _setButtonInterrupt
   _setDisplayDigits
     ___flmul
     ___fltol
       ___flmul (ARG)
     ___lwdiv
     ___lwmod
   _setupADC
   _setupEUSART
   _setupI2C
   _setupTimer1
   _show7Segment
     _displayDigits
     _get7SegmentPattern
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width

 _ISR (ROOT)
   i2_EUSART_TransmitString
     i2_EUSART_TransmitChar
   i2_adcSampling
   i2_setDisplayDigits
     i2___flmul
     i2___fltol
       i2___flmul (ARG)
     i2___lwdiv
     i2___lwmod
   i2_show7Segment
     i2_displayDigits
     i2_get7SegmentPattern

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             767      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256     14      94     36.7%
BITBANK0           160      0       0      0.0%
BANK0              160    130     159     99.4%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     43      77     81.9%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlll        43      0       0      0.0%
BITBIGSFRlh         35      0       0      0.0%
BITBIGSFRllh        10      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     324      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Dec 29 13:23:03 2024

                   ___fldiv@aexp 0078                     ___fldiv@bexp 0077                     ___fldiv@sign 0070  
          i2_EUSART_TransmitChar 3204                      _SSPSTATbits 0FC7                 _address_low_byte 003D  
             i2___lwdiv@dividend 0001                              l240 2822                              l219 0F1C  
                            l271 3212                              l159 316A                              l336 1D54  
                            l256 27B8                              l265 321A                              l283 31E0  
                            l292 3124                              l612 2436                              l277 3222  
                            l295 313A                              l901 1854                              l902 1850  
                            l931 1A58                              l908 18BC                              l838 2CC6  
                            l942 1AC4                              l943 1AC0                              l848 2FB2  
                            l961 0FBC                              l970 11D2                              l971 11CE  
                            l892 17F0                              l876 171E                              l877 16FC  
                            l978 1256                              _ISR 0008                              _pad 2C20  
                __end_of_I2CRead 3142                  __end_of_I2CStop 3218                              wreg 0FE8  
                    i2___flmul@a 0005                      i2___flmul@b 0001                   ?_displayDigits 0060  
                   ___flmul@aexp 007B                     ___flmul@bexp 007C                     ___flmul@sign 007A  
                   ___flmul@temp 0085                     ___flmul@prod 0081                             ?_ISR 0001  
                   ___fltol@exp1 0090                             l1002 229E                             l1100 09CE  
                           l1009 231C                             l1052 2C2E                             l1126 217E  
                           l1072 0494                             l1163 204E                             l7011 240A  
                           l7021 246E                             l7101 24F6                             ?_pad 0070  
                           l7015 2420                             l7007 23D6                             l7113 30C4  
                           l7107 2536                             l7203 0404                             l7029 310C  
                           l7213 043A                             l7221 0450                             l7055 2668  
                           l7039 261E                             l7143 20AE                             l7119 2E2E  
                           l7073 26A8                             l7065 2680                             l7129 1FAE  
                           l7153 2EBC                             l7161 2EDC                             l7081 2C38  
                           l7067 268C                             l7059 2678                             l6603 170A  
                           l6531 160C                             l7147 20DC                             l7139 2070  
                           l6507 2A32                             l7323 09C6                             l7171 0360  
                           l7411 2158                             l6605 170E                             l6533 161C  
                           l7085 2C52                             l7309 090E                             l7253 062C  
                           l7229 04A8                             l7181 0386                             l7421 2182  
                           l6551 1650                             l6527 1606                             l6711 308C  
                           l7335 09F8                             l7343 0A18                             l7319 093A  
                           l7255 0634                             l7239 057E                             l7247 05EC  
                           l7431 21D4                             l7423 2198                             l7415 2174  
                           l7601 2B7A                             l7505 254E                             l7097 24EC  
                           l7265 0664                             l7185 0392                             l7441 221A  
                           l7433 21E2                             l7425 21AC                             l7417 2178  
                           l6811 1A8C                             l6627 1764                             l6619 1742  
                           l6563 1676                             l6555 1656                             l6715 30A4  
                           l7275 069E                             l7283 0796                             l7195 03C8  
                           l7435 21EE                             l7443 222C                             l7621 1C3E  
                           l6805 1A6E                             l6733 1916                             l6629 1768  
                           l6637 177A                             l6557 1666                             l7269 0674  
                           l7197 03DC                             l7607 1B80                             l7471 278A  
                           l7463 277A                             l6831 1B2C                             l6735 1926  
                           l6655 1814                             l6671 1834                             l6647 17E0  
                           l7359 0AD6                             l7391 29CC                             l7447 2238  
                           l7537 31EE                             l7481 279E                             l7473 278E  
                           l7465 277E                             l6761 198C                             l6753 1958  
                           l6729 1910                             l6665 182A                             l6593 16B2  
                           l7377 0B7A                             l7297 0844                             l7547 2C94  
                           l7635 1CE8                             l7491 27AE                             l7483 27A2  
                           l7475 2792                             l7467 2782                             l6843 1B60  
                           l6827 1B08                             l6755 1968                             l7395 29F2  
                           l7805 238E                             l6941 119A                             l7549 2C9C  
                           l7653 1D3E                             l7645 1D12                             l7493 27B2  
                           l7485 27A6                             l7477 2796                             l7469 2786  
                           l6845 1B62                             l6837 1B54                             l6749 1952  
                           l7581 3048                             l6935 117C                             l7559 2CBC  
                           l7575 2FA8                             l7567 2F88                             l7639 1CFE  
                           l7487 27AA                             l7479 279A                             l6775 19BA  
                           l6767 19A2                             l6687 189A                             l7583 3062  
                           l6961 1234                             l6865 0F68                             l7569 2F90  
                           l7649 1D28                             l7497 27BC                             l6793 1A30  
                           l6785 1A08                             l6697 18C4                             l6883 0FA8  
                           l6867 0F6C                             l7667 2F58                             l6699 18C6  
                           l7931 0E02                             l7915 0DB2                             l7597 2B42  
                           l7781 2304                             l6957 1216                             l6893 0FDA  
                           l6885 0FAC                             l6869 0F7C                             l7925 0DDC  
                           l7775 22CC                             l6975 1274                             l6799 1A56  
                           l6991 2AE0                             l7777 22D2                             l7769 22AE  
                           l7953 0ED8                             l7787 2342                             l7779 22DE  
                           l6995 2B14                             l7955 0EE2                             l7859 0C12  
                           l7789 234E                             l6999 2B32                             l7959 0EEA  
                           l7895 0CFE                             l7889 0CE4                             STR_1 0301  
                           STR_2 0311                             STR_3 030E                             STR_4 0301  
                           STR_5 030A                             STR_6 0311                             STR_7 030E  
                           STR_8 0316                             u8020 1726                             u9020 202E  
                           u9005 1FC6                             u8230 18A6                             u8150 1838  
                           u9006 1FCC                             u9007 1FDA                             u9040 208E  
                           u9200 0616                             u9025 2024                             u8170 184A  
                           u9045 2084                             u9310 09A8                             u8440 1ABA  
                           u9160 0510                             u9410 2A0E                             u9180 056C  
                           u8630 11C8                             u9520 31E4                             u8800 263C  
                           u8480 1B16                             u8720 2B2E                             u9360 0AFA  
                           u9280 0834                             u8490 1B3A                             u7850 2A2A  
                           u9370 0B58                             u8580 0FC8                             u9620 2F94  
                           u9380 0B5A                             u8805 2632                             u8670 1224  
                           u8590 113E                             u9454 255E                             u7870 2A72  
                           u9455 255A                             u8680 1242                             u8840 2692  
                           u9480 25F0                             u9464 2586                             u9465 2582  
                           u9474 25AC                             u7970 16D2                             u8930 252E  
                           u9555 3136                             u8595 1134                             u9475 25A8  
                           u9556 3138                             u9660 2B70                             u7980 16E2  
                           u8940 2530                             u8925 2510                             u9670 2BA6  
                           u8790 260C                             u9590 2CA0                             u7990 16E4  
                           u8880 24B2                             u8970 1F7C                             u9667 2B66  
                           u9860 2358                             u8980 1F9C                             u9677 2B9C  
                           u8885 24A6                             u9790 2F52                             u8975 1F72  
                           _TMR1 0FCE                   i2_show7Segment 2FBC          i2_EUSART_TransmitString 2BAE  
                           _dbuf 0100                             _labs 2E16                             _main 0BA4  
                           _prec 00F0                             pad@i 0077                             pad@p 0074  
                           fsr1h 0FE2               i2___lwdiv@quotient 0005                             fsr2h 0FDA  
                           indf1 0FE7                             indf2 0FDF                             fsr1l 0FE1  
                           fsr2l 0FD9                             btemp 004E                 __end_of_I2CStart 3220  
               __end_of_I2CWrite 31EA                    ___fpclassifyf 2472                             prodh 0FF4  
                           prodl 0FF3                             start 019E                     i2___fltol@f1 001A  
                ___fldiv@new_exp 0071                     ___param_bank 0000                            ??_ISR 0024  
            displayDigits@digit0 0064              displayDigits@digit1 0060              displayDigits@digit2 0061  
                          ??_pad 0076                    ___fltol@sign1 008F                            ?_labs 0060  
                __end_of___fladd 18E2                            ?_main 0001                  __end_of___fldiv 1B6A  
                __end_of___flneg 311E                            STR_11 031A                  __end_of___flmul 128A  
                __end_of___flsub 2EAA                  __end_of___fltol 26BA                            _ANSEL 0F7E  
                          u10017 0BBC                            u10107 2D68                            u10027 0BDC  
                          u10037 0CF0                            u10047 0D9E                            u10057 0F08  
                          u10067 0F2A                            u10077 25CA                            u10087 25D4  
                EEPROMWrite@data 0064                            u10097 25F4                            _T1CON 0FCD  
                __end_of___lwdiv 2CD0                            i2l200 017A                  __end_of___lwmod 2FBC  
                          i2l240 2982                            i2l159 3186                            i2l336 1F30  
                          i2l256 291A                            i2l185 00D8                            i2l177 0112  
                          i2l838 2DBC                            i2l848 3038                            i2l961 130A  
                          i2l970 1520                            i2l971 151C                            i2l978 15A4  
                   vfpfcnvrt@fmt 00CA                            _SPBRG 0FAF                            _TRISA 0F92  
                          _TXREG 0FAD         i2EUSART_TransmitString@a 0002         i2EUSART_TransmitString@i 0006  
                          _flags 00F8              read_prec_or_width@c 0065              read_prec_or_width@n 0066  
                          _fputc 2A18                            _fputs 3080                            labs@a 0060  
                          pad@fp 0070                            _width 00EE                            _putch 3238  
         __end_ofi2_show7Segment 3000                            tablat 0FF5                            ttemp5 004F  
                          ttemp6 0052                            ttemp7 0056                            status 0FD8  
                          wtemp8 004F                  __end_of_sprintf 2F34                   ?___fpclassifyf 0060  
                  i2___flmul@grs 000E                    i2_adcSampling 317E                  __initialization 2CD0  
         ?i2_EUSART_TransmitChar 0001                     __end_of_labs 2E62                     __end_of_main 0F3A  
              ??i2_displayDigits 0003                        ??_I2CRead 0060                        ??_I2CStop 0060  
                         ??_labs 0064                           ??_main 00E0                    __activetblptr 0002  
                ??_displayDigits 0062        i2get7SegmentPattern@digit 0001       __end_of_read_prec_or_width 2A18  
                         _ADCON0 0FC2                           _ADCON1 0FC1                           _ADCON2 0FC0  
                         ?_fputc 0060                           ?_fputs 0069                           _ADRESH 0FC4  
                         _ADRESL 0FC3        ??i2_EUSART_TransmitString 0004               _get7SegmentPattern 2774  
                         ?_putch 0001                     ??_I2CRestart 0060                  ?i2_show7Segment 0001  
                         i2l4211 28E0                           i2l4221 28F4                           i2l4213 28E4  
                         i2l4231 2908                           i2l4223 28F8                           i2l4215 28E8  
                         i2l4313 2762                           i2l4305 273A                           i2l4233 290C  
                         i2l4225 28FC                           i2l4217 28EC                           i2l4209 28DC  
                         i2l4307 2746                           i2l4323 2D8A                           i2l4251 2830  
                         i2l4227 2900                           i2l4219 28F0                           i2l4243 291E  
                         i2l4325 2D92                           i2l4237 2910                           i2l4229 2904  
                         i2l4335 2DB2                           i2l4351 302E                           i2l4343 300E  
                         i2l4239 2914                           i2l4345 3016                           i2l4443 14E8  
                         i2l4371 12CA                           i2l4269 3206                           i2l4437 14CA  
                         i2l4711 2BB8                           i2l4463 1582                           i2l4367 12B6  
                         i2l4295 2722                           i2l4279 26D8                           i2l4385 12F6  
                         i2l4369 12BA                           i2l4721 1D6E                           i2l4715 2BEC  
                         i2l4459 1564                           i2l4395 1328                           i2l4387 12FA  
                         i2l4299 2732                           i2l4477 15C2                           i2l4805 0058  
                         i2l4735 1E22                           i2l4823 0090                           i2l4753 1EDA  
                         i2l4833 00D4                           i2l4809 0060                           i2l4763 1F04  
                         i2l4827 00A8                           i2l4749 1EC4                           i2l4781 2FE0  
                         i2l4845 0134                           i2l4853 0142                           i2l4829 00B6  
                         i2l4837 00DC                           i2l4767 1F1A                           i2l4759 1EEE  
                         i2l4863 0176                           i2l4847 0138                           i2l4855 0158  
                         i2l4849 013C                   ?i2_adcSampling 0001                           _SSPADD 0FC8  
                         _SSPBUF 0FC9                 __end_of___xxtofl 23A0              ?_get7SegmentPattern 0001  
             _setButtonInterrupt 31C6                     vfprintf@cfmt 00D9                           ___flge 23A0  
                         ___fleq 2AAA                        ??___fladd 0068                        ??___fldiv 0068  
                      ??___flneg 0064                        ??___flmul 0076                        ??___flsub 008F  
                      ??___fltol 008B                           _efgtoa 0320                        ??___lwdiv 0064  
                      ??___lwmod 0064              _EUSART_TransmitChar 31EA                           _floorf 1F34  
               _setDisplayDigits 1B6A              ?_setButtonInterrupt 0001                           _memcpy 2EAA  
           read_prec_or_width@ap 0061                           clear_0 2CF6                           clear_1 2D02  
                         clear_2 2D0E                           isa$std 0001                           pad@buf 0072  
             __end_of_I2CRestart 3228                     ?_setupEUSART 0001                           _strcpy 30BC  
           ??_get7SegmentPattern 0060                     ??_EEPROMRead 0064                           fputc@c 0060  
                         fputs@c 006D                           fputs@i 006E                     __pdataCOMRAM 004A  
                         fputs@s 0069                __end_ofi2___flmul 15D8                __end_ofi2___fltol 2774  
               __end_of_setupI2C 31C6                 __end_of_setupADC 3204                  ___fpclassifyf@e 0068  
                      ?_I2CStart 0001                  ___fpclassifyf@u 006A                  ___fpclassifyf@x 0060  
                      ?_I2CWrite 0001                __end_ofi2___lwdiv 2DC6                     __mediumconst 0000  
              __end_ofi2___lwmod 3042                           tblptrh 0FF7                           tblptrl 0FF6  
                         tblptru 0FF8      i2get7SegmentPattern@pattern 0002                           putch@c 0001  
               __end_of_vfprintf 3080                     ?_setupTimer1 0001                        ??_sprintf 00E0  
        ??_EUSART_TransmitString 0063                   i2___flmul@aexp 0012                   i2___flmul@bexp 0013  
           ?_EUSART_TransmitChar 0001                   i2___flmul@sign 000D                   i2___flmul@temp 0018  
                 i2___flmul@prod 0014             ??_setButtonInterrupt 0060                 i2displayDigits@i 0006  
                     ___flge@ff1 0087                       ___flge@ff2 008B                  ??___fpclassifyf 0064  
                   ___xxtofl@arg 006A                     ___xxtofl@exp 0069                     ___xxtofl@val 0060  
                     ___fleq@ff1 0060                       ___fleq@ff2 0064                       __accesstop 0060  
        __end_of__initialization 2D14                   i2___fltol@exp1 0023                    _adc_step_size 004A  
                     ___flneg@f1 0060                    ___rparam_used 0001                       ___fltol@f1 0087  
             __end_of_EEPROMRead 2E16               i2___lwmod@dividend 0001                   __pcstackCOMRAM 0001  
     __end_ofi2_setDisplayDigits 1F34                    __end_of_fputc 2AAA                    __end_of_fputs 30BC  
                  __end_of_putch 323A                    _turnOnDisplay 00FA                       ??_I2CStart 0060  
                     ??_I2CWrite 0060                          ??_fputc 0064            ??_EUSART_TransmitChar 0060  
                        ??_fputs 006D          EUSART_TransmitChar@data 0060                          ??_putch 0060  
                ??i2_adcSampling 0001                       __pbssBANK0 00E2                       __pbssBANK1 0100  
                  ??_adcSampling 0060                       I2CRead@ack 0060                          ?___flge 0087  
                        ?___fleq 0060                          ?_efgtoa 0093                          ?_floorf 0079  
                        _I2CRead 311E                          ?_memcpy 0060                       _getLowByte 3228  
                        _I2CStop 3210                          ?_strcpy 0060                        ?___xxtofl 0060  
                        _SSPCON1 0FC6                          _SSPCON2 0FC5                    ?_show7Segment 0001  
                  _address_index 00F2                          _SSPSTAT 0FC7                  i2_displayDigits 2826  
        ??i2_EUSART_TransmitChar 0001                          __Hparam 0000                          __Lparam 0000  
            __end_of_adcSampling 317E                        ?_setupI2C 0001                        ?_setupADC 0001  
   __end_ofi2_get7SegmentPattern 2986                          ___fladd 15D8                          ___fldiv 18E2  
                        ___flneg 30EE                          ___flmul 0F3A                          ___flsub 2E62  
                        ___fltol 25FE                   displayDigits@i 0065                          ___lwdiv 2C7C  
                        ___lwmod 2F78                        ?_vfprintf 00D4                     __psmallconst 0300  
                        __pcinit 2CD0                        _ANSELbits 0F7E                          __ramtop 0300  
                        __ptext0 0BA4                          __ptext1 2EF0                          __ptext2 3042  
                        __ptext3 20EE                          __ptext4 2986                          __ptext5 0320  
                        __ptext6 30BC                          __ptext7 2C20                          __ptext8 3080  
                        __ptext9 2A18            read_prec_or_width@fmt 0060                       ??___xxtofl 0064  
               ??i2_show7Segment 0008                     I2CWrite@data 0060                          efgtoa@c 0099  
                        efgtoa@d 00A7                          efgtoa@e 00AB                          efgtoa@f 0095  
                        efgtoa@g 00BE                          efgtoa@h 00B5                          efgtoa@i 00B3  
                        efgtoa@l 00B9                          efgtoa@m 00A9                          efgtoa@n 00C2  
                        efgtoa@p 009E                          efgtoa@t 00A0                          efgtoa@u 00C4  
                        efgtoa@w 00AD                   ??_show7Segment 0067                    _received_data 003E  
                        _sprintf 2EF0             end_of_initialization 2D14                          floorf@e 0087  
                        floorf@m 0083                          floorf@u 0089                          floorf@x 0079  
       __end_of_setDisplayDigits 1D58                          memcpy@d 0067                          memcpy@n 0064  
                        memcpy@s 0069                          fputc@fp 0062                    __Lmediumconst 0000  
                        fputs@fp 006B                    ??_EEPROMWrite 0065                        i2u1011_47 28A6  
                      i2u1012_47 28B0                        i2u1013_47 28CE               _read_prec_or_width 2986  
              __end_of_vfpfcnvrt 225C                       ??_setupI2C 0060                       ??_setupADC 0060  
                     efgtoa@mode 00A5                       efgtoa@sign 00BD                        _RCSTAbits 0FAB  
                        postdec1 0FE5                          postdec2 0FDD              ?_read_prec_or_width 0060  
                  ??_getHighByte 0062                          postinc0 0FEE                          postinc1 0FE6  
                        postinc2 0FDE                 vfpfcnvrt@convarg 00CE                       ??_vfprintf 00D9  
                    ?_getLowByte 0060                          strcpy@d 0064                        _PORTCbits 0F82  
                    ___fladd@grs 006F            __end_of_displayDigits 25FE                    ___xxtofl@sign 0068  
                      _TRISBbits 0F93                        _TRISCbits 0F94          __end_ofi2_displayDigits 28D8  
           ??_read_prec_or_width 0063                      ___fldiv@grs 0073                      ___fldiv@rem 006C  
                i2___fltol@sign1 0022                        i2___flmul 128A                        i2___fltol 26BA  
              i2___lwdiv@divisor 0003                        i2___lwdiv 2D74                        i2___lwmod 3000  
              i2___lwdiv@counter 0007    __end_of_EUSART_TransmitString 2BAE                      ___flmul@grs 007D  
                    _adcSampling 3162                        _TXSTAbits 0FAC              __end_of_EEPROMWrite 2D74  
                 __end_of___flge 2472                   __end_of___fleq 2B36                      vfpfcnvrt@ap 00CB  
                    vfpfcnvrt@cp 00D3                      vfpfcnvrt@fp 00C8                      _BAUDCONbits 0FB8  
                  __pidataCOMRAM 3234                   __end_of_efgtoa 0BA4                   __end_of_floorf 20EE  
                 __end_of_memcpy 2EF0                       floorf@F521 00E2              __end_of_getHighByte 3234  
                 __end_of_strcpy 30EE               i2_setDisplayDigits 1D58              start_initialization 2CD0  
       ?i2_EUSART_TransmitString 0002                      _adc_voltage 00EA                      __end_of_ISR 019E  
                _eeprom_data_ctl 00FB                  _eeprom_data_lsb 00FD                  _eeprom_data_msb 00FC  
                    __end_of_pad 2C7C                       ?i2___flmul 0001                       ?i2___fltol 001A  
           i2_get7SegmentPattern 28D8                       ?i2___lwdiv 0001                       ?i2___lwmod 0001  
            ?i2_setDisplayDigits 0001                 getLowByte@number 0060            __end_of___fpclassifyf 2540  
                    vfprintf@fmt 00D6                         ??___flge 008F                         ??___fleq 0068  
           __end_of_show7Segment 2F78                         ??_efgtoa 009A             ??i2_setDisplayDigits 0024  
                       ??_floorf 007D                         ?_I2CRead 0001                         ??_memcpy 0066  
                    _c_remainder 0030                         ?_I2CStop 0001                         ??_strcpy 0063  
                      ___fladd@a 0064                        ___fladd@b 0060      __end_of_EUSART_TransmitChar 31F8  
                      ___fldiv@a 0064                        ___fldiv@b 0060                        ___flmul@a 0072  
                      ___flmul@b 006E                      __pbssCOMRAM 002C                        ___flsub@a 008B  
                      ___flsub@b 0087                        _adcResult 00F6                    __pcstackBANK0 0060  
                  __pcstackBANK1 0150                i2___lwmod@divisor 0003                i2___lwmod@counter 0005  
               ?i2_displayDigits 0001            ?i2_get7SegmentPattern 0001                   _button_counter 002C  
          __end_ofi2_adcSampling 319A                      _EEPROMWrite 2D22                      _efgtoa$1751 00A2  
                      _main$2067 015C                        _main$2068 015D                 ___lwdiv@dividend 0060  
  __end_ofi2_EUSART_TransmitChar 3210                        __pintcode 0008                         ?___fladd 0060  
                       ?___fldiv 0060                         ?___flneg 0060                getHighByte@number 0060  
                       ?___flmul 006E                         ?___flsub 0087                         ?___fltol 0087  
      i2EUSART_TransmitChar@data 0001                      _getHighByte 322E                         ?___lwdiv 0060  
                       ?___lwmod 0060  __end_ofi2_EUSART_TransmitString 2C20                      __smallconst 0300  
                       _I2CStart 3218                         _I2CWrite 31D8                        _fsm_state 00F9  
               ___lwdiv@quotient 0065                         ?_sprintf 00DA                      ??i2___flmul 0009  
                    ??i2___fltol 001E               EEPROMWrite@address 0062                      ??i2___lwdiv 0005  
                    ??i2___lwmod 0005           EUSART_TransmitString@a 0061           EUSART_TransmitString@i 0065  
              ?_setDisplayDigits 0001                         _LATAbits 0F89                         _LATCbits 0F8B  
                    _eeprom_data 00F4               ??_setDisplayDigits 0091                         _PIE1bits 0F9D  
                       i2u500_40 1590                         _PIR1bits 0F9E                         i2u541_40 2FDA  
                       i2u470_40 26C6                         i2u471_40 26F6                         i2u471_45 26EC  
                       i2u528_40 2BE4                         i2u544_40 0048                         i2u528_47 2BDA  
                       i2u529_40 2C18                         i2u481_40 301A                         i2u465_44 2840  
                       i2u465_45 283C                         i2u529_47 2C0E                         i2u490_40 1316  
                       i2u466_44 2866                         i2u466_45 2862                         i2u491_40 148C  
                       i2u475_40 274C                         i2u467_44 288A                         i2u491_45 1482  
                       i2u467_45 2886                         i2u468_40 28CA                         i2u548_40 0068  
                       i2u478_40 2D96                         i2u495_40 1516                         i2u499_40 1572  
                   ??_getLowByte 0062                        _vfpfcnvrt 20EE                    ??_setupEUSART 0060  
                     _ADCON0bits 0FC2           ??i2_get7SegmentPattern 0001                    ??_setupTimer1 0060  
      get7SegmentPattern@pattern 0061                       vfpfcnvrt@c 00D2                      _INTCON2bits 0FF1  
                    _INTCON3bits 0FF0                        copy_data0 2CE4                       _I2CRestart 3220  
                   ?_adcSampling 0001               __end_of_getLowByte 322E                EEPROMRead@address 0062  
        get7SegmentPattern@digit 0060                         __Hrparam 0000                        memcpy@tmp 0066  
                     vfprintf@ap 00D7                         __Lrparam 0000                       vfprintf@fp 00D4  
                     ?_vfpfcnvrt 00C8               ___fpclassifyf@F465 00E6                       sprintf@fmt 00DB  
                     _EEPROMRead 2DC6                         _c_target 0032                         ___xxtofl 225C  
                       _c_number 002E                  ___lwdiv@divisor 0062                  ___lwdiv@counter 0064  
            __end_of_setupEUSART 3162                         __ptext10 3238                         __ptext11 2EAA  
                       __ptext20 18E2                         __ptext12 2E16                         __ptext21 2F34  
                       __ptext13 1F34                         __ptext30 2C7C                         __ptext22 2774  
                       __ptext14 2472                         __ptext31 25FE                         __ptext23 2540  
                       __ptext15 2E62                         __ptext40 3228                         __ptext32 0F3A  
                       __ptext24 319A                         __ptext16 15D8                         __ptext41 322E  
                       __ptext33 31C6                         __ptext25 31B4                         __ptext17 30EE  
                       __ptext50 2826                         __ptext42 31D8                         __ptext34 3162  
                       __ptext26 3142                         __ptext18 23A0                         __ptext51 1D58  
                       __ptext43 3210                         __ptext35 225C                         __ptext27 31F8  
                       __ptext19 2AAA                         __ptext52 3000                         __ptext44 3218  
                       __ptext36 2B36                         __ptext28 1B6A                         __ptext53 2D74  
                       __ptext45 3220                         __ptext37 31EA                         __ptext29 2F78  
                       __ptext54 26BA                         __ptext46 311E                         __ptext38 2D22  
                       __ptext55 128A                         __ptext39 2DC6                         __ptext56 317E  
                       __ptext48 2FBC                         __ptext57 2BAE                         __ptext49 28D8  
                       __ptext58 3204                     _show7Segment 2F34                      _segPattern0 003B  
                    _segPattern1 003A                      _segPattern2 0039                       strcpy@dest 0060  
            __end_of_setupTimer1 31B4            _EUSART_TransmitString 2B36                         _sampling 00FE  
                       efgtoa@fp 0093                         efgtoa@ne 009C                         efgtoa@pp 00A4  
                       efgtoa@ou 00AF                         _setupI2C 31B4                         _setupADC 31F8  
                       isa$xinst 0000                         int$flags 004E            i2displayDigits@digit0 0005  
          i2displayDigits@digit1 0001            i2displayDigits@digit2 0002                         _vfprintf 3042  
     __end_of_get7SegmentPattern 2826                       _INTCONbits 0FF2                         memcpy@d1 0060  
                       memcpy@s1 0062       __end_of_setButtonInterrupt 31D8                      ?_I2CRestart 0001  
                       intlevel2 0000                        sprintf@ap 0150                 ___lwmod@dividend 0060  
                   ?_EEPROMWrite 0062                        strcpy@src 0062                   _displayAddress 0035  
                     _OSCCONbits 0FD3                      efgtoa@nmode 00A6                    _overflowCount 003F  
                   ?_getHighByte 0060                      ??_vfpfcnvrt 00CD                      _setupEUSART 3142  
                    _uart_buffer 0040                         sprintf@f 0151                         sprintf@s 00DA  
                    ?_EEPROMRead 0062                  ___lwmod@divisor 0062                  ___lwmod@counter 0064  
                  _displayDigit0 0038                    _displayDigit1 0037                    _displayDigit2 0036  
                  _displayDigits 2540                      _SSPCON2bits 0FC5                   EEPROMRead@data 0064  
                  _displaySample 0034                      _setupTimer1 319A                    ___fladd@signs 006C  
              _address_high_byte 003C                     ___fladd@aexp 006D                     ___fladd@bexp 006E  
         ?_EUSART_TransmitString 0061  
