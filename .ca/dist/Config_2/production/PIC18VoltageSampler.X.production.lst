

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Dec 29 13:23:12 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og9 
     1                           	processor	18F14K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78   000000                     
    79                           ; Generated 12/10/2023 GMT
    80                           ; 
    81                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F14K50 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113   000FE0                     bsr             equ	4064
   114   000FE9                     fsr0            equ	4073
   115   000FEA                     fsr0h           equ	4074
   116   000FE9                     fsr0l           equ	4073
   117   000FE1                     fsr1            equ	4065
   118   000FE2                     fsr1h           equ	4066
   119   000FE1                     fsr1l           equ	4065
   120   000FD9                     fsr2            equ	4057
   121   000FDA                     fsr2h           equ	4058
   122   000FD9                     fsr2l           equ	4057
   123   000FEF                     indf0           equ	4079
   124   000FE7                     indf1           equ	4071
   125   000FDF                     indf2           equ	4063
   126   000FF2                     intcon          equ	4082
   127   000000                     nvmcon          equ	0
   128   000FF9                     pcl             equ	4089
   129   000FFA                     pclath          equ	4090
   130   000FFB                     pclatu          equ	4091
   131   000FEB                     plusw0          equ	4075
   132   000FE3                     plusw1          equ	4067
   133   000FDB                     plusw2          equ	4059
   134   000FED                     postdec0        equ	4077
   135   000FE5                     postdec1        equ	4069
   136   000FDD                     postdec2        equ	4061
   137   000FEE                     postinc0        equ	4078
   138   000FE6                     postinc1        equ	4070
   139   000FDE                     postinc2        equ	4062
   140   000FEC                     preinc0         equ	4076
   141   000FE4                     preinc1         equ	4068
   142   000FDC                     preinc2         equ	4060
   143   000FF3                     prod            equ	4083
   144   000FF4                     prodh           equ	4084
   145   000FF3                     prodl           equ	4083
   146   000FD8                     status          equ	4056
   147   000FF5                     tablat          equ	4085
   148   000FF6                     tblptr          equ	4086
   149   000FF7                     tblptrh         equ	4087
   150   000FF6                     tblptrl         equ	4086
   151   000FF8                     tblptru         equ	4088
   152   000FFD                     tosl            equ	4093
   153   000FE8                     wreg            equ	4072
   154   000F53                     UEP0            equ	3923	;# 
   155   000F54                     UEP1            equ	3924	;# 
   156   000F55                     UEP2            equ	3925	;# 
   157   000F56                     UEP3            equ	3926	;# 
   158   000F57                     UEP4            equ	3927	;# 
   159   000F58                     UEP5            equ	3928	;# 
   160   000F59                     UEP6            equ	3929	;# 
   161   000F5A                     UEP7            equ	3930	;# 
   162   000F5B                     UEIE            equ	3931	;# 
   163   000F5C                     UADDR           equ	3932	;# 
   164   000F5D                     UFRML           equ	3933	;# 
   165   000F5E                     UFRMH           equ	3934	;# 
   166   000F5F                     UEIR            equ	3935	;# 
   167   000F60                     UIE             equ	3936	;# 
   168   000F61                     UCFG            equ	3937	;# 
   169   000F62                     UIR             equ	3938	;# 
   170   000F63                     USTAT           equ	3939	;# 
   171   000F64                     UCON            equ	3940	;# 
   172   000F68                     SRCON0          equ	3944	;# 
   173   000F69                     SRCON1          equ	3945	;# 
   174   000F6B                     CM2CON0         equ	3947	;# 
   175   000F6C                     CM2CON1         equ	3948	;# 
   176   000F6D                     CM1CON0         equ	3949	;# 
   177   000F6F                     SSPMSK          equ	3951	;# 
   178   000F6F                     SSPMASK         equ	3951	;# 
   179   000F76                     SLRCON          equ	3958	;# 
   180   000F77                     WPUA            equ	3959	;# 
   181   000F78                     WPUB            equ	3960	;# 
   182   000F79                     IOCA            equ	3961	;# 
   183   000F7A                     IOCB            equ	3962	;# 
   184   000F7E                     ANSEL           equ	3966	;# 
   185   000F7F                     ANSELH          equ	3967	;# 
   186   000F80                     PORTA           equ	3968	;# 
   187   000F81                     PORTB           equ	3969	;# 
   188   000F82                     PORTC           equ	3970	;# 
   189   000F89                     LATA            equ	3977	;# 
   190   000F8A                     LATB            equ	3978	;# 
   191   000F8B                     LATC            equ	3979	;# 
   192   000F92                     TRISA           equ	3986	;# 
   193   000F92                     DDRA            equ	3986	;# 
   194   000F93                     TRISB           equ	3987	;# 
   195   000F93                     DDRB            equ	3987	;# 
   196   000F94                     TRISC           equ	3988	;# 
   197   000F94                     DDRC            equ	3988	;# 
   198   000F9B                     OSCTUNE         equ	3995	;# 
   199   000F9D                     PIE1            equ	3997	;# 
   200   000F9E                     PIR1            equ	3998	;# 
   201   000F9F                     IPR1            equ	3999	;# 
   202   000FA0                     PIE2            equ	4000	;# 
   203   000FA1                     PIR2            equ	4001	;# 
   204   000FA2                     IPR2            equ	4002	;# 
   205   000FA6                     EECON1          equ	4006	;# 
   206   000FA7                     EECON2          equ	4007	;# 
   207   000FA8                     EEDATA          equ	4008	;# 
   208   000FA9                     EEADR           equ	4009	;# 
   209   000FAB                     RCSTA           equ	4011	;# 
   210   000FAB                     RCSTA1          equ	4011	;# 
   211   000FAC                     TXSTA           equ	4012	;# 
   212   000FAC                     TXSTA1          equ	4012	;# 
   213   000FAD                     TXREG           equ	4013	;# 
   214   000FAD                     TXREG1          equ	4013	;# 
   215   000FAE                     RCREG           equ	4014	;# 
   216   000FAE                     RCREG1          equ	4014	;# 
   217   000FAF                     SPBRG           equ	4015	;# 
   218   000FAF                     SPBRG1          equ	4015	;# 
   219   000FB0                     SPBRGH          equ	4016	;# 
   220   000FB1                     T3CON           equ	4017	;# 
   221   000FB2                     TMR3            equ	4018	;# 
   222   000FB2                     TMR3L           equ	4018	;# 
   223   000FB3                     TMR3H           equ	4019	;# 
   224   000FB6                     ECCP1AS         equ	4022	;# 
   225   000FB7                     PWM1CON         equ	4023	;# 
   226   000FB8                     BAUDCON         equ	4024	;# 
   227   000FB8                     BAUDCTL         equ	4024	;# 
   228   000FB9                     PSTRCON         equ	4025	;# 
   229   000FBA                     REFCON0         equ	4026	;# 
   230   000FBA                     VREFCON0        equ	4026	;# 
   231   000FBB                     REFCON1         equ	4027	;# 
   232   000FBB                     VREFCON1        equ	4027	;# 
   233   000FBC                     REFCON2         equ	4028	;# 
   234   000FBC                     VREFCON2        equ	4028	;# 
   235   000FBD                     CCP1CON         equ	4029	;# 
   236   000FBE                     CCPR1           equ	4030	;# 
   237   000FBE                     CCPR1L          equ	4030	;# 
   238   000FBF                     CCPR1H          equ	4031	;# 
   239   000FC0                     ADCON2          equ	4032	;# 
   240   000FC1                     ADCON1          equ	4033	;# 
   241   000FC2                     ADCON0          equ	4034	;# 
   242   000FC3                     ADRES           equ	4035	;# 
   243   000FC3                     ADRESL          equ	4035	;# 
   244   000FC4                     ADRESH          equ	4036	;# 
   245   000FC5                     SSPCON2         equ	4037	;# 
   246   000FC6                     SSPCON1         equ	4038	;# 
   247   000FC7                     SSPSTAT         equ	4039	;# 
   248   000FC8                     SSPADD          equ	4040	;# 
   249   000FC9                     SSPBUF          equ	4041	;# 
   250   000FCA                     T2CON           equ	4042	;# 
   251   000FCB                     PR2             equ	4043	;# 
   252   000FCB                     MEMCON          equ	4043	;# 
   253   000FCC                     TMR2            equ	4044	;# 
   254   000FCD                     T1CON           equ	4045	;# 
   255   000FCE                     TMR1            equ	4046	;# 
   256   000FCE                     TMR1L           equ	4046	;# 
   257   000FCF                     TMR1H           equ	4047	;# 
   258   000FD0                     RCON            equ	4048	;# 
   259   000FD1                     WDTCON          equ	4049	;# 
   260   000FD2                     OSCCON2         equ	4050	;# 
   261   000FD3                     OSCCON          equ	4051	;# 
   262   000FD5                     T0CON           equ	4053	;# 
   263   000FD6                     TMR0            equ	4054	;# 
   264   000FD6                     TMR0L           equ	4054	;# 
   265   000FD7                     TMR0H           equ	4055	;# 
   266   000FD8                     STATUS          equ	4056	;# 
   267   000FD9                     FSR2            equ	4057	;# 
   268   000FD9                     FSR2L           equ	4057	;# 
   269   000FDA                     FSR2H           equ	4058	;# 
   270   000FDB                     PLUSW2          equ	4059	;# 
   271   000FDC                     PREINC2         equ	4060	;# 
   272   000FDD                     POSTDEC2        equ	4061	;# 
   273   000FDE                     POSTINC2        equ	4062	;# 
   274   000FDF                     INDF2           equ	4063	;# 
   275   000FE0                     BSR             equ	4064	;# 
   276   000FE1                     FSR1            equ	4065	;# 
   277   000FE1                     FSR1L           equ	4065	;# 
   278   000FE2                     FSR1H           equ	4066	;# 
   279   000FE3                     PLUSW1          equ	4067	;# 
   280   000FE4                     PREINC1         equ	4068	;# 
   281   000FE5                     POSTDEC1        equ	4069	;# 
   282   000FE6                     POSTINC1        equ	4070	;# 
   283   000FE7                     INDF1           equ	4071	;# 
   284   000FE8                     WREG            equ	4072	;# 
   285   000FE9                     FSR0            equ	4073	;# 
   286   000FE9                     FSR0L           equ	4073	;# 
   287   000FEA                     FSR0H           equ	4074	;# 
   288   000FEB                     PLUSW0          equ	4075	;# 
   289   000FEC                     PREINC0         equ	4076	;# 
   290   000FED                     POSTDEC0        equ	4077	;# 
   291   000FEE                     POSTINC0        equ	4078	;# 
   292   000FEF                     INDF0           equ	4079	;# 
   293   000FF0                     INTCON3         equ	4080	;# 
   294   000FF1                     INTCON2         equ	4081	;# 
   295   000FF2                     INTCON          equ	4082	;# 
   296   000FF3                     PROD            equ	4083	;# 
   297   000FF3                     PRODL           equ	4083	;# 
   298   000FF4                     PRODH           equ	4084	;# 
   299   000FF5                     TABLAT          equ	4085	;# 
   300   000FF6                     TBLPTR          equ	4086	;# 
   301   000FF6                     TBLPTRL         equ	4086	;# 
   302   000FF7                     TBLPTRH         equ	4087	;# 
   303   000FF8                     TBLPTRU         equ	4088	;# 
   304   000FF9                     PCLAT           equ	4089	;# 
   305   000FF9                     PC              equ	4089	;# 
   306   000FF9                     PCL             equ	4089	;# 
   307   000FFA                     PCLATH          equ	4090	;# 
   308   000FFB                     PCLATU          equ	4091	;# 
   309   000FFC                     STKPTR          equ	4092	;# 
   310   000FFD                     TOS             equ	4093	;# 
   311   000FFD                     TOSL            equ	4093	;# 
   312   000FFE                     TOSH            equ	4094	;# 
   313   000FFF                     TOSU            equ	4095	;# 
   314                           
   315                           	psect	idataCOMRAM
   316   003138                     __pidataCOMRAM:
   317                           	callstack 0
   318                           
   319                           ;initializer for _adc_step_size
   320                           ;main.c: 88: uint16_t adcResult = 0;;main.c: 90: uint8_t overflowCount = 0;;main.c: 91: 
      +                          uint8_t sampling = 0;;main.c: 93: uint8_t eeprom_data_lsb = 0;;main.c: 94: uint8_t eepro
      +                          m_data_msb = 0;;main.c: 95: uint8_t eeprom_data_ctl = 0;;main.c: 96: uint16_t eeprom_dat
      +                          a = 0;;main.c: 98: uint8_t received_data = 0;;main.c: 100: uint8_t address_low_byte = 0;
      +                          ;main.c: 101: uint8_t address_high_byte = 0;;main.c: 102: uint16_t address_index = 0;;ma
      +                          in.c: 104: uint8_t segPattern0;;main.c: 105: uint8_t segPattern1;;main.c: 106: uint8_t s
      +                          egPattern2;
   321   003138  280A               	dw	10250
   322   00313A  3BA0               	dw	15264
   323   000FCE                     _TMR1           set	4046
   324   000FAD                     _TXREG          set	4013
   325   000FAB                     _RCSTAbits      set	4011
   326   000FAC                     _TXSTAbits      set	4012
   327   000FAF                     _SPBRG          set	4015
   328   000FB8                     _BAUDCONbits    set	4024
   329   000FC7                     _SSPSTATbits    set	4039
   330   000FC9                     _SSPBUF         set	4041
   331   000FC5                     _SSPCON2bits    set	4037
   332   000FF1                     _INTCON2bits    set	4081
   333   000FC5                     _SSPCON2        set	4037
   334   000FC7                     _SSPSTAT        set	4039
   335   000FC8                     _SSPADD         set	4040
   336   000FC6                     _SSPCON1        set	4038
   337   000F93                     _TRISBbits      set	3987
   338   000F9D                     _PIE1bits       set	3997
   339   000FCD                     _T1CON          set	4045
   340   000FC0                     _ADCON2         set	4032
   341   000FC2                     _ADCON0         set	4034
   342   000FC1                     _ADCON1         set	4033
   343   000F82                     _PORTCbits      set	3970
   344   000FF2                     _INTCONbits     set	4082
   345   000F8B                     _LATCbits       set	3979
   346   000F7E                     _ANSELbits      set	3966
   347   000F94                     _TRISCbits      set	3988
   348   000F92                     _TRISA          set	3986
   349   000F7E                     _ANSEL          set	3966
   350   000FD3                     _OSCCONbits     set	4051
   351   000FF0                     _INTCON3bits    set	4080
   352   000F89                     _LATAbits       set	3977
   353   000F9E                     _PIR1bits       set	3998
   354   000FC3                     _ADRESL         set	4035
   355   000FC4                     _ADRESH         set	4036
   356   000FC2                     _ADCON0bits     set	4034
   357                           
   358                           	psect	smallconst
   359   000300                     __psmallconst:
   360                           	callstack 0
   361   000300  00                 	db	0
   362   000301                     STR_1:
   363   000301  53                 	db	83	;'S'
   364   000302  54                 	db	84	;'T'
   365   000303  41                 	db	65	;'A'
   366   000304  52                 	db	82	;'R'
   367   000305  54                 	db	84	;'T'
   368   000306  20                 	db	32
   369   000307  0D                 	db	13
   370   000308  0A                 	db	10
   371   000309  00                 	db	0
   372   00030A                     STR_5:
   373   00030A  45                 	db	69	;'E'
   374   00030B  4E                 	db	78	;'N'
   375   00030C  44                 	db	68	;'D'
   376   00030D  20                 	db	32
   377   00030E  0D                 	db	13
   378   00030F  0A                 	db	10
   379   000310  00                 	db	0
   380   000311                     STR_2:
   381   000311  25                 	db	37
   382   000312  2E                 	db	46
   383   000313  32                 	db	50	;'2'
   384   000314  66                 	db	102	;'f'
   385   000315  00                 	db	0
   386   000316                     STR_8:
   387   000316  69                 	db	105	;'i'
   388   000317  6E                 	db	110	;'n'
   389   000318  66                 	db	102	;'f'
   390   000319  00                 	db	0
   391   00031A                     STR_11:
   392   00031A  6E                 	db	110	;'n'
   393   00031B  61                 	db	97	;'a'
   394   00031C  6E                 	db	110	;'n'
   395   00031D  00                 	db	0
   396   00031A                     STR_12          equ	STR_11
   397   00031A                     STR_13          equ	STR_11
   398   000316                     STR_9           equ	STR_8
   399   000316                     STR_10          equ	STR_8
   400   000311                     STR_6           equ	STR_2
   401   000301                     STR_4           equ	STR_1
   402   00030E                     STR_3           equ	STR_5+4
   403   00030E                     STR_7           equ	STR_5+4
   404   00031E  00                 	db	0	; dummy byte at the end
   405   000002                     __activetblptr  equ	2
   406                           
   407                           ; #config settings
   408                           
   409                           	psect	cinit
   410   002BA4                     __pcinit:
   411                           	callstack 0
   412   002BA4                     start_initialization:
   413                           	callstack 0
   414   002BA4                     __initialization:
   415                           	callstack 0
   416                           
   417                           ; Initialize objects allocated to COMRAM (4 bytes)
   418                           ; load TBLPTR registers with __pidataCOMRAM
   419   002BA4  0E38               	movlw	low __pidataCOMRAM
   420   002BA6  6EF6               	movwf	tblptrl,c
   421   002BA8  0E31               	movlw	high __pidataCOMRAM
   422   002BAA  6EF7               	movwf	tblptrh,c
   423   002BAC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   424   002BAE  6EF8               	movwf	tblptru,c
   425   002BB0  EE00  F04A         	lfsr	0,__pdataCOMRAM
   426   002BB4  EE10 F004          	lfsr	1,4
   427   002BB8                     copy_data0:
   428   002BB8  0009               	tblrd		*+
   429   002BBA  CFF5 FFEE          	movff	tablat,postinc0
   430   002BBE  50E5               	movf	postdec1,w,c
   431   002BC0  50E1               	movf	fsr1l,w,c
   432   002BC2  E1FA               	bnz	copy_data0
   433                           
   434                           ; Clear objects allocated to BANK1 (80 bytes)
   435   002BC4  EE01  F000         	lfsr	0,__pbssBANK1
   436   002BC8  0E50               	movlw	80
   437   002BCA                     clear_0:
   438   002BCA  6AEE               	clrf	postinc0,c
   439   002BCC  06E8               	decf	wreg,f,c
   440   002BCE  E1FD               	bnz	clear_0
   441                           
   442                           ; Clear objects allocated to BANK0 (29 bytes)
   443   002BD0  EE00  F0E2         	lfsr	0,__pbssBANK0
   444   002BD4  0E1D               	movlw	29
   445   002BD6                     clear_1:
   446   002BD6  6AEE               	clrf	postinc0,c
   447   002BD8  06E8               	decf	wreg,f,c
   448   002BDA  E1FD               	bnz	clear_1
   449                           
   450                           ; Clear objects allocated to COMRAM (30 bytes)
   451   002BDC  EE00  F02C         	lfsr	0,__pbssCOMRAM
   452   002BE0  0E1E               	movlw	30
   453   002BE2                     clear_2:
   454   002BE2  6AEE               	clrf	postinc0,c
   455   002BE4  06E8               	decf	wreg,f,c
   456   002BE6  E1FD               	bnz	clear_2
   457   002BE8                     end_of_initialization:
   458                           	callstack 0
   459   002BE8                     __end_of__initialization:
   460                           	callstack 0
   461   002BE8  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   462   002BEA  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   463   002BEC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   464   002BEE  6EF8               	movwf	tblptru,c
   465   002BF0  0100               	movlb	0
   466   002BF2  EFB9  F005         	goto	_main	;jump to C main() function
   467                           
   468                           	psect	bssCOMRAM
   469   00002C                     __pbssCOMRAM:
   470                           	callstack 0
   471   00002C                     _button_counter:
   472                           	callstack 0
   473   00002C                     	ds	2
   474   00002E                     _c_number:
   475                           	callstack 0
   476   00002E                     	ds	2
   477   000030                     _c_remainder:
   478                           	callstack 0
   479   000030                     	ds	2
   480   000032                     _c_target:
   481                           	callstack 0
   482   000032                     	ds	2
   483   000034                     _displaySample:
   484                           	callstack 0
   485   000034                     	ds	1
   486   000035                     _displayAddress:
   487                           	callstack 0
   488   000035                     	ds	1
   489   000036                     _displayDigit2:
   490                           	callstack 0
   491   000036                     	ds	1
   492   000037                     _displayDigit1:
   493                           	callstack 0
   494   000037                     	ds	1
   495   000038                     _displayDigit0:
   496                           	callstack 0
   497   000038                     	ds	1
   498   000039                     _segPattern2:
   499                           	callstack 0
   500   000039                     	ds	1
   501   00003A                     _segPattern1:
   502                           	callstack 0
   503   00003A                     	ds	1
   504   00003B                     _segPattern0:
   505                           	callstack 0
   506   00003B                     	ds	1
   507   00003C                     _address_high_byte:
   508                           	callstack 0
   509   00003C                     	ds	1
   510   00003D                     _address_low_byte:
   511                           	callstack 0
   512   00003D                     	ds	1
   513   00003E                     _received_data:
   514                           	callstack 0
   515   00003E                     	ds	1
   516   00003F                     _overflowCount:
   517                           	callstack 0
   518   00003F                     	ds	1
   519   000040                     _uart_buffer:
   520                           	callstack 0
   521   000040                     	ds	10
   522                           
   523                           	psect	dataCOMRAM
   524   00004A                     __pdataCOMRAM:
   525                           	callstack 0
   526   00004A                     _adc_step_size:
   527                           	callstack 0
   528   00004A                     	ds	4
   529                           
   530                           	psect	bssBANK0
   531   0000E2                     __pbssBANK0:
   532                           	callstack 0
   533   0000E2                     floorf@F521:
   534                           	callstack 0
   535   0000E2                     	ds	4
   536   0000E6                     ___fpclassifyf@F465:
   537                           	callstack 0
   538   0000E6                     	ds	4
   539   0000EA                     _adc_voltage:
   540                           	callstack 0
   541   0000EA                     	ds	4
   542   0000EE                     _width:
   543                           	callstack 0
   544   0000EE                     	ds	2
   545   0000F0                     _prec:
   546                           	callstack 0
   547   0000F0                     	ds	2
   548   0000F2                     _address_index:
   549                           	callstack 0
   550   0000F2                     	ds	2
   551   0000F4                     _eeprom_data:
   552                           	callstack 0
   553   0000F4                     	ds	2
   554   0000F6                     _adcResult:
   555                           	callstack 0
   556   0000F6                     	ds	2
   557   0000F8                     _flags:
   558                           	callstack 0
   559   0000F8                     	ds	1
   560   0000F9                     _fsm_state:
   561                           	callstack 0
   562   0000F9                     	ds	1
   563   0000FA                     _turnOnDisplay:
   564                           	callstack 0
   565   0000FA                     	ds	1
   566   0000FB                     _eeprom_data_ctl:
   567                           	callstack 0
   568   0000FB                     	ds	1
   569   0000FC                     _eeprom_data_msb:
   570                           	callstack 0
   571   0000FC                     	ds	1
   572   0000FD                     _eeprom_data_lsb:
   573                           	callstack 0
   574   0000FD                     	ds	1
   575   0000FE                     _sampling:
   576                           	callstack 0
   577   0000FE                     	ds	1
   578                           
   579                           	psect	bssBANK1
   580   000100                     __pbssBANK1:
   581                           	callstack 0
   582   000100                     _dbuf:
   583                           	callstack 0
   584   000100                     	ds	80
   585                           
   586                           	psect	cstackBANK1
   587   000150                     __pcstackBANK1:
   588                           	callstack 0
   589   000150                     sprintf@ap:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x0
   593   000150                     	ds	1
   594   000151                     sprintf@f:
   595                           	callstack 0
   596                           
   597                           ; 11 bytes @ 0x1
   598   000151                     	ds	11
   599   00015C                     _main$2067:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0xC
   603   00015C                     	ds	1
   604   00015D                     _main$2068:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0xD
   608   00015D                     	ds	1
   609                           
   610                           	psect	cstackBANK0
   611   000060                     __pcstackBANK0:
   612                           	callstack 0
   613   000060                     ?___fpclassifyf:
   614                           	callstack 0
   615   000060                     ?___lwdiv:
   616                           	callstack 0
   617   000060                     ?___lwmod:
   618                           	callstack 0
   619   000060                     ?_read_prec_or_width:
   620                           	callstack 0
   621   000060                     ?___fladd:
   622                           	callstack 0
   623   000060                     ?___fldiv:
   624                           	callstack 0
   625   000060                     ?_labs:
   626                           	callstack 0
   627   000060                     ?___flneg:
   628                           	callstack 0
   629   000060                     ?___xxtofl:
   630                           	callstack 0
   631   000060                     get7SegmentPattern@digit:
   632                           	callstack 0
   633   000060                     displayDigits@digit1:
   634                           	callstack 0
   635   000060                     I2CWrite@data:
   636                           	callstack 0
   637   000060                     I2CRead@ack:
   638                           	callstack 0
   639   000060                     EUSART_TransmitChar@data:
   640                           	callstack 0
   641   000060                     read_prec_or_width@fmt:
   642                           	callstack 0
   643   000060                     getLowByte@number:
   644                           	callstack 0
   645   000060                     getHighByte@number:
   646                           	callstack 0
   647   000060                     ___lwdiv@dividend:
   648                           	callstack 0
   649   000060                     ___lwmod@dividend:
   650                           	callstack 0
   651   000060                     memcpy@d1:
   652                           	callstack 0
   653   000060                     fputc@c:
   654                           	callstack 0
   655   000060                     strcpy@dest:
   656                           	callstack 0
   657   000060                     ___fleq@ff1:
   658                           	callstack 0
   659   000060                     ___flneg@f1:
   660                           	callstack 0
   661   000060                     ___fladd@b:
   662                           	callstack 0
   663   000060                     ___fldiv@b:
   664                           	callstack 0
   665   000060                     ___xxtofl@val:
   666                           	callstack 0
   667   000060                     ___fpclassifyf@x:
   668                           	callstack 0
   669   000060                     labs@a:
   670                           	callstack 0
   671   000060                     ??_adcSampling:
   672   000060                     
   673                           ; 1 bytes @ 0x0
   674   000060                     	ds	1
   675   000061                     get7SegmentPattern@pattern:
   676                           	callstack 0
   677   000061                     displayDigits@digit2:
   678                           	callstack 0
   679   000061                     EUSART_TransmitString@a:
   680                           	callstack 0
   681   000061                     read_prec_or_width@ap:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x1
   685   000061                     	ds	1
   686   000062                     strcpy@src:
   687                           	callstack 0
   688   000062                     EEPROMWrite@address:
   689                           	callstack 0
   690   000062                     EEPROMRead@address:
   691                           	callstack 0
   692   000062                     ___lwdiv@divisor:
   693                           	callstack 0
   694   000062                     ___lwmod@divisor:
   695                           	callstack 0
   696   000062                     memcpy@s1:
   697                           	callstack 0
   698   000062                     fputc@fp:
   699                           	callstack 0
   700   000062                     ??_displayDigits:
   701                           
   702                           ; 1 bytes @ 0x2
   703   000062                     	ds	1
   704   000063                     ??_EUSART_TransmitString:
   705   000063                     ??_strcpy:
   706   000063                     ??_read_prec_or_width:
   707                           
   708                           ; 1 bytes @ 0x3
   709   000063                     	ds	1
   710   000064                     displayDigits@digit0:
   711                           	callstack 0
   712   000064                     EEPROMWrite@data:
   713                           	callstack 0
   714   000064                     EEPROMRead@data:
   715                           	callstack 0
   716   000064                     ___lwdiv@counter:
   717                           	callstack 0
   718   000064                     ___lwmod@counter:
   719                           	callstack 0
   720   000064                     memcpy@n:
   721                           	callstack 0
   722   000064                     strcpy@d:
   723                           	callstack 0
   724   000064                     ___fleq@ff2:
   725                           	callstack 0
   726   000064                     ___fladd@a:
   727                           	callstack 0
   728   000064                     ___fldiv@a:
   729                           	callstack 0
   730   000064                     ??_fputc:
   731   000064                     ??___fpclassifyf:
   732   000064                     ??_labs:
   733   000064                     ??___xxtofl:
   734                           
   735                           ; 1 bytes @ 0x4
   736   000064                     	ds	1
   737   000065                     read_prec_or_width@c:
   738                           	callstack 0
   739   000065                     displayDigits@i:
   740                           	callstack 0
   741   000065                     EUSART_TransmitString@i:
   742                           	callstack 0
   743   000065                     ___lwdiv@quotient:
   744                           	callstack 0
   745   000065                     ??_EEPROMWrite:
   746                           
   747                           ; 1 bytes @ 0x5
   748   000065                     	ds	1
   749   000066                     memcpy@tmp:
   750                           	callstack 0
   751   000066                     read_prec_or_width@n:
   752                           	callstack 0
   753   000066                     
   754                           ; 1 bytes @ 0x6
   755   000066                     	ds	1
   756   000067                     memcpy@d:
   757                           	callstack 0
   758   000067                     
   759                           ; 1 bytes @ 0x7
   760   000067                     	ds	1
   761   000068                     ___xxtofl@sign:
   762                           	callstack 0
   763   000068                     ___fpclassifyf@e:
   764                           	callstack 0
   765   000068                     ??___fladd:
   766   000068                     ??___fldiv:
   767   000068                     ??___fleq:
   768                           
   769                           ; 1 bytes @ 0x8
   770   000068                     	ds	1
   771   000069                     ___xxtofl@exp:
   772                           	callstack 0
   773   000069                     memcpy@s:
   774                           	callstack 0
   775   000069                     fputs@s:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x9
   779   000069                     	ds	1
   780   00006A                     ___xxtofl@arg:
   781                           	callstack 0
   782   00006A                     ___fpclassifyf@u:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0xA
   786   00006A                     	ds	1
   787   00006B                     fputs@fp:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0xB
   791   00006B                     	ds	1
   792   00006C                     ___fladd@signs:
   793                           	callstack 0
   794   00006C                     ___fldiv@rem:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0xC
   798   00006C                     	ds	1
   799   00006D                     ___fladd@aexp:
   800                           	callstack 0
   801   00006D                     fputs@c:
   802                           	callstack 0
   803   00006D                     
   804                           ; 1 bytes @ 0xD
   805   00006D                     	ds	1
   806   00006E                     ?___flmul:
   807                           	callstack 0
   808   00006E                     ___fladd@bexp:
   809                           	callstack 0
   810   00006E                     fputs@i:
   811                           	callstack 0
   812   00006E                     ___flmul@b:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0xE
   816   00006E                     	ds	1
   817   00006F                     ___fladd@grs:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0xF
   821   00006F                     	ds	1
   822   000070                     ___fldiv@sign:
   823                           	callstack 0
   824   000070                     pad@fp:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x10
   828   000070                     	ds	1
   829   000071                     ___fldiv@new_exp:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x11
   833   000071                     	ds	1
   834   000072                     pad@buf:
   835                           	callstack 0
   836   000072                     ___flmul@a:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x12
   840   000072                     	ds	1
   841   000073                     ___fldiv@grs:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x13
   845   000073                     	ds	1
   846   000074                     pad@p:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x14
   850   000074                     	ds	2
   851   000076                     ??___flmul:
   852   000076                     ??_pad:
   853                           
   854                           ; 1 bytes @ 0x16
   855   000076                     	ds	1
   856   000077                     ___fldiv@bexp:
   857                           	callstack 0
   858   000077                     pad@i:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x17
   862   000077                     	ds	1
   863   000078                     ___fldiv@aexp:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x18
   867   000078                     	ds	1
   868   000079                     ?_floorf:
   869                           	callstack 0
   870   000079                     floorf@x:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x19
   874   000079                     	ds	1
   875   00007A                     ___flmul@sign:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x1A
   879   00007A                     	ds	1
   880   00007B                     ___flmul@aexp:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x1B
   884   00007B                     	ds	1
   885   00007C                     ___flmul@bexp:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x1C
   889   00007C                     	ds	1
   890   00007D                     ___flmul@grs:
   891                           	callstack 0
   892   00007D                     ??_floorf:
   893                           
   894                           ; 1 bytes @ 0x1D
   895   00007D                     	ds	4
   896   000081                     ___flmul@prod:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x21
   900   000081                     	ds	2
   901   000083                     floorf@m:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0x23
   905   000083                     	ds	2
   906   000085                     ___flmul@temp:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x25
   910   000085                     	ds	2
   911   000087                     ?___flsub:
   912                           	callstack 0
   913   000087                     ?___fltol:
   914                           	callstack 0
   915   000087                     floorf@e:
   916                           	callstack 0
   917   000087                     ___flge@ff1:
   918                           	callstack 0
   919   000087                     ___fltol@f1:
   920                           	callstack 0
   921   000087                     ___flsub@b:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x27
   925   000087                     	ds	2
   926   000089                     floorf@u:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x29
   930   000089                     	ds	2
   931   00008B                     ___flge@ff2:
   932                           	callstack 0
   933   00008B                     ___flsub@a:
   934                           	callstack 0
   935   00008B                     ??___fltol:
   936                           
   937                           ; 1 bytes @ 0x2B
   938   00008B                     	ds	4
   939   00008F                     ___fltol@sign1:
   940                           	callstack 0
   941   00008F                     ??___flge:
   942                           
   943                           ; 1 bytes @ 0x2F
   944   00008F                     	ds	1
   945   000090                     ___fltol@exp1:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x30
   949   000090                     	ds	1
   950   000091                     
   951                           ; 1 bytes @ 0x31
   952   000091                     	ds	2
   953   000093                     efgtoa@fp:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x33
   957   000093                     	ds	2
   958   000095                     efgtoa@f:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0x35
   962   000095                     	ds	4
   963   000099                     efgtoa@c:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x39
   967   000099                     	ds	1
   968   00009A                     ??_efgtoa:
   969                           
   970                           ; 1 bytes @ 0x3A
   971   00009A                     	ds	2
   972   00009C                     efgtoa@ne:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x3C
   976   00009C                     	ds	2
   977   00009E                     efgtoa@p:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x3E
   981   00009E                     	ds	2
   982   0000A0                     efgtoa@t:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x40
   986   0000A0                     	ds	2
   987   0000A2                     _efgtoa$1751:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x42
   991   0000A2                     	ds	2
   992   0000A4                     efgtoa@pp:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x44
   996   0000A4                     	ds	1
   997   0000A5                     efgtoa@mode:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x45
  1001   0000A5                     	ds	1
  1002   0000A6                     efgtoa@nmode:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x46
  1006   0000A6                     	ds	1
  1007   0000A7                     efgtoa@d:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x47
  1011   0000A7                     	ds	2
  1012   0000A9                     efgtoa@m:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x49
  1016   0000A9                     	ds	2
  1017   0000AB                     efgtoa@e:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x4B
  1021   0000AB                     	ds	2
  1022   0000AD                     efgtoa@w:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x4D
  1026   0000AD                     	ds	2
  1027   0000AF                     efgtoa@ou:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x4F
  1031   0000AF                     	ds	4
  1032   0000B3                     efgtoa@i:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x53
  1036   0000B3                     	ds	2
  1037   0000B5                     efgtoa@h:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x55
  1041   0000B5                     	ds	4
  1042   0000B9                     efgtoa@l:
  1043                           	callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x59
  1046   0000B9                     	ds	4
  1047   0000BD                     efgtoa@sign:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x5D
  1051   0000BD                     	ds	1
  1052   0000BE                     efgtoa@g:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x5E
  1056   0000BE                     	ds	4
  1057   0000C2                     efgtoa@n:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x62
  1061   0000C2                     	ds	2
  1062   0000C4                     efgtoa@u:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0x64
  1066   0000C4                     	ds	4
  1067   0000C8                     vfpfcnvrt@fp:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x68
  1071   0000C8                     	ds	2
  1072   0000CA                     vfpfcnvrt@fmt:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x6A
  1076   0000CA                     	ds	1
  1077   0000CB                     vfpfcnvrt@ap:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x6B
  1081   0000CB                     	ds	2
  1082   0000CD                     ??_vfpfcnvrt:
  1083                           
  1084                           ; 1 bytes @ 0x6D
  1085   0000CD                     	ds	1
  1086   0000CE                     vfpfcnvrt@convarg:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x6E
  1090   0000CE                     	ds	4
  1091   0000D2                     vfpfcnvrt@c:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x72
  1095   0000D2                     	ds	1
  1096   0000D3                     vfpfcnvrt@cp:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x73
  1100   0000D3                     	ds	1
  1101   0000D4                     ?_vfprintf:
  1102                           	callstack 0
  1103   0000D4                     vfprintf@fp:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x74
  1107   0000D4                     	ds	2
  1108   0000D6                     vfprintf@fmt:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x76
  1112   0000D6                     	ds	1
  1113   0000D7                     vfprintf@ap:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x77
  1117   0000D7                     	ds	2
  1118   0000D9                     vfprintf@cfmt:
  1119                           	callstack 0
  1120   0000D9                     
  1121                           ; 1 bytes @ 0x79
  1122   0000D9                     	ds	1
  1123   0000DA                     ?_sprintf:
  1124                           	callstack 0
  1125   0000DA                     sprintf@s:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x7A
  1129   0000DA                     	ds	1
  1130   0000DB                     sprintf@fmt:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x7B
  1134   0000DB                     	ds	5
  1135   0000E0                     ??_main:
  1136                           
  1137                           ; 1 bytes @ 0x80
  1138   0000E0                     	ds	2
  1139                           
  1140                           	psect	cstackCOMRAM
  1141   000001                     __pcstackCOMRAM:
  1142                           	callstack 0
  1143   000001                     ?i2___lwdiv:
  1144                           	callstack 0
  1145   000001                     ?i2___lwmod:
  1146                           	callstack 0
  1147   000001                     ?i2___flmul:
  1148                           	callstack 0
  1149   000001                     i2get7SegmentPattern@digit:
  1150                           	callstack 0
  1151   000001                     i2displayDigits@digit1:
  1152                           	callstack 0
  1153   000001                     i2EUSART_TransmitChar@data:
  1154                           	callstack 0
  1155   000001                     i2___lwdiv@dividend:
  1156                           	callstack 0
  1157   000001                     i2___lwmod@dividend:
  1158                           	callstack 0
  1159   000001                     i2___flmul@b:
  1160                           	callstack 0
  1161   000001                     ??i2_adcSampling:
  1162   000001                     
  1163                           ; 1 bytes @ 0x0
  1164   000001                     	ds	1
  1165   000002                     i2get7SegmentPattern@pattern:
  1166                           	callstack 0
  1167   000002                     i2displayDigits@digit2:
  1168                           	callstack 0
  1169   000002                     i2EUSART_TransmitString@a:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x1
  1173   000002                     	ds	1
  1174   000003                     i2___lwdiv@divisor:
  1175                           	callstack 0
  1176   000003                     i2___lwmod@divisor:
  1177                           	callstack 0
  1178   000003                     ??i2_displayDigits:
  1179                           
  1180                           ; 1 bytes @ 0x2
  1181   000003                     	ds	1
  1182   000004                     ??i2_EUSART_TransmitString:
  1183                           
  1184                           ; 1 bytes @ 0x3
  1185   000004                     	ds	1
  1186   000005                     i2displayDigits@digit0:
  1187                           	callstack 0
  1188   000005                     i2___lwmod@counter:
  1189                           	callstack 0
  1190   000005                     i2___lwdiv@quotient:
  1191                           	callstack 0
  1192   000005                     i2___flmul@a:
  1193                           	callstack 0
  1194   000005                     
  1195                           ; 1 bytes @ 0x4
  1196   000005                     	ds	1
  1197   000006                     i2displayDigits@i:
  1198                           	callstack 0
  1199   000006                     i2EUSART_TransmitString@i:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x5
  1203   000006                     	ds	1
  1204   000007                     i2___lwdiv@counter:
  1205                           	callstack 0
  1206                           
  1207                           ; 1 bytes @ 0x6
  1208   000007                     	ds	1
  1209   000008                     
  1210                           ; 1 bytes @ 0x7
  1211   000008                     	ds	1
  1212   000009                     ??i2___flmul:
  1213                           
  1214                           ; 1 bytes @ 0x8
  1215   000009                     	ds	4
  1216   00000D                     i2___flmul@sign:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0xC
  1220   00000D                     	ds	1
  1221   00000E                     i2___flmul@aexp:
  1222                           	callstack 0
  1223                           
  1224                           ; 1 bytes @ 0xD
  1225   00000E                     	ds	1
  1226   00000F                     i2___flmul@grs:
  1227                           	callstack 0
  1228                           
  1229                           ; 4 bytes @ 0xE
  1230   00000F                     	ds	4
  1231   000013                     i2___flmul@bexp:
  1232                           	callstack 0
  1233                           
  1234                           ; 1 bytes @ 0x12
  1235   000013                     	ds	1
  1236   000014                     i2___flmul@prod:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x13
  1240   000014                     	ds	4
  1241   000018                     i2___flmul@temp:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x17
  1245   000018                     	ds	2
  1246   00001A                     ?i2___fltol:
  1247                           	callstack 0
  1248   00001A                     i2___fltol@f1:
  1249                           	callstack 0
  1250                           
  1251                           ; 4 bytes @ 0x19
  1252   00001A                     	ds	4
  1253   00001E                     ??i2___fltol:
  1254                           
  1255                           ; 1 bytes @ 0x1D
  1256   00001E                     	ds	4
  1257   000022                     i2___fltol@sign1:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x21
  1261   000022                     	ds	1
  1262   000023                     i2___fltol@exp1:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x22
  1266   000023                     	ds	1
  1267   000024                     ??_ISR:
  1268   000024                     
  1269                           ; 1 bytes @ 0x23
  1270   000024                     	ds	8
  1271                           
  1272 ;;
  1273 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1274 ;;
  1275 ;; *************** function _main *****************
  1276 ;; Defined at:
  1277 ;;		line 295 in file "main.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1291 ;;      Params:         0       0       0       0
  1292 ;;      Locals:         0       0       2       0
  1293 ;;      Temps:          0       2       0       0
  1294 ;;      Totals:         0       2       2       0
  1295 ;;Total ram usage:        4 bytes
  1296 ;; Hardware stack levels required when called: 11
  1297 ;; This function calls:
  1298 ;;		_EEPROMRead
  1299 ;;		_EEPROMWrite
  1300 ;;		_EUSART_TransmitString
  1301 ;;		___flmul
  1302 ;;		___xxtofl
  1303 ;;		_adcSampling
  1304 ;;		_getHighByte
  1305 ;;		_getLowByte
  1306 ;;		_setButtonInterrupt
  1307 ;;		_setDisplayDigits
  1308 ;;		_setupADC
  1309 ;;		_setupEUSART
  1310 ;;		_setupI2C
  1311 ;;		_setupTimer1
  1312 ;;		_show7Segment
  1313 ;;		_sprintf
  1314 ;; This function is called by:
  1315 ;;		Startup code after reset
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text0
  1320   000B72                     __ptext0:
  1321                           	callstack 0
  1322   000B72                     _main:
  1323                           	callstack 20
  1324                           
  1325                           ;main.c: 298:     OSCCONbits.SCS0 = 1;
  1326                           
  1327                           ;incstack = 0
  1328   000B72  80D3               	bsf	211,0,c	;volatile
  1329                           
  1330                           ;main.c: 299:     OSCCONbits.SCS1 = 1;
  1331   000B74  82D3               	bsf	211,1,c	;volatile
  1332                           
  1333                           ;main.c: 301:     OSCCONbits.OSTS = 0;
  1334   000B76  96D3               	bcf	211,3,c	;volatile
  1335                           
  1336                           ;main.c: 304:     OSCCONbits.IRCF0 = 0;
  1337   000B78  98D3               	bcf	211,4,c	;volatile
  1338                           
  1339                           ;main.c: 305:     OSCCONbits.IRCF1 = 0;
  1340   000B7A  9AD3               	bcf	211,5,c	;volatile
  1341                           
  1342                           ;main.c: 306:     OSCCONbits.IRCF2 = 1;
  1343   000B7C  8CD3               	bsf	211,6,c	;volatile
  1344                           
  1345                           ;main.c: 308:     _delay((unsigned long)((500)*(2000000/4000.0)));
  1346   000B7E  0E02               	movlw	2
  1347   000B80  0100               	movlb	0	; () banked
  1348   000B82  6FE1               	movwf	(??_main+1)& (0+255),b
  1349   000B84  0E45               	movlw	69
  1350   000B86  6FE0               	movwf	??_main& (0+255),b
  1351   000B88  0EA9               	movlw	169
  1352   000B8A                     u9957:
  1353   000B8A  2EE8               	decfsz	wreg,f,c
  1354   000B8C  D7FE               	bra	u9957
  1355   000B8E  2FE0               	decfsz	??_main& (0+255),f,b
  1356   000B90  D7FC               	bra	u9957
  1357   000B92  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1358   000B94  D7FA               	bra	u9957
  1359   000B96  D000               	nop2	
  1360                           
  1361                           ;main.c: 311:     ANSEL = 0b00001000;
  1362   000B98  0E08               	movlw	8
  1363   000B9A  6E7E               	movwf	126,c	;volatile
  1364                           
  1365                           ;main.c: 312:     TRISA = 0b00010000;
  1366   000B9C  0E10               	movlw	16
  1367   000B9E  6E92               	movwf	146,c	;volatile
  1368                           
  1369                           ;main.c: 314:     TRISCbits.RC0 = 0;
  1370   000BA0  9094               	bcf	148,0,c	;volatile
  1371                           
  1372                           ;main.c: 315:     ANSELbits.ANS4 = 0;
  1373   000BA2  987E               	bcf	126,4,c	;volatile
  1374                           
  1375                           ;main.c: 317:     setupADC();
  1376   000BA4  EC81  F018         	call	_setupADC	;wreg free
  1377                           
  1378                           ;main.c: 319:     _delay((unsigned long)((100)*(2000000/4000000.0)));
  1379   000BA8  0E10               	movlw	16
  1380   000BAA                     u9967:
  1381   000BAA  2EE8               	decfsz	wreg,f,c
  1382   000BAC  D7FE               	bra	u9967
  1383   000BAE  D000               	nop2	
  1384                           
  1385                           ;main.c: 322:     setupTimer1();
  1386   000BB0  EC46  F018         	call	_setupTimer1	;wreg free
  1387                           
  1388                           ;main.c: 324:     setupI2C();
  1389   000BB4  EC5F  F018         	call	_setupI2C	;wreg free
  1390                           
  1391                           ;main.c: 328:     TRISCbits.TRISC5 = 0;
  1392   000BB8  9A94               	bcf	148,5,c	;volatile
  1393                           
  1394                           ;main.c: 329:     TRISCbits.TRISC4 = 0;
  1395   000BBA  9894               	bcf	148,4,c	;volatile
  1396                           
  1397                           ;main.c: 330:     TRISCbits.TRISC3 = 0;
  1398   000BBC  9694               	bcf	148,3,c	;volatile
  1399                           
  1400                           ;main.c: 331:     TRISCbits.TRISC6 = 0;
  1401   000BBE  9C94               	bcf	148,6,c	;volatile
  1402                           
  1403                           ;main.c: 332:     TRISCbits.TRISC7 = 0;
  1404   000BC0  9E94               	bcf	148,7,c	;volatile
  1405                           
  1406                           ;main.c: 334:     LATCbits.LATC5 = 0;
  1407   000BC2  9A8B               	bcf	139,5,c	;volatile
  1408                           
  1409                           ;main.c: 335:     LATCbits.LATC4 = 0;
  1410   000BC4  988B               	bcf	139,4,c	;volatile
  1411                           
  1412                           ;main.c: 336:     LATCbits.LATC3 = 0;
  1413   000BC6  968B               	bcf	139,3,c	;volatile
  1414                           
  1415                           ;main.c: 337:     LATCbits.LATC6 = 0;
  1416   000BC8  9C8B               	bcf	139,6,c	;volatile
  1417                           
  1418                           ;main.c: 338:     LATCbits.LATC7 = 0;
  1419   000BCA  9E8B               	bcf	139,7,c	;volatile
  1420                           
  1421                           ;main.c: 341:     TRISCbits.RC1 = 1;
  1422   000BCC  8294               	bsf	148,1,c	;volatile
  1423                           
  1424                           ;main.c: 342:     TRISCbits.RC2 = 1;
  1425   000BCE  8494               	bsf	148,2,c	;volatile
  1426                           
  1427                           ;main.c: 343:     setButtonInterrupt();
  1428   000BD0  EC68  F018         	call	_setButtonInterrupt	;wreg free
  1429                           
  1430                           ;main.c: 346:     setupEUSART();
  1431   000BD4  EC28  F018         	call	_setupEUSART	;wreg free
  1432                           
  1433                           ;main.c: 348:     INTCONbits.PEIE = 1;
  1434   000BD8  8CF2               	bsf	242,6,c	;volatile
  1435                           
  1436                           ;main.c: 349:     INTCONbits.GIE = 1;
  1437   000BDA  8EF2               	bsf	242,7,c	;volatile
  1438                           
  1439                           ;main.c: 351:     adcSampling();
  1440   000BDC  EC38  F018         	call	_adcSampling	;wreg free
  1441   000BE0                     l7859:
  1442                           
  1443                           ;main.c: 355:         if( sampling == 1 && fsm_state == 1 ){
  1444   000BE0  0100               	movlb	0	; () banked
  1445   000BE2  05FE               	decf	_sampling& (0+255),w,b
  1446   000BE4  A4D8               	btfss	status,2,c
  1447   000BE6  D070               	goto	l7895
  1448                           
  1449                           ; BSR set to: 0
  1450   000BE8  05F9               	decf	_fsm_state& (0+255),w,b
  1451   000BEA  A4D8               	btfss	status,2,c
  1452   000BEC  D06D               	goto	l7895
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;main.c: 357:             LATAbits.LA5 = 1;
  1456   000BEE  8A89               	bsf	137,5,c	;volatile
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;main.c: 359:             adc_voltage = adc_step_size * adcResult;
  1460   000BF0  C0F6  F060         	movff	_adcResult,___xxtofl@val
  1461   000BF4  C0F7  F061         	movff	_adcResult+1,___xxtofl@val+1
  1462   000BF8  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1463   000BFA  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1464   000BFC  0E00               	movlw	0
  1465   000BFE  ECCD  F010         	call	___xxtofl
  1466   000C02  C060  F06E         	movff	?___xxtofl,___flmul@b
  1467   000C06  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1468   000C0A  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1469   000C0E  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1470   000C12  0E0A               	movlw	10
  1471   000C14  6F72               	movwf	___flmul@a& (0+255),b
  1472   000C16  0E28               	movlw	40
  1473   000C18  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1474   000C1A  0EA0               	movlw	160
  1475   000C1C  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1476   000C1E  0E3B               	movlw	59
  1477   000C20  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1478   000C22  EC7B  F007         	call	___flmul	;wreg free
  1479   000C26  C06E  F0EA         	movff	?___flmul,_adc_voltage
  1480   000C2A  C06F  F0EB         	movff	?___flmul+1,_adc_voltage+1
  1481   000C2E  C070  F0EC         	movff	?___flmul+2,_adc_voltage+2
  1482   000C32  C071  F0ED         	movff	?___flmul+3,_adc_voltage+3
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;main.c: 362:             address_index++;
  1486   000C36  4BF2               	infsnz	_address_index& (0+255),f,b
  1487   000C38  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;main.c: 363:             EEPROMWrite(address_index, getLowByte( adcResult) );
  1491   000C3A  C0F6  F060         	movff	_adcResult,getLowByte@number
  1492   000C3E  C0F7  F061         	movff	_adcResult+1,getLowByte@number+1
  1493   000C42  EC99  F018         	call	_getLowByte	;wreg free
  1494   000C46  0101               	movlb	1	; () banked
  1495   000C48  6F5C               	movwf	_main$2067& (0+255),b
  1496                           
  1497                           ; BSR set to: 1
  1498                           ;main.c: 363:             EEPROMWrite(address_index, getLowByte( adcResult) );
  1499   000C4A  C0F2  F062         	movff	_address_index,EEPROMWrite@address
  1500   000C4E  C0F3  F063         	movff	_address_index+1,EEPROMWrite@address+1
  1501   000C52  C15C  F064         	movff	_main$2067,EEPROMWrite@data
  1502   000C56  EC24  F016         	call	_EEPROMWrite	;wreg free
  1503                           
  1504                           ;main.c: 364:             address_index++;
  1505   000C5A  0100               	movlb	0	; () banked
  1506   000C5C  4BF2               	infsnz	_address_index& (0+255),f,b
  1507   000C5E  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;main.c: 365:             EEPROMWrite(address_index, getHighByte( adcResult) );
  1511   000C60  C0F6  F060         	movff	_adcResult,getHighByte@number
  1512   000C64  C0F7  F061         	movff	_adcResult+1,getHighByte@number+1
  1513   000C68  EC9E  F018         	call	_getHighByte	;wreg free
  1514   000C6C  0101               	movlb	1	; () banked
  1515   000C6E  6F5D               	movwf	_main$2068& (0+255),b
  1516                           
  1517                           ; BSR set to: 1
  1518                           ;main.c: 365:             EEPROMWrite(address_index, getHighByte( adcResult) );
  1519   000C70  C0F2  F062         	movff	_address_index,EEPROMWrite@address
  1520   000C74  C0F3  F063         	movff	_address_index+1,EEPROMWrite@address+1
  1521   000C78  C15D  F064         	movff	_main$2068,EEPROMWrite@data
  1522   000C7C  EC24  F016         	call	_EEPROMWrite	;wreg free
  1523                           
  1524                           ;main.c: 366:             address_index++;
  1525   000C80  0100               	movlb	0	; () banked
  1526   000C82  4BF2               	infsnz	_address_index& (0+255),f,b
  1527   000C84  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;main.c: 367:             EEPROMWrite(address_index, 254 );
  1531   000C86  C0F2  F062         	movff	_address_index,EEPROMWrite@address
  1532   000C8A  C0F3  F063         	movff	_address_index+1,EEPROMWrite@address+1
  1533   000C8E  0EFE               	movlw	254
  1534   000C90  6F64               	movwf	EEPROMWrite@data& (0+255),b
  1535   000C92  EC24  F016         	call	_EEPROMWrite	;wreg free
  1536                           
  1537                           ;main.c: 369:             if( address_index >= 8100 ){
  1538   000C96  0EA4               	movlw	164
  1539   000C98  0100               	movlb	0	; () banked
  1540   000C9A  5DF2               	subwf	_address_index& (0+255),w,b
  1541   000C9C  0E1F               	movlw	31
  1542   000C9E  59F3               	subwfb	(_address_index+1)& (0+255),w,b
  1543   000CA0  A0D8               	btfss	status,0,c
  1544   000CA2  D005               	goto	l7889
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 374:                 fsm_state = 0;
  1548   000CA4  6BF9               	clrf	_fsm_state& (0+255),b
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;main.c: 375:                 address_index = 0;
  1552   000CA6  0E00               	movlw	0
  1553   000CA8  6FF3               	movwf	(_address_index+1)& (0+255),b
  1554   000CAA  0E00               	movlw	0
  1555   000CAC  6FF2               	movwf	_address_index& (0+255),b
  1556   000CAE                     l7889:
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;main.c: 378:             _delay((unsigned long)((1000)*(2000000/4000.0)));
  1560   000CAE  0E03               	movlw	3
  1561   000CB0  0100               	movlb	0	; () banked
  1562   000CB2  6FE1               	movwf	(??_main+1)& (0+255),b
  1563   000CB4  0E8A               	movlw	138
  1564   000CB6  6FE0               	movwf	??_main& (0+255),b
  1565   000CB8  0E55               	movlw	85
  1566   000CBA                     u9977:
  1567   000CBA  2EE8               	decfsz	wreg,f,c
  1568   000CBC  D7FE               	bra	u9977
  1569   000CBE  2FE0               	decfsz	??_main& (0+255),f,b
  1570   000CC0  D7FC               	bra	u9977
  1571   000CC2  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1572   000CC4  D7FA               	bra	u9977
  1573   000CC6  D054               	goto	L38
  1574   000CC8                     l7895:
  1575                           
  1576                           ; BSR set to: 0
  1577   000CC8  05FE               	decf	_sampling& (0+255),w,b
  1578   000CCA  A4D8               	btfss	status,2,c
  1579   000CCC  D055               	goto	l7915
  1580                           
  1581                           ; BSR set to: 0
  1582   000CCE  0E02               	movlw	2
  1583   000CD0  19F9               	xorwf	_fsm_state& (0+255),w,b
  1584   000CD2  A4D8               	btfss	status,2,c
  1585   000CD4  D051               	goto	l7915
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;main.c: 384:             LATAbits.LA5 = 1;
  1589   000CD6  8A89               	bsf	137,5,c	;volatile
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;main.c: 385:             adc_voltage = adc_step_size * adcResult;
  1593   000CD8  C0F6  F060         	movff	_adcResult,___xxtofl@val
  1594   000CDC  C0F7  F061         	movff	_adcResult+1,___xxtofl@val+1
  1595   000CE0  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1596   000CE2  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1597   000CE4  0E00               	movlw	0
  1598   000CE6  ECCD  F010         	call	___xxtofl
  1599   000CEA  C060  F06E         	movff	?___xxtofl,___flmul@b
  1600   000CEE  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1601   000CF2  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1602   000CF6  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1603   000CFA  0E0A               	movlw	10
  1604   000CFC  6F72               	movwf	___flmul@a& (0+255),b
  1605   000CFE  0E28               	movlw	40
  1606   000D00  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1607   000D02  0EA0               	movlw	160
  1608   000D04  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1609   000D06  0E3B               	movlw	59
  1610   000D08  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1611   000D0A  EC7B  F007         	call	___flmul	;wreg free
  1612   000D0E  C06E  F0EA         	movff	?___flmul,_adc_voltage
  1613   000D12  C06F  F0EB         	movff	?___flmul+1,_adc_voltage+1
  1614   000D16  C070  F0EC         	movff	?___flmul+2,_adc_voltage+2
  1615   000D1A  C071  F0ED         	movff	?___flmul+3,_adc_voltage+3
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;main.c: 389:             sprintf(uart_buffer, "%.2f", adc_voltage);
  1619   000D1E  0E40               	movlw	low _uart_buffer
  1620   000D20  6FDA               	movwf	sprintf@s& (0+255),b
  1621   000D22  0E11               	movlw	low STR_2
  1622   000D24  6FDB               	movwf	sprintf@fmt& (0+255),b
  1623   000D26  C0EA  F0DC         	movff	_adc_voltage,?_sprintf+2
  1624   000D2A  C0EB  F0DD         	movff	_adc_voltage+1,?_sprintf+3
  1625   000D2E  C0EC  F0DE         	movff	_adc_voltage+2,?_sprintf+4
  1626   000D32  C0ED  F0DF         	movff	_adc_voltage+3,?_sprintf+5
  1627   000D36  EC2A  F017         	call	_sprintf	;wreg free
  1628                           
  1629                           ; BSR set to: 1
  1630                           ;main.c: 391:             EUSART_TransmitString(uart_buffer);
  1631   000D3A  0E40               	movlw	low _uart_buffer
  1632   000D3C  0100               	movlb	0	; () banked
  1633   000D3E  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1634   000D40  6B62               	clrf	(EUSART_TransmitString@a+1)& (0+255),b
  1635   000D42  EC32  F015         	call	_EUSART_TransmitString	;wreg free
  1636                           
  1637                           ;main.c: 392:             EUSART_TransmitString("\r\n");
  1638   000D46  0E0E               	movlw	low (STR_5+4)
  1639   000D48  0100               	movlb	0	; () banked
  1640   000D4A  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1641   000D4C  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1642   000D4E  A4D8               	btfss	status,2,c
  1643   000D50  0E03               	movlw	high __smallconst
  1644   000D52  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1645   000D54  EC32  F015         	call	_EUSART_TransmitString	;wreg free
  1646                           
  1647                           ;main.c: 394:             _delay((unsigned long)((1000)*(2000000/4000.0)));
  1648   000D58  0E03               	movlw	3
  1649   000D5A  0100               	movlb	0	; () banked
  1650   000D5C  6FE1               	movwf	(??_main+1)& (0+255),b
  1651   000D5E  0E8A               	movlw	138
  1652   000D60  6FE0               	movwf	??_main& (0+255),b
  1653   000D62  0E55               	movlw	85
  1654   000D64                     u9987:
  1655   000D64  2EE8               	decfsz	wreg,f,c
  1656   000D66  D7FE               	bra	u9987
  1657   000D68  2FE0               	decfsz	??_main& (0+255),f,b
  1658   000D6A  D7FC               	bra	u9987
  1659   000D6C  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1660   000D6E  D7FA               	bra	u9987
  1661   000D70                     L38:
  1662   000D70  D000               	nop2	
  1663                           
  1664                           ;main.c: 396:             sampling = 0;
  1665   000D72  0100               	movlb	0	; () banked
  1666   000D74  6BFE               	clrf	_sampling& (0+255),b
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;main.c: 397:             LATAbits.LA5 = 0;
  1670   000D76  9A89               	bcf	137,5,c	;volatile
  1671   000D78                     l7915:
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;main.c: 401:         if( fsm_state == 3 ){
  1675   000D78  0E03               	movlw	3
  1676   000D7A  19F9               	xorwf	_fsm_state& (0+255),w,b
  1677   000D7C  A4D8               	btfss	status,2,c
  1678   000D7E  D08F               	goto	l7955
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;main.c: 403:             LATAbits.LA5 = 1;
  1682   000D80  8A89               	bsf	137,5,c	;volatile
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;main.c: 405:             if( address_index == 0){
  1686   000D82  51F2               	movf	_address_index& (0+255),w,b
  1687   000D84  11F3               	iorwf	(_address_index+1)& (0+255),w,b
  1688   000D86  A4D8               	btfss	status,2,c
  1689   000D88  D00C               	goto	l7925
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;main.c: 406:                 EUSART_TransmitString("START \r\n");
  1693   000D8A  0E01               	movlw	low STR_1
  1694   000D8C  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1695   000D8E  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1696   000D90  A4D8               	btfss	status,2,c
  1697   000D92  0E03               	movlw	high __smallconst
  1698   000D94  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1699   000D96  EC32  F015         	call	_EUSART_TransmitString	;wreg free
  1700                           
  1701                           ;main.c: 407:                 address_index++;
  1702   000D9A  0100               	movlb	0	; () banked
  1703   000D9C  4BF2               	infsnz	_address_index& (0+255),f,b
  1704   000D9E  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1705                           
  1706                           ;main.c: 409:             }else if(address_index >= 7200 ){
  1707   000DA0  D082               	goto	l7959
  1708   000DA2                     l7925:
  1709                           
  1710                           ; BSR set to: 0
  1711   000DA2  0E20               	movlw	32
  1712   000DA4  5DF2               	subwf	_address_index& (0+255),w,b
  1713   000DA6  0E1C               	movlw	28
  1714   000DA8  59F3               	subwfb	(_address_index+1)& (0+255),w,b
  1715   000DAA  A0D8               	btfss	status,0,c
  1716   000DAC  D00D               	goto	l7931
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;main.c: 410:                 EUSART_TransmitString("END \r\n");
  1720   000DAE  0E0A               	movlw	low STR_5
  1721   000DB0  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1722   000DB2  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1723   000DB4  A4D8               	btfss	status,2,c
  1724   000DB6  0E03               	movlw	high __smallconst
  1725   000DB8  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1726   000DBA  EC32  F015         	call	_EUSART_TransmitString	;wreg free
  1727                           
  1728                           ;main.c: 411:                 address_index = 0;
  1729   000DBE  0E00               	movlw	0
  1730   000DC0  0100               	movlb	0	; () banked
  1731   000DC2  6FF3               	movwf	(_address_index+1)& (0+255),b
  1732   000DC4  0E00               	movlw	0
  1733   000DC6  D069               	goto	L1
  1734   000DC8                     l7931:
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;main.c: 414:                 eeprom_data_lsb = EEPROMRead(address_index);
  1738   000DC8  C0F2  F062         	movff	_address_index,EEPROMRead@address
  1739   000DCC  C0F3  F063         	movff	_address_index+1,EEPROMRead@address+1
  1740   000DD0  EC76  F016         	call	_EEPROMRead	;wreg free
  1741   000DD4  6FFD               	movwf	_eeprom_data_lsb& (0+255),b
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;main.c: 415:                 address_index++;
  1745   000DD6  4BF2               	infsnz	_address_index& (0+255),f,b
  1746   000DD8  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;main.c: 416:                 eeprom_data_msb = EEPROMRead(address_index);
  1750   000DDA  C0F2  F062         	movff	_address_index,EEPROMRead@address
  1751   000DDE  C0F3  F063         	movff	_address_index+1,EEPROMRead@address+1
  1752   000DE2  EC76  F016         	call	_EEPROMRead	;wreg free
  1753   000DE6  6FFC               	movwf	_eeprom_data_msb& (0+255),b
  1754                           
  1755                           ;main.c: 417:                 address_index++;
  1756   000DE8  4BF2               	infsnz	_address_index& (0+255),f,b
  1757   000DEA  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;main.c: 418:                 eeprom_data_ctl = EEPROMRead(address_index);
  1761   000DEC  C0F2  F062         	movff	_address_index,EEPROMRead@address
  1762   000DF0  C0F3  F063         	movff	_address_index+1,EEPROMRead@address+1
  1763   000DF4  EC76  F016         	call	_EEPROMRead	;wreg free
  1764   000DF8  6FFB               	movwf	_eeprom_data_ctl& (0+255),b
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;main.c: 419:                 address_index++;
  1768   000DFA  4BF2               	infsnz	_address_index& (0+255),f,b
  1769   000DFC  2BF3               	incf	(_address_index+1)& (0+255),f,b
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;main.c: 421:                 if( eeprom_data_ctl == 254 ){
  1773   000DFE  0EFE               	movlw	254
  1774   000E00  19FB               	xorwf	_eeprom_data_ctl& (0+255),w,b
  1775   000E02  A4D8               	btfss	status,2,c
  1776   000E04  D047               	goto	l7953
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;main.c: 424:                     eeprom_data = ((uint16_t) eeprom_data_msb << 8) | eepr
      +                          om_data_lsb;
  1780   000E06  51FC               	movf	_eeprom_data_msb& (0+255),w,b
  1781   000E08  6FE0               	movwf	??_main& (0+255),b
  1782   000E0A  51FD               	movf	_eeprom_data_lsb& (0+255),w,b
  1783   000E0C  6FF4               	movwf	_eeprom_data& (0+255),b
  1784   000E0E  C0E0  F0F5         	movff	??_main,_eeprom_data+1
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;main.c: 426:                     adc_voltage = adc_step_size * eeprom_data;
  1788   000E12  C0F4  F060         	movff	_eeprom_data,___xxtofl@val
  1789   000E16  C0F5  F061         	movff	_eeprom_data+1,___xxtofl@val+1
  1790   000E1A  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1791   000E1C  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1792   000E1E  0E00               	movlw	0
  1793   000E20  ECCD  F010         	call	___xxtofl
  1794   000E24  C060  F06E         	movff	?___xxtofl,___flmul@b
  1795   000E28  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1796   000E2C  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1797   000E30  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1798   000E34  0E0A               	movlw	10
  1799   000E36  6F72               	movwf	___flmul@a& (0+255),b
  1800   000E38  0E28               	movlw	40
  1801   000E3A  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1802   000E3C  0EA0               	movlw	160
  1803   000E3E  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1804   000E40  0E3B               	movlw	59
  1805   000E42  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1806   000E44  EC7B  F007         	call	___flmul	;wreg free
  1807   000E48  C06E  F0EA         	movff	?___flmul,_adc_voltage
  1808   000E4C  C06F  F0EB         	movff	?___flmul+1,_adc_voltage+1
  1809   000E50  C070  F0EC         	movff	?___flmul+2,_adc_voltage+2
  1810   000E54  C071  F0ED         	movff	?___flmul+3,_adc_voltage+3
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;main.c: 429:                     sprintf(uart_buffer, "%.2f", adc_voltage);
  1814   000E58  0E40               	movlw	low _uart_buffer
  1815   000E5A  6FDA               	movwf	sprintf@s& (0+255),b
  1816   000E5C  0E11               	movlw	low STR_2
  1817   000E5E  6FDB               	movwf	sprintf@fmt& (0+255),b
  1818   000E60  C0EA  F0DC         	movff	_adc_voltage,?_sprintf+2
  1819   000E64  C0EB  F0DD         	movff	_adc_voltage+1,?_sprintf+3
  1820   000E68  C0EC  F0DE         	movff	_adc_voltage+2,?_sprintf+4
  1821   000E6C  C0ED  F0DF         	movff	_adc_voltage+3,?_sprintf+5
  1822   000E70  EC2A  F017         	call	_sprintf	;wreg free
  1823                           
  1824                           ; BSR set to: 1
  1825                           ;main.c: 431:                     EUSART_TransmitString(uart_buffer);
  1826   000E74  0E40               	movlw	low _uart_buffer
  1827   000E76  0100               	movlb	0	; () banked
  1828   000E78  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1829   000E7A  6B62               	clrf	(EUSART_TransmitString@a+1)& (0+255),b
  1830   000E7C  EC32  F015         	call	_EUSART_TransmitString	;wreg free
  1831                           
  1832                           ;main.c: 432:                     EUSART_TransmitString("\r\n");
  1833   000E80  0E0E               	movlw	low (STR_5+4)
  1834   000E82  0100               	movlb	0	; () banked
  1835   000E84  6F61               	movwf	EUSART_TransmitString@a& (0+255),b
  1836   000E86  5161               	movf	EUSART_TransmitString@a& (0+255),w,b
  1837   000E88  A4D8               	btfss	status,2,c
  1838   000E8A  0E03               	movlw	high __smallconst
  1839   000E8C  6F62               	movwf	(EUSART_TransmitString@a+1)& (0+255),b
  1840   000E8E  EC32  F015         	call	_EUSART_TransmitString	;wreg free
  1841                           
  1842                           ;main.c: 433:                 }else{
  1843   000E92  D009               	goto	l7959
  1844   000E94                     l7953:
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;main.c: 434:                     address_index = 7200;
  1848   000E94  0E1C               	movlw	28
  1849   000E96  6FF3               	movwf	(_address_index+1)& (0+255),b
  1850   000E98  0E20               	movlw	32
  1851   000E9A                     L1:
  1852   000E9A  6FF2               	movwf	_address_index& (0+255),b
  1853   000E9C  D004               	goto	l7959
  1854   000E9E                     l7955:
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;main.c: 439:             if( fsm_state < 7){
  1858   000E9E  0E07               	movlw	7
  1859   000EA0  61F9               	cpfslt	_fsm_state& (0+255),b
  1860   000EA2  D001               	goto	l7959
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;main.c: 440:                 LATAbits.LA5 = 0;
  1864   000EA4  9A89               	bcf	137,5,c	;volatile
  1865   000EA6                     l7959:
  1866                           
  1867                           ;main.c: 444:         if( turnOnDisplay == 1 ){
  1868   000EA6  0100               	movlb	0	; () banked
  1869   000EA8  05FA               	decf	_turnOnDisplay& (0+255),w,b
  1870   000EAA  A4D8               	btfss	status,2,c
  1871   000EAC  D015               	goto	l219
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;main.c: 446:             PORTCbits.RC0 = 0;
  1875   000EAE  9082               	bcf	130,0,c	;volatile
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;main.c: 448:             setDisplayDigits();
  1879   000EB0  EC6A  F00D         	call	_setDisplayDigits	;wreg free
  1880                           
  1881                           ;main.c: 449:             show7Segment();
  1882   000EB4  EC4B  F017         	call	_show7Segment	;wreg free
  1883                           
  1884                           ;main.c: 451:             _delay((unsigned long)((10000)*(2000000/4000.0)));
  1885   000EB8  0E1A               	movlw	26
  1886   000EBA  0100               	movlb	0	; () banked
  1887   000EBC  6FE1               	movwf	(??_main+1)& (0+255),b
  1888   000EBE  0E5E               	movlw	94
  1889   000EC0  6FE0               	movwf	??_main& (0+255),b
  1890   000EC2  0E6E               	movlw	110
  1891   000EC4                     u9997:
  1892   000EC4  2EE8               	decfsz	wreg,f,c
  1893   000EC6  D7FE               	bra	u9997
  1894   000EC8  2FE0               	decfsz	??_main& (0+255),f,b
  1895   000ECA  D7FC               	bra	u9997
  1896   000ECC  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1897   000ECE  D7FA               	bra	u9997
  1898   000ED0  0000               	nop	
  1899                           
  1900                           ;main.c: 453:             turnOnDisplay = 0;
  1901   000ED2  0100               	movlb	0	; () banked
  1902   000ED4  6BFA               	clrf	_turnOnDisplay& (0+255),b
  1903                           
  1904                           ;main.c: 455:         }else{
  1905   000ED6  D684               	goto	l7859
  1906   000ED8                     l219:
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;main.c: 457:             PORTCbits.RC0 = 1;
  1910   000ED8  8082               	bsf	130,0,c	;volatile
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;main.c: 459:              _delay((unsigned long)((1000)*(2000000/4000.0)));
  1914   000EDA  0E03               	movlw	3
  1915   000EDC  0100               	movlb	0	; () banked
  1916   000EDE  6FE1               	movwf	(??_main+1)& (0+255),b
  1917   000EE0  0E8A               	movlw	138
  1918   000EE2  6FE0               	movwf	??_main& (0+255),b
  1919   000EE4  0E55               	movlw	85
  1920   000EE6                     u10007:
  1921   000EE6  2EE8               	decfsz	wreg,f,c
  1922   000EE8  D7FE               	bra	u10007
  1923   000EEA  2FE0               	decfsz	??_main& (0+255),f,b
  1924   000EEC  D7FC               	bra	u10007
  1925   000EEE  2FE1               	decfsz	(??_main+1)& (0+255),f,b
  1926   000EF0  D7FA               	bra	u10007
  1927   000EF2  D000               	nop2	
  1928   000EF4  D675               	goto	l7859
  1929   000EF6                     __end_of_main:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _sprintf *****************
  1933 ;; Defined at:
  1934 ;;		line 9 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_sprintf.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  s               1  122[BANK0 ] PTR unsigned char 
  1937 ;;		 -> uart_buffer(10), 
  1938 ;;  fmt             1  123[BANK0 ] PTR const unsigned char 
  1939 ;;		 -> STR_6(5), STR_2(5), 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  f              11    1[BANK1 ] struct _IO_FILE
  1942 ;;  ret             2    0        int 
  1943 ;;  ap              1    0[BANK1 ] PTR void [1]
  1944 ;;		 -> ?_sprintf(2), 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  2  122[BANK0 ] int 
  1947 ;; Registers used:
  1948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 3F/0
  1951 ;;		On exit  : 3F/1
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1954 ;;      Params:         0       6       0       0
  1955 ;;      Locals:         0       0      12       0
  1956 ;;      Temps:          0       0       0       0
  1957 ;;      Totals:         0       6      12       0
  1958 ;;Total ram usage:       18 bytes
  1959 ;; Hardware stack levels used: 1
  1960 ;; Hardware stack levels required when called: 10
  1961 ;; This function calls:
  1962 ;;		_vfprintf
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text1
  1969   002E54                     __ptext1:
  1970                           	callstack 0
  1971   002E54                     _sprintf:
  1972                           	callstack 20
  1973                           
  1974                           ; BSR set to: 0
  1975                           
  1976                           ;incstack = 0
  1977   002E54  0EDC               	movlw	low (?_sprintf+2)
  1978   002E56  0101               	movlb	1	; () banked
  1979   002E58  6F50               	movwf	sprintf@ap& (0+255),b
  1980   002E5A  C0DA  F151         	movff	sprintf@s,sprintf@f
  1981                           
  1982                           ; BSR set to: 1
  1983   002E5E  0E00               	movlw	0
  1984   002E60  6F54               	movwf	(sprintf@f+3)& (0+255),b
  1985   002E62  0E00               	movlw	0
  1986   002E64  6F53               	movwf	(sprintf@f+2)& (0+255),b
  1987                           
  1988                           ; BSR set to: 1
  1989   002E66  0E00               	movlw	0
  1990   002E68  6F5B               	movwf	(sprintf@f+10)& (0+255),b
  1991   002E6A  0E00               	movlw	0
  1992   002E6C  6F5A               	movwf	(sprintf@f+9)& (0+255),b
  1993                           
  1994                           ; BSR set to: 1
  1995   002E6E  0E51               	movlw	low sprintf@f
  1996   002E70  0100               	movlb	0	; () banked
  1997   002E72  6FD4               	movwf	vfprintf@fp& (0+255),b
  1998   002E74  0E01               	movlw	high sprintf@f
  1999   002E76  6FD5               	movwf	(vfprintf@fp+1)& (0+255),b
  2000   002E78  C0DB  F0D6         	movff	sprintf@fmt,vfprintf@fmt
  2001   002E7C  0E50               	movlw	low sprintf@ap
  2002   002E7E  6FD7               	movwf	vfprintf@ap& (0+255),b
  2003   002E80  0E01               	movlw	high sprintf@ap
  2004   002E82  6FD8               	movwf	(vfprintf@ap+1)& (0+255),b
  2005   002E84  ECAE  F017         	call	_vfprintf	;wreg free
  2006                           
  2007                           ; BSR set to: 0
  2008   002E88  51DA               	movf	sprintf@s& (0+255),w,b
  2009   002E8A  0101               	movlb	1	; () banked
  2010   002E8C  2553               	addwf	(sprintf@f+2)& (0+255),w,b
  2011   002E8E  6ED9               	movwf	fsr2l,c
  2012   002E90  6ADA               	clrf	fsr2h,c
  2013   002E92  6ADF               	clrf	indf2,c
  2014                           
  2015                           ; BSR set to: 1
  2016   002E94  0012               	return		;funcret
  2017   002E96                     __end_of_sprintf:
  2018                           	callstack 0
  2019                           
  2020 ;; *************** function _vfprintf *****************
  2021 ;; Defined at:
  2022 ;;		line 1817 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  fp              2  116[BANK0 ] PTR struct _IO_FILE
  2025 ;;		 -> sprintf@f(11), 
  2026 ;;  fmt             1  118[BANK0 ] PTR const unsigned char 
  2027 ;;		 -> STR_6(5), STR_2(5), 
  2028 ;;  ap              2  119[BANK0 ] PTR PTR void 
  2029 ;;		 -> sprintf@ap(1), 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  cfmt            1  121[BANK0 ] PTR unsigned char 
  2032 ;;		 -> STR_6(5), STR_2(5), 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  2  116[BANK0 ] int 
  2035 ;; Registers used:
  2036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 3F/0
  2039 ;;		On exit  : 3F/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2042 ;;      Params:         0       5       0       0
  2043 ;;      Locals:         0       1       0       0
  2044 ;;      Temps:          0       0       0       0
  2045 ;;      Totals:         0       6       0       0
  2046 ;;Total ram usage:        6 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; Hardware stack levels required when called: 9
  2049 ;; This function calls:
  2050 ;;		_vfpfcnvrt
  2051 ;; This function is called by:
  2052 ;;		_sprintf
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text2
  2057   002F5C                     __ptext2:
  2058                           	callstack 0
  2059   002F5C                     _vfprintf:
  2060                           	callstack 20
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1
      +                          818: {;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1820:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1822:     cfmt = (char *)fmt;
  2064                           
  2065                           ; BSR set to: 1
  2066                           ;incstack = 0
  2067   002F5C  C0D6  F0D9         	movff	vfprintf@fmt,vfprintf@cfmt
  2068                           
  2069                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  2070   002F60  D00C               	goto	l7583
  2071   002F62                     l7581:
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(fp, &cfmt,
      +                           ap);
  2075   002F62  C0D4  F0C8         	movff	vfprintf@fp,vfpfcnvrt@fp
  2076   002F66  C0D5  F0C9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2077   002F6A  0ED9               	movlw	low vfprintf@cfmt
  2078   002F6C  6FCA               	movwf	vfpfcnvrt@fmt& (0+255),b
  2079   002F6E  C0D7  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  2080   002F72  C0D8  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2081   002F76  EC19  F010         	call	_vfpfcnvrt	;wreg free
  2082   002F7A                     l7583:
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1826:     while (*cfmt) {
  2086   002F7A  C0D9  FFF6         	movff	vfprintf@cfmt,tblptrl
  2087   002F7E                     	if	1	;There is more than 1 active tblptr byte
  2088   002F7E  0E03               	movlw	high __smallconst
  2089   002F80  6EF7               	movwf	tblptrh,c
  2090   002F82                     	endif
  2091   002F82                     	if	0	;tblptru may be non-zero
  2092   002F82                     	endif
  2093   002F82                     	if	0	;tblptru may be non-zero
  2094   002F82                     	endif
  2095   002F82  0008               	tblrd		*
  2096   002F84  50F5               	movf	tablat,w,c
  2097   002F86  0900               	iorlw	0
  2098   002F88  A4D8               	btfss	status,2,c
  2099   002F8A  D7EB               	goto	l7581
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  2103   002F8C  0E00               	movlw	0
  2104   002F8E  6FD5               	movwf	(?_vfprintf+1)& (0+255),b
  2105   002F90  0E00               	movlw	0
  2106   002F92  6FD4               	movwf	?_vfprintf& (0+255),b
  2107                           
  2108                           ; BSR set to: 0
  2109   002F94  0012               	return		;funcret
  2110   002F96                     __end_of_vfprintf:
  2111                           	callstack 0
  2112                           
  2113 ;; *************** function _vfpfcnvrt *****************
  2114 ;; Defined at:
  2115 ;;		line 1177 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  fp              2  104[BANK0 ] PTR struct _IO_FILE
  2118 ;;		 -> sprintf@f(11), 
  2119 ;;  fmt             1  106[BANK0 ] PTR PTR unsigned char 
  2120 ;;		 -> vfprintf@cfmt(1), 
  2121 ;;  ap              2  107[BANK0 ] PTR PTR void 
  2122 ;;		 -> sprintf@ap(1), 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  convarg         4  110[BANK0 ] struct .
  2125 ;;  cp              1  115[BANK0 ] PTR unsigned char 
  2126 ;;		 -> STR_6(5), STR_2(5), 
  2127 ;;  c               1  114[BANK0 ] unsigned char 
  2128 ;;  done            1    0        _Bool 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 3F/0
  2135 ;;		On exit  : 3F/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2138 ;;      Params:         0       5       0       0
  2139 ;;      Locals:         0       6       0       0
  2140 ;;      Temps:          0       1       0       0
  2141 ;;      Totals:         0      12       0       0
  2142 ;;Total ram usage:       12 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 8
  2145 ;; This function calls:
  2146 ;;		_efgtoa
  2147 ;;		_fputc
  2148 ;;		_read_prec_or_width
  2149 ;; This function is called by:
  2150 ;;		_vfprintf
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text3
  2155   002032                     __ptext3:
  2156                           	callstack 0
  2157   002032                     _vfpfcnvrt:
  2158                           	callstack 20
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE *fp, cha
      +                          r *fmt[], va_list ap);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1178: {;
      +                          /opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1179:     char c, *cp;;/opt/mi
      +                          crochip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1180:     _Bool done;;/opt/microchip/
      +                          xc8/v2.50/pic/sources/c99/common/doprnt.c: 1188:  } convarg;;/opt/microchip/xc8/v2.50/pi
      +                          c/sources/c99/common/doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;incstack = 0
  2165   002032  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2166   002034  6ED9               	movwf	fsr2l,c
  2167   002036  6ADA               	clrf	fsr2h,c
  2168   002038  CFDF FFF6          	movff	indf2,tblptrl
  2169   00203C                     	if	1	;There is more than 1 active tblptr byte
  2170   00203C  0E03               	movlw	high __smallconst
  2171   00203E  6EF7               	movwf	tblptrh,c
  2172   002040                     	endif
  2173   002040                     	if	0	;tblptru may be non-zero
  2174   002040                     	endif
  2175   002040                     	if	0	;tblptru may be non-zero
  2176   002040                     	endif
  2177   002040  0008               	tblrd		*
  2178   002042  50F5               	movf	tablat,w,c
  2179   002044  0A25               	xorlw	37
  2180   002046  A4D8               	btfss	status,2,c
  2181   002048  D096               	goto	l7447
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt;
  2185   00204A  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2186   00204C  6ED9               	movwf	fsr2l,c
  2187   00204E  6ADA               	clrf	fsr2h,c
  2188   002050  2ADF               	incf	indf2,f,c
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1204:         flags = width =
      +                           0;
  2192   002052  0E00               	movlw	0
  2193   002054  6FEF               	movwf	(_width+1)& (0+255),b
  2194   002056  0E00               	movlw	0
  2195   002058  6FEE               	movwf	_width& (0+255),b
  2196   00205A  C0EE  F0F8         	movff	_width,_flags
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1205:         prec = -1;
  2200   00205E  69F0               	setf	_prec& (0+255),b
  2201   002060  69F1               	setf	(_prec+1)& (0+255),b
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1265:         if ((*fmt)[0] =
      +                          = '.') {
  2205   002062  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2206   002064  6ED9               	movwf	fsr2l,c
  2207   002066  6ADA               	clrf	fsr2h,c
  2208   002068  CFDF FFF6          	movff	indf2,tblptrl
  2209   00206C                     	if	1	;There is more than 1 active tblptr byte
  2210   00206C  0E03               	movlw	high __smallconst
  2211   00206E  6EF7               	movwf	tblptrh,c
  2212   002070                     	endif
  2213   002070                     	if	0	;tblptru may be non-zero
  2214   002070                     	endif
  2215   002070                     	if	0	;tblptru may be non-zero
  2216   002070                     	endif
  2217   002070  0008               	tblrd		*
  2218   002072  50F5               	movf	tablat,w,c
  2219   002074  0A2E               	xorlw	46
  2220   002076  A4D8               	btfss	status,2,c
  2221   002078  D010               	goto	l7411
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1266:             ++*fmt;
  2225   00207A  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2226   00207C  6ED9               	movwf	fsr2l,c
  2227   00207E  6ADA               	clrf	fsr2h,c
  2228   002080  2ADF               	incf	indf2,f,c
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1267:    prec = read_prec_or_
      +                          width(fmt, ap);
  2232   002082  C0CA  F060         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2233   002086  C0CB  F061         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2234   00208A  C0CC  F062         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  2235   00208E  EC5D  F014         	call	_read_prec_or_width	;wreg free
  2236   002092  C060  F0F0         	movff	?_read_prec_or_width,_prec
  2237   002096  C061  F0F1         	movff	?_read_prec_or_width+1,_prec+1
  2238   00209A                     l7411:
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1689:   cp = *fmt;
  2242   00209A  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2243   00209C  6ED9               	movwf	fsr2l,c
  2244   00209E  6ADA               	clrf	fsr2h,c
  2245   0020A0  50DF               	movf	indf2,w,c
  2246   0020A2  6FD3               	movwf	vfpfcnvrt@cp& (0+255),b
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1690:   c = *cp;
  2250   0020A4  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2251   0020A8                     	if	1	;There is more than 1 active tblptr byte
  2252   0020A8  0E03               	movlw	high __smallconst
  2253   0020AA  6EF7               	movwf	tblptrh,c
  2254   0020AC                     	endif
  2255   0020AC                     	if	0	;tblptru may be non-zero
  2256   0020AC                     	endif
  2257   0020AC                     	if	0	;tblptru may be non-zero
  2258   0020AC                     	endif
  2259   0020AC  0008               	tblrd		*
  2260   0020AE  CFF5 F0D2          	movff	tablat,vfpfcnvrt@c
  2261                           
  2262                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1691:   switch(c) {
  2263   0020B2  D007               	goto	l7421
  2264   0020B4                     l7415:
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1695:     cp++;
  2268   0020B4  2BD3               	incf	vfpfcnvrt@cp& (0+255),f,b
  2269                           
  2270                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1696:     break;
  2271   0020B6  D010               	goto	l7423
  2272   0020B8                     l7417:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1721:     c = 'l';
  2276   0020B8  0E6C               	movlw	108
  2277   0020BA  6FD2               	movwf	vfpfcnvrt@c& (0+255),b
  2278                           
  2279                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1722:     break;
  2280   0020BC  D00D               	goto	l7423
  2281   0020BE                     l1126:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1724:     c = 0;
  2285   0020BE  6BD2               	clrf	vfpfcnvrt@c& (0+255),b
  2286                           
  2287                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1725:     break;
  2288   0020C0  D00B               	goto	l7423
  2289   0020C2                     l7421:
  2290                           
  2291                           ; BSR set to: 0
  2292   0020C2  51D2               	movf	vfpfcnvrt@c& (0+255),w,b
  2293                           
  2294                           ; Switch size 1, requested type "simple"
  2295                           ; Number of cases is 3, Range of values is 76 to 108
  2296                           ; switch strategies available:
  2297                           ; Name         Instructions Cycles
  2298                           ; simple_byte           10     6 (average)
  2299                           ;	Chosen strategy is simple_byte
  2300   0020C4  0A4C               	xorlw	76	; case 76
  2301   0020C6  B4D8               	btfsc	status,2,c
  2302   0020C8  D7F5               	goto	l7415
  2303   0020CA  0A2A               	xorlw	42	; case 102
  2304   0020CC  B4D8               	btfsc	status,2,c
  2305   0020CE  D7F4               	goto	l7417
  2306   0020D0  0A0A               	xorlw	10	; case 108
  2307   0020D2  B4D8               	btfsc	status,2,c
  2308   0020D4  D7EF               	goto	l7415
  2309   0020D6  D7F3               	goto	l1126
  2310   0020D8                     l7423:
  2311                           
  2312                           ; BSR set to: 0
  2313   0020D8  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2314   0020DC                     	if	1	;There is more than 1 active tblptr byte
  2315   0020DC  0E03               	movlw	high __smallconst
  2316   0020DE  6EF7               	movwf	tblptrh,c
  2317   0020E0                     	endif
  2318   0020E0                     	if	0	;tblptru may be non-zero
  2319   0020E0                     	endif
  2320   0020E0                     	if	0	;tblptru may be non-zero
  2321   0020E0                     	endif
  2322   0020E0  0008               	tblrd		*
  2323   0020E2  50F5               	movf	tablat,w,c
  2324   0020E4  0A66               	xorlw	102
  2325   0020E6  B4D8               	btfsc	status,2,c
  2326   0020E8  D015               	goto	l7431
  2327   0020EA  D040               	goto	l7443
  2328   0020EC                     l7425:
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1759:      convarg.f = (long 
      +                          double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2332                           
  2333                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1757:      break;
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1756:      convarg.f = (long 
      +                          double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2337   0020EC  C0CB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2338   0020F0  C0CC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2339   0020F4  CFDF F0CD          	movff	indf2,??_vfpfcnvrt
  2340   0020F8  0E04               	movlw	4
  2341   0020FA  26DF               	addwf	indf2,f,c
  2342   0020FC  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  2343   0020FE  6ED9               	movwf	fsr2l,c
  2344   002100  6ADA               	clrf	fsr2h,c
  2345   002102  CFDE F0CE          	movff	postinc2,vfpfcnvrt@convarg
  2346   002106  CFDE F0CF          	movff	postinc2,vfpfcnvrt@convarg+1
  2347   00210A  CFDE F0D0          	movff	postinc2,vfpfcnvrt@convarg+2
  2348   00210E  CFDE F0D1          	movff	postinc2,vfpfcnvrt@convarg+3
  2349                           
  2350                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1760:      break;
  2351   002112  D007               	goto	l7433
  2352   002114                     l7431:
  2353                           
  2354                           ; BSR set to: 0
  2355   002114  51D2               	movf	vfpfcnvrt@c& (0+255),w,b
  2356                           
  2357                           ; Switch size 1, requested type "simple"
  2358                           ; Number of cases is 2, Range of values is 76 to 108
  2359                           ; switch strategies available:
  2360                           ; Name         Instructions Cycles
  2361                           ; simple_byte            7     4 (average)
  2362                           ;	Chosen strategy is simple_byte
  2363   002116  0A4C               	xorlw	76	; case 76
  2364   002118  B4D8               	btfsc	status,2,c
  2365   00211A  D7E8               	goto	l7425
  2366   00211C  0A20               	xorlw	32	; case 108
  2367   00211E  B4D8               	btfsc	status,2,c
  2368   002120  D7E5               	goto	l7425
  2369   002122                     l7433:
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1762:    *fmt = cp+1;
  2373   002122  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2374   002124  6ED9               	movwf	fsr2l,c
  2375   002126  6ADA               	clrf	fsr2h,c
  2376   002128  29D3               	incf	vfpfcnvrt@cp& (0+255),w,b
  2377   00212A  6EDF               	movwf	indf2,c
  2378                           
  2379                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1763:    switch (*cp) {
  2380   00212C  D016               	goto	l7441
  2381   00212E                     l7435:
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1790:      return (void) efgt
      +                          oa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2385   00212E  C0C8  F093         	movff	vfpfcnvrt@fp,efgtoa@fp
  2386   002132  C0C9  F094         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2387   002136  C0CE  F095         	movff	vfpfcnvrt@convarg,efgtoa@f
  2388   00213A  C0CF  F096         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2389   00213E  C0D0  F097         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2390   002142  C0D1  F098         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2391   002146  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2392   00214A                     	if	1	;There is more than 1 active tblptr byte
  2393   00214A  0E03               	movlw	high __smallconst
  2394   00214C  6EF7               	movwf	tblptrh,c
  2395   00214E                     	endif
  2396   00214E                     	if	0	;tblptru may be non-zero
  2397   00214E                     	endif
  2398   00214E                     	if	0	;tblptru may be non-zero
  2399   00214E                     	endif
  2400   00214E  0008               	tblrd		*
  2401   002150  CFF5 F099          	movff	tablat,efgtoa@c
  2402   002154  EC90  F001         	call	_efgtoa	;wreg free
  2403   002158  0012               	return	
  2404   00215A                     l7441:
  2405                           
  2406                           ; BSR set to: 0
  2407   00215A  C0D3  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2408   00215E                     	if	1	;There is more than 1 active tblptr byte
  2409   00215E  0E03               	movlw	high __smallconst
  2410   002160  6EF7               	movwf	tblptrh,c
  2411   002162                     	endif
  2412   002162                     	if	0	;tblptru may be non-zero
  2413   002162                     	endif
  2414   002162                     	if	0	;tblptru may be non-zero
  2415   002162                     	endif
  2416   002162  0008               	tblrd		*
  2417   002164  50F5               	movf	tablat,w,c
  2418                           
  2419                           ; Switch size 1, requested type "simple"
  2420                           ; Number of cases is 1, Range of values is 102 to 102
  2421                           ; switch strategies available:
  2422                           ; Name         Instructions Cycles
  2423                           ; simple_byte            4     3 (average)
  2424                           ;	Chosen strategy is simple_byte
  2425   002166  0A66               	xorlw	102	; case 102
  2426   002168  B4D8               	btfsc	status,2,c
  2427   00216A  D7E1               	goto	l7435
  2428   00216C                     l7443:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt;
  2432   00216C  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2433   00216E  6ED9               	movwf	fsr2l,c
  2434   002170  6ADA               	clrf	fsr2h,c
  2435   002172  2ADF               	incf	indf2,f,c
  2436   002174  0012               	return	
  2437   002176                     l7447:
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1811:     fputc((int)(*fmt)[0
      +                          ], fp);
  2441   002176  51CA               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2442   002178  6ED9               	movwf	fsr2l,c
  2443   00217A  6ADA               	clrf	fsr2h,c
  2444   00217C  CFDF FFF6          	movff	indf2,tblptrl
  2445   002180                     	if	1	;There is more than 1 active tblptr byte
  2446   002180  0E03               	movlw	high __smallconst
  2447   002182  6EF7               	movwf	tblptrh,c
  2448   002184                     	endif
  2449   002184                     	if	0	;tblptru may be non-zero
  2450   002184                     	endif
  2451   002184                     	if	0	;tblptru may be non-zero
  2452   002184                     	endif
  2453   002184  0008               	tblrd		*
  2454   002186  50F5               	movf	tablat,w,c
  2455   002188  6F60               	movwf	fputc@c& (0+255),b
  2456   00218A  6B61               	clrf	(fputc@c+1)& (0+255),b
  2457   00218C  C0C8  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2458   002190  C0C9  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2459   002194  ECA5  F014         	call	_fputc	;wreg free
  2460   002198  D7E9               	goto	l7443
  2461   00219A                     __end_of_vfpfcnvrt:
  2462                           	callstack 0
  2463                           
  2464 ;; *************** function _read_prec_or_width *****************
  2465 ;; Defined at:
  2466 ;;		line 1158 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  fmt             1    0[BANK0 ] PTR PTR const unsigned c
  2469 ;;		 -> vfprintf@cfmt(1), 
  2470 ;;  ap              2    1[BANK0 ] PTR PTR void [1]
  2471 ;;		 -> sprintf@ap(1), 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  c               1    5[BANK0 ] unsigned char 
  2474 ;;  n               2    6[BANK0 ] int 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  2    0[BANK0 ] int 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2479 ;; Tracked objects:
  2480 ;;		On entry : 3F/0
  2481 ;;		On exit  : 3F/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2484 ;;      Params:         0       3       0       0
  2485 ;;      Locals:         0       3       0       0
  2486 ;;      Temps:          0       2       0       0
  2487 ;;      Totals:         0       8       0       0
  2488 ;;Total ram usage:        8 bytes
  2489 ;; Hardware stack levels used: 1
  2490 ;; Hardware stack levels required when called: 3
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_vfpfcnvrt
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text4
  2499   0028BA                     __ptext4:
  2500                           	callstack 0
  2501   0028BA                     _read_prec_or_width:
  2502                           	callstack 24
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;incstack = 0
  2509   0028BA  0E00               	movlw	0
  2510   0028BC  6F67               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2511   0028BE  0E00               	movlw	0
  2512   0028C0  6F66               	movwf	read_prec_or_width@n& (0+255),b
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)[0] == '*
      +                          ') {
  2516   0028C2  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2517   0028C4  6ED9               	movwf	fsr2l,c
  2518   0028C6  6ADA               	clrf	fsr2h,c
  2519   0028C8  CFDF FFF6          	movff	indf2,tblptrl
  2520   0028CC                     	if	1	;There is more than 1 active tblptr byte
  2521   0028CC  0E03               	movlw	high __smallconst
  2522   0028CE  6EF7               	movwf	tblptrh,c
  2523   0028D0                     	endif
  2524   0028D0                     	if	0	;tblptru may be non-zero
  2525   0028D0                     	endif
  2526   0028D0                     	if	0	;tblptru may be non-zero
  2527   0028D0                     	endif
  2528   0028D0  0008               	tblrd		*
  2529   0028D2  50F5               	movf	tablat,w,c
  2530   0028D4  0A2A               	xorlw	42
  2531   0028D6  A4D8               	btfss	status,2,c
  2532   0028D8  D025               	goto	l7395
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt;
  2536   0028DA  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2537   0028DC  6ED9               	movwf	fsr2l,c
  2538   0028DE  6ADA               	clrf	fsr2h,c
  2539   0028E0  2ADF               	incf	indf2,f,c
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1162:         n = (*(int *)__
      +                          va_arg(*(int **)*ap, (int)0));
  2543   0028E2  C061  FFD9         	movff	read_prec_or_width@ap,fsr2l
  2544   0028E6  C062  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  2545   0028EA  0E02               	movlw	2
  2546   0028EC  26DF               	addwf	indf2,f,c
  2547   0028EE  5CDF               	subwf	indf2,w,c
  2548   0028F0  6ED9               	movwf	fsr2l,c
  2549   0028F2  6ADA               	clrf	fsr2h,c
  2550   0028F4  CFDE F066          	movff	postinc2,read_prec_or_width@n
  2551   0028F8  CFDE F067          	movff	postinc2,read_prec_or_width@n+1
  2552                           
  2553                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1163:     } else {
  2554   0028FC  D021               	goto	u9350
  2555   0028FE                     l7391:
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1166:             n = n * 10 
      +                          + c;
  2559   0028FE  0E0A               	movlw	10
  2560   002900  0366               	mulwf	read_prec_or_width@n& (0+255),b
  2561   002902  CFF3 F063          	movff	prodl,??_read_prec_or_width
  2562   002906  CFF4 F064          	movff	prodh,??_read_prec_or_width+1
  2563   00290A  0367               	mulwf	(read_prec_or_width@n+1)& (0+255),b
  2564   00290C  50F3               	movf	prodl,w,c
  2565   00290E  2764               	addwf	(??_read_prec_or_width+1)& (0+255),f,b
  2566   002910  5165               	movf	read_prec_or_width@c& (0+255),w,b
  2567   002912  2563               	addwf	??_read_prec_or_width& (0+255),w,b
  2568   002914  6F66               	movwf	read_prec_or_width@n& (0+255),b
  2569   002916  0E00               	movlw	0
  2570   002918  2164               	addwfc	(??_read_prec_or_width+1)& (0+255),w,b
  2571   00291A  6F67               	movwf	(read_prec_or_width@n+1)& (0+255),b
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1167:             ++*fmt;
  2575   00291C  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2576   00291E  6ED9               	movwf	fsr2l,c
  2577   002920  6ADA               	clrf	fsr2h,c
  2578   002922  2ADF               	incf	indf2,f,c
  2579   002924                     l7395:
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1165:         while ((c = ((u
      +                          nsigned)(*fmt)[0]) - '0') < 10) {
  2583   002924  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  2584   002926  6ED9               	movwf	fsr2l,c
  2585   002928  6ADA               	clrf	fsr2h,c
  2586   00292A  CFDF FFF6          	movff	indf2,tblptrl
  2587   00292E                     	if	1	;There is more than 1 active tblptr byte
  2588   00292E  0E03               	movlw	high __smallconst
  2589   002930  6EF7               	movwf	tblptrh,c
  2590   002932                     	endif
  2591   002932                     	if	0	;tblptru may be non-zero
  2592   002932                     	endif
  2593   002932                     	if	0	;tblptru may be non-zero
  2594   002932                     	endif
  2595   002932  0008               	tblrd		*
  2596   002934  50F5               	movf	tablat,w,c
  2597   002936  0FD0               	addlw	208
  2598   002938  6F65               	movwf	read_prec_or_width@c& (0+255),b
  2599   00293A  0E09               	movlw	9
  2600   00293C  6565               	cpfsgt	read_prec_or_width@c& (0+255),b
  2601   00293E  D7DF               	goto	l7391
  2602   002940                     u9350:
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1170:     return n;
  2606                           
  2607                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 1169:     }
  2608   002940  C066  F060         	movff	read_prec_or_width@n,?_read_prec_or_width
  2609   002944  C067  F061         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2610                           
  2611                           ; BSR set to: 0
  2612   002948  0012               	return		;funcret
  2613   00294A                     __end_of_read_prec_or_width:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _efgtoa *****************
  2617 ;; Defined at:
  2618 ;;		line 587 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  fp              2   51[BANK0 ] PTR struct _IO_FILE
  2621 ;;		 -> sprintf@f(11), 
  2622 ;;  f               4   53[BANK0 ] PTR struct _IO_FILE
  2623 ;;  c               1   57[BANK0 ] unsigned char 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  u               4  100[BANK0 ] struct flui
  2626 ;;  g               4   94[BANK0 ] struct flui
  2627 ;;  l               4   89[BANK0 ] struct flui
  2628 ;;  h               4   85[BANK0 ] struct flui
  2629 ;;  ou              4   79[BANK0 ] struct flui
  2630 ;;  n               2   98[BANK0 ] int 
  2631 ;;  i               2   83[BANK0 ] int 
  2632 ;;  w               2   77[BANK0 ] int 
  2633 ;;  e               2   75[BANK0 ] int 
  2634 ;;  m               2   73[BANK0 ] int 
  2635 ;;  d               2   71[BANK0 ] int 
  2636 ;;  t               2   64[BANK0 ] int 
  2637 ;;  p               2   62[BANK0 ] int 
  2638 ;;  ne              2   60[BANK0 ] int 
  2639 ;;  sign            1   93[BANK0 ] unsigned char 
  2640 ;;  nmode           1   70[BANK0 ] unsigned char 
  2641 ;;  mode            1   69[BANK0 ] unsigned char 
  2642 ;;  pp              1   68[BANK0 ] unsigned char 
  2643 ;;  esign           1    0        unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 3F/0
  2650 ;;		On exit  : 3F/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2653 ;;      Params:         0       7       0       0
  2654 ;;      Locals:         0      44       0       0
  2655 ;;      Temps:          0       2       0       0
  2656 ;;      Totals:         0      53       0       0
  2657 ;;Total ram usage:       53 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 7
  2660 ;; This function calls:
  2661 ;;		___fladd
  2662 ;;		___fldiv
  2663 ;;		___fleq
  2664 ;;		___flge
  2665 ;;		___flmul
  2666 ;;		___flneg
  2667 ;;		___flsub
  2668 ;;		___fltol
  2669 ;;		___fpclassifyf
  2670 ;;		_floorf
  2671 ;;		_labs
  2672 ;;		_memcpy
  2673 ;;		_pad
  2674 ;;		_strcpy
  2675 ;; This function is called by:
  2676 ;;		_vfpfcnvrt
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text5
  2681   000320                     __ptext5:
  2682                           	callstack 0
  2683   000320                     _efgtoa:
  2684                           	callstack 20
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 587: static void efgtoa(FILE 
      +                          *fp, long double f, char c);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 58
      +                          8: {;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 589:     char mode, nmode
      +                          , pp, sign, esign;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 590:     in
      +                          t d, e, i, m, n, ne, p, t, w;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 
      +                          591:     long double h, l;;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 592
      +                          :  union flui g, u, ou;
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;incstack = 0
  2691   000320  6BBD               	clrf	efgtoa@sign& (0+255),b
  2692                           
  2693                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 596:     g.f = f;
  2694   000322  C095  F0BE         	movff	efgtoa@f,efgtoa@g
  2695   000326  C096  F0BF         	movff	efgtoa@f+1,efgtoa@g+1
  2696   00032A  C097  F0C0         	movff	efgtoa@f+2,efgtoa@g+2
  2697   00032E  C098  F0C1         	movff	efgtoa@f+3,efgtoa@g+3
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 597:     if (g.f < 0.0) {
  2701   000332  AFC1               	btfss	(efgtoa@g+3)& (0+255),7,b
  2702   000334  D014               	goto	l7171
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 598:         sign = 1;
  2706   000336  0E01               	movlw	1
  2707   000338  6FBD               	movwf	efgtoa@sign& (0+255),b
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 599:         g.f = -g.f;
  2711   00033A  C0BE  F060         	movff	efgtoa@g,___flneg@f1
  2712   00033E  C0BF  F061         	movff	efgtoa@g+1,___flneg@f1+1
  2713   000342  C0C0  F062         	movff	efgtoa@g+2,___flneg@f1+2
  2714   000346  C0C1  F063         	movff	efgtoa@g+3,___flneg@f1+3
  2715   00034A  ECFF  F017         	call	___flneg	;wreg free
  2716   00034E  C060  F0BE         	movff	?___flneg,efgtoa@g
  2717   000352  C061  F0BF         	movff	?___flneg+1,efgtoa@g+1
  2718   000356  C062  F0C0         	movff	?___flneg+2,efgtoa@g+2
  2719   00035A  C063  F0C1         	movff	?___flneg+3,efgtoa@g+3
  2720   00035E                     l7171:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 603:     n = 0;
  2724   00035E  0E00               	movlw	0
  2725   000360  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2726   000362  0E00               	movlw	0
  2727   000364  6FC2               	movwf	efgtoa@n& (0+255),b
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 604:     w = width;
  2731   000366  C0EE  F0AD         	movff	_width,efgtoa@w
  2732   00036A  C0EF  F0AE         	movff	_width+1,efgtoa@w+1
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 605:     if (sign
  2736   00036E  51BD               	movf	efgtoa@sign& (0+255),w,b
  2737   000370  B4D8               	btfsc	status,2,c
  2738   000372  D00D               	goto	l7185
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 609:    ) {;/opt/microchip/xc
      +                          8/v2.50/pic/sources/c99/common/doprnt.c: 610:   sign = sign ? '-' : '+';
  2742   000374  51BD               	movf	efgtoa@sign& (0+255),w,b
  2743   000376  A4D8               	btfss	status,2,c
  2744   000378  D004               	goto	l7181
  2745                           
  2746                           ; BSR set to: 0
  2747   00037A  0E00               	movlw	0
  2748   00037C  6FA3               	movwf	(_efgtoa$1751+1)& (0+255),b
  2749   00037E  0E2B               	movlw	43
  2750   000380  D003               	goto	L2
  2751   000382                     l7181:
  2752                           
  2753                           ; BSR set to: 0
  2754   000382  0E00               	movlw	0
  2755   000384  6FA3               	movwf	(_efgtoa$1751+1)& (0+255),b
  2756   000386  0E2D               	movlw	45
  2757   000388                     L2:
  2758   000388  6FA2               	movwf	_efgtoa$1751& (0+255),b
  2759                           
  2760                           ; BSR set to: 0
  2761   00038A  C0A2  F0BD         	movff	_efgtoa$1751,efgtoa@sign
  2762   00038E                     l7185:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 619:     if (( __fpclassifyf(
      +                          g.f) == 1 )) {
  2766   00038E  C0BE  F060         	movff	efgtoa@g,___fpclassifyf@x
  2767   000392  C0BF  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2768   000396  C0C0  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2769   00039A  C0C1  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2770   00039E  ECD6  F011         	call	___fpclassifyf	;wreg free
  2771   0003A2  0560               	decf	?___fpclassifyf& (0+255),w,b
  2772   0003A4  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2773   0003A6  A4D8               	btfss	status,2,c
  2774   0003A8  D029               	goto	l7203
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 620:   if (sign) {
  2778   0003AA  51BD               	movf	efgtoa@sign& (0+255),w,b
  2779   0003AC  B4D8               	btfsc	status,2,c
  2780   0003AE  D009               	goto	l7195
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 621:    dbuf[0] = sign;
  2784   0003B0  C0BD  F100         	movff	efgtoa@sign,_dbuf
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 622:    w--;
  2788   0003B4  07AD               	decf	efgtoa@w& (0+255),f,b
  2789   0003B6  A0D8               	btfss	status,0,c
  2790   0003B8  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 623:    n = 1;
  2794   0003BA  0E00               	movlw	0
  2795   0003BC  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2796   0003BE  0E01               	movlw	1
  2797   0003C0  6FC2               	movwf	efgtoa@n& (0+255),b
  2798   0003C2                     l7195:
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 631:   {;/opt/microchip/xc8/v
      +                          2.50/pic/sources/c99/common/doprnt.c: 632:             strcpy(&dbuf[n], "inf");
  2802   0003C2  0E00               	movlw	low _dbuf
  2803   0003C4  25C2               	addwf	efgtoa@n& (0+255),w,b
  2804   0003C6  6F60               	movwf	strcpy@dest& (0+255),b
  2805   0003C8  0E01               	movlw	high _dbuf
  2806   0003CA  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2807   0003CC  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2808   0003CE  0E16               	movlw	low STR_8
  2809   0003D0  6F62               	movwf	strcpy@src& (0+255),b
  2810   0003D2  ECE7  F017         	call	_strcpy	;wreg free
  2811   0003D6                     l7197:
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 633:         };/opt/microchip
      +                          /xc8/v2.50/pic/sources/c99/common/doprnt.c: 634:         w -= ((sizeof("inf")/sizeof("in
      +                          f"[0]))-1);
  2815   0003D6  0EFD               	movlw	253
  2816   0003D8  27AD               	addwf	efgtoa@w& (0+255),f,b
  2817   0003DA  0EFF               	movlw	255
  2818   0003DC  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 635:         return (void) pa
      +                          d(fp, &dbuf[0], w);
  2822   0003DE  C093  F070         	movff	efgtoa@fp,pad@fp
  2823   0003E2  C094  F071         	movff	efgtoa@fp+1,pad@fp+1
  2824   0003E6  0E00               	movlw	low _dbuf
  2825   0003E8  6F72               	movwf	pad@buf& (0+255),b
  2826   0003EA  0E01               	movlw	high _dbuf
  2827   0003EC  6F73               	movwf	(pad@buf+1)& (0+255),b
  2828   0003EE  C0AD  F074         	movff	efgtoa@w,pad@p
  2829   0003F2  C0AE  F075         	movff	efgtoa@w+1,pad@p+1
  2830   0003F6  ECA6  F015         	call	_pad	;wreg free
  2831   0003FA  0012               	return	
  2832   0003FC                     l7203:
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 637:     if (( __fpclassifyf(
      +                          g.f) == 0 )) {
  2836   0003FC  C0BE  F060         	movff	efgtoa@g,___fpclassifyf@x
  2837   000400  C0BF  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2838   000404  C0C0  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2839   000408  C0C1  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2840   00040C  ECD6  F011         	call	___fpclassifyf	;wreg free
  2841   000410  5160               	movf	?___fpclassifyf& (0+255),w,b
  2842   000412  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2843   000414  A4D8               	btfss	status,2,c
  2844   000416  D017               	goto	l7221
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 638:   if (sign) {
  2848   000418  51BD               	movf	efgtoa@sign& (0+255),w,b
  2849   00041A  B4D8               	btfsc	status,2,c
  2850   00041C  D009               	goto	l7213
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 639:    dbuf[0] = sign;
  2854   00041E  C0BD  F100         	movff	efgtoa@sign,_dbuf
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 640:    w--;
  2858   000422  07AD               	decf	efgtoa@w& (0+255),f,b
  2859   000424  A0D8               	btfss	status,0,c
  2860   000426  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 641:    n = 1;
  2864   000428  0E00               	movlw	0
  2865   00042A  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  2866   00042C  0E01               	movlw	1
  2867   00042E  6FC2               	movwf	efgtoa@n& (0+255),b
  2868   000430                     l7213:
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 649:   {;/opt/microchip/xc8/v
      +                          2.50/pic/sources/c99/common/doprnt.c: 650:             strcpy(&dbuf[n], "nan");
  2872   000430  0E00               	movlw	low _dbuf
  2873   000432  25C2               	addwf	efgtoa@n& (0+255),w,b
  2874   000434  6F60               	movwf	strcpy@dest& (0+255),b
  2875   000436  0E01               	movlw	high _dbuf
  2876   000438  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2877   00043A  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  2878   00043C  0E1A               	movlw	low STR_11
  2879   00043E  6F62               	movwf	strcpy@src& (0+255),b
  2880   000440  ECE7  F017         	call	_strcpy	;wreg free
  2881   000444  D7C8               	goto	l7197
  2882   000446                     l7221:
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 657:     u.f = 1.0;
  2886   000446  0E00               	movlw	0
  2887   000448  6FC4               	movwf	efgtoa@u& (0+255),b
  2888   00044A  0E00               	movlw	0
  2889   00044C  6FC5               	movwf	(efgtoa@u+1)& (0+255),b
  2890   00044E  0E80               	movlw	128
  2891   000450  6FC6               	movwf	(efgtoa@u+2)& (0+255),b
  2892   000452  0E3F               	movlw	63
  2893   000454  6FC7               	movwf	(efgtoa@u+3)& (0+255),b
  2894                           
  2895                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 658:     e = 0;
  2896   000456  0E00               	movlw	0
  2897   000458  6FAC               	movwf	(efgtoa@e+1)& (0+255),b
  2898   00045A  0E00               	movlw	0
  2899   00045C  6FAB               	movwf	efgtoa@e& (0+255),b
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 659:  if (!(g.f == 0.0)) {
  2903   00045E  C0BE  F060         	movff	efgtoa@g,___fleq@ff1
  2904   000462  C0BF  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  2905   000466  C0C0  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  2906   00046A  C0C1  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  2907   00046E  0E00               	movlw	0
  2908   000470  6F64               	movwf	___fleq@ff2& (0+255),b
  2909   000472  0E00               	movlw	0
  2910   000474  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  2911   000476  0E00               	movlw	0
  2912   000478  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  2913   00047A  0E00               	movlw	0
  2914   00047C  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  2915   00047E  ECED  F014         	call	___fleq	;wreg free
  2916   000482  A0D8               	btfss	status,0,c
  2917   000484  D00B               	goto	l7229
  2918   000486  D0BA               	goto	u9140
  2919   000488                     l1072:
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 661:    u = ou;
  2923   000488  C0AF  F0C4         	movff	efgtoa@ou,efgtoa@u
  2924   00048C  C0B0  F0C5         	movff	efgtoa@ou+1,efgtoa@u+1
  2925   000490  C0B1  F0C6         	movff	efgtoa@ou+2,efgtoa@u+2
  2926   000494  C0B2  F0C7         	movff	efgtoa@ou+3,efgtoa@u+3
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 662:    ++e;
  2930   000498  4BAB               	infsnz	efgtoa@e& (0+255),f,b
  2931   00049A  2BAC               	incf	(efgtoa@e+1)& (0+255),f,b
  2932   00049C                     l7229:
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 660:   while ((labs((g).u-((o
      +                          u.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2936   00049C  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  2937   0004A0  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  2938   0004A4  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  2939   0004A8  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  2940   0004AC  0E00               	movlw	0
  2941   0004AE  6F72               	movwf	___flmul@a& (0+255),b
  2942   0004B0  0E00               	movlw	0
  2943   0004B2  6F73               	movwf	(___flmul@a+1)& (0+255),b
  2944   0004B4  0E20               	movlw	32
  2945   0004B6  6F74               	movwf	(___flmul@a+2)& (0+255),b
  2946   0004B8  0E41               	movlw	65
  2947   0004BA  6F75               	movwf	(___flmul@a+3)& (0+255),b
  2948   0004BC  EC7B  F007         	call	___flmul	;wreg free
  2949   0004C0  C06E  F0AF         	movff	?___flmul,efgtoa@ou
  2950   0004C4  C06F  F0B0         	movff	?___flmul+1,efgtoa@ou+1
  2951   0004C8  C070  F0B1         	movff	?___flmul+2,efgtoa@ou+2
  2952   0004CC  C071  F0B2         	movff	?___flmul+3,efgtoa@ou+3
  2953                           
  2954                           ; BSR set to: 0
  2955   0004D0  51AF               	movf	efgtoa@ou& (0+255),w,b
  2956   0004D2  5DBE               	subwf	efgtoa@g& (0+255),w,b
  2957   0004D4  6F60               	movwf	labs@a& (0+255),b
  2958   0004D6  51B0               	movf	(efgtoa@ou+1)& (0+255),w,b
  2959   0004D8  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2960   0004DA  6F61               	movwf	(labs@a+1)& (0+255),b
  2961   0004DC  51B1               	movf	(efgtoa@ou+2)& (0+255),w,b
  2962   0004DE  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2963   0004E0  6F62               	movwf	(labs@a+2)& (0+255),b
  2964   0004E2  51B2               	movf	(efgtoa@ou+3)& (0+255),w,b
  2965   0004E4  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2966   0004E6  6F63               	movwf	(labs@a+3)& (0+255),b
  2967   0004E8  EC9E  F016         	call	_labs	;wreg free
  2968   0004EC  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  2969   0004EE  D7CC               	goto	l1072
  2970   0004F0  5163               	movf	(?_labs+3)& (0+255),w,b
  2971   0004F2  1162               	iorwf	(?_labs+2)& (0+255),w,b
  2972   0004F4  1161               	iorwf	(?_labs+1)& (0+255),w,b
  2973   0004F6  E104               	bnz	u9100
  2974   0004F8  0E02               	movlw	2
  2975   0004FA  5D60               	subwf	?_labs& (0+255),w,b
  2976   0004FC  A0D8               	btfss	status,0,c
  2977   0004FE  D7C4               	goto	l1072
  2978   000500                     u9100:
  2979                           
  2980                           ; BSR set to: 0
  2981   000500  C0AF  F087         	movff	efgtoa@ou,___flge@ff1
  2982   000504  C0B0  F088         	movff	efgtoa@ou+1,___flge@ff1+1
  2983   000508  C0B1  F089         	movff	efgtoa@ou+2,___flge@ff1+2
  2984   00050C  C0B2  F08A         	movff	efgtoa@ou+3,___flge@ff1+3
  2985   000510  C0BE  F08B         	movff	efgtoa@g,___flge@ff2
  2986   000514  C0BF  F08C         	movff	efgtoa@g+1,___flge@ff2+1
  2987   000518  C0C0  F08D         	movff	efgtoa@g+2,___flge@ff2+2
  2988   00051C  C0C1  F08E         	movff	efgtoa@g+3,___flge@ff2+3
  2989   000520  EC6E  F011         	call	___flge	;wreg free
  2990   000524  A0D8               	btfss	status,0,c
  2991   000526  D7B0               	goto	l1072
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 664:   if ((labs((g).u-(u).u)
      +                           <= 1)) {
  2995   000528  51C4               	movf	efgtoa@u& (0+255),w,b
  2996   00052A  5DBE               	subwf	efgtoa@g& (0+255),w,b
  2997   00052C  6F60               	movwf	labs@a& (0+255),b
  2998   00052E  51C5               	movf	(efgtoa@u+1)& (0+255),w,b
  2999   000530  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3000   000532  6F61               	movwf	(labs@a+1)& (0+255),b
  3001   000534  51C6               	movf	(efgtoa@u+2)& (0+255),w,b
  3002   000536  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3003   000538  6F62               	movwf	(labs@a+2)& (0+255),b
  3004   00053A  51C7               	movf	(efgtoa@u+3)& (0+255),w,b
  3005   00053C  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3006   00053E  6F63               	movwf	(labs@a+3)& (0+255),b
  3007   000540  EC9E  F016         	call	_labs	;wreg free
  3008   000544  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  3009   000546  D008               	goto	u9120
  3010   000548  5163               	movf	(?_labs+3)& (0+255),w,b
  3011   00054A  1162               	iorwf	(?_labs+2)& (0+255),w,b
  3012   00054C  1161               	iorwf	(?_labs+1)& (0+255),w,b
  3013   00054E  E142               	bnz	l7247
  3014   000550  0E02               	movlw	2
  3015   000552  5D60               	subwf	?_labs& (0+255),w,b
  3016   000554  B0D8               	btfsc	status,0,c
  3017   000556  D03E               	goto	l7247
  3018   000558                     u9120:
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 665:    g = u;
  3022   000558  C0C4  F0BE         	movff	efgtoa@u,efgtoa@g
  3023   00055C  C0C5  F0BF         	movff	efgtoa@u+1,efgtoa@g+1
  3024   000560  C0C6  F0C0         	movff	efgtoa@u+2,efgtoa@g+2
  3025   000564  C0C7  F0C1         	movff	efgtoa@u+3,efgtoa@g+3
  3026                           
  3027                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 666:   }
  3028   000568  D049               	goto	u9140
  3029   00056A                     l7239:
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 669:     u.f = u.f/10.0;
  3033   00056A  C0C4  F060         	movff	efgtoa@u,___fldiv@b
  3034   00056E  C0C5  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3035   000572  C0C6  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3036   000576  C0C7  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3037   00057A  0E00               	movlw	0
  3038   00057C  6F64               	movwf	___fldiv@a& (0+255),b
  3039   00057E  0E00               	movlw	0
  3040   000580  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3041   000582  0E20               	movlw	32
  3042   000584  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3043   000586  0E41               	movlw	65
  3044   000588  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3045   00058A  EC27  F00C         	call	___fldiv	;wreg free
  3046   00058E  C060  F0C4         	movff	?___fldiv,efgtoa@u
  3047   000592  C061  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  3048   000596  C062  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  3049   00059A  C063  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 670:     --e;
  3053   00059E  07AB               	decf	efgtoa@e& (0+255),f,b
  3054   0005A0  A0D8               	btfss	status,0,c
  3055   0005A2  07AC               	decf	(efgtoa@e+1)& (0+255),f,b
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 671:     if ((labs((g).u-(u).
      +                          u) <= 1)) {
  3059   0005A4  51C4               	movf	efgtoa@u& (0+255),w,b
  3060   0005A6  5DBE               	subwf	efgtoa@g& (0+255),w,b
  3061   0005A8  6F60               	movwf	labs@a& (0+255),b
  3062   0005AA  51C5               	movf	(efgtoa@u+1)& (0+255),w,b
  3063   0005AC  59BF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3064   0005AE  6F61               	movwf	(labs@a+1)& (0+255),b
  3065   0005B0  51C6               	movf	(efgtoa@u+2)& (0+255),w,b
  3066   0005B2  59C0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3067   0005B4  6F62               	movwf	(labs@a+2)& (0+255),b
  3068   0005B6  51C7               	movf	(efgtoa@u+3)& (0+255),w,b
  3069   0005B8  59C1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3070   0005BA  6F63               	movwf	(labs@a+3)& (0+255),b
  3071   0005BC  EC9E  F016         	call	_labs	;wreg free
  3072   0005C0  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  3073   0005C2  D7CA               	goto	u9120
  3074   0005C4  5163               	movf	(?_labs+3)& (0+255),w,b
  3075   0005C6  1162               	iorwf	(?_labs+2)& (0+255),w,b
  3076   0005C8  1161               	iorwf	(?_labs+1)& (0+255),w,b
  3077   0005CA  E104               	bnz	l7247
  3078   0005CC  0E02               	movlw	2
  3079   0005CE  5D60               	subwf	?_labs& (0+255),w,b
  3080   0005D0  A0D8               	btfss	status,0,c
  3081   0005D2  D7C2               	goto	u9120
  3082   0005D4                     l7247:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 668:    while (g.f < u.f) {
  3086   0005D4  C0BE  F087         	movff	efgtoa@g,___flge@ff1
  3087   0005D8  C0BF  F088         	movff	efgtoa@g+1,___flge@ff1+1
  3088   0005DC  C0C0  F089         	movff	efgtoa@g+2,___flge@ff1+2
  3089   0005E0  C0C1  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  3090   0005E4  C0C4  F08B         	movff	efgtoa@u,___flge@ff2
  3091   0005E8  C0C5  F08C         	movff	efgtoa@u+1,___flge@ff2+1
  3092   0005EC  C0C6  F08D         	movff	efgtoa@u+2,___flge@ff2+2
  3093   0005F0  C0C7  F08E         	movff	efgtoa@u+3,___flge@ff2+3
  3094   0005F4  EC6E  F011         	call	___flge	;wreg free
  3095   0005F8  A0D8               	btfss	status,0,c
  3096   0005FA  D7B7               	goto	l7239
  3097   0005FC                     u9140:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 683:  mode = c;
  3101                           
  3102                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 677:     }
  3103   0005FC  C099  F0A5         	movff	efgtoa@c,efgtoa@mode
  3104                           
  3105                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 685:     nmode = mode;
  3106   000600  C0A5  F0A6         	movff	efgtoa@mode,efgtoa@nmode
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 695:  {;/opt/microchip/xc8/v2
      +                          .50/pic/sources/c99/common/doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
  3110   000604  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  3111   000606  D005               	goto	l7253
  3112                           
  3113                           ; BSR set to: 0
  3114   000608  C0F0  F09E         	movff	_prec,efgtoa@p
  3115   00060C  C0F1  F09F         	movff	_prec+1,efgtoa@p+1
  3116   000610  D004               	goto	l7255
  3117   000612                     l7253:
  3118                           
  3119                           ; BSR set to: 0
  3120   000612  0E00               	movlw	0
  3121   000614  6F9F               	movwf	(efgtoa@p+1)& (0+255),b
  3122   000616  0E06               	movlw	6
  3123   000618  6F9E               	movwf	efgtoa@p& (0+255),b
  3124   00061A                     l7255:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 697:     };/opt/microchip/xc8
      +                          /v2.50/pic/sources/c99/common/doprnt.c: 711:     m = p;
  3128   00061A  C09E  F0A9         	movff	efgtoa@p,efgtoa@m
  3129   00061E  C09F  F0AA         	movff	efgtoa@p+1,efgtoa@m+1
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 715:  {;/opt/microchip/xc8/v2
      +                          .50/pic/sources/c99/common/doprnt.c: 716:         ++m;
  3133   000622  4BA9               	infsnz	efgtoa@m& (0+255),f,b
  3134   000624  2BAA               	incf	(efgtoa@m+1)& (0+255),f,b
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 717:     };/opt/microchip/xc8
      +                          /v2.50/pic/sources/c99/common/doprnt.c: 721:     if (nmode == 'f') {
  3138   000626  0E66               	movlw	102
  3139   000628  19A6               	xorwf	efgtoa@nmode& (0+255),w,b
  3140   00062A  A4D8               	btfss	status,2,c
  3141   00062C  D016               	goto	l7269
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 722:         if (e < 0) {
  3145   00062E  AFAC               	btfss	(efgtoa@e+1)& (0+255),7,b
  3146   000630  D00C               	goto	l7265
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 723:             u.f = 1.0;
  3150   000632  0E00               	movlw	0
  3151   000634  6FC4               	movwf	efgtoa@u& (0+255),b
  3152   000636  0E00               	movlw	0
  3153   000638  6FC5               	movwf	(efgtoa@u+1)& (0+255),b
  3154   00063A  0E80               	movlw	128
  3155   00063C  6FC6               	movwf	(efgtoa@u+2)& (0+255),b
  3156   00063E  0E3F               	movlw	63
  3157   000640  6FC7               	movwf	(efgtoa@u+3)& (0+255),b
  3158                           
  3159                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 724:             e = 0;
  3160   000642  0E00               	movlw	0
  3161   000644  6FAC               	movwf	(efgtoa@e+1)& (0+255),b
  3162   000646  0E00               	movlw	0
  3163   000648  6FAB               	movwf	efgtoa@e& (0+255),b
  3164   00064A                     l7265:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 726:         if (!(mode == 'g
      +                          ')) {
  3168   00064A  0E67               	movlw	103
  3169   00064C  19A5               	xorwf	efgtoa@mode& (0+255),w,b
  3170   00064E  B4D8               	btfsc	status,2,c
  3171   000650  D004               	goto	l7269
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 727:             m += e;
  3175   000652  51AB               	movf	efgtoa@e& (0+255),w,b
  3176   000654  27A9               	addwf	efgtoa@m& (0+255),f,b
  3177   000656  51AC               	movf	(efgtoa@e+1)& (0+255),w,b
  3178   000658  23AA               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3179   00065A                     l7269:
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 733:     i = 0;
  3183   00065A  0E00               	movlw	0
  3184   00065C  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3185   00065E  0E00               	movlw	0
  3186   000660  6FB3               	movwf	efgtoa@i& (0+255),b
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 734:     h = g.f;
  3190   000662  C0BE  F0B5         	movff	efgtoa@g,efgtoa@h
  3191   000666  C0BF  F0B6         	movff	efgtoa@g+1,efgtoa@h+1
  3192   00066A  C0C0  F0B7         	movff	efgtoa@g+2,efgtoa@h+2
  3193   00066E  C0C1  F0B8         	movff	efgtoa@g+3,efgtoa@h+3
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 735:     ou = u;
  3197   000672  C0C4  F0AF         	movff	efgtoa@u,efgtoa@ou
  3198   000676  C0C5  F0B0         	movff	efgtoa@u+1,efgtoa@ou+1
  3199   00067A  C0C6  F0B1         	movff	efgtoa@u+2,efgtoa@ou+2
  3200   00067E  C0C7  F0B2         	movff	efgtoa@u+3,efgtoa@ou+3
  3201                           
  3202                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 736:     while (i < m) {
  3203   000682  D07A               	goto	l7283
  3204   000684                     l7275:
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 737:         l = floorf(h/u.f
      +                          );
  3208   000684  C0B5  F060         	movff	efgtoa@h,___fldiv@b
  3209   000688  C0B6  F061         	movff	efgtoa@h+1,___fldiv@b+1
  3210   00068C  C0B7  F062         	movff	efgtoa@h+2,___fldiv@b+2
  3211   000690  C0B8  F063         	movff	efgtoa@h+3,___fldiv@b+3
  3212   000694  C0C4  F064         	movff	efgtoa@u,___fldiv@a
  3213   000698  C0C5  F065         	movff	efgtoa@u+1,___fldiv@a+1
  3214   00069C  C0C6  F066         	movff	efgtoa@u+2,___fldiv@a+2
  3215   0006A0  C0C7  F067         	movff	efgtoa@u+3,___fldiv@a+3
  3216   0006A4  EC27  F00C         	call	___fldiv	;wreg free
  3217   0006A8  C060  F079         	movff	?___fldiv,floorf@x
  3218   0006AC  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  3219   0006B0  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  3220   0006B4  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  3221   0006B8  EC44  F00F         	call	_floorf	;wreg free
  3222   0006BC  C079  F0B9         	movff	?_floorf,efgtoa@l
  3223   0006C0  C07A  F0BA         	movff	?_floorf+1,efgtoa@l+1
  3224   0006C4  C07B  F0BB         	movff	?_floorf+2,efgtoa@l+2
  3225   0006C8  C07C  F0BC         	movff	?_floorf+3,efgtoa@l+3
  3226                           
  3227                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 738:         d = (int)l;
  3228   0006CC  C0B9  F087         	movff	efgtoa@l,___fltol@f1
  3229   0006D0  C0BA  F088         	movff	efgtoa@l+1,___fltol@f1+1
  3230   0006D4  C0BB  F089         	movff	efgtoa@l+2,___fltol@f1+2
  3231   0006D8  C0BC  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  3232   0006DC  EC9A  F012         	call	___fltol	;wreg free
  3233   0006E0  C087  F0A7         	movff	?___fltol,efgtoa@d
  3234   0006E4  C088  F0A8         	movff	?___fltol+1,efgtoa@d+1
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 739:         h -= l*u.f;
  3238   0006E8  C0B5  F087         	movff	efgtoa@h,___flsub@b
  3239   0006EC  C0B6  F088         	movff	efgtoa@h+1,___flsub@b+1
  3240   0006F0  C0B7  F089         	movff	efgtoa@h+2,___flsub@b+2
  3241   0006F4  C0B8  F08A         	movff	efgtoa@h+3,___flsub@b+3
  3242   0006F8  C0B9  F072         	movff	efgtoa@l,___flmul@a
  3243   0006FC  C0BA  F073         	movff	efgtoa@l+1,___flmul@a+1
  3244   000700  C0BB  F074         	movff	efgtoa@l+2,___flmul@a+2
  3245   000704  C0BC  F075         	movff	efgtoa@l+3,___flmul@a+3
  3246   000708  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3247   00070C  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3248   000710  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3249   000714  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3250   000718  EC7B  F007         	call	___flmul	;wreg free
  3251   00071C  C06E  F08B         	movff	?___flmul,___flsub@a
  3252   000720  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  3253   000724  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  3254   000728  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  3255   00072C  ECC3  F016         	call	___flsub	;wreg free
  3256   000730  C087  F0B5         	movff	?___flsub,efgtoa@h
  3257   000734  C088  F0B6         	movff	?___flsub+1,efgtoa@h+1
  3258   000738  C089  F0B7         	movff	?___flsub+2,efgtoa@h+2
  3259   00073C  C08A  F0B8         	movff	?___flsub+3,efgtoa@h+3
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 740:         u.f = u.f/10.0;
  3263   000740  C0C4  F060         	movff	efgtoa@u,___fldiv@b
  3264   000744  C0C5  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3265   000748  C0C6  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3266   00074C  C0C7  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3267   000750  0E00               	movlw	0
  3268   000752  6F64               	movwf	___fldiv@a& (0+255),b
  3269   000754  0E00               	movlw	0
  3270   000756  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3271   000758  0E20               	movlw	32
  3272   00075A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3273   00075C  0E41               	movlw	65
  3274   00075E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3275   000760  EC27  F00C         	call	___fldiv	;wreg free
  3276   000764  C060  F0C4         	movff	?___fldiv,efgtoa@u
  3277   000768  C061  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  3278   00076C  C062  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  3279   000770  C063  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 741:         ++i;
  3283   000774  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  3284   000776  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  3285   000778                     l7283:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 736:     while (i < m) {
  3289   000778  51A9               	movf	efgtoa@m& (0+255),w,b
  3290   00077A  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3291   00077C  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3292   00077E  0A80               	xorlw	128
  3293   000780  6F9A               	movwf	??_efgtoa& (0+255),b
  3294   000782  51AA               	movf	(efgtoa@m+1)& (0+255),w,b
  3295   000784  0A80               	xorlw	128
  3296   000786  599A               	subwfb	??_efgtoa& (0+255),w,b
  3297   000788  A0D8               	btfss	status,0,c
  3298   00078A  D77C               	goto	l7275
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 745:     l = u.f*5.0;
  3302   00078C  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3303   000790  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3304   000794  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3305   000798  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3306   00079C  0E00               	movlw	0
  3307   00079E  6F72               	movwf	___flmul@a& (0+255),b
  3308   0007A0  0E00               	movlw	0
  3309   0007A2  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3310   0007A4  0EA0               	movlw	160
  3311   0007A6  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3312   0007A8  0E40               	movlw	64
  3313   0007AA  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3314   0007AC  EC7B  F007         	call	___flmul	;wreg free
  3315   0007B0  C06E  F0B9         	movff	?___flmul,efgtoa@l
  3316   0007B4  C06F  F0BA         	movff	?___flmul+1,efgtoa@l+1
  3317   0007B8  C070  F0BB         	movff	?___flmul+2,efgtoa@l+2
  3318   0007BC  C071  F0BC         	movff	?___flmul+3,efgtoa@l+3
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 746:     if (h < l) {
  3322   0007C0  C0B5  F087         	movff	efgtoa@h,___flge@ff1
  3323   0007C4  C0B6  F088         	movff	efgtoa@h+1,___flge@ff1+1
  3324   0007C8  C0B7  F089         	movff	efgtoa@h+2,___flge@ff1+2
  3325   0007CC  C0B8  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  3326   0007D0  C0B9  F08B         	movff	efgtoa@l,___flge@ff2
  3327   0007D4  C0BA  F08C         	movff	efgtoa@l+1,___flge@ff2+1
  3328   0007D8  C0BB  F08D         	movff	efgtoa@l+2,___flge@ff2+2
  3329   0007DC  C0BC  F08E         	movff	efgtoa@l+3,___flge@ff2+3
  3330   0007E0  EC6E  F011         	call	___flge	;wreg free
  3331   0007E4  A0D8               	btfss	status,0,c
  3332   0007E6  D015               	goto	u9220
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 750:         if ((h == l) && 
      +                          !(d % 2)) {
  3336                           
  3337                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 748:     } else {
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 747:         l = 0.0;
  3341   0007E8  C0B5  F060         	movff	efgtoa@h,___fleq@ff1
  3342   0007EC  C0B6  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  3343   0007F0  C0B7  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  3344   0007F4  C0B8  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  3345   0007F8  C0B9  F064         	movff	efgtoa@l,___fleq@ff2
  3346   0007FC  C0BA  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  3347   000800  C0BB  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  3348   000804  C0BC  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  3349   000808  ECED  F014         	call	___fleq	;wreg free
  3350   00080C  B0D8               	btfsc	status,0,c
  3351                           
  3352                           ; BSR set to: 0
  3353   00080E  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  3354   000810  D008               	goto	l7297
  3355   000812                     u9220:
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 751:             l = 0.0;
  3359   000812  0E00               	movlw	0
  3360   000814  6FB9               	movwf	efgtoa@l& (0+255),b
  3361   000816  0E00               	movlw	0
  3362   000818  6FBA               	movwf	(efgtoa@l+1)& (0+255),b
  3363   00081A  0E00               	movlw	0
  3364   00081C  6FBB               	movwf	(efgtoa@l+2)& (0+255),b
  3365   00081E  0E00               	movlw	0
  3366   000820  6FBC               	movwf	(efgtoa@l+3)& (0+255),b
  3367   000822                     l7297:
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 756:     h = g.f + l;
  3371   000822  C0BE  F060         	movff	efgtoa@g,___fladd@b
  3372   000826  C0BF  F061         	movff	efgtoa@g+1,___fladd@b+1
  3373   00082A  C0C0  F062         	movff	efgtoa@g+2,___fladd@b+2
  3374   00082E  C0C1  F063         	movff	efgtoa@g+3,___fladd@b+3
  3375   000832  C0B9  F064         	movff	efgtoa@l,___fladd@a
  3376   000836  C0BA  F065         	movff	efgtoa@l+1,___fladd@a+1
  3377   00083A  C0BB  F066         	movff	efgtoa@l+2,___fladd@a+2
  3378   00083E  C0BC  F067         	movff	efgtoa@l+3,___fladd@a+3
  3379   000842  ECA3  F00A         	call	___fladd	;wreg free
  3380   000846  C060  F0B5         	movff	?___fladd,efgtoa@h
  3381   00084A  C061  F0B6         	movff	?___fladd+1,efgtoa@h+1
  3382   00084E  C062  F0B7         	movff	?___fladd+2,efgtoa@h+2
  3383   000852  C063  F0B8         	movff	?___fladd+3,efgtoa@h+3
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 758:  if (h >= (ou.f*10.0)) {
  3387   000856  C0B5  F087         	movff	efgtoa@h,___flge@ff1
  3388   00085A  C0B6  F088         	movff	efgtoa@h+1,___flge@ff1+1
  3389   00085E  C0B7  F089         	movff	efgtoa@h+2,___flge@ff1+2
  3390   000862  C0B8  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  3391   000866  0E00               	movlw	0
  3392   000868  6F72               	movwf	___flmul@a& (0+255),b
  3393   00086A  0E00               	movlw	0
  3394   00086C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3395   00086E  0E20               	movlw	32
  3396   000870  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3397   000872  0E41               	movlw	65
  3398   000874  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3399   000876  C0AF  F06E         	movff	efgtoa@ou,___flmul@b
  3400   00087A  C0B0  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  3401   00087E  C0B1  F070         	movff	efgtoa@ou+2,___flmul@b+2
  3402   000882  C0B2  F071         	movff	efgtoa@ou+3,___flmul@b+3
  3403   000886  EC7B  F007         	call	___flmul	;wreg free
  3404   00088A  C06E  F08B         	movff	?___flmul,___flge@ff2
  3405   00088E  C06F  F08C         	movff	?___flmul+1,___flge@ff2+1
  3406   000892  C070  F08D         	movff	?___flmul+2,___flge@ff2+2
  3407   000896  C071  F08E         	movff	?___flmul+3,___flge@ff2+3
  3408   00089A  EC6E  F011         	call	___flge	;wreg free
  3409   00089E  A0D8               	btfss	status,0,c
  3410   0008A0  D022               	goto	l7309
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 759:   e++;
  3414   0008A2  4BAB               	infsnz	efgtoa@e& (0+255),f,b
  3415   0008A4  2BAC               	incf	(efgtoa@e+1)& (0+255),f,b
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 760:   ou.f *= 10.0;
  3419   0008A6  C0AF  F06E         	movff	efgtoa@ou,___flmul@b
  3420   0008AA  C0B0  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  3421   0008AE  C0B1  F070         	movff	efgtoa@ou+2,___flmul@b+2
  3422   0008B2  C0B2  F071         	movff	efgtoa@ou+3,___flmul@b+3
  3423   0008B6  0E00               	movlw	0
  3424   0008B8  6F72               	movwf	___flmul@a& (0+255),b
  3425   0008BA  0E00               	movlw	0
  3426   0008BC  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3427   0008BE  0E20               	movlw	32
  3428   0008C0  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3429   0008C2  0E41               	movlw	65
  3430   0008C4  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3431   0008C6  EC7B  F007         	call	___flmul	;wreg free
  3432   0008CA  C06E  F0AF         	movff	?___flmul,efgtoa@ou
  3433   0008CE  C06F  F0B0         	movff	?___flmul+1,efgtoa@ou+1
  3434   0008D2  C070  F0B1         	movff	?___flmul+2,efgtoa@ou+2
  3435   0008D6  C071  F0B2         	movff	?___flmul+3,efgtoa@ou+3
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 762:   if (nmode == 'f') {
  3439   0008DA  0E66               	movlw	102
  3440   0008DC  19A6               	xorwf	efgtoa@nmode& (0+255),w,b
  3441   0008DE  A4D8               	btfss	status,2,c
  3442   0008E0  D002               	goto	l7309
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 764:    m++;
  3446   0008E2  4BA9               	infsnz	efgtoa@m& (0+255),f,b
  3447   0008E4  2BAA               	incf	(efgtoa@m+1)& (0+255),f,b
  3448   0008E6                     l7309:
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 770:     u = ou;
  3452   0008E6  C0AF  F0C4         	movff	efgtoa@ou,efgtoa@u
  3453   0008EA  C0B0  F0C5         	movff	efgtoa@ou+1,efgtoa@u+1
  3454   0008EE  C0B1  F0C6         	movff	efgtoa@ou+2,efgtoa@u+2
  3455   0008F2  C0B2  F0C7         	movff	efgtoa@ou+3,efgtoa@u+3
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 774:  ne = e;
  3459   0008F6  C0AB  F09C         	movff	efgtoa@e,efgtoa@ne
  3460   0008FA  C0AC  F09D         	movff	efgtoa@e+1,efgtoa@ne+1
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 776:     pp = 0;
  3464   0008FE  6BA4               	clrf	efgtoa@pp& (0+255),b
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 777:     t = 0;
  3468   000900  0E00               	movlw	0
  3469   000902  6FA1               	movwf	(efgtoa@t+1)& (0+255),b
  3470   000904  0E00               	movlw	0
  3471   000906  6FA0               	movwf	efgtoa@t& (0+255),b
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 778:     i = 0;
  3475   000908  0E00               	movlw	0
  3476   00090A  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3477   00090C  0E00               	movlw	0
  3478   00090E  6FB3               	movwf	efgtoa@i& (0+255),b
  3479                           
  3480                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 779:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3481   000910  D0CA               	goto	l7359
  3482   000912                     l7319:
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 780:         l = floorf(h/u.f
      +                          );
  3486   000912  C0B5  F060         	movff	efgtoa@h,___fldiv@b
  3487   000916  C0B6  F061         	movff	efgtoa@h+1,___fldiv@b+1
  3488   00091A  C0B7  F062         	movff	efgtoa@h+2,___fldiv@b+2
  3489   00091E  C0B8  F063         	movff	efgtoa@h+3,___fldiv@b+3
  3490   000922  C0C4  F064         	movff	efgtoa@u,___fldiv@a
  3491   000926  C0C5  F065         	movff	efgtoa@u+1,___fldiv@a+1
  3492   00092A  C0C6  F066         	movff	efgtoa@u+2,___fldiv@a+2
  3493   00092E  C0C7  F067         	movff	efgtoa@u+3,___fldiv@a+3
  3494   000932  EC27  F00C         	call	___fldiv	;wreg free
  3495   000936  C060  F079         	movff	?___fldiv,floorf@x
  3496   00093A  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  3497   00093E  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  3498   000942  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  3499   000946  EC44  F00F         	call	_floorf	;wreg free
  3500   00094A  C079  F0B9         	movff	?_floorf,efgtoa@l
  3501   00094E  C07A  F0BA         	movff	?_floorf+1,efgtoa@l+1
  3502   000952  C07B  F0BB         	movff	?_floorf+2,efgtoa@l+2
  3503   000956  C07C  F0BC         	movff	?_floorf+3,efgtoa@l+3
  3504                           
  3505                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 781:         d = (int)l > 9 ?
      +                           9 : (int)l;
  3506   00095A  C0B9  F087         	movff	efgtoa@l,___fltol@f1
  3507   00095E  C0BA  F088         	movff	efgtoa@l+1,___fltol@f1+1
  3508   000962  C0BB  F089         	movff	efgtoa@l+2,___fltol@f1+2
  3509   000966  C0BC  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  3510   00096A  EC9A  F012         	call	___fltol	;wreg free
  3511   00096E  BF88               	btfsc	(?___fltol+1)& (0+255),7,b
  3512   000970  D006               	goto	u9250
  3513   000972  5188               	movf	(?___fltol+1)& (0+255),w,b
  3514   000974  E113               	bnz	l7323
  3515   000976  0E0A               	movlw	10
  3516   000978  5D87               	subwf	?___fltol& (0+255),w,b
  3517   00097A  B0D8               	btfsc	status,0,c
  3518   00097C  D00F               	goto	l7323
  3519   00097E                     u9250:
  3520                           
  3521                           ; BSR set to: 0
  3522   00097E  C0B9  F087         	movff	efgtoa@l,___fltol@f1
  3523   000982  C0BA  F088         	movff	efgtoa@l+1,___fltol@f1+1
  3524   000986  C0BB  F089         	movff	efgtoa@l+2,___fltol@f1+2
  3525   00098A  C0BC  F08A         	movff	efgtoa@l+3,___fltol@f1+3
  3526   00098E  EC9A  F012         	call	___fltol	;wreg free
  3527   000992  C087  F0A7         	movff	?___fltol,efgtoa@d
  3528   000996  C088  F0A8         	movff	?___fltol+1,efgtoa@d+1
  3529   00099A  D004               	goto	l1100
  3530   00099C                     l7323:
  3531                           
  3532                           ; BSR set to: 0
  3533   00099C  0E00               	movlw	0
  3534   00099E  6FA8               	movwf	(efgtoa@d+1)& (0+255),b
  3535   0009A0  0E09               	movlw	9
  3536   0009A2  6FA7               	movwf	efgtoa@d& (0+255),b
  3537   0009A4                     l1100:
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 792:   {;/opt/microchip/xc8/v
      +                          2.50/pic/sources/c99/common/doprnt.c: 793:             if (!pp && (ne < 0)) {
  3541   0009A4  51A4               	movf	efgtoa@pp& (0+255),w,b
  3542   0009A6  B4D8               	btfsc	status,2,c
  3543                           
  3544                           ; BSR set to: 0
  3545   0009A8  AF9D               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3546   0009AA  D020               	goto	l7343
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 794:                 dbuf[n++
      +                          ] = '.';
  3550   0009AC  0E00               	movlw	low _dbuf
  3551   0009AE  25C2               	addwf	efgtoa@n& (0+255),w,b
  3552   0009B0  6ED9               	movwf	fsr2l,c
  3553   0009B2  0E01               	movlw	high _dbuf
  3554   0009B4  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3555   0009B6  6EDA               	movwf	fsr2h,c
  3556   0009B8  0E2E               	movlw	46
  3557   0009BA  6EDF               	movwf	indf2,c
  3558                           
  3559                           ; BSR set to: 0
  3560   0009BC  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3561   0009BE  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 795:                 --w;
  3565   0009C0  07AD               	decf	efgtoa@w& (0+255),f,b
  3566   0009C2  A0D8               	btfss	status,0,c
  3567   0009C4  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 796:                 pp = 1;
  3571   0009C6  0E01               	movlw	1
  3572   0009C8  6FA4               	movwf	efgtoa@pp& (0+255),b
  3573   0009CA  D010               	goto	l7343
  3574   0009CC                     l7335:
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 799:                 dbuf[n++
      +                          ] = '0';
  3578   0009CC  0E00               	movlw	low _dbuf
  3579   0009CE  25C2               	addwf	efgtoa@n& (0+255),w,b
  3580   0009D0  6ED9               	movwf	fsr2l,c
  3581   0009D2  0E01               	movlw	high _dbuf
  3582   0009D4  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3583   0009D6  6EDA               	movwf	fsr2h,c
  3584   0009D8  0E30               	movlw	48
  3585   0009DA  6EDF               	movwf	indf2,c
  3586                           
  3587                           ; BSR set to: 0
  3588   0009DC  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3589   0009DE  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 800:                 --w;
  3593   0009E0  07AD               	decf	efgtoa@w& (0+255),f,b
  3594   0009E2  A0D8               	btfss	status,0,c
  3595   0009E4  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 801:                 --t;
  3599   0009E6  07A0               	decf	efgtoa@t& (0+255),f,b
  3600   0009E8  A0D8               	btfss	status,0,c
  3601   0009EA  07A1               	decf	(efgtoa@t+1)& (0+255),f,b
  3602   0009EC                     l7343:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 798:             while (t) {
  3606   0009EC  51A0               	movf	efgtoa@t& (0+255),w,b
  3607   0009EE  11A1               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3608   0009F0  A4D8               	btfss	status,2,c
  3609   0009F2  D7EC               	goto	l7335
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 803:             dbuf[n++] = 
      +                          (char)((int)'0' + d);
  3613   0009F4  0E00               	movlw	low _dbuf
  3614   0009F6  25C2               	addwf	efgtoa@n& (0+255),w,b
  3615   0009F8  6ED9               	movwf	fsr2l,c
  3616   0009FA  0E01               	movlw	high _dbuf
  3617   0009FC  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3618   0009FE  6EDA               	movwf	fsr2h,c
  3619   000A00  51A7               	movf	efgtoa@d& (0+255),w,b
  3620   000A02  0F30               	addlw	48
  3621   000A04  6EDF               	movwf	indf2,c
  3622                           
  3623                           ; BSR set to: 0
  3624   000A06  4BC2               	infsnz	efgtoa@n& (0+255),f,b
  3625   000A08  2BC3               	incf	(efgtoa@n+1)& (0+255),f,b
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 804:             --w;
  3629   000A0A  07AD               	decf	efgtoa@w& (0+255),f,b
  3630   000A0C  A0D8               	btfss	status,0,c
  3631   000A0E  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 805:         };/opt/microchip
      +                          /xc8/v2.50/pic/sources/c99/common/doprnt.c: 806:         h -= l*u.f;
  3635   000A10  C0B5  F087         	movff	efgtoa@h,___flsub@b
  3636   000A14  C0B6  F088         	movff	efgtoa@h+1,___flsub@b+1
  3637   000A18  C0B7  F089         	movff	efgtoa@h+2,___flsub@b+2
  3638   000A1C  C0B8  F08A         	movff	efgtoa@h+3,___flsub@b+3
  3639   000A20  C0B9  F072         	movff	efgtoa@l,___flmul@a
  3640   000A24  C0BA  F073         	movff	efgtoa@l+1,___flmul@a+1
  3641   000A28  C0BB  F074         	movff	efgtoa@l+2,___flmul@a+2
  3642   000A2C  C0BC  F075         	movff	efgtoa@l+3,___flmul@a+3
  3643   000A30  C0C4  F06E         	movff	efgtoa@u,___flmul@b
  3644   000A34  C0C5  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3645   000A38  C0C6  F070         	movff	efgtoa@u+2,___flmul@b+2
  3646   000A3C  C0C7  F071         	movff	efgtoa@u+3,___flmul@b+3
  3647   000A40  EC7B  F007         	call	___flmul	;wreg free
  3648   000A44  C06E  F08B         	movff	?___flmul,___flsub@a
  3649   000A48  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  3650   000A4C  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  3651   000A50  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  3652   000A54  ECC3  F016         	call	___flsub	;wreg free
  3653   000A58  C087  F0B5         	movff	?___flsub,efgtoa@h
  3654   000A5C  C088  F0B6         	movff	?___flsub+1,efgtoa@h+1
  3655   000A60  C089  F0B7         	movff	?___flsub+2,efgtoa@h+2
  3656   000A64  C08A  F0B8         	movff	?___flsub+3,efgtoa@h+3
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 807:         u.f = u.f/10.0;
  3660   000A68  C0C4  F060         	movff	efgtoa@u,___fldiv@b
  3661   000A6C  C0C5  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3662   000A70  C0C6  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3663   000A74  C0C7  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3664   000A78  0E00               	movlw	0
  3665   000A7A  6F64               	movwf	___fldiv@a& (0+255),b
  3666   000A7C  0E00               	movlw	0
  3667   000A7E  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3668   000A80  0E20               	movlw	32
  3669   000A82  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3670   000A84  0E41               	movlw	65
  3671   000A86  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3672   000A88  EC27  F00C         	call	___fldiv	;wreg free
  3673   000A8C  C060  F0C4         	movff	?___fldiv,efgtoa@u
  3674   000A90  C061  F0C5         	movff	?___fldiv+1,efgtoa@u+1
  3675   000A94  C062  F0C6         	movff	?___fldiv+2,efgtoa@u+2
  3676   000A98  C063  F0C7         	movff	?___fldiv+3,efgtoa@u+3
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 808:         --ne;
  3680   000A9C  079C               	decf	efgtoa@ne& (0+255),f,b
  3681   000A9E  A0D8               	btfss	status,0,c
  3682   000AA0  079D               	decf	(efgtoa@ne+1)& (0+255),f,b
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 809:         ++i;
  3686   000AA2  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  3687   000AA4  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  3688   000AA6                     l7359:
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 779:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3692   000AA6  51A9               	movf	efgtoa@m& (0+255),w,b
  3693   000AA8  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3694   000AAA  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3695   000AAC  0A80               	xorlw	128
  3696   000AAE  6F9A               	movwf	??_efgtoa& (0+255),b
  3697   000AB0  51AA               	movf	(efgtoa@m+1)& (0+255),w,b
  3698   000AB2  0A80               	xorlw	128
  3699   000AB4  599A               	subwfb	??_efgtoa& (0+255),w,b
  3700   000AB6  B0D8               	btfsc	status,0,c
  3701   000AB8  D008               	goto	u9300
  3702                           
  3703                           ; BSR set to: 0
  3704   000ABA  BFC3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3705   000ABC  D72A               	goto	l7319
  3706   000ABE  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3707   000AC0  E104               	bnz	u9300
  3708   000AC2  0E4B               	movlw	75
  3709   000AC4  5DC2               	subwf	efgtoa@n& (0+255),w,b
  3710   000AC6  A0D8               	btfss	status,0,c
  3711   000AC8  D724               	goto	l7319
  3712   000ACA                     u9300:
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 816:  i = sizeof(dbuf) - 1;
  3716   000ACA  0E00               	movlw	0
  3717   000ACC  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  3718   000ACE  0E4F               	movlw	79
  3719   000AD0  6FB3               	movwf	efgtoa@i& (0+255),b
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 817:     dbuf[i] = '\0';
  3723   000AD2  0E00               	movlw	low _dbuf
  3724   000AD4  25B3               	addwf	efgtoa@i& (0+255),w,b
  3725   000AD6  6ED9               	movwf	fsr2l,c
  3726   000AD8  0E01               	movlw	high _dbuf
  3727   000ADA  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3728   000ADC  6EDA               	movwf	fsr2h,c
  3729   000ADE  6ADF               	clrf	indf2,c
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 848:  memcpy(&dbuf[i-n], &dbu
      +                          f[0], (size_t)n);
  3733   000AE0  0E00               	movlw	low _dbuf
  3734   000AE2  6F9A               	movwf	??_efgtoa& (0+255),b
  3735   000AE4  0E01               	movlw	high _dbuf
  3736   000AE6  6F9B               	movwf	(??_efgtoa+1)& (0+255),b
  3737   000AE8  51C2               	movf	efgtoa@n& (0+255),w,b
  3738   000AEA  5F9A               	subwf	??_efgtoa& (0+255),f,b
  3739   000AEC  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3740   000AEE  5B9B               	subwfb	(??_efgtoa+1)& (0+255),f,b
  3741   000AF0  51B3               	movf	efgtoa@i& (0+255),w,b
  3742   000AF2  259A               	addwf	??_efgtoa& (0+255),w,b
  3743   000AF4  6F60               	movwf	memcpy@d1& (0+255),b
  3744   000AF6  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3745   000AF8  219B               	addwfc	(??_efgtoa+1)& (0+255),w,b
  3746   000AFA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3747   000AFC  0E00               	movlw	low _dbuf
  3748   000AFE  6F62               	movwf	memcpy@s1& (0+255),b
  3749   000B00  0E01               	movlw	high _dbuf
  3750   000B02  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  3751   000B04  C0C2  F064         	movff	efgtoa@n,memcpy@n
  3752   000B08  C0C3  F065         	movff	efgtoa@n+1,memcpy@n+1
  3753   000B0C  ECE6  F016         	call	_memcpy	;wreg free
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 849:  n = i-n;
  3757   000B10  51C2               	movf	efgtoa@n& (0+255),w,b
  3758   000B12  5DB3               	subwf	efgtoa@i& (0+255),w,b
  3759   000B14  6FC2               	movwf	efgtoa@n& (0+255),b
  3760   000B16  51C3               	movf	(efgtoa@n+1)& (0+255),w,b
  3761   000B18  59B4               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3762   000B1A  6FC3               	movwf	(efgtoa@n+1)& (0+255),b
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 850:  i = sign == 0 ? 0 : 1;
  3766   000B1C  51BD               	movf	efgtoa@sign& (0+255),w,b
  3767   000B1E  B4D8               	btfsc	status,2,c
  3768   000B20  D002               	goto	u9310
  3769   000B22  0E01               	movlw	1
  3770   000B24  D001               	goto	u9320
  3771   000B26                     u9310:
  3772   000B26  0E00               	movlw	0
  3773   000B28                     u9320:
  3774   000B28  6FB3               	movwf	efgtoa@i& (0+255),b
  3775   000B2A  6BB4               	clrf	(efgtoa@i+1)& (0+255),b
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 861:  if (sign) {
  3779   000B2C  51BD               	movf	efgtoa@sign& (0+255),w,b
  3780   000B2E  B4D8               	btfsc	status,2,c
  3781   000B30  D00B               	goto	l7377
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 862:   dbuf[--n] = sign;
  3785   000B32  07C2               	decf	efgtoa@n& (0+255),f,b
  3786   000B34  A0D8               	btfss	status,0,c
  3787   000B36  07C3               	decf	(efgtoa@n+1)& (0+255),f,b
  3788   000B38  0E00               	movlw	low _dbuf
  3789   000B3A  25C2               	addwf	efgtoa@n& (0+255),w,b
  3790   000B3C  6ED9               	movwf	fsr2l,c
  3791   000B3E  0E01               	movlw	high _dbuf
  3792   000B40  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3793   000B42  6EDA               	movwf	fsr2h,c
  3794   000B44  C0BD  FFDF         	movff	efgtoa@sign,indf2
  3795   000B48                     l7377:
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 864:  w -= i;
  3799   000B48  51B3               	movf	efgtoa@i& (0+255),w,b
  3800   000B4A  5FAD               	subwf	efgtoa@w& (0+255),f,b
  3801   000B4C  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  3802   000B4E  5BAE               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 867:     return (void) pad(fp
      +                          , &dbuf[n], w);
  3806   000B50  C093  F070         	movff	efgtoa@fp,pad@fp
  3807   000B54  C094  F071         	movff	efgtoa@fp+1,pad@fp+1
  3808   000B58  0E00               	movlw	low _dbuf
  3809   000B5A  25C2               	addwf	efgtoa@n& (0+255),w,b
  3810   000B5C  6F72               	movwf	pad@buf& (0+255),b
  3811   000B5E  0E01               	movlw	high _dbuf
  3812   000B60  21C3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3813   000B62  6F73               	movwf	(pad@buf+1)& (0+255),b
  3814   000B64  C0AD  F074         	movff	efgtoa@w,pad@p
  3815   000B68  C0AE  F075         	movff	efgtoa@w+1,pad@p+1
  3816   000B6C  ECA6  F015         	call	_pad	;wreg free
  3817                           
  3818                           ; BSR set to: 0
  3819   000B70  0012               	return		;funcret
  3820   000B72                     __end_of_efgtoa:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function _strcpy *****************
  3824 ;; Defined at:
  3825 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/strcpy.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  3828 ;;		 -> dbuf(80), 
  3829 ;;  src             1    2[BANK0 ] PTR const unsigned char 
  3830 ;;		 -> STR_11(4), STR_8(4), 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  d               2    4[BANK0 ] PTR unsigned char 
  3833 ;;		 -> dbuf(80), 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  2    0[BANK0 ] PTR unsigned char 
  3836 ;; Registers used:
  3837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3838 ;; Tracked objects:
  3839 ;;		On entry : 3F/0
  3840 ;;		On exit  : 3F/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3843 ;;      Params:         0       3       0       0
  3844 ;;      Locals:         0       2       0       0
  3845 ;;      Temps:          0       1       0       0
  3846 ;;      Totals:         0       6       0       0
  3847 ;;Total ram usage:        6 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 3
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_efgtoa
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text6
  3858   002FCE                     __ptext6:
  3859                           	callstack 0
  3860   002FCE                     _strcpy:
  3861                           	callstack 23
  3862                           
  3863                           ; BSR set to: 0
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;incstack = 0
  3867   002FCE  C060  F064         	movff	strcpy@dest,strcpy@d
  3868   002FD2  C061  F065         	movff	strcpy@dest+1,strcpy@d+1
  3869   002FD6                     l7113:
  3870                           
  3871                           ; BSR set to: 0
  3872   002FD6  2B62               	incf	strcpy@src& (0+255),f,b
  3873   002FD8  0562               	decf	strcpy@src& (0+255),w,b
  3874   002FDA  6F63               	movwf	??_strcpy& (0+255),b
  3875   002FDC  C063  FFF6         	movff	??_strcpy,tblptrl
  3876   002FE0                     	if	1	;There is more than 1 active tblptr byte
  3877   002FE0  0E03               	movlw	high __smallconst
  3878   002FE2  6EF7               	movwf	tblptrh,c
  3879   002FE4                     	endif
  3880   002FE4                     	if	0	;tblptru may be non-zero
  3881   002FE4                     	endif
  3882   002FE4                     	if	0	;tblptru may be non-zero
  3883   002FE4                     	endif
  3884   002FE4  C064  FFD9         	movff	strcpy@d,fsr2l
  3885   002FE8  C065  FFDA         	movff	strcpy@d+1,fsr2h
  3886   002FEC  4B64               	infsnz	strcpy@d& (0+255),f,b
  3887   002FEE  2B65               	incf	(strcpy@d+1)& (0+255),f,b
  3888   002FF0  0008               	tblrd		*
  3889   002FF2  CFF5 FFDF          	movff	tablat,indf2
  3890   002FF6  50DF               	movf	indf2,w,c
  3891   002FF8  B4D8               	btfsc	status,2,c
  3892   002FFA  0012               	return	
  3893   002FFC  D7EC               	goto	l7113
  3894   002FFE                     __end_of_strcpy:
  3895                           	callstack 0
  3896                           
  3897 ;; *************** function _pad *****************
  3898 ;; Defined at:
  3899 ;;		line 193 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  3902 ;;		 -> sprintf@f(11), 
  3903 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  3904 ;;		 -> dbuf(80), 
  3905 ;;  p               2   20[BANK0 ] int 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  i               2   23[BANK0 ] int 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 3F/0
  3914 ;;		On exit  : 3F/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3917 ;;      Params:         0       6       0       0
  3918 ;;      Locals:         0       2       0       0
  3919 ;;      Temps:          0       1       0       0
  3920 ;;      Totals:         0       9       0       0
  3921 ;;Total ram usage:        9 bytes
  3922 ;; Hardware stack levels used: 1
  3923 ;; Hardware stack levels required when called: 6
  3924 ;; This function calls:
  3925 ;;		_fputc
  3926 ;;		_fputs
  3927 ;; This function is called by:
  3928 ;;		_efgtoa
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932                           	psect	text7
  3933   002B4C                     __ptext7:
  3934                           	callstack 0
  3935   002B4C                     _pad:
  3936                           	callstack 20
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 193: static void pad(FILE *fp
      +                          , char *buf, int p);/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 194: {;/op
      +                          t/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 195:     int i;;/opt/microchip/xc
      +                          8/v2.50/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;incstack = 0
  3943   002B4C  AF75               	btfss	(pad@p+1)& (0+255),7,b
  3944   002B4E  D004               	goto	l1052
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  3948   002B50  0E00               	movlw	0
  3949   002B52  6F75               	movwf	(pad@p+1)& (0+255),b
  3950   002B54  0E00               	movlw	0
  3951   002B56  6F74               	movwf	pad@p& (0+255),b
  3952   002B58                     l1052:
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  3956   002B58  0E00               	movlw	0
  3957   002B5A  6F78               	movwf	(pad@i+1)& (0+255),b
  3958   002B5C  0E00               	movlw	0
  3959   002B5E  6F77               	movwf	pad@i& (0+255),b
  3960                           
  3961                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  3962   002B60  D00C               	goto	l7085
  3963   002B62                     l7081:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 210:         fputc(' ', fp);
  3967   002B62  0E00               	movlw	0
  3968   002B64  6F61               	movwf	(fputc@c+1)& (0+255),b
  3969   002B66  0E20               	movlw	32
  3970   002B68  6F60               	movwf	fputc@c& (0+255),b
  3971   002B6A  C070  F062         	movff	pad@fp,fputc@fp
  3972   002B6E  C071  F063         	movff	pad@fp+1,fputc@fp+1
  3973   002B72  ECA5  F014         	call	_fputc	;wreg free
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 211:         ++i;
  3977   002B76  4B77               	infsnz	pad@i& (0+255),f,b
  3978   002B78  2B78               	incf	(pad@i+1)& (0+255),f,b
  3979   002B7A                     l7085:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 209:     while (i < p) {
  3983   002B7A  5174               	movf	pad@p& (0+255),w,b
  3984   002B7C  5D77               	subwf	pad@i& (0+255),w,b
  3985   002B7E  5178               	movf	(pad@i+1)& (0+255),w,b
  3986   002B80  0A80               	xorlw	128
  3987   002B82  6F76               	movwf	??_pad& (0+255),b
  3988   002B84  5175               	movf	(pad@p+1)& (0+255),w,b
  3989   002B86  0A80               	xorlw	128
  3990   002B88  5976               	subwfb	??_pad& (0+255),w,b
  3991   002B8A  A0D8               	btfss	status,0,c
  3992   002B8C  D7EA               	goto	l7081
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;/opt/microchip/xc8/v2.50/pic/sources/c99/common/doprnt.c: 218:         fputs((const cha
      +                          r *)buf, fp);
  3996   002B8E  C072  F069         	movff	pad@buf,fputs@s
  3997   002B92  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3998   002B96  C070  F06B         	movff	pad@fp,fputs@fp
  3999   002B9A  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  4000   002B9E  ECCB  F017         	call	_fputs	;wreg free
  4001                           
  4002                           ; BSR set to: 0
  4003   002BA2  0012               	return		;funcret
  4004   002BA4                     __end_of_pad:
  4005                           	callstack 0
  4006                           
  4007 ;; *************** function _fputs *****************
  4008 ;; Defined at:
  4009 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputs.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4012 ;;		 -> dbuf(80), 
  4013 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  4014 ;;		 -> sprintf@f(11), 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  i               2   14[BANK0 ] int 
  4017 ;;  c               1   13[BANK0 ] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  2    9[BANK0 ] int 
  4020 ;; Registers used:
  4021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 3F/0
  4024 ;;		On exit  : 3F/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4027 ;;      Params:         0       4       0       0
  4028 ;;      Locals:         0       3       0       0
  4029 ;;      Temps:          0       0       0       0
  4030 ;;      Totals:         0       7       0       0
  4031 ;;Total ram usage:        7 bytes
  4032 ;; Hardware stack levels used: 1
  4033 ;; Hardware stack levels required when called: 5
  4034 ;; This function calls:
  4035 ;;		_fputc
  4036 ;; This function is called by:
  4037 ;;		_pad
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text8
  4042   002F96                     __ptext8:
  4043                           	callstack 0
  4044   002F96                     _fputs:
  4045                           	callstack 20
  4046                           
  4047                           ; BSR set to: 0
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;incstack = 0
  4051   002F96  0E00               	movlw	0
  4052   002F98  6F6F               	movwf	(fputs@i+1)& (0+255),b
  4053   002F9A  0E00               	movlw	0
  4054   002F9C  6F6E               	movwf	fputs@i& (0+255),b
  4055   002F9E  D00B               	goto	l6715
  4056   002FA0                     l6711:
  4057                           
  4058                           ; BSR set to: 0
  4059   002FA0  C06D  F060         	movff	fputs@c,fputc@c
  4060   002FA4  6B61               	clrf	(fputc@c+1)& (0+255),b
  4061   002FA6  C06B  F062         	movff	fputs@fp,fputc@fp
  4062   002FAA  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  4063   002FAE  ECA5  F014         	call	_fputc	;wreg free
  4064                           
  4065                           ; BSR set to: 0
  4066   002FB2  4B6E               	infsnz	fputs@i& (0+255),f,b
  4067   002FB4  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  4068   002FB6                     l6715:
  4069                           
  4070                           ; BSR set to: 0
  4071   002FB6  516E               	movf	fputs@i& (0+255),w,b
  4072   002FB8  2569               	addwf	fputs@s& (0+255),w,b
  4073   002FBA  6ED9               	movwf	fsr2l,c
  4074   002FBC  516F               	movf	(fputs@i+1)& (0+255),w,b
  4075   002FBE  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  4076   002FC0  6EDA               	movwf	fsr2h,c
  4077   002FC2  50DF               	movf	indf2,w,c
  4078   002FC4  6F6D               	movwf	fputs@c& (0+255),b
  4079   002FC6  516D               	movf	fputs@c& (0+255),w,b
  4080   002FC8  B4D8               	btfsc	status,2,c
  4081   002FCA  0012               	return	
  4082   002FCC  D7E9               	goto	l6711
  4083   002FCE                     __end_of_fputs:
  4084                           	callstack 0
  4085                           
  4086 ;; *************** function _fputc *****************
  4087 ;; Defined at:
  4088 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/nf_fputc.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  c               2    0[BANK0 ] int 
  4091 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4092 ;;		 -> sprintf@f(11), 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  2    0[BANK0 ] int 
  4097 ;; Registers used:
  4098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 3F/0
  4101 ;;		On exit  : 3F/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4104 ;;      Params:         0       4       0       0
  4105 ;;      Locals:         0       0       0       0
  4106 ;;      Temps:          0       5       0       0
  4107 ;;      Totals:         0       9       0       0
  4108 ;;Total ram usage:        9 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; Hardware stack levels required when called: 4
  4111 ;; This function calls:
  4112 ;;		_putch
  4113 ;; This function is called by:
  4114 ;;		_pad
  4115 ;;		_vfpfcnvrt
  4116 ;;		_fputs
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text9
  4121   00294A                     __ptext9:
  4122                           	callstack 0
  4123   00294A                     _fputc:
  4124                           	callstack 23
  4125                           
  4126                           ; BSR set to: 0
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;incstack = 0
  4130   00294A  5162               	movf	fputc@fp& (0+255),w,b
  4131   00294C  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4132   00294E  B4D8               	btfsc	status,2,c
  4133   002950  D004               	goto	u7800
  4134                           
  4135                           ; BSR set to: 0
  4136   002952  5162               	movf	fputc@fp& (0+255),w,b
  4137   002954  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  4138   002956  A4D8               	btfss	status,2,c
  4139   002958  D004               	goto	l6507
  4140   00295A                     u7800:
  4141                           
  4142                           ; BSR set to: 0
  4143   00295A  5160               	movf	fputc@c& (0+255),w,b
  4144   00295C  ECA0  F018         	call	_putch
  4145   002960  0012               	return	
  4146   002962                     l6507:
  4147                           
  4148                           ; BSR set to: 0
  4149   002962  EE20 F009          	lfsr	2,9
  4150   002966  5162               	movf	fputc@fp& (0+255),w,b
  4151   002968  26D9               	addwf	fsr2l,f,c
  4152   00296A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4153   00296C  22DA               	addwfc	fsr2h,f,c
  4154   00296E  50DE               	movf	postinc2,w,c
  4155   002970  10DE               	iorwf	postinc2,w,c
  4156   002972  B4D8               	btfsc	status,2,c
  4157   002974  D016               	goto	u7820
  4158                           
  4159                           ; BSR set to: 0
  4160   002976  EE20 F009          	lfsr	2,9
  4161   00297A  5162               	movf	fputc@fp& (0+255),w,b
  4162   00297C  26D9               	addwf	fsr2l,f,c
  4163   00297E  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4164   002980  22DA               	addwfc	fsr2h,f,c
  4165   002982  EE10 F002          	lfsr	1,2
  4166   002986  5162               	movf	fputc@fp& (0+255),w,b
  4167   002988  26E1               	addwf	fsr1l,f,c
  4168   00298A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4169   00298C  22E2               	addwfc	fsr1h,f,c
  4170   00298E  50DE               	movf	postinc2,w,c
  4171   002990  5CE6               	subwf	postinc1,w,c
  4172   002992  50E6               	movf	postinc1,w,c
  4173   002994  0A80               	xorlw	128
  4174   002996  6F68               	movwf	(??_fputc+4)& (0+255),b
  4175   002998  50DE               	movf	postinc2,w,c
  4176   00299A  0A80               	xorlw	128
  4177   00299C  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  4178   00299E  B0D8               	btfsc	status,0,c
  4179   0029A0  0012               	return	
  4180   0029A2                     u7820:
  4181                           
  4182                           ; BSR set to: 0
  4183   0029A2  EE20 F002          	lfsr	2,2
  4184   0029A6  5162               	movf	fputc@fp& (0+255),w,b
  4185   0029A8  26D9               	addwf	fsr2l,f,c
  4186   0029AA  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4187   0029AC  22DA               	addwfc	fsr2h,f,c
  4188   0029AE  50DF               	movf	indf2,w,c
  4189   0029B0  6F64               	movwf	??_fputc& (0+255),b
  4190   0029B2  C062  FFD9         	movff	fputc@fp,fsr2l
  4191   0029B6  C063  FFDA         	movff	fputc@fp+1,fsr2h
  4192   0029BA  50DF               	movf	indf2,w,c
  4193   0029BC  2564               	addwf	??_fputc& (0+255),w,b
  4194   0029BE  6ED9               	movwf	fsr2l,c
  4195   0029C0  6ADA               	clrf	fsr2h,c
  4196   0029C2  C060  FFDF         	movff	fputc@c,indf2
  4197   0029C6  EE20 F002          	lfsr	2,2
  4198   0029CA  5162               	movf	fputc@fp& (0+255),w,b
  4199   0029CC  26D9               	addwf	fsr2l,f,c
  4200   0029CE  5163               	movf	(fputc@fp+1)& (0+255),w,b
  4201   0029D0  22DA               	addwfc	fsr2h,f,c
  4202   0029D2  2ADE               	incf	postinc2,f,c
  4203   0029D4  0E00               	movlw	0
  4204   0029D6  22DD               	addwfc	postdec2,f,c
  4205                           
  4206                           ; BSR set to: 0
  4207   0029D8  0012               	return		;funcret
  4208   0029DA                     __end_of_fputc:
  4209                           	callstack 0
  4210                           
  4211 ;; *************** function _putch *****************
  4212 ;; Defined at:
  4213 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/putch.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  c               1    wreg     unsigned char 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  c               1    0[COMRAM] unsigned char 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		wreg
  4222 ;; Tracked objects:
  4223 ;;		On entry : 3F/0
  4224 ;;		On exit  : 3F/0
  4225 ;;		Unchanged: 3F/0
  4226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4227 ;;      Params:         0       0       0       0
  4228 ;;      Locals:         0       0       0       0
  4229 ;;      Temps:          0       0       0       0
  4230 ;;      Totals:         0       0       0       0
  4231 ;;Total ram usage:        0 bytes
  4232 ;; Hardware stack levels used: 1
  4233 ;; Hardware stack levels required when called: 3
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_fputc
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           	psect	text10
  4242   003140                     __ptext10:
  4243                           	callstack 0
  4244   003140                     _putch:
  4245                           	callstack 23
  4246                           
  4247                           ; BSR set to: 0
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;incstack = 0
  4251   003140  0012               	return		;funcret
  4252   003142                     __end_of_putch:
  4253                           	callstack 0
  4254                           
  4255 ;; *************** function _memcpy *****************
  4256 ;; Defined at:
  4257 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/memcpy.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  d1              2    0[BANK0 ] PTR void 
  4260 ;;		 -> dbuf(80), 
  4261 ;;  s1              2    2[BANK0 ] PTR const void 
  4262 ;;		 -> dbuf(80), 
  4263 ;;  n               2    4[BANK0 ] unsigned int 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4266 ;;		 -> dbuf(80), 
  4267 ;;  d               2    7[BANK0 ] PTR unsigned char 
  4268 ;;		 -> dbuf(80), 
  4269 ;;  tmp             1    6[BANK0 ] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  2    0[BANK0 ] PTR void 
  4272 ;; Registers used:
  4273 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 3F/0
  4276 ;;		On exit  : 3F/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4279 ;;      Params:         0       6       0       0
  4280 ;;      Locals:         0       5       0       0
  4281 ;;      Temps:          0       0       0       0
  4282 ;;      Totals:         0      11       0       0
  4283 ;;Total ram usage:       11 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; Hardware stack levels required when called: 3
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_efgtoa
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text11
  4294   002DCC                     __ptext11:
  4295                           	callstack 0
  4296   002DCC                     _memcpy:
  4297                           	callstack 23
  4298                           
  4299                           ; BSR set to: 0
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;incstack = 0
  4303   002DCC  C062  F069         	movff	memcpy@s1,memcpy@s
  4304   002DD0  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
  4305   002DD4  C060  F067         	movff	memcpy@d1,memcpy@d
  4306   002DD8  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
  4307   002DDC  D010               	goto	l7161
  4308   002DDE                     l7153:
  4309                           
  4310                           ; BSR set to: 0
  4311   002DDE  C069  FFD9         	movff	memcpy@s,fsr2l
  4312   002DE2  C06A  FFDA         	movff	memcpy@s+1,fsr2h
  4313   002DE6  50DF               	movf	indf2,w,c
  4314   002DE8  6F66               	movwf	memcpy@tmp& (0+255),b
  4315                           
  4316                           ; BSR set to: 0
  4317   002DEA  4B69               	infsnz	memcpy@s& (0+255),f,b
  4318   002DEC  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
  4319                           
  4320                           ; BSR set to: 0
  4321   002DEE  C067  FFD9         	movff	memcpy@d,fsr2l
  4322   002DF2  C068  FFDA         	movff	memcpy@d+1,fsr2h
  4323   002DF6  C066  FFDF         	movff	memcpy@tmp,indf2
  4324                           
  4325                           ; BSR set to: 0
  4326   002DFA  4B67               	infsnz	memcpy@d& (0+255),f,b
  4327   002DFC  2B68               	incf	(memcpy@d+1)& (0+255),f,b
  4328   002DFE                     l7161:
  4329                           
  4330                           ; BSR set to: 0
  4331   002DFE  0764               	decf	memcpy@n& (0+255),f,b
  4332   002E00  A0D8               	btfss	status,0,c
  4333   002E02  0765               	decf	(memcpy@n+1)& (0+255),f,b
  4334   002E04  2964               	incf	memcpy@n& (0+255),w,b
  4335   002E06  E1EB               	bnz	l7153
  4336   002E08  2965               	incf	(memcpy@n+1)& (0+255),w,b
  4337   002E0A  B4D8               	btfsc	status,2,c
  4338   002E0C  0012               	return	
  4339   002E0E  D7E7               	goto	l7153
  4340   002E10                     __end_of_memcpy:
  4341                           	callstack 0
  4342                           
  4343 ;; *************** function _labs *****************
  4344 ;; Defined at:
  4345 ;;		line 1 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/labs.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  a               4    0[BANK0 ] long 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  4    0[BANK0 ] long 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0
  4354 ;; Tracked objects:
  4355 ;;		On entry : 3F/0
  4356 ;;		On exit  : 3F/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4359 ;;      Params:         0       4       0       0
  4360 ;;      Locals:         0       0       0       0
  4361 ;;      Temps:          0       4       0       0
  4362 ;;      Totals:         0       8       0       0
  4363 ;;Total ram usage:        8 bytes
  4364 ;; Hardware stack levels used: 1
  4365 ;; Hardware stack levels required when called: 3
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_efgtoa
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text12
  4374   002D3C                     __ptext12:
  4375                           	callstack 0
  4376   002D3C                     _labs:
  4377                           	callstack 23
  4378                           
  4379                           ; BSR set to: 0
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;incstack = 0
  4383   002D3C  BF63               	btfsc	(labs@a+3)& (0+255),7,b
  4384   002D3E  D009               	goto	l7119
  4385                           
  4386                           ; BSR set to: 0
  4387   002D40  C060  F060         	movff	labs@a,?_labs
  4388   002D44  C061  F061         	movff	labs@a+1,?_labs+1
  4389   002D48  C062  F062         	movff	labs@a+2,?_labs+2
  4390   002D4C  C063  F063         	movff	labs@a+3,?_labs+3
  4391   002D50  0012               	return	
  4392   002D52                     l7119:
  4393                           
  4394                           ; BSR set to: 0
  4395   002D52  C060  F064         	movff	labs@a,??_labs
  4396   002D56  C061  F065         	movff	labs@a+1,??_labs+1
  4397   002D5A  C062  F066         	movff	labs@a+2,??_labs+2
  4398   002D5E  C063  F067         	movff	labs@a+3,??_labs+3
  4399   002D62  1F64               	comf	??_labs& (0+255),f,b
  4400   002D64  1F65               	comf	(??_labs+1)& (0+255),f,b
  4401   002D66  1F66               	comf	(??_labs+2)& (0+255),f,b
  4402   002D68  1F67               	comf	(??_labs+3)& (0+255),f,b
  4403   002D6A  2B64               	incf	??_labs& (0+255),f,b
  4404   002D6C  0E00               	movlw	0
  4405   002D6E  2365               	addwfc	(??_labs+1)& (0+255),f,b
  4406   002D70  2366               	addwfc	(??_labs+2)& (0+255),f,b
  4407   002D72  2367               	addwfc	(??_labs+3)& (0+255),f,b
  4408   002D74  C064  F060         	movff	??_labs,?_labs
  4409   002D78  C065  F061         	movff	??_labs+1,?_labs+1
  4410   002D7C  C066  F062         	movff	??_labs+2,?_labs+2
  4411   002D80  C067  F063         	movff	??_labs+3,?_labs+3
  4412                           
  4413                           ; BSR set to: 0
  4414   002D84  0012               	return		;funcret
  4415   002D86                     __end_of_labs:
  4416                           	callstack 0
  4417                           
  4418 ;; *************** function _floorf *****************
  4419 ;; Defined at:
  4420 ;;		line 3 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/floorf.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  x               4   25[BANK0 ] float 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  u               4   41[BANK0 ] struct .
  4425 ;;  m               4   35[BANK0 ] unsigned long 
  4426 ;;  e               2   39[BANK0 ] int 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  4   25[BANK0 ] float 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0
  4431 ;; Tracked objects:
  4432 ;;		On entry : 3F/0
  4433 ;;		On exit  : 3F/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4436 ;;      Params:         0       4       0       0
  4437 ;;      Locals:         0      10       0       0
  4438 ;;      Temps:          0       6       0       0
  4439 ;;      Totals:         0      20       0       0
  4440 ;;Total ram usage:       20 bytes
  4441 ;; Hardware stack levels used: 1
  4442 ;; Hardware stack levels required when called: 3
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_efgtoa
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text13
  4451   001E88                     __ptext13:
  4452                           	callstack 0
  4453   001E88                     _floorf:
  4454                           	callstack 23
  4455                           
  4456                           ; BSR set to: 0
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;incstack = 0
  4460   001E88  C0E2  F089         	movff	floorf@F521,floorf@u
  4461   001E8C  C0E3  F08A         	movff	floorf@F521+1,floorf@u+1
  4462   001E90  C0E4  F08B         	movff	floorf@F521+2,floorf@u+2
  4463   001E94  C0E5  F08C         	movff	floorf@F521+3,floorf@u+3
  4464   001E98  C079  F089         	movff	floorf@x,floorf@u
  4465   001E9C  C07A  F08A         	movff	floorf@x+1,floorf@u+1
  4466   001EA0  C07B  F08B         	movff	floorf@x+2,floorf@u+2
  4467   001EA4  C07C  F08C         	movff	floorf@x+3,floorf@u+3
  4468                           
  4469                           ; BSR set to: 0
  4470   001EA8  0E81               	movlw	129
  4471   001EAA  6F7D               	movwf	??_floorf& (0+255),b
  4472   001EAC  0EFF               	movlw	255
  4473   001EAE  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4474   001EB0  C089  F07F         	movff	floorf@u,??_floorf+2
  4475   001EB4  C08A  F080         	movff	floorf@u+1,??_floorf+3
  4476   001EB8  C08B  F081         	movff	floorf@u+2,??_floorf+4
  4477   001EBC  C08C  F082         	movff	floorf@u+3,??_floorf+5
  4478   001EC0  0E18               	movlw	24
  4479   001EC2  D005               	goto	u8910
  4480   001EC4                     u8915:
  4481   001EC4  90D8               	bcf	status,0,c
  4482   001EC6  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  4483   001EC8  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4484   001ECA  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4485   001ECC  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4486   001ECE                     u8910:
  4487   001ECE  2EE8               	decfsz	wreg,f,c
  4488   001ED0  D7F9               	goto	u8915
  4489   001ED2  517F               	movf	(??_floorf+2)& (0+255),w,b
  4490   001ED4  257D               	addwf	??_floorf& (0+255),w,b
  4491   001ED6  6F87               	movwf	floorf@e& (0+255),b
  4492   001ED8  0E00               	movlw	0
  4493   001EDA  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  4494   001EDC  6F88               	movwf	(floorf@e+1)& (0+255),b
  4495   001EDE  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4496   001EE0  D00F               	goto	l7129
  4497   001EE2  5188               	movf	(floorf@e+1)& (0+255),w,b
  4498   001EE4  E104               	bnz	u8920
  4499   001EE6  0E17               	movlw	23
  4500   001EE8  5D87               	subwf	floorf@e& (0+255),w,b
  4501   001EEA  A0D8               	btfss	status,0,c
  4502   001EEC  D009               	goto	l7129
  4503   001EEE                     u8920:
  4504                           
  4505                           ; BSR set to: 0
  4506   001EEE  C079  F079         	movff	floorf@x,?_floorf
  4507   001EF2  C07A  F07A         	movff	floorf@x+1,?_floorf+1
  4508   001EF6  C07B  F07B         	movff	floorf@x+2,?_floorf+2
  4509   001EFA  C07C  F07C         	movff	floorf@x+3,?_floorf+3
  4510   001EFE  0012               	return	
  4511   001F00                     l7129:
  4512                           
  4513                           ; BSR set to: 0
  4514   001F00  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4515   001F02  D05C               	goto	l7139
  4516                           
  4517                           ; BSR set to: 0
  4518   001F04  C087  F07D         	movff	floorf@e,??_floorf
  4519   001F08  0EFF               	movlw	255
  4520   001F0A  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4521   001F0C  0EFF               	movlw	255
  4522   001F0E  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4523   001F10  0E7F               	movlw	127
  4524   001F12  6F80               	movwf	(??_floorf+3)& (0+255),b
  4525   001F14  0E00               	movlw	0
  4526   001F16  6F81               	movwf	(??_floorf+4)& (0+255),b
  4527   001F18                     u8945:
  4528   001F18  677D               	tstfsz	??_floorf& (0+255),b
  4529   001F1A  D001               	goto	u8946
  4530   001F1C  D007               	goto	u8947
  4531   001F1E                     u8946:
  4532   001F1E  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  4533   001F20  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4534   001F22  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4535   001F24  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4536   001F26  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4537   001F28  2F7D               	decfsz	??_floorf& (0+255),f,b
  4538   001F2A  D7F6               	goto	u8945
  4539   001F2C                     u8947:
  4540   001F2C  C07E  F083         	movff	??_floorf+1,floorf@m
  4541   001F30  C07F  F084         	movff	??_floorf+2,floorf@m+1
  4542   001F34  C080  F085         	movff	??_floorf+3,floorf@m+2
  4543   001F38  C081  F086         	movff	??_floorf+4,floorf@m+3
  4544   001F3C  0100               	movlb	0	; () banked
  4545   001F3E  5183               	movf	floorf@m& (0+255),w,b
  4546   001F40  1589               	andwf	floorf@u& (0+255),w,b
  4547   001F42  6F7D               	movwf	??_floorf& (0+255),b
  4548   001F44  5184               	movf	(floorf@m+1)& (0+255),w,b
  4549   001F46  158A               	andwf	(floorf@u+1)& (0+255),w,b
  4550   001F48  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4551   001F4A  5185               	movf	(floorf@m+2)& (0+255),w,b
  4552   001F4C  158B               	andwf	(floorf@u+2)& (0+255),w,b
  4553   001F4E  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4554   001F50  5186               	movf	(floorf@m+3)& (0+255),w,b
  4555   001F52  158C               	andwf	(floorf@u+3)& (0+255),w,b
  4556   001F54  6F80               	movwf	(??_floorf+3)& (0+255),b
  4557   001F56  517D               	movf	??_floorf& (0+255),w,b
  4558   001F58  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4559   001F5A  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4560   001F5C  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4561   001F5E  B4D8               	btfsc	status,2,c
  4562   001F60  D7C6               	goto	u8920
  4563                           
  4564                           ; BSR set to: 0
  4565   001F62  C089  F07D         	movff	floorf@u,??_floorf
  4566   001F66  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  4567   001F6A  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  4568   001F6E  C08C  F080         	movff	floorf@u+3,??_floorf+3
  4569   001F72  0E20               	movlw	32
  4570   001F74  D005               	goto	u8960
  4571   001F76                     u8965:
  4572   001F76  90D8               	bcf	status,0,c
  4573   001F78  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4574   001F7A  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4575   001F7C  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4576   001F7E  337D               	rrcf	??_floorf& (0+255),f,b
  4577   001F80                     u8960:
  4578   001F80  2EE8               	decfsz	wreg,f,c
  4579   001F82  D7F9               	goto	u8965
  4580   001F84  517D               	movf	??_floorf& (0+255),w,b
  4581   001F86  B4D8               	btfsc	status,2,c
  4582   001F88  D008               	goto	l1163
  4583                           
  4584                           ; BSR set to: 0
  4585   001F8A  5183               	movf	floorf@m& (0+255),w,b
  4586   001F8C  2789               	addwf	floorf@u& (0+255),f,b
  4587   001F8E  5184               	movf	(floorf@m+1)& (0+255),w,b
  4588   001F90  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  4589   001F92  5185               	movf	(floorf@m+2)& (0+255),w,b
  4590   001F94  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  4591   001F96  5186               	movf	(floorf@m+3)& (0+255),w,b
  4592   001F98  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  4593   001F9A                     l1163:
  4594                           
  4595                           ; BSR set to: 0
  4596   001F9A  1D83               	comf	floorf@m& (0+255),w,b
  4597   001F9C  6F7D               	movwf	??_floorf& (0+255),b
  4598   001F9E  1D84               	comf	(floorf@m+1)& (0+255),w,b
  4599   001FA0  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4600   001FA2  1D85               	comf	(floorf@m+2)& (0+255),w,b
  4601   001FA4  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4602   001FA6  1D86               	comf	(floorf@m+3)& (0+255),w,b
  4603   001FA8  6F80               	movwf	(??_floorf+3)& (0+255),b
  4604   001FAA  517D               	movf	??_floorf& (0+255),w,b
  4605   001FAC  1789               	andwf	floorf@u& (0+255),f,b
  4606   001FAE  517E               	movf	(??_floorf+1)& (0+255),w,b
  4607   001FB0  178A               	andwf	(floorf@u+1)& (0+255),f,b
  4608   001FB2  517F               	movf	(??_floorf+2)& (0+255),w,b
  4609   001FB4  178B               	andwf	(floorf@u+2)& (0+255),f,b
  4610   001FB6  5180               	movf	(??_floorf+3)& (0+255),w,b
  4611   001FB8  178C               	andwf	(floorf@u+3)& (0+255),f,b
  4612   001FBA  D032               	goto	l7147
  4613   001FBC                     l7139:
  4614                           
  4615                           ; BSR set to: 0
  4616   001FBC  C089  F07D         	movff	floorf@u,??_floorf
  4617   001FC0  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  4618   001FC4  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  4619   001FC8  C08C  F080         	movff	floorf@u+3,??_floorf+3
  4620   001FCC  0E20               	movlw	32
  4621   001FCE  D005               	goto	u8980
  4622   001FD0                     u8985:
  4623   001FD0  90D8               	bcf	status,0,c
  4624   001FD2  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4625   001FD4  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4626   001FD6  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4627   001FD8  337D               	rrcf	??_floorf& (0+255),f,b
  4628   001FDA                     u8980:
  4629   001FDA  2EE8               	decfsz	wreg,f,c
  4630   001FDC  D7F9               	goto	u8985
  4631   001FDE  677D               	tstfsz	??_floorf& (0+255),b
  4632   001FE0  D008               	goto	l7143
  4633                           
  4634                           ; BSR set to: 0
  4635   001FE2  0E00               	movlw	0
  4636   001FE4  6F89               	movwf	floorf@u& (0+255),b
  4637   001FE6  0E00               	movlw	0
  4638   001FE8  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4639   001FEA  0E00               	movlw	0
  4640   001FEC  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4641   001FEE  0E00               	movlw	0
  4642   001FF0  D016               	goto	L3
  4643   001FF2                     l7143:
  4644                           
  4645                           ; BSR set to: 0
  4646   001FF2  90D8               	bcf	status,0,c
  4647   001FF4  3589               	rlcf	floorf@u& (0+255),w,b
  4648   001FF6  6F7D               	movwf	??_floorf& (0+255),b
  4649   001FF8  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  4650   001FFA  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4651   001FFC  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  4652   001FFE  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4653   002000  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  4654   002002  6F80               	movwf	(??_floorf+3)& (0+255),b
  4655   002004  517D               	movf	??_floorf& (0+255),w,b
  4656   002006  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4657   002008  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4658   00200A  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4659   00200C  B4D8               	btfsc	status,2,c
  4660   00200E  D008               	goto	l7147
  4661                           
  4662                           ; BSR set to: 0
  4663   002010  0E00               	movlw	0
  4664   002012  6F89               	movwf	floorf@u& (0+255),b
  4665   002014  0E00               	movlw	0
  4666   002016  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4667   002018  0E80               	movlw	128
  4668   00201A  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4669   00201C  0EBF               	movlw	191
  4670   00201E                     L3:
  4671   00201E  6F8C               	movwf	(floorf@u+3)& (0+255),b
  4672   002020                     l7147:
  4673                           
  4674                           ; BSR set to: 0
  4675   002020  C089  F079         	movff	floorf@u,?_floorf
  4676   002024  C08A  F07A         	movff	floorf@u+1,?_floorf+1
  4677   002028  C08B  F07B         	movff	floorf@u+2,?_floorf+2
  4678   00202C  C08C  F07C         	movff	floorf@u+3,?_floorf+3
  4679                           
  4680                           ; BSR set to: 0
  4681   002030  0012               	return		;funcret
  4682   002032                     __end_of_floorf:
  4683                           	callstack 0
  4684                           
  4685 ;; *************** function ___fpclassifyf *****************
  4686 ;; Defined at:
  4687 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/__fpclassifyf.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  x               4    0[BANK0 ] float 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  u               4   10[BANK0 ] struct .
  4692 ;;  e               2    8[BANK0 ] int 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  2    0[BANK0 ] int 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0
  4697 ;; Tracked objects:
  4698 ;;		On entry : 3F/0
  4699 ;;		On exit  : 3F/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4702 ;;      Params:         0       4       0       0
  4703 ;;      Locals:         0       6       0       0
  4704 ;;      Temps:          0       4       0       0
  4705 ;;      Totals:         0      14       0       0
  4706 ;;Total ram usage:       14 bytes
  4707 ;; Hardware stack levels used: 1
  4708 ;; Hardware stack levels required when called: 3
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_efgtoa
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text14
  4717   0023AC                     __ptext14:
  4718                           	callstack 0
  4719   0023AC                     ___fpclassifyf:
  4720                           	callstack 23
  4721                           
  4722                           ; BSR set to: 0
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;incstack = 0
  4726   0023AC  C0E6  F06A         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4727   0023B0  C0E7  F06B         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4728   0023B4  C0E8  F06C         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4729   0023B8  C0E9  F06D         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4730   0023BC  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  4731   0023C0  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4732   0023C4  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4733   0023C8  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4734                           
  4735                           ; BSR set to: 0
  4736   0023CC  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  4737   0023D0  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4738   0023D4  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4739   0023D8  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4740   0023DC  0E18               	movlw	24
  4741   0023DE  D005               	goto	u8820
  4742   0023E0                     u8825:
  4743   0023E0  90D8               	bcf	status,0,c
  4744   0023E2  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  4745   0023E4  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  4746   0023E6  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  4747   0023E8  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  4748   0023EA                     u8820:
  4749   0023EA  2EE8               	decfsz	wreg,f,c
  4750   0023EC  D7F9               	goto	u8825
  4751   0023EE  5164               	movf	??___fpclassifyf& (0+255),w,b
  4752   0023F0  6F68               	movwf	___fpclassifyf@e& (0+255),b
  4753   0023F2  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  4754   0023F4  5168               	movf	___fpclassifyf@e& (0+255),w,b
  4755   0023F6  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  4756   0023F8  A4D8               	btfss	status,2,c
  4757   0023FA  D019               	goto	l7101
  4758                           
  4759                           ; BSR set to: 0
  4760   0023FC  90D8               	bcf	status,0,c
  4761   0023FE  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  4762   002400  6F64               	movwf	??___fpclassifyf& (0+255),b
  4763   002402  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  4764   002404  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  4765   002406  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  4766   002408  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  4767   00240A  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  4768   00240C  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  4769   00240E  5164               	movf	??___fpclassifyf& (0+255),w,b
  4770   002410  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  4771   002412  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  4772   002414  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  4773   002416  A4D8               	btfss	status,2,c
  4774   002418  D005               	goto	l7097
  4775                           
  4776                           ; BSR set to: 0
  4777   00241A  0E00               	movlw	0
  4778   00241C  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  4779   00241E  0E02               	movlw	2
  4780   002420  6F60               	movwf	?___fpclassifyf& (0+255),b
  4781   002422  0012               	return	
  4782   002424                     l7097:
  4783                           
  4784                           ; BSR set to: 0
  4785   002424  0E00               	movlw	0
  4786   002426  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  4787   002428  0E03               	movlw	3
  4788   00242A  6F60               	movwf	?___fpclassifyf& (0+255),b
  4789   00242C  0012               	return	
  4790   00242E                     l7101:
  4791                           
  4792                           ; BSR set to: 0
  4793   00242E  2968               	incf	___fpclassifyf@e& (0+255),w,b
  4794   002430  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  4795   002432  A4D8               	btfss	status,2,c
  4796   002434  D01C               	goto	l7107
  4797                           
  4798                           ; BSR set to: 0
  4799   002436  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  4800   00243A  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4801   00243E  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4802   002442  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4803   002446  0E09               	movlw	9
  4804   002448                     u8865:
  4805   002448  90D8               	bcf	status,0,c
  4806   00244A  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  4807   00244C  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  4808   00244E  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  4809   002450  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  4810   002452  2EE8               	decfsz	wreg,f,c
  4811   002454  D7F9               	goto	u8865
  4812   002456  5164               	movf	??___fpclassifyf& (0+255),w,b
  4813   002458  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  4814   00245A  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  4815   00245C  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  4816   00245E  A4D8               	btfss	status,2,c
  4817   002460  D002               	goto	u8870
  4818   002462  0E01               	movlw	1
  4819   002464  D001               	goto	u8880
  4820   002466                     u8870:
  4821   002466  0E00               	movlw	0
  4822   002468                     u8880:
  4823   002468  6F60               	movwf	?___fpclassifyf& (0+255),b
  4824   00246A  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  4825   00246C  0012               	return	
  4826   00246E                     l7107:
  4827                           
  4828                           ; BSR set to: 0
  4829   00246E  0E00               	movlw	0
  4830   002470  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  4831   002472  0E04               	movlw	4
  4832   002474  6F60               	movwf	?___fpclassifyf& (0+255),b
  4833                           
  4834                           ; BSR set to: 0
  4835   002476  0012               	return		;funcret
  4836   002478                     __end_of___fpclassifyf:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function ___flsub *****************
  4840 ;; Defined at:
  4841 ;;		line 245 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcadd.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  b               4   39[BANK0 ] int 
  4844 ;;  a               4   43[BANK0 ] int 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  4   39[BANK0 ] int 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 3F/0
  4853 ;;		On exit  : 3F/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4856 ;;      Params:         0       8       0       0
  4857 ;;      Locals:         0       0       0       0
  4858 ;;      Temps:          0       0       0       0
  4859 ;;      Totals:         0       8       0       0
  4860 ;;Total ram usage:        8 bytes
  4861 ;; Hardware stack levels used: 1
  4862 ;; Hardware stack levels required when called: 4
  4863 ;; This function calls:
  4864 ;;		___fladd
  4865 ;; This function is called by:
  4866 ;;		_efgtoa
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text15
  4871   002D86                     __ptext15:
  4872                           	callstack 0
  4873   002D86                     ___flsub:
  4874                           	callstack 22
  4875                           
  4876                           ; BSR set to: 0
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;incstack = 0
  4880   002D86  0E00               	movlw	0
  4881   002D88  1B8B               	xorwf	___flsub@a& (0+255),f,b
  4882   002D8A  0E00               	movlw	0
  4883   002D8C  1B8C               	xorwf	(___flsub@a+1)& (0+255),f,b
  4884   002D8E  0E00               	movlw	0
  4885   002D90  1B8D               	xorwf	(___flsub@a+2)& (0+255),f,b
  4886   002D92  0E80               	movlw	128
  4887   002D94  1B8E               	xorwf	(___flsub@a+3)& (0+255),f,b
  4888                           
  4889                           ; BSR set to: 0
  4890   002D96  C087  F060         	movff	___flsub@b,___fladd@b
  4891   002D9A  C088  F061         	movff	___flsub@b+1,___fladd@b+1
  4892   002D9E  C089  F062         	movff	___flsub@b+2,___fladd@b+2
  4893   002DA2  C08A  F063         	movff	___flsub@b+3,___fladd@b+3
  4894   002DA6  C08B  F064         	movff	___flsub@a,___fladd@a
  4895   002DAA  C08C  F065         	movff	___flsub@a+1,___fladd@a+1
  4896   002DAE  C08D  F066         	movff	___flsub@a+2,___fladd@a+2
  4897   002DB2  C08E  F067         	movff	___flsub@a+3,___fladd@a+3
  4898   002DB6  ECA3  F00A         	call	___fladd	;wreg free
  4899   002DBA  C060  F087         	movff	?___fladd,?___flsub
  4900   002DBE  C061  F088         	movff	?___fladd+1,?___flsub+1
  4901   002DC2  C062  F089         	movff	?___fladd+2,?___flsub+2
  4902   002DC6  C063  F08A         	movff	?___fladd+3,?___flsub+3
  4903                           
  4904                           ; BSR set to: 0
  4905   002DCA  0012               	return		;funcret
  4906   002DCC                     __end_of___flsub:
  4907                           	callstack 0
  4908                           
  4909 ;; *************** function ___fladd *****************
  4910 ;; Defined at:
  4911 ;;		line 10 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcadd.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  b               4    0[BANK0 ] int 
  4914 ;;  a               4    4[BANK0 ] int 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  grs             1   15[BANK0 ] unsigned char 
  4917 ;;  bexp            1   14[BANK0 ] unsigned char 
  4918 ;;  aexp            1   13[BANK0 ] unsigned char 
  4919 ;;  signs           1   12[BANK0 ] unsigned char 
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  4    0[BANK0 ] unsigned char 
  4922 ;; Registers used:
  4923 ;;		wreg, status,2, status,0
  4924 ;; Tracked objects:
  4925 ;;		On entry : 3F/0
  4926 ;;		On exit  : 3F/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4929 ;;      Params:         0       8       0       0
  4930 ;;      Locals:         0       4       0       0
  4931 ;;      Temps:          0       4       0       0
  4932 ;;      Totals:         0      16       0       0
  4933 ;;Total ram usage:       16 bytes
  4934 ;; Hardware stack levels used: 1
  4935 ;; Hardware stack levels required when called: 3
  4936 ;; This function calls:
  4937 ;;		Nothing
  4938 ;; This function is called by:
  4939 ;;		___flsub
  4940 ;;		_efgtoa
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text16
  4945   001546                     __ptext16:
  4946                           	callstack 0
  4947   001546                     ___fladd:
  4948                           	callstack 22
  4949                           
  4950                           ; BSR set to: 0
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;incstack = 0
  4954   001546  5163               	movf	(___fladd@b+3)& (0+255),w,b
  4955   001548  0B80               	andlw	128
  4956   00154A  6F6C               	movwf	___fladd@signs& (0+255),b
  4957   00154C  5163               	movf	(___fladd@b+3)& (0+255),w,b
  4958   00154E  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  4959   001550  6F6E               	movwf	___fladd@bexp& (0+255),b
  4960                           
  4961                           ; BSR set to: 0
  4962   001552  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
  4963                           
  4964                           ; BSR set to: 0
  4965   001554  816E               	bsf	___fladd@bexp& (0+255),0,b
  4966                           
  4967                           ; BSR set to: 0
  4968   001556  516E               	movf	___fladd@bexp& (0+255),w,b
  4969   001558  B4D8               	btfsc	status,2,c
  4970   00155A  D00E               	goto	l6531
  4971                           
  4972                           ; BSR set to: 0
  4973   00155C  296E               	incf	___fladd@bexp& (0+255),w,b
  4974   00155E  A4D8               	btfss	status,2,c
  4975   001560  D008               	goto	l6527
  4976                           
  4977                           ; BSR set to: 0
  4978   001562  0E00               	movlw	0
  4979   001564  6F60               	movwf	___fladd@b& (0+255),b
  4980   001566  0E00               	movlw	0
  4981   001568  6F61               	movwf	(___fladd@b+1)& (0+255),b
  4982   00156A  0E00               	movlw	0
  4983   00156C  6F62               	movwf	(___fladd@b+2)& (0+255),b
  4984   00156E  0E00               	movlw	0
  4985   001570  6F63               	movwf	(___fladd@b+3)& (0+255),b
  4986   001572                     l6527:
  4987                           
  4988                           ; BSR set to: 0
  4989   001572  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  4990                           
  4991                           ; BSR set to: 0
  4992   001574  6B63               	clrf	(___fladd@b+3)& (0+255),b
  4993   001576  D008               	goto	l6533
  4994   001578                     l6531:
  4995                           
  4996                           ; BSR set to: 0
  4997   001578  0E00               	movlw	0
  4998   00157A  6F60               	movwf	___fladd@b& (0+255),b
  4999   00157C  0E00               	movlw	0
  5000   00157E  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5001   001580  0E00               	movlw	0
  5002   001582  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5003   001584  0E00               	movlw	0
  5004   001586  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5005   001588                     l6533:
  5006                           
  5007                           ; BSR set to: 0
  5008   001588  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5009   00158A  0B80               	andlw	128
  5010   00158C  6F6D               	movwf	___fladd@aexp& (0+255),b
  5011                           
  5012                           ; BSR set to: 0
  5013   00158E  516C               	movf	___fladd@signs& (0+255),w,b
  5014   001590  196D               	xorwf	___fladd@aexp& (0+255),w,b
  5015   001592  A4D8               	btfss	status,2,c
  5016                           
  5017                           ; BSR set to: 0
  5018   001594  8D6C               	bsf	___fladd@signs& (0+255),6,b
  5019                           
  5020                           ; BSR set to: 0
  5021   001596  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5022   001598  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  5023   00159A  6F6D               	movwf	___fladd@aexp& (0+255),b
  5024                           
  5025                           ; BSR set to: 0
  5026   00159C  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
  5027                           
  5028                           ; BSR set to: 0
  5029   00159E  816D               	bsf	___fladd@aexp& (0+255),0,b
  5030                           
  5031                           ; BSR set to: 0
  5032   0015A0  516D               	movf	___fladd@aexp& (0+255),w,b
  5033   0015A2  B4D8               	btfsc	status,2,c
  5034   0015A4  D00E               	goto	l6555
  5035                           
  5036                           ; BSR set to: 0
  5037   0015A6  296D               	incf	___fladd@aexp& (0+255),w,b
  5038   0015A8  A4D8               	btfss	status,2,c
  5039   0015AA  D008               	goto	l6551
  5040                           
  5041                           ; BSR set to: 0
  5042   0015AC  0E00               	movlw	0
  5043   0015AE  6F64               	movwf	___fladd@a& (0+255),b
  5044   0015B0  0E00               	movlw	0
  5045   0015B2  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5046   0015B4  0E00               	movlw	0
  5047   0015B6  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5048   0015B8  0E00               	movlw	0
  5049   0015BA  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5050   0015BC                     l6551:
  5051                           
  5052                           ; BSR set to: 0
  5053   0015BC  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  5054                           
  5055                           ; BSR set to: 0
  5056   0015BE  6B67               	clrf	(___fladd@a+3)& (0+255),b
  5057   0015C0  D008               	goto	l6557
  5058   0015C2                     l6555:
  5059                           
  5060                           ; BSR set to: 0
  5061   0015C2  0E00               	movlw	0
  5062   0015C4  6F64               	movwf	___fladd@a& (0+255),b
  5063   0015C6  0E00               	movlw	0
  5064   0015C8  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5065   0015CA  0E00               	movlw	0
  5066   0015CC  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5067   0015CE  0E00               	movlw	0
  5068   0015D0  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5069   0015D2                     l6557:
  5070                           
  5071                           ; BSR set to: 0
  5072   0015D2  516E               	movf	___fladd@bexp& (0+255),w,b
  5073   0015D4  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  5074   0015D6  B0D8               	btfsc	status,0,c
  5075   0015D8  D022               	goto	l6593
  5076                           
  5077                           ; BSR set to: 0
  5078   0015DA  AD6C               	btfss	___fladd@signs& (0+255),6,b
  5079   0015DC  D002               	goto	l6563
  5080                           
  5081                           ; BSR set to: 0
  5082   0015DE  0E80               	movlw	128
  5083   0015E0  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5084   0015E2                     l6563:
  5085                           
  5086                           ; BSR set to: 0
  5087   0015E2  C06E  F06F         	movff	___fladd@bexp,___fladd@grs
  5088                           
  5089                           ; BSR set to: 0
  5090   0015E6  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5091                           
  5092                           ; BSR set to: 0
  5093   0015EA  C06F  F06D         	movff	___fladd@grs,___fladd@aexp
  5094                           
  5095                           ; BSR set to: 0
  5096   0015EE  C060  F06F         	movff	___fladd@b,___fladd@grs
  5097                           
  5098                           ; BSR set to: 0
  5099   0015F2  C064  F060         	movff	___fladd@a,___fladd@b
  5100                           
  5101                           ; BSR set to: 0
  5102   0015F6  C06F  F064         	movff	___fladd@grs,___fladd@a
  5103                           
  5104                           ; BSR set to: 0
  5105   0015FA  C061  F06F         	movff	___fladd@b+1,___fladd@grs
  5106                           
  5107                           ; BSR set to: 0
  5108   0015FE  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  5109                           
  5110                           ; BSR set to: 0
  5111   001602  C06F  F065         	movff	___fladd@grs,___fladd@a+1
  5112                           
  5113                           ; BSR set to: 0
  5114   001606  C062  F06F         	movff	___fladd@b+2,___fladd@grs
  5115                           
  5116                           ; BSR set to: 0
  5117   00160A  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  5118                           
  5119                           ; BSR set to: 0
  5120   00160E  C06F  F066         	movff	___fladd@grs,___fladd@a+2
  5121                           
  5122                           ; BSR set to: 0
  5123   001612  C063  F06F         	movff	___fladd@b+3,___fladd@grs
  5124                           
  5125                           ; BSR set to: 0
  5126   001616  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  5127                           
  5128                           ; BSR set to: 0
  5129   00161A  C06F  F067         	movff	___fladd@grs,___fladd@a+3
  5130   00161E                     l6593:
  5131                           
  5132                           ; BSR set to: 0
  5133   00161E  6B6F               	clrf	___fladd@grs& (0+255),b
  5134   001620  516E               	movf	___fladd@bexp& (0+255),w,b
  5135   001622  C06D  F068         	movff	___fladd@aexp,??___fladd
  5136   001626  6B69               	clrf	(??___fladd+1)& (0+255),b
  5137   001628  5F68               	subwf	??___fladd& (0+255),f,b
  5138   00162A  0E00               	movlw	0
  5139   00162C  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  5140   00162E  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  5141   001630  D02C               	goto	l876
  5142   001632  5169               	movf	(??___fladd+1)& (0+255),w,b
  5143   001634  E104               	bnz	u7920
  5144   001636  0E1A               	movlw	26
  5145   001638  5D68               	subwf	??___fladd& (0+255),w,b
  5146   00163A  A0D8               	btfss	status,0,c
  5147   00163C  D026               	goto	l876
  5148   00163E                     u7920:
  5149                           
  5150                           ; BSR set to: 0
  5151   00163E  5160               	movf	___fladd@b& (0+255),w,b
  5152   001640  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5153   001642  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5154   001644  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5155   001646  B4D8               	btfsc	status,2,c
  5156   001648  D002               	goto	u7930
  5157   00164A  0E01               	movlw	1
  5158   00164C  D001               	goto	u7940
  5159   00164E                     u7930:
  5160   00164E  0E00               	movlw	0
  5161   001650                     u7940:
  5162   001650  6F6F               	movwf	___fladd@grs& (0+255),b
  5163                           
  5164                           ; BSR set to: 0
  5165   001652  0E00               	movlw	0
  5166   001654  6F60               	movwf	___fladd@b& (0+255),b
  5167   001656  0E00               	movlw	0
  5168   001658  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5169   00165A  0E00               	movlw	0
  5170   00165C  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5171   00165E  0E00               	movlw	0
  5172   001660  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5173                           
  5174                           ; BSR set to: 0
  5175   001662  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5176   001666  D015               	goto	u7970
  5177   001668                     l877:
  5178                           
  5179                           ; BSR set to: 0
  5180   001668  A16F               	btfss	___fladd@grs& (0+255),0,b
  5181   00166A  D005               	goto	l6603
  5182                           
  5183                           ; BSR set to: 0
  5184   00166C  90D8               	bcf	status,0,c
  5185   00166E  316F               	rrcf	___fladd@grs& (0+255),w,b
  5186   001670  0901               	iorlw	1
  5187   001672  6F6F               	movwf	___fladd@grs& (0+255),b
  5188   001674  D002               	goto	l6605
  5189   001676                     l6603:
  5190                           
  5191                           ; BSR set to: 0
  5192   001676  90D8               	bcf	status,0,c
  5193   001678  336F               	rrcf	___fladd@grs& (0+255),f,b
  5194   00167A                     l6605:
  5195                           
  5196                           ; BSR set to: 0
  5197   00167A  B160               	btfsc	___fladd@b& (0+255),0,b
  5198                           
  5199                           ; BSR set to: 0
  5200   00167C  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5201                           
  5202                           ; BSR set to: 0
  5203   00167E  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5204   001680  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5205   001682  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5206   001684  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5207   001686  3360               	rrcf	___fladd@b& (0+255),f,b
  5208                           
  5209                           ; BSR set to: 0
  5210   001688  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5211   00168A                     l876:
  5212                           
  5213                           ; BSR set to: 0
  5214   00168A  516D               	movf	___fladd@aexp& (0+255),w,b
  5215   00168C  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  5216   00168E  A0D8               	btfss	status,0,c
  5217   001690  D7EB               	goto	l877
  5218   001692                     u7970:
  5219                           
  5220                           ; BSR set to: 0
  5221   001692  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  5222   001694  D028               	goto	l6637
  5223                           
  5224                           ; BSR set to: 0
  5225   001696  516E               	movf	___fladd@bexp& (0+255),w,b
  5226   001698  A4D8               	btfss	status,2,c
  5227   00169A  D009               	goto	l6619
  5228                           
  5229                           ; BSR set to: 0
  5230   00169C  0E00               	movlw	0
  5231   00169E  6F60               	movwf	?___fladd& (0+255),b
  5232   0016A0  0E00               	movlw	0
  5233   0016A2  6F61               	movwf	(?___fladd+1)& (0+255),b
  5234   0016A4  0E00               	movlw	0
  5235   0016A6  6F62               	movwf	(?___fladd+2)& (0+255),b
  5236   0016A8  0E00               	movlw	0
  5237   0016AA  6F63               	movwf	(?___fladd+3)& (0+255),b
  5238   0016AC  0012               	return	
  5239   0016AE                     l6619:
  5240                           
  5241                           ; BSR set to: 0
  5242   0016AE  5164               	movf	___fladd@a& (0+255),w,b
  5243   0016B0  2760               	addwf	___fladd@b& (0+255),f,b
  5244   0016B2  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5245   0016B4  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5246   0016B6  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5247   0016B8  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5248   0016BA  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5249   0016BC  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5250                           
  5251                           ; BSR set to: 0
  5252   0016BE  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5253   0016C0  D071               	goto	u8100
  5254                           
  5255                           ; BSR set to: 0
  5256   0016C2  A16F               	btfss	___fladd@grs& (0+255),0,b
  5257   0016C4  D005               	goto	l6627
  5258                           
  5259                           ; BSR set to: 0
  5260   0016C6  90D8               	bcf	status,0,c
  5261   0016C8  316F               	rrcf	___fladd@grs& (0+255),w,b
  5262   0016CA  0901               	iorlw	1
  5263   0016CC  6F6F               	movwf	___fladd@grs& (0+255),b
  5264   0016CE  D002               	goto	l6629
  5265   0016D0                     l6627:
  5266                           
  5267                           ; BSR set to: 0
  5268   0016D0  90D8               	bcf	status,0,c
  5269   0016D2  336F               	rrcf	___fladd@grs& (0+255),f,b
  5270   0016D4                     l6629:
  5271                           
  5272                           ; BSR set to: 0
  5273   0016D4  B160               	btfsc	___fladd@b& (0+255),0,b
  5274                           
  5275                           ; BSR set to: 0
  5276   0016D6  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5277                           
  5278                           ; BSR set to: 0
  5279   0016D8  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5280   0016DA  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5281   0016DC  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5282   0016DE  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5283   0016E0  3360               	rrcf	___fladd@b& (0+255),f,b
  5284                           
  5285                           ; BSR set to: 0
  5286   0016E2  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5287   0016E4  D05F               	goto	u8100
  5288   0016E6                     l6637:
  5289                           
  5290                           ; BSR set to: 0
  5291   0016E6  5164               	movf	___fladd@a& (0+255),w,b
  5292   0016E8  5D60               	subwf	___fladd@b& (0+255),w,b
  5293   0016EA  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5294   0016EC  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  5295   0016EE  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5296   0016F0  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  5297   0016F2  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5298   0016F4  0A80               	xorlw	128
  5299   0016F6  6F68               	movwf	??___fladd& (0+255),b
  5300   0016F8  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5301   0016FA  0A80               	xorlw	128
  5302   0016FC  5968               	subwfb	??___fladd& (0+255),w,b
  5303   0016FE  B0D8               	btfsc	status,0,c
  5304   001700  D025               	goto	l6647
  5305                           
  5306                           ; BSR set to: 0
  5307   001702  5160               	movf	___fladd@b& (0+255),w,b
  5308   001704  5D64               	subwf	___fladd@a& (0+255),w,b
  5309   001706  6F68               	movwf	??___fladd& (0+255),b
  5310   001708  5161               	movf	(___fladd@b+1)& (0+255),w,b
  5311   00170A  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  5312   00170C  6F69               	movwf	(??___fladd+1)& (0+255),b
  5313   00170E  5162               	movf	(___fladd@b+2)& (0+255),w,b
  5314   001710  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  5315   001712  6F6A               	movwf	(??___fladd+2)& (0+255),b
  5316   001714  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5317   001716  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  5318   001718  6F6B               	movwf	(??___fladd+3)& (0+255),b
  5319   00171A  0EFF               	movlw	255
  5320   00171C  2568               	addwf	??___fladd& (0+255),w,b
  5321   00171E  6F60               	movwf	___fladd@b& (0+255),b
  5322   001720  0EFF               	movlw	255
  5323   001722  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  5324   001724  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5325   001726  0EFF               	movlw	255
  5326   001728  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  5327   00172A  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5328   00172C  0EFF               	movlw	255
  5329   00172E  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  5330   001730  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5331   001732  0E80               	movlw	128
  5332   001734  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5333                           
  5334                           ; BSR set to: 0
  5335   001736  6D6F               	negf	___fladd@grs& (0+255),b
  5336                           
  5337                           ; BSR set to: 0
  5338   001738  516F               	movf	___fladd@grs& (0+255),w,b
  5339   00173A  A4D8               	btfss	status,2,c
  5340   00173C  D00F               	goto	l892
  5341                           
  5342                           ; BSR set to: 0
  5343   00173E  0E01               	movlw	1
  5344   001740  2760               	addwf	___fladd@b& (0+255),f,b
  5345   001742  0E00               	movlw	0
  5346   001744  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5347   001746  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5348   001748  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5349   00174A  D008               	goto	l892
  5350   00174C                     l6647:
  5351                           
  5352                           ; BSR set to: 0
  5353   00174C  5164               	movf	___fladd@a& (0+255),w,b
  5354   00174E  5F60               	subwf	___fladd@b& (0+255),f,b
  5355   001750  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5356   001752  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  5357   001754  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5358   001756  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  5359   001758  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5360   00175A  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  5361   00175C                     l892:
  5362                           
  5363                           ; BSR set to: 0
  5364   00175C  5160               	movf	___fladd@b& (0+255),w,b
  5365   00175E  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5366   001760  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5367   001762  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5368   001764  A4D8               	btfss	status,2,c
  5369   001766  D01C               	goto	l6671
  5370                           
  5371                           ; BSR set to: 0
  5372   001768  516F               	movf	___fladd@grs& (0+255),w,b
  5373   00176A  A4D8               	btfss	status,2,c
  5374   00176C  D019               	goto	l6671
  5375                           
  5376                           ; BSR set to: 0
  5377   00176E  0E00               	movlw	0
  5378   001770  6F60               	movwf	?___fladd& (0+255),b
  5379   001772  0E00               	movlw	0
  5380   001774  6F61               	movwf	(?___fladd+1)& (0+255),b
  5381   001776  0E00               	movlw	0
  5382   001778  6F62               	movwf	(?___fladd+2)& (0+255),b
  5383   00177A  0E00               	movlw	0
  5384   00177C  6F63               	movwf	(?___fladd+3)& (0+255),b
  5385   00177E  0012               	return	
  5386   001780                     l6655:
  5387                           
  5388                           ; BSR set to: 0
  5389   001780  90D8               	bcf	status,0,c
  5390   001782  3760               	rlcf	___fladd@b& (0+255),f,b
  5391   001784  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  5392   001786  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  5393   001788  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  5394                           
  5395                           ; BSR set to: 0
  5396   00178A  BF6F               	btfsc	___fladd@grs& (0+255),7,b
  5397                           
  5398                           ; BSR set to: 0
  5399   00178C  8160               	bsf	___fladd@b& (0+255),0,b
  5400                           
  5401                           ; BSR set to: 0
  5402   00178E  A16F               	btfss	___fladd@grs& (0+255),0,b
  5403   001790  D002               	goto	l6665
  5404                           
  5405                           ; BSR set to: 0
  5406   001792  80D8               	bsf	status,0,c
  5407   001794  D001               	goto	L4
  5408   001796                     l6665:
  5409                           
  5410                           ; BSR set to: 0
  5411   001796  90D8               	bcf	status,0,c
  5412   001798                     L4:
  5413   001798  376F               	rlcf	___fladd@grs& (0+255),f,b
  5414                           
  5415                           ; BSR set to: 0
  5416   00179A  516E               	movf	___fladd@bexp& (0+255),w,b
  5417   00179C  A4D8               	btfss	status,2,c
  5418                           
  5419                           ; BSR set to: 0
  5420   00179E  076E               	decf	___fladd@bexp& (0+255),f,b
  5421   0017A0                     l6671:
  5422                           
  5423                           ; BSR set to: 0
  5424   0017A0  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5425   0017A2  D7EE               	goto	l6655
  5426   0017A4                     u8100:
  5427                           
  5428                           ; BSR set to: 0
  5429   0017A4  6B6D               	clrf	___fladd@aexp& (0+255),b
  5430   0017A6  AF6F               	btfss	___fladd@grs& (0+255),7,b
  5431   0017A8  D00B               	goto	l901
  5432                           
  5433                           ; BSR set to: 0
  5434   0017AA  C06F  F068         	movff	___fladd@grs,??___fladd
  5435   0017AE  0E7F               	movlw	127
  5436   0017B0  1768               	andwf	??___fladd& (0+255),f,b
  5437   0017B2  B4D8               	btfsc	status,2,c
  5438   0017B4  D003               	goto	l902
  5439   0017B6                     u8120:
  5440                           
  5441                           ; BSR set to: 0
  5442   0017B6  0E01               	movlw	1
  5443   0017B8  6F6D               	movwf	___fladd@aexp& (0+255),b
  5444   0017BA  D002               	goto	l901
  5445   0017BC                     l902:
  5446                           
  5447                           ; BSR set to: 0
  5448   0017BC  B160               	btfsc	___fladd@b& (0+255),0,b
  5449   0017BE  D7FB               	goto	u8120
  5450   0017C0                     l901:
  5451                           
  5452                           ; BSR set to: 0
  5453   0017C0  516D               	movf	___fladd@aexp& (0+255),w,b
  5454   0017C2  B4D8               	btfsc	status,2,c
  5455   0017C4  D020               	goto	l6687
  5456                           
  5457                           ; BSR set to: 0
  5458   0017C6  0E01               	movlw	1
  5459   0017C8  2760               	addwf	___fladd@b& (0+255),f,b
  5460   0017CA  0E00               	movlw	0
  5461   0017CC  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5462   0017CE  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5463   0017D0  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5464                           
  5465                           ; BSR set to: 0
  5466   0017D2  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5467   0017D4  D018               	goto	l6687
  5468                           
  5469                           ; BSR set to: 0
  5470   0017D6  C060  F068         	movff	___fladd@b,??___fladd
  5471   0017DA  C061  F069         	movff	___fladd@b+1,??___fladd+1
  5472   0017DE  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  5473   0017E2  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  5474   0017E6  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  5475   0017E8  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  5476   0017EA  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  5477   0017EC  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  5478   0017EE  3368               	rrcf	??___fladd& (0+255),f,b
  5479   0017F0  C068  F060         	movff	??___fladd,___fladd@b
  5480   0017F4  C069  F061         	movff	??___fladd+1,___fladd@b+1
  5481   0017F8  C06A  F062         	movff	??___fladd+2,___fladd@b+2
  5482   0017FC  C06B  F063         	movff	??___fladd+3,___fladd@b+3
  5483   001800  296E               	incf	___fladd@bexp& (0+255),w,b
  5484   001802  A4D8               	btfss	status,2,c
  5485                           
  5486                           ; BSR set to: 0
  5487   001804  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5488   001806                     l6687:
  5489                           
  5490                           ; BSR set to: 0
  5491   001806  296E               	incf	___fladd@bexp& (0+255),w,b
  5492   001808  B4D8               	btfsc	status,2,c
  5493   00180A  D003               	goto	u8180
  5494                           
  5495                           ; BSR set to: 0
  5496   00180C  516E               	movf	___fladd@bexp& (0+255),w,b
  5497   00180E  A4D8               	btfss	status,2,c
  5498   001810  D00B               	goto	l908
  5499   001812                     u8180:
  5500                           
  5501                           ; BSR set to: 0
  5502   001812  0E00               	movlw	0
  5503   001814  6F60               	movwf	___fladd@b& (0+255),b
  5504   001816  0E00               	movlw	0
  5505   001818  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5506   00181A  0E00               	movlw	0
  5507   00181C  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5508   00181E  0E00               	movlw	0
  5509   001820  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5510   001822  516E               	movf	___fladd@bexp& (0+255),w,b
  5511   001824  B4D8               	btfsc	status,2,c
  5512                           
  5513                           ; BSR set to: 0
  5514   001826  6B6C               	clrf	___fladd@signs& (0+255),b
  5515   001828                     l908:
  5516                           
  5517                           ; BSR set to: 0
  5518   001828  A16E               	btfss	___fladd@bexp& (0+255),0,b
  5519   00182A  D002               	goto	l6697
  5520                           
  5521                           ; BSR set to: 0
  5522   00182C  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5523   00182E  D001               	goto	l6699
  5524   001830                     l6697:
  5525                           
  5526                           ; BSR set to: 0
  5527   001830  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  5528   001832                     l6699:
  5529                           
  5530                           ; BSR set to: 0
  5531   001832  90D8               	bcf	status,0,c
  5532   001834  316E               	rrcf	___fladd@bexp& (0+255),w,b
  5533   001836  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5534                           
  5535                           ; BSR set to: 0
  5536   001838  BF6C               	btfsc	___fladd@signs& (0+255),7,b
  5537                           
  5538                           ; BSR set to: 0
  5539   00183A  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  5540                           
  5541                           ; BSR set to: 0
  5542   00183C  C060  F060         	movff	___fladd@b,?___fladd
  5543   001840  C061  F061         	movff	___fladd@b+1,?___fladd+1
  5544   001844  C062  F062         	movff	___fladd@b+2,?___fladd+2
  5545   001848  C063  F063         	movff	___fladd@b+3,?___fladd+3
  5546                           
  5547                           ; BSR set to: 0
  5548   00184C  0012               	return		;funcret
  5549   00184E                     __end_of___fladd:
  5550                           	callstack 0
  5551                           
  5552 ;; *************** function ___flneg *****************
  5553 ;; Defined at:
  5554 ;;		line 15 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/flneg.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  f1              4    0[BANK0 ] unsigned char 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;		None
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  4    0[BANK0 ] unsigned char 
  5561 ;; Registers used:
  5562 ;;		wreg, status,2, status,0
  5563 ;; Tracked objects:
  5564 ;;		On entry : 3F/0
  5565 ;;		On exit  : 3F/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5568 ;;      Params:         0       4       0       0
  5569 ;;      Locals:         0       0       0       0
  5570 ;;      Temps:          0       0       0       0
  5571 ;;      Totals:         0       4       0       0
  5572 ;;Total ram usage:        4 bytes
  5573 ;; Hardware stack levels used: 1
  5574 ;; Hardware stack levels required when called: 3
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_efgtoa
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text17
  5583   002FFE                     __ptext17:
  5584                           	callstack 0
  5585   002FFE                     ___flneg:
  5586                           	callstack 23
  5587                           
  5588                           ; BSR set to: 0
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;incstack = 0
  5592   002FFE  5160               	movf	___flneg@f1& (0+255),w,b
  5593   003000  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5594   003002  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5595   003004  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5596   003006  B4D8               	btfsc	status,2,c
  5597   003008  D008               	goto	l7029
  5598                           
  5599                           ; BSR set to: 0
  5600   00300A  0E00               	movlw	0
  5601   00300C  1B60               	xorwf	___flneg@f1& (0+255),f,b
  5602   00300E  0E00               	movlw	0
  5603   003010  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5604   003012  0E00               	movlw	0
  5605   003014  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5606   003016  0E80               	movlw	128
  5607   003018  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5608   00301A                     l7029:
  5609                           
  5610                           ; BSR set to: 0
  5611   00301A  C060  F060         	movff	___flneg@f1,?___flneg
  5612   00301E  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  5613   003022  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  5614   003026  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  5615                           
  5616                           ; BSR set to: 0
  5617   00302A  0012               	return		;funcret
  5618   00302C                     __end_of___flneg:
  5619                           	callstack 0
  5620                           
  5621 ;; *************** function ___flge *****************
  5622 ;; Defined at:
  5623 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/flge.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  ff1             4   39[BANK0 ] unsigned char 
  5626 ;;  ff2             4   43[BANK0 ] unsigned char 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;		None               void
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0
  5633 ;; Tracked objects:
  5634 ;;		On entry : 3F/0
  5635 ;;		On exit  : 3F/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5638 ;;      Params:         0       8       0       0
  5639 ;;      Locals:         0       0       0       0
  5640 ;;      Temps:          0       4       0       0
  5641 ;;      Totals:         0      12       0       0
  5642 ;;Total ram usage:       12 bytes
  5643 ;; Hardware stack levels used: 1
  5644 ;; Hardware stack levels required when called: 3
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_efgtoa
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text18
  5653   0022DC                     __ptext18:
  5654                           	callstack 0
  5655   0022DC                     ___flge:
  5656                           	callstack 23
  5657                           
  5658                           ; BSR set to: 0
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;incstack = 0
  5662   0022DC  0E00               	movlw	0
  5663   0022DE  1587               	andwf	___flge@ff1& (0+255),w,b
  5664   0022E0  6F8F               	movwf	??___flge& (0+255),b
  5665   0022E2  0E00               	movlw	0
  5666   0022E4  1588               	andwf	(___flge@ff1+1)& (0+255),w,b
  5667   0022E6  6F90               	movwf	(??___flge+1)& (0+255),b
  5668   0022E8  0E80               	movlw	128
  5669   0022EA  1589               	andwf	(___flge@ff1+2)& (0+255),w,b
  5670   0022EC  6F91               	movwf	(??___flge+2)& (0+255),b
  5671   0022EE  0E7F               	movlw	127
  5672   0022F0  158A               	andwf	(___flge@ff1+3)& (0+255),w,b
  5673   0022F2  6F92               	movwf	(??___flge+3)& (0+255),b
  5674   0022F4  518F               	movf	??___flge& (0+255),w,b
  5675   0022F6  1190               	iorwf	(??___flge+1)& (0+255),w,b
  5676   0022F8  1191               	iorwf	(??___flge+2)& (0+255),w,b
  5677   0022FA  1192               	iorwf	(??___flge+3)& (0+255),w,b
  5678   0022FC  A4D8               	btfss	status,2,c
  5679   0022FE  D008               	goto	l7007
  5680                           
  5681                           ; BSR set to: 0
  5682   002300  0E00               	movlw	0
  5683   002302  6F87               	movwf	___flge@ff1& (0+255),b
  5684   002304  0E00               	movlw	0
  5685   002306  6F88               	movwf	(___flge@ff1+1)& (0+255),b
  5686   002308  0E00               	movlw	0
  5687   00230A  6F89               	movwf	(___flge@ff1+2)& (0+255),b
  5688   00230C  0E00               	movlw	0
  5689   00230E  6F8A               	movwf	(___flge@ff1+3)& (0+255),b
  5690   002310                     l7007:
  5691                           
  5692                           ; BSR set to: 0
  5693   002310  0E00               	movlw	0
  5694   002312  158B               	andwf	___flge@ff2& (0+255),w,b
  5695   002314  6F8F               	movwf	??___flge& (0+255),b
  5696   002316  0E00               	movlw	0
  5697   002318  158C               	andwf	(___flge@ff2+1)& (0+255),w,b
  5698   00231A  6F90               	movwf	(??___flge+1)& (0+255),b
  5699   00231C  0E80               	movlw	128
  5700   00231E  158D               	andwf	(___flge@ff2+2)& (0+255),w,b
  5701   002320  6F91               	movwf	(??___flge+2)& (0+255),b
  5702   002322  0E7F               	movlw	127
  5703   002324  158E               	andwf	(___flge@ff2+3)& (0+255),w,b
  5704   002326  6F92               	movwf	(??___flge+3)& (0+255),b
  5705   002328  518F               	movf	??___flge& (0+255),w,b
  5706   00232A  1190               	iorwf	(??___flge+1)& (0+255),w,b
  5707   00232C  1191               	iorwf	(??___flge+2)& (0+255),w,b
  5708   00232E  1192               	iorwf	(??___flge+3)& (0+255),w,b
  5709   002330  A4D8               	btfss	status,2,c
  5710   002332  D008               	goto	l7011
  5711                           
  5712                           ; BSR set to: 0
  5713   002334  0E00               	movlw	0
  5714   002336  6F8B               	movwf	___flge@ff2& (0+255),b
  5715   002338  0E00               	movlw	0
  5716   00233A  6F8C               	movwf	(___flge@ff2+1)& (0+255),b
  5717   00233C  0E00               	movlw	0
  5718   00233E  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
  5719   002340  0E00               	movlw	0
  5720   002342  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
  5721   002344                     l7011:
  5722                           
  5723                           ; BSR set to: 0
  5724   002344  AF8A               	btfss	(___flge@ff1+3)& (0+255),7,b
  5725   002346  D009               	goto	l7015
  5726                           
  5727                           ; BSR set to: 0
  5728   002348  6D87               	negf	___flge@ff1& (0+255),b
  5729   00234A  1F88               	comf	(___flge@ff1+1)& (0+255),f,b
  5730   00234C  B0D8               	btfsc	status,0,c
  5731   00234E  2B88               	incf	(___flge@ff1+1)& (0+255),f,b
  5732   002350  1F89               	comf	(___flge@ff1+2)& (0+255),f,b
  5733   002352  B0D8               	btfsc	status,0,c
  5734   002354  2B89               	incf	(___flge@ff1+2)& (0+255),f,b
  5735   002356  0E80               	movlw	128
  5736   002358  578A               	subfwb	(___flge@ff1+3)& (0+255),f,b
  5737   00235A                     l7015:
  5738                           
  5739                           ; BSR set to: 0
  5740   00235A  AF8E               	btfss	(___flge@ff2+3)& (0+255),7,b
  5741   00235C  D009               	goto	l612
  5742                           
  5743                           ; BSR set to: 0
  5744   00235E  6D8B               	negf	___flge@ff2& (0+255),b
  5745   002360  1F8C               	comf	(___flge@ff2+1)& (0+255),f,b
  5746   002362  B0D8               	btfsc	status,0,c
  5747   002364  2B8C               	incf	(___flge@ff2+1)& (0+255),f,b
  5748   002366  1F8D               	comf	(___flge@ff2+2)& (0+255),f,b
  5749   002368  B0D8               	btfsc	status,0,c
  5750   00236A  2B8D               	incf	(___flge@ff2+2)& (0+255),f,b
  5751   00236C  0E80               	movlw	128
  5752   00236E  578E               	subfwb	(___flge@ff2+3)& (0+255),f,b
  5753   002370                     l612:
  5754                           
  5755                           ; BSR set to: 0
  5756   002370  0E00               	movlw	0
  5757   002372  1B87               	xorwf	___flge@ff1& (0+255),f,b
  5758   002374  0E00               	movlw	0
  5759   002376  1B88               	xorwf	(___flge@ff1+1)& (0+255),f,b
  5760   002378  0E00               	movlw	0
  5761   00237A  1B89               	xorwf	(___flge@ff1+2)& (0+255),f,b
  5762   00237C  0E80               	movlw	128
  5763   00237E  1B8A               	xorwf	(___flge@ff1+3)& (0+255),f,b
  5764   002380  0E00               	movlw	0
  5765   002382  1B8B               	xorwf	___flge@ff2& (0+255),f,b
  5766   002384  0E00               	movlw	0
  5767   002386  1B8C               	xorwf	(___flge@ff2+1)& (0+255),f,b
  5768   002388  0E00               	movlw	0
  5769   00238A  1B8D               	xorwf	(___flge@ff2+2)& (0+255),f,b
  5770   00238C  0E80               	movlw	128
  5771   00238E  1B8E               	xorwf	(___flge@ff2+3)& (0+255),f,b
  5772   002390  518B               	movf	___flge@ff2& (0+255),w,b
  5773   002392  5D87               	subwf	___flge@ff1& (0+255),w,b
  5774   002394  518C               	movf	(___flge@ff2+1)& (0+255),w,b
  5775   002396  5988               	subwfb	(___flge@ff1+1)& (0+255),w,b
  5776   002398  518D               	movf	(___flge@ff2+2)& (0+255),w,b
  5777   00239A  5989               	subwfb	(___flge@ff1+2)& (0+255),w,b
  5778   00239C  518E               	movf	(___flge@ff2+3)& (0+255),w,b
  5779   00239E  598A               	subwfb	(___flge@ff1+3)& (0+255),w,b
  5780   0023A0  B0D8               	btfsc	status,0,c
  5781   0023A2  D002               	goto	l7021
  5782                           
  5783                           ; BSR set to: 0
  5784   0023A4  90D8               	bcf	status,0,c
  5785   0023A6  0012               	return	
  5786   0023A8                     l7021:
  5787                           
  5788                           ; BSR set to: 0
  5789   0023A8  80D8               	bsf	status,0,c
  5790                           
  5791                           ; BSR set to: 0
  5792   0023AA  0012               	return		;funcret
  5793   0023AC                     __end_of___flge:
  5794                           	callstack 0
  5795                           
  5796 ;; *************** function ___fleq *****************
  5797 ;; Defined at:
  5798 ;;		line 4 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/fleq.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  ff1             4    0[BANK0 ] unsigned char 
  5801 ;;  ff2             4    4[BANK0 ] unsigned char 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;		None
  5804 ;; Return value:  Size  Location     Type
  5805 ;;		None               void
  5806 ;; Registers used:
  5807 ;;		wreg, status,2, status,0
  5808 ;; Tracked objects:
  5809 ;;		On entry : 3F/0
  5810 ;;		On exit  : 3F/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5813 ;;      Params:         0       8       0       0
  5814 ;;      Locals:         0       0       0       0
  5815 ;;      Temps:          0       4       0       0
  5816 ;;      Totals:         0      12       0       0
  5817 ;;Total ram usage:       12 bytes
  5818 ;; Hardware stack levels used: 1
  5819 ;; Hardware stack levels required when called: 3
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_efgtoa
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text19
  5828   0029DA                     __ptext19:
  5829                           	callstack 0
  5830   0029DA                     ___fleq:
  5831                           	callstack 23
  5832                           
  5833                           ; BSR set to: 0
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;incstack = 0
  5837   0029DA  0E00               	movlw	0
  5838   0029DC  1560               	andwf	___fleq@ff1& (0+255),w,b
  5839   0029DE  6F68               	movwf	??___fleq& (0+255),b
  5840   0029E0  0E00               	movlw	0
  5841   0029E2  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  5842   0029E4  6F69               	movwf	(??___fleq+1)& (0+255),b
  5843   0029E6  0E80               	movlw	128
  5844   0029E8  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  5845   0029EA  6F6A               	movwf	(??___fleq+2)& (0+255),b
  5846   0029EC  0E7F               	movlw	127
  5847   0029EE  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  5848   0029F0  6F6B               	movwf	(??___fleq+3)& (0+255),b
  5849   0029F2  5168               	movf	??___fleq& (0+255),w,b
  5850   0029F4  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  5851   0029F6  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  5852   0029F8  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  5853   0029FA  A4D8               	btfss	status,2,c
  5854   0029FC  D008               	goto	l6991
  5855                           
  5856                           ; BSR set to: 0
  5857   0029FE  0E00               	movlw	0
  5858   002A00  6F60               	movwf	___fleq@ff1& (0+255),b
  5859   002A02  0E00               	movlw	0
  5860   002A04  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  5861   002A06  0E00               	movlw	0
  5862   002A08  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  5863   002A0A  0E00               	movlw	0
  5864   002A0C  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  5865   002A0E                     l6991:
  5866                           
  5867                           ; BSR set to: 0
  5868   002A0E  0E00               	movlw	0
  5869   002A10  1564               	andwf	___fleq@ff2& (0+255),w,b
  5870   002A12  6F68               	movwf	??___fleq& (0+255),b
  5871   002A14  0E00               	movlw	0
  5872   002A16  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  5873   002A18  6F69               	movwf	(??___fleq+1)& (0+255),b
  5874   002A1A  0E80               	movlw	128
  5875   002A1C  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  5876   002A1E  6F6A               	movwf	(??___fleq+2)& (0+255),b
  5877   002A20  0E7F               	movlw	127
  5878   002A22  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  5879   002A24  6F6B               	movwf	(??___fleq+3)& (0+255),b
  5880   002A26  5168               	movf	??___fleq& (0+255),w,b
  5881   002A28  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  5882   002A2A  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  5883   002A2C  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  5884   002A2E  A4D8               	btfss	status,2,c
  5885   002A30  D008               	goto	l6995
  5886                           
  5887                           ; BSR set to: 0
  5888   002A32  0E00               	movlw	0
  5889   002A34  6F64               	movwf	___fleq@ff2& (0+255),b
  5890   002A36  0E00               	movlw	0
  5891   002A38  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  5892   002A3A  0E00               	movlw	0
  5893   002A3C  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  5894   002A3E  0E00               	movlw	0
  5895   002A40  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  5896   002A42                     l6995:
  5897                           
  5898                           ; BSR set to: 0
  5899   002A42  5164               	movf	___fleq@ff2& (0+255),w,b
  5900   002A44  1960               	xorwf	___fleq@ff1& (0+255),w,b
  5901   002A46  E10A               	bnz	u8660
  5902   002A48  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  5903   002A4A  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  5904   002A4C  E107               	bnz	u8660
  5905   002A4E  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  5906   002A50  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  5907   002A52  E104               	bnz	u8660
  5908   002A54  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  5909   002A56  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  5910   002A58  B4D8               	btfsc	status,2,c
  5911   002A5A  D002               	goto	l6999
  5912   002A5C                     u8660:
  5913                           
  5914                           ; BSR set to: 0
  5915   002A5C  90D8               	bcf	status,0,c
  5916   002A5E  0012               	return	
  5917   002A60                     l6999:
  5918                           
  5919                           ; BSR set to: 0
  5920   002A60  80D8               	bsf	status,0,c
  5921                           
  5922                           ; BSR set to: 0
  5923   002A62  0012               	return		;funcret
  5924   002A64                     __end_of___fleq:
  5925                           	callstack 0
  5926                           
  5927 ;; *************** function ___fldiv *****************
  5928 ;; Defined at:
  5929 ;;		line 11 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcdiv.c"
  5930 ;; Parameters:    Size  Location     Type
  5931 ;;  b               4    0[BANK0 ] unsigned char 
  5932 ;;  a               4    4[BANK0 ] unsigned char 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;  grs             4   19[BANK0 ] unsigned long 
  5935 ;;  rem             4   12[BANK0 ] unsigned long 
  5936 ;;  new_exp         2   17[BANK0 ] short 
  5937 ;;  aexp            1   24[BANK0 ] unsigned char 
  5938 ;;  bexp            1   23[BANK0 ] unsigned char 
  5939 ;;  sign            1   16[BANK0 ] unsigned char 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  4    0[BANK0 ] unsigned char 
  5942 ;; Registers used:
  5943 ;;		wreg, status,2, status,0
  5944 ;; Tracked objects:
  5945 ;;		On entry : 3F/0
  5946 ;;		On exit  : 3F/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5949 ;;      Params:         0       8       0       0
  5950 ;;      Locals:         0      13       0       0
  5951 ;;      Temps:          0       4       0       0
  5952 ;;      Totals:         0      25       0       0
  5953 ;;Total ram usage:       25 bytes
  5954 ;; Hardware stack levels used: 1
  5955 ;; Hardware stack levels required when called: 3
  5956 ;; This function calls:
  5957 ;;		Nothing
  5958 ;; This function is called by:
  5959 ;;		_efgtoa
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text20
  5964   00184E                     __ptext20:
  5965                           	callstack 0
  5966   00184E                     ___fldiv:
  5967                           	callstack 23
  5968                           
  5969                           ; BSR set to: 0
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;incstack = 0
  5973   00184E  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  5974   001850  0B80               	andlw	128
  5975   001852  6F70               	movwf	___fldiv@sign& (0+255),b
  5976   001854  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  5977   001856  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  5978   001858  6F77               	movwf	___fldiv@bexp& (0+255),b
  5979                           
  5980                           ; BSR set to: 0
  5981   00185A  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
  5982                           
  5983                           ; BSR set to: 0
  5984   00185C  8177               	bsf	___fldiv@bexp& (0+255),0,b
  5985                           
  5986                           ; BSR set to: 0
  5987   00185E  5177               	movf	___fldiv@bexp& (0+255),w,b
  5988   001860  B4D8               	btfsc	status,2,c
  5989   001862  D00E               	goto	l6733
  5990                           
  5991                           ; BSR set to: 0
  5992   001864  2977               	incf	___fldiv@bexp& (0+255),w,b
  5993   001866  A4D8               	btfss	status,2,c
  5994   001868  D008               	goto	l6729
  5995                           
  5996                           ; BSR set to: 0
  5997   00186A  0E00               	movlw	0
  5998   00186C  6F60               	movwf	___fldiv@b& (0+255),b
  5999   00186E  0E00               	movlw	0
  6000   001870  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6001   001872  0E00               	movlw	0
  6002   001874  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6003   001876  0E00               	movlw	0
  6004   001878  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6005   00187A                     l6729:
  6006                           
  6007                           ; BSR set to: 0
  6008   00187A  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6009                           
  6010                           ; BSR set to: 0
  6011   00187C  6B63               	clrf	(___fldiv@b+3)& (0+255),b
  6012   00187E  D008               	goto	l6735
  6013   001880                     l6733:
  6014                           
  6015                           ; BSR set to: 0
  6016   001880  0E00               	movlw	0
  6017   001882  6F60               	movwf	___fldiv@b& (0+255),b
  6018   001884  0E00               	movlw	0
  6019   001886  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6020   001888  0E00               	movlw	0
  6021   00188A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6022   00188C  0E00               	movlw	0
  6023   00188E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6024   001890                     l6735:
  6025                           
  6026                           ; BSR set to: 0
  6027   001890  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6028   001892  0B80               	andlw	128
  6029   001894  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  6030                           
  6031                           ; BSR set to: 0
  6032   001896  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6033   001898  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  6034   00189A  6F78               	movwf	___fldiv@aexp& (0+255),b
  6035                           
  6036                           ; BSR set to: 0
  6037   00189C  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
  6038                           
  6039                           ; BSR set to: 0
  6040   00189E  8178               	bsf	___fldiv@aexp& (0+255),0,b
  6041                           
  6042                           ; BSR set to: 0
  6043   0018A0  5178               	movf	___fldiv@aexp& (0+255),w,b
  6044   0018A2  B4D8               	btfsc	status,2,c
  6045   0018A4  D00E               	goto	l6753
  6046                           
  6047                           ; BSR set to: 0
  6048   0018A6  2978               	incf	___fldiv@aexp& (0+255),w,b
  6049   0018A8  A4D8               	btfss	status,2,c
  6050   0018AA  D008               	goto	l6749
  6051                           
  6052                           ; BSR set to: 0
  6053   0018AC  0E00               	movlw	0
  6054   0018AE  6F64               	movwf	___fldiv@a& (0+255),b
  6055   0018B0  0E00               	movlw	0
  6056   0018B2  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6057   0018B4  0E00               	movlw	0
  6058   0018B6  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6059   0018B8  0E00               	movlw	0
  6060   0018BA  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6061   0018BC                     l6749:
  6062                           
  6063                           ; BSR set to: 0
  6064   0018BC  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  6065                           
  6066                           ; BSR set to: 0
  6067   0018BE  6B67               	clrf	(___fldiv@a+3)& (0+255),b
  6068   0018C0  D008               	goto	l6755
  6069   0018C2                     l6753:
  6070                           
  6071                           ; BSR set to: 0
  6072   0018C2  0E00               	movlw	0
  6073   0018C4  6F64               	movwf	___fldiv@a& (0+255),b
  6074   0018C6  0E00               	movlw	0
  6075   0018C8  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6076   0018CA  0E00               	movlw	0
  6077   0018CC  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6078   0018CE  0E00               	movlw	0
  6079   0018D0  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6080   0018D2                     l6755:
  6081                           
  6082                           ; BSR set to: 0
  6083   0018D2  5164               	movf	___fldiv@a& (0+255),w,b
  6084   0018D4  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6085   0018D6  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6086   0018D8  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6087   0018DA  A4D8               	btfss	status,2,c
  6088   0018DC  D017               	goto	l6767
  6089                           
  6090                           ; BSR set to: 0
  6091   0018DE  0E00               	movlw	0
  6092   0018E0  6F60               	movwf	___fldiv@b& (0+255),b
  6093   0018E2  0E00               	movlw	0
  6094   0018E4  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6095   0018E6  0E00               	movlw	0
  6096   0018E8  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6097   0018EA  0E00               	movlw	0
  6098   0018EC  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6099                           
  6100                           ; BSR set to: 0
  6101   0018EE  0E80               	movlw	128
  6102   0018F0  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6103   0018F2  0E7F               	movlw	127
  6104   0018F4  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6105   0018F6                     l6761:
  6106                           
  6107                           ; BSR set to: 0
  6108   0018F6  5170               	movf	___fldiv@sign& (0+255),w,b
  6109   0018F8  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6110                           
  6111                           ; BSR set to: 0
  6112   0018FA  C060  F060         	movff	___fldiv@b,?___fldiv
  6113   0018FE  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  6114   001902  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  6115   001906  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  6116   00190A  0012               	return	
  6117   00190C                     l6767:
  6118                           
  6119                           ; BSR set to: 0
  6120   00190C  5177               	movf	___fldiv@bexp& (0+255),w,b
  6121   00190E  A4D8               	btfss	status,2,c
  6122   001910  D009               	goto	l6775
  6123                           
  6124                           ; BSR set to: 0
  6125                           
  6126                           ; BSR set to: 0
  6127   001912  0E00               	movlw	0
  6128   001914  6F60               	movwf	?___fldiv& (0+255),b
  6129   001916  0E00               	movlw	0
  6130   001918  6F61               	movwf	(?___fldiv+1)& (0+255),b
  6131   00191A  0E00               	movlw	0
  6132   00191C  6F62               	movwf	(?___fldiv+2)& (0+255),b
  6133   00191E  0E00               	movlw	0
  6134   001920  6F63               	movwf	(?___fldiv+3)& (0+255),b
  6135   001922  0012               	return	
  6136   001924                     l6775:
  6137                           
  6138                           ; BSR set to: 0
  6139   001924  5178               	movf	___fldiv@aexp& (0+255),w,b
  6140   001926  C077  F068         	movff	___fldiv@bexp,??___fldiv
  6141   00192A  6B69               	clrf	(??___fldiv+1)& (0+255),b
  6142   00192C  5F68               	subwf	??___fldiv& (0+255),f,b
  6143   00192E  0E00               	movlw	0
  6144   001930  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  6145   001932  0E7F               	movlw	127
  6146   001934  2568               	addwf	??___fldiv& (0+255),w,b
  6147   001936  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6148   001938  0E00               	movlw	0
  6149   00193A  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  6150   00193C  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6151                           
  6152                           ; BSR set to: 0
  6153   00193E  C060  F06C         	movff	___fldiv@b,___fldiv@rem
  6154   001942  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
  6155   001946  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
  6156   00194A  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
  6157                           
  6158                           ; BSR set to: 0
  6159   00194E  0E00               	movlw	0
  6160   001950  6F60               	movwf	___fldiv@b& (0+255),b
  6161   001952  0E00               	movlw	0
  6162   001954  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6163   001956  0E00               	movlw	0
  6164   001958  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6165   00195A  0E00               	movlw	0
  6166   00195C  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6167                           
  6168                           ; BSR set to: 0
  6169   00195E  0E00               	movlw	0
  6170   001960  6F73               	movwf	___fldiv@grs& (0+255),b
  6171   001962  0E00               	movlw	0
  6172   001964  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  6173   001966  0E00               	movlw	0
  6174   001968  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  6175   00196A  0E00               	movlw	0
  6176   00196C  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  6177                           
  6178                           ; BSR set to: 0
  6179   00196E  6B78               	clrf	___fldiv@aexp& (0+255),b
  6180   001970  D028               	goto	l931
  6181   001972                     l6785:
  6182                           
  6183                           ; BSR set to: 0
  6184   001972  5178               	movf	___fldiv@aexp& (0+255),w,b
  6185   001974  B4D8               	btfsc	status,2,c
  6186   001976  D011               	goto	l6793
  6187                           
  6188                           ; BSR set to: 0
  6189   001978  90D8               	bcf	status,0,c
  6190   00197A  376C               	rlcf	___fldiv@rem& (0+255),f,b
  6191   00197C  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6192   00197E  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6193   001980  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6194   001982  90D8               	bcf	status,0,c
  6195   001984  3760               	rlcf	___fldiv@b& (0+255),f,b
  6196   001986  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6197   001988  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6198   00198A  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6199                           
  6200                           ; BSR set to: 0
  6201   00198C  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6202                           
  6203                           ; BSR set to: 0
  6204   00198E  8160               	bsf	___fldiv@b& (0+255),0,b
  6205                           
  6206                           ; BSR set to: 0
  6207   001990  90D8               	bcf	status,0,c
  6208   001992  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6209   001994  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6210   001996  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6211   001998  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6212   00199A                     l6793:
  6213                           
  6214                           ; BSR set to: 0
  6215   00199A  5164               	movf	___fldiv@a& (0+255),w,b
  6216   00199C  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  6217   00199E  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6218   0019A0  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6219   0019A2  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6220   0019A4  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6221   0019A6  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6222   0019A8  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6223   0019AA  A0D8               	btfss	status,0,c
  6224   0019AC  D009               	goto	l6799
  6225                           
  6226                           ; BSR set to: 0
  6227   0019AE  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6228                           
  6229                           ; BSR set to: 0
  6230   0019B0  5164               	movf	___fldiv@a& (0+255),w,b
  6231   0019B2  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  6232   0019B4  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6233   0019B6  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6234   0019B8  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6235   0019BA  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6236   0019BC  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6237   0019BE  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6238   0019C0                     l6799:
  6239                           
  6240                           ; BSR set to: 0
  6241   0019C0  2B78               	incf	___fldiv@aexp& (0+255),f,b
  6242   0019C2                     l931:
  6243                           
  6244                           ; BSR set to: 0
  6245   0019C2  0E19               	movlw	25
  6246   0019C4  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  6247   0019C6  D7D5               	goto	l6785
  6248                           
  6249                           ; BSR set to: 0
  6250   0019C8  516C               	movf	___fldiv@rem& (0+255),w,b
  6251   0019CA  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6252   0019CC  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6253   0019CE  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6254   0019D0  B4D8               	btfsc	status,2,c
  6255   0019D2  D011               	goto	l6811
  6256                           
  6257                           ; BSR set to: 0
  6258   0019D4  8173               	bsf	___fldiv@grs& (0+255),0,b
  6259   0019D6  D00F               	goto	l6811
  6260   0019D8                     l6805:
  6261                           
  6262                           ; BSR set to: 0
  6263   0019D8  90D8               	bcf	status,0,c
  6264   0019DA  3760               	rlcf	___fldiv@b& (0+255),f,b
  6265   0019DC  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6266   0019DE  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6267   0019E0  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6268                           
  6269                           ; BSR set to: 0
  6270   0019E2  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  6271                           
  6272                           ; BSR set to: 0
  6273   0019E4  8160               	bsf	___fldiv@b& (0+255),0,b
  6274                           
  6275                           ; BSR set to: 0
  6276   0019E6  90D8               	bcf	status,0,c
  6277   0019E8  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6278   0019EA  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6279   0019EC  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6280   0019EE  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6281   0019F0  0771               	decf	___fldiv@new_exp& (0+255),f,b
  6282   0019F2  A0D8               	btfss	status,0,c
  6283   0019F4  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6284   0019F6                     l6811:
  6285                           
  6286                           ; BSR set to: 0
  6287   0019F6  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6288   0019F8  D7EF               	goto	l6805
  6289                           
  6290                           ; BSR set to: 0
  6291   0019FA  6B78               	clrf	___fldiv@aexp& (0+255),b
  6292   0019FC  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6293   0019FE  D017               	goto	l942
  6294                           
  6295                           ; BSR set to: 0
  6296   001A00  0EFF               	movlw	255
  6297   001A02  1573               	andwf	___fldiv@grs& (0+255),w,b
  6298   001A04  6F68               	movwf	??___fldiv& (0+255),b
  6299   001A06  0EFF               	movlw	255
  6300   001A08  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6301   001A0A  6F69               	movwf	(??___fldiv+1)& (0+255),b
  6302   001A0C  0EFF               	movlw	255
  6303   001A0E  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6304   001A10  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  6305   001A12  0E7F               	movlw	127
  6306   001A14  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6307   001A16  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  6308   001A18  5168               	movf	??___fldiv& (0+255),w,b
  6309   001A1A  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  6310   001A1C  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  6311   001A1E  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  6312   001A20  B4D8               	btfsc	status,2,c
  6313   001A22  D003               	goto	l943
  6314   001A24                     u8390:
  6315                           
  6316                           ; BSR set to: 0
  6317   001A24  0E01               	movlw	1
  6318   001A26  6F78               	movwf	___fldiv@aexp& (0+255),b
  6319   001A28  D002               	goto	l942
  6320   001A2A                     l943:
  6321                           
  6322                           ; BSR set to: 0
  6323   001A2A  B160               	btfsc	___fldiv@b& (0+255),0,b
  6324   001A2C  D7FB               	goto	u8390
  6325   001A2E                     l942:
  6326                           
  6327                           ; BSR set to: 0
  6328   001A2E  5178               	movf	___fldiv@aexp& (0+255),w,b
  6329   001A30  B4D8               	btfsc	status,2,c
  6330   001A32  D01F               	goto	l6827
  6331                           
  6332                           ; BSR set to: 0
  6333   001A34  0E01               	movlw	1
  6334   001A36  2760               	addwf	___fldiv@b& (0+255),f,b
  6335   001A38  0E00               	movlw	0
  6336   001A3A  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  6337   001A3C  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  6338   001A3E  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  6339                           
  6340                           ; BSR set to: 0
  6341   001A40  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  6342   001A42  D017               	goto	l6827
  6343                           
  6344                           ; BSR set to: 0
  6345   001A44  C060  F068         	movff	___fldiv@b,??___fldiv
  6346   001A48  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
  6347   001A4C  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
  6348   001A50  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
  6349   001A54  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  6350   001A56  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  6351   001A58  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  6352   001A5A  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  6353   001A5C  3368               	rrcf	??___fldiv& (0+255),f,b
  6354   001A5E  C068  F060         	movff	??___fldiv,___fldiv@b
  6355   001A62  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
  6356   001A66  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
  6357   001A6A  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
  6358                           
  6359                           ; BSR set to: 0
  6360   001A6E  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  6361   001A70  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6362   001A72                     l6827:
  6363                           
  6364                           ; BSR set to: 0
  6365   001A72  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6366   001A74  D010               	goto	l6831
  6367   001A76  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6368   001A78  E103               	bnz	u8430
  6369   001A7A  2971               	incf	___fldiv@new_exp& (0+255),w,b
  6370   001A7C  A0D8               	btfss	status,0,c
  6371   001A7E  D00B               	goto	l6831
  6372   001A80                     u8430:
  6373                           
  6374                           ; BSR set to: 0
  6375   001A80  0E00               	movlw	0
  6376   001A82  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6377   001A84  6971               	setf	___fldiv@new_exp& (0+255),b
  6378   001A86  0E00               	movlw	0
  6379   001A88  6F60               	movwf	___fldiv@b& (0+255),b
  6380   001A8A  0E00               	movlw	0
  6381   001A8C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6382   001A8E  0E00               	movlw	0
  6383   001A90  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6384   001A92  0E00               	movlw	0
  6385   001A94  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6386   001A96                     l6831:
  6387                           
  6388                           ; BSR set to: 0
  6389   001A96  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6390   001A98  D005               	goto	u8440
  6391   001A9A  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6392   001A9C  E110               	bnz	l6837
  6393   001A9E  0571               	decf	___fldiv@new_exp& (0+255),w,b
  6394   001AA0  B0D8               	btfsc	status,0,c
  6395   001AA2  D00D               	goto	l6837
  6396   001AA4                     u8440:
  6397                           
  6398                           ; BSR set to: 0
  6399   001AA4  0E00               	movlw	0
  6400   001AA6  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6401   001AA8  0E00               	movlw	0
  6402   001AAA  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6403   001AAC  0E00               	movlw	0
  6404   001AAE  6F60               	movwf	___fldiv@b& (0+255),b
  6405   001AB0  0E00               	movlw	0
  6406   001AB2  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6407   001AB4  0E00               	movlw	0
  6408   001AB6  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6409   001AB8  0E00               	movlw	0
  6410   001ABA  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6411                           
  6412                           ; BSR set to: 0
  6413   001ABC  6B70               	clrf	___fldiv@sign& (0+255),b
  6414   001ABE                     l6837:
  6415                           
  6416                           ; BSR set to: 0
  6417   001ABE  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
  6418                           
  6419                           ; BSR set to: 0
  6420   001AC2  A177               	btfss	___fldiv@bexp& (0+255),0,b
  6421   001AC4  D002               	goto	l6843
  6422                           
  6423                           ; BSR set to: 0
  6424   001AC6  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6425   001AC8  D001               	goto	l6845
  6426   001ACA                     l6843:
  6427                           
  6428                           ; BSR set to: 0
  6429   001ACA  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  6430   001ACC                     l6845:
  6431                           
  6432                           ; BSR set to: 0
  6433   001ACC  90D8               	bcf	status,0,c
  6434   001ACE  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  6435   001AD0  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6436   001AD2  D711               	goto	l6761
  6437   001AD4                     __end_of___fldiv:
  6438                           	callstack 0
  6439                           
  6440 ;; *************** function _show7Segment *****************
  6441 ;; Defined at:
  6442 ;;		line 733 in file "main.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;		None
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;		None
  6447 ;; Return value:  Size  Location     Type
  6448 ;;                  1    wreg      void 
  6449 ;; Registers used:
  6450 ;;		wreg, status,2, status,0, cstack
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6456 ;;      Params:         0       0       0       0
  6457 ;;      Locals:         0       0       0       0
  6458 ;;      Temps:          0       0       0       0
  6459 ;;      Totals:         0       0       0       0
  6460 ;;Total ram usage:        0 bytes
  6461 ;; Hardware stack levels used: 1
  6462 ;; Hardware stack levels required when called: 4
  6463 ;; This function calls:
  6464 ;;		_displayDigits
  6465 ;;		_get7SegmentPattern
  6466 ;; This function is called by:
  6467 ;;		_main
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text21
  6472   002E96                     __ptext21:
  6473                           	callstack 0
  6474   002E96                     _show7Segment:
  6475                           	callstack 26
  6476                           
  6477                           ;main.c: 735:     segPattern0 = get7SegmentPattern( displayDigit0 );
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;incstack = 0
  6481   002E96  5038               	movf	_displayDigit0^0,w,c
  6482   002E98  EC54  F013         	call	_get7SegmentPattern
  6483   002E9C  6E3B               	movwf	_segPattern0^0,c
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;main.c: 737:     if( displaySample == 1 && ( fsm_state == 1 || fsm_state == 2 ) ){
  6487   002E9E  0434               	decf	_displaySample^0,w,c
  6488   002EA0  A4D8               	btfss	status,2,c
  6489   002EA2  D00A               	goto	l7667
  6490                           
  6491                           ; BSR set to: 0
  6492   002EA4  05F9               	decf	_fsm_state& (0+255),w,b
  6493   002EA6  B4D8               	btfsc	status,2,c
  6494   002EA8  D004               	goto	u9730
  6495                           
  6496                           ; BSR set to: 0
  6497   002EAA  0E02               	movlw	2
  6498   002EAC  19F9               	xorwf	_fsm_state& (0+255),w,b
  6499   002EAE  A4D8               	btfss	status,2,c
  6500   002EB0  D003               	goto	l7667
  6501   002EB2                     u9730:
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;main.c: 738:         segPattern0 = segPattern0 | 0b10000000;
  6505   002EB2  503B               	movf	_segPattern0^0,w,c
  6506   002EB4  0980               	iorlw	128
  6507   002EB6  6E3B               	movwf	_segPattern0^0,c
  6508   002EB8                     l7667:
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;main.c: 741:     segPattern1 = get7SegmentPattern( displayDigit1 );
  6512   002EB8  5037               	movf	_displayDigit1^0,w,c
  6513   002EBA  EC54  F013         	call	_get7SegmentPattern
  6514   002EBE  6E3A               	movwf	_segPattern1^0,c
  6515                           
  6516                           ; BSR set to: 0
  6517                           ;main.c: 742:     segPattern2 = get7SegmentPattern( displayDigit2 );
  6518   002EC0  5036               	movf	_displayDigit2^0,w,c
  6519   002EC2  EC54  F013         	call	_get7SegmentPattern
  6520   002EC6  6E39               	movwf	_segPattern2^0,c
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;main.c: 744:     displayDigits( segPattern0, segPattern1, segPattern2 );
  6524   002EC8  C03A  F060         	movff	_segPattern1,displayDigits@digit1
  6525   002ECC  C039  F061         	movff	_segPattern2,displayDigits@digit2
  6526   002ED0  503B               	movf	_segPattern0^0,w,c
  6527   002ED2  EC3C  F012         	call	_displayDigits
  6528   002ED6  0012               	return		;funcret
  6529   002ED8                     __end_of_show7Segment:
  6530                           	callstack 0
  6531                           
  6532 ;; *************** function _get7SegmentPattern *****************
  6533 ;; Defined at:
  6534 ;;		line 516 in file "main.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  digit           1    wreg     unsigned char 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  digit           1    0[BANK0 ] unsigned char 
  6539 ;;  pattern         1    1[BANK0 ] unsigned char 
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1    wreg      unsigned char 
  6542 ;; Registers used:
  6543 ;;		wreg, status,2, status,0
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 3F/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6549 ;;      Params:         0       0       0       0
  6550 ;;      Locals:         0       2       0       0
  6551 ;;      Temps:          0       0       0       0
  6552 ;;      Totals:         0       2       0       0
  6553 ;;Total ram usage:        2 bytes
  6554 ;; Hardware stack levels used: 1
  6555 ;; Hardware stack levels required when called: 3
  6556 ;; This function calls:
  6557 ;;		Nothing
  6558 ;; This function is called by:
  6559 ;;		_show7Segment
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           	psect	text22
  6564   0026A8                     __ptext22:
  6565                           	callstack 0
  6566   0026A8                     _get7SegmentPattern:
  6567                           	callstack 26
  6568                           
  6569                           ;incstack = 0
  6570                           ;get7SegmentPattern@digit stored from wreg
  6571   0026A8  0100               	movlb	0	; () banked
  6572   0026AA  6F60               	movwf	get7SegmentPattern@digit& (0+255),b
  6573                           
  6574                           ;main.c: 519:     uint8_t pattern;;main.c: 521:     switch (digit) {
  6575   0026AC  D021               	goto	l7497
  6576   0026AE                     l7463:
  6577                           
  6578                           ; BSR set to: 0
  6579   0026AE  0E3F               	movlw	63
  6580   0026B0  D01B               	goto	L18
  6581   0026B2                     l7465:
  6582                           
  6583                           ; BSR set to: 0
  6584   0026B2  0E06               	movlw	6
  6585   0026B4  D019               	goto	L18
  6586   0026B6                     l7467:
  6587                           
  6588                           ; BSR set to: 0
  6589   0026B6  0E5B               	movlw	91
  6590   0026B8  D017               	goto	L18
  6591   0026BA                     l7469:
  6592                           
  6593                           ; BSR set to: 0
  6594   0026BA  0E4F               	movlw	79
  6595   0026BC  D015               	goto	L18
  6596   0026BE                     l7471:
  6597                           
  6598                           ; BSR set to: 0
  6599   0026BE  0E66               	movlw	102
  6600   0026C0  D013               	goto	L18
  6601   0026C2                     l7473:
  6602                           
  6603                           ; BSR set to: 0
  6604   0026C2  0E6D               	movlw	109
  6605   0026C4  D011               	goto	L18
  6606   0026C6                     l7475:
  6607                           
  6608                           ; BSR set to: 0
  6609   0026C6  0E7D               	movlw	125
  6610   0026C8  D00F               	goto	L18
  6611   0026CA                     l7477:
  6612                           
  6613                           ; BSR set to: 0
  6614   0026CA  0E07               	movlw	7
  6615   0026CC  D00D               	goto	L18
  6616   0026CE                     l7479:
  6617                           
  6618                           ; BSR set to: 0
  6619   0026CE  0E7F               	movlw	127
  6620   0026D0  D00B               	goto	L18
  6621   0026D2                     l7481:
  6622                           
  6623                           ; BSR set to: 0
  6624   0026D2  0E6F               	movlw	111
  6625   0026D4  D009               	goto	L18
  6626   0026D6                     l7483:
  6627                           
  6628                           ; BSR set to: 0
  6629   0026D6  0E79               	movlw	121
  6630   0026D8  D007               	goto	L18
  6631   0026DA                     l7485:
  6632                           
  6633                           ; BSR set to: 0
  6634   0026DA  0E77               	movlw	119
  6635   0026DC  D005               	goto	L18
  6636   0026DE                     l7487:
  6637                           
  6638                           ; BSR set to: 0
  6639   0026DE  0E39               	movlw	57
  6640   0026E0  D003               	goto	L18
  6641   0026E2                     l7491:
  6642                           
  6643                           ; BSR set to: 0
  6644   0026E2  0E38               	movlw	56
  6645   0026E4  D001               	goto	L18
  6646   0026E6                     l7493:
  6647                           
  6648                           ; BSR set to: 0
  6649   0026E6  0E31               	movlw	49
  6650   0026E8                     L18:
  6651   0026E8  6F61               	movwf	get7SegmentPattern@pattern& (0+255),b
  6652   0026EA  D035               	goto	l240
  6653   0026EC                     l256:
  6654                           
  6655                           ; BSR set to: 0
  6656   0026EC  6B61               	clrf	get7SegmentPattern@pattern& (0+255),b
  6657   0026EE  D033               	goto	l240
  6658   0026F0                     l7497:
  6659   0026F0  0100               	movlb	0	; () banked
  6660   0026F2  5160               	movf	get7SegmentPattern@digit& (0+255),w,b
  6661                           
  6662                           ; Switch size 1, requested type "simple"
  6663                           ; Number of cases is 16, Range of values is 0 to 114
  6664                           ; switch strategies available:
  6665                           ; Name         Instructions Cycles
  6666                           ; simple_byte           49    25 (average)
  6667                           ;	Chosen strategy is simple_byte
  6668   0026F4  0A00               	xorlw	0	; case 0
  6669   0026F6  B4D8               	btfsc	status,2,c
  6670   0026F8  D7DA               	goto	l7463
  6671   0026FA  0A01               	xorlw	1	; case 1
  6672   0026FC  B4D8               	btfsc	status,2,c
  6673   0026FE  D7D9               	goto	l7465
  6674   002700  0A03               	xorlw	3	; case 2
  6675   002702  B4D8               	btfsc	status,2,c
  6676   002704  D7D8               	goto	l7467
  6677   002706  0A01               	xorlw	1	; case 3
  6678   002708  B4D8               	btfsc	status,2,c
  6679   00270A  D7D7               	goto	l7469
  6680   00270C  0A07               	xorlw	7	; case 4
  6681   00270E  B4D8               	btfsc	status,2,c
  6682   002710  D7D6               	goto	l7471
  6683   002712  0A01               	xorlw	1	; case 5
  6684   002714  B4D8               	btfsc	status,2,c
  6685   002716  D7D5               	goto	l7473
  6686   002718  0A03               	xorlw	3	; case 6
  6687   00271A  B4D8               	btfsc	status,2,c
  6688   00271C  D7D4               	goto	l7475
  6689   00271E  0A01               	xorlw	1	; case 7
  6690   002720  B4D8               	btfsc	status,2,c
  6691   002722  D7D3               	goto	l7477
  6692   002724  0A0F               	xorlw	15	; case 8
  6693   002726  B4D8               	btfsc	status,2,c
  6694   002728  D7D2               	goto	l7479
  6695   00272A  0A01               	xorlw	1	; case 9
  6696   00272C  B4D8               	btfsc	status,2,c
  6697   00272E  D7D1               	goto	l7481
  6698   002730  0A48               	xorlw	72	; case 65
  6699   002732  B4D8               	btfsc	status,2,c
  6700   002734  D7D2               	goto	l7485
  6701   002736  0A02               	xorlw	2	; case 67
  6702   002738  B4D8               	btfsc	status,2,c
  6703   00273A  D7D1               	goto	l7487
  6704   00273C  0A0F               	xorlw	15	; case 76
  6705   00273E  B4D8               	btfsc	status,2,c
  6706   002740  D7D0               	goto	l7491
  6707   002742  0A1F               	xorlw	31	; case 83
  6708   002744  B4D8               	btfsc	status,2,c
  6709   002746  D7BD               	goto	l7473
  6710   002748  0A0A               	xorlw	10	; case 89
  6711   00274A  B4D8               	btfsc	status,2,c
  6712   00274C  D7C4               	goto	l7483
  6713   00274E  0A2B               	xorlw	43	; case 114
  6714   002750  B4D8               	btfsc	status,2,c
  6715   002752  D7C9               	goto	l7493
  6716   002754  D7CB               	goto	l256
  6717   002756                     l240:
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;main.c: 541:     return pattern;
  6721   002756  5161               	movf	get7SegmentPattern@pattern& (0+255),w,b
  6722                           
  6723                           ; BSR set to: 0
  6724   002758  0012               	return		;funcret
  6725   00275A                     __end_of_get7SegmentPattern:
  6726                           	callstack 0
  6727                           
  6728 ;; *************** function _displayDigits *****************
  6729 ;; Defined at:
  6730 ;;		line 544 in file "main.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  digit0          1    wreg     unsigned char 
  6733 ;;  digit1          1    0[BANK0 ] unsigned char 
  6734 ;;  digit2          1    1[BANK0 ] unsigned char 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  digit0          1    4[BANK0 ] unsigned char 
  6737 ;;  i               2    5[BANK0 ] int 
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  1    wreg      void 
  6740 ;; Registers used:
  6741 ;;		wreg, status,2, status,0
  6742 ;; Tracked objects:
  6743 ;;		On entry : 3F/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6747 ;;      Params:         0       2       0       0
  6748 ;;      Locals:         0       3       0       0
  6749 ;;      Temps:          0       2       0       0
  6750 ;;      Totals:         0       7       0       0
  6751 ;;Total ram usage:        7 bytes
  6752 ;; Hardware stack levels used: 1
  6753 ;; Hardware stack levels required when called: 3
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_show7Segment
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text23
  6762   002478                     __ptext23:
  6763                           	callstack 0
  6764   002478                     _displayDigits:
  6765                           	callstack 26
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;incstack = 0
  6769                           ;displayDigits@digit0 stored from wreg
  6770   002478  6F64               	movwf	displayDigits@digit0& (0+255),b
  6771                           
  6772                           ;main.c: 545:     int i;;main.c: 546:     for ( i = 0 ; i < 8 ; i++ ){
  6773   00247A  0E00               	movlw	0
  6774   00247C  0100               	movlb	0	; () banked
  6775   00247E  6F66               	movwf	(displayDigits@i+1)& (0+255),b
  6776   002480  0E00               	movlw	0
  6777   002482  6F65               	movwf	displayDigits@i& (0+255),b
  6778   002484                     l7505:
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;main.c: 548:         PORTCbits.RC5 = (digit0 >> i) & (0x01);
  6782   002484  C065  F062         	movff	displayDigits@i,??_displayDigits
  6783   002488  C064  F063         	movff	displayDigits@digit0,??_displayDigits+1
  6784   00248C  2B62               	incf	??_displayDigits& (0+255),f,b
  6785   00248E  D002               	goto	u9394
  6786   002490                     u9395:
  6787   002490  90D8               	bcf	status,0,c
  6788   002492  3363               	rrcf	(??_displayDigits+1)& (0+255),f,b
  6789   002494                     u9394:
  6790   002494  2F62               	decfsz	??_displayDigits& (0+255),f,b
  6791   002496  D7FC               	goto	u9395
  6792   002498  0E01               	movlw	1
  6793   00249A  0100               	movlb	0	; () banked
  6794   00249C  1763               	andwf	(??_displayDigits+1)& (0+255),f,b
  6795   00249E  3B63               	swapf	(??_displayDigits+1)& (0+255),f,b
  6796   0024A0  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  6797   0024A2  5082               	movf	130,w,c	;volatile
  6798   0024A4  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  6799   0024A6  0BDF               	andlw	-33
  6800   0024A8  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  6801   0024AA  6E82               	movwf	130,c	;volatile
  6802                           
  6803                           ;main.c: 549:         PORTCbits.RC4 = (digit1 >> i) & (0x01);
  6804   0024AC  C065  F062         	movff	displayDigits@i,??_displayDigits
  6805   0024B0  C060  F063         	movff	displayDigits@digit1,??_displayDigits+1
  6806   0024B4  2B62               	incf	??_displayDigits& (0+255),f,b
  6807   0024B6  D002               	goto	u9404
  6808   0024B8                     u9405:
  6809   0024B8  90D8               	bcf	status,0,c
  6810   0024BA  3363               	rrcf	(??_displayDigits+1)& (0+255),f,b
  6811   0024BC                     u9404:
  6812   0024BC  2F62               	decfsz	??_displayDigits& (0+255),f,b
  6813   0024BE  D7FC               	goto	u9405
  6814   0024C0  0E01               	movlw	1
  6815   0024C2  0100               	movlb	0	; () banked
  6816   0024C4  1763               	andwf	(??_displayDigits+1)& (0+255),f,b
  6817   0024C6  3B63               	swapf	(??_displayDigits+1)& (0+255),f,b
  6818   0024C8  5082               	movf	130,w,c	;volatile
  6819   0024CA  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  6820   0024CC  0BEF               	andlw	-17
  6821   0024CE  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  6822   0024D0  6E82               	movwf	130,c	;volatile
  6823                           
  6824                           ;main.c: 550:         PORTCbits.RC3 = (digit2 >> i) & (0x01);
  6825   0024D2  C065  F062         	movff	displayDigits@i,??_displayDigits
  6826   0024D6  C061  F063         	movff	displayDigits@digit2,??_displayDigits+1
  6827   0024DA  2B62               	incf	??_displayDigits& (0+255),f,b
  6828   0024DC  D002               	goto	u9414
  6829   0024DE                     u9415:
  6830   0024DE  90D8               	bcf	status,0,c
  6831   0024E0  3363               	rrcf	(??_displayDigits+1)& (0+255),f,b
  6832   0024E2                     u9414:
  6833   0024E2  2F62               	decfsz	??_displayDigits& (0+255),f,b
  6834   0024E4  D7FC               	goto	u9415
  6835   0024E6  0E01               	movlw	1
  6836   0024E8  0100               	movlb	0	; () banked
  6837   0024EA  1763               	andwf	(??_displayDigits+1)& (0+255),f,b
  6838   0024EC  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  6839   0024EE  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  6840   0024F0  4763               	rlncf	(??_displayDigits+1)& (0+255),f,b
  6841   0024F2  5082               	movf	130,w,c	;volatile
  6842   0024F4  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  6843   0024F6  0BF7               	andlw	-9
  6844   0024F8  1963               	xorwf	(??_displayDigits+1)& (0+255),w,b
  6845   0024FA  6E82               	movwf	130,c	;volatile
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;main.c: 553:         PORTCbits.RC6 = 1;
  6849   0024FC  8C82               	bsf	130,6,c	;volatile
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;main.c: 554:         _delay((unsigned long)((500)*(2000000/4000000.0)));
  6853   0024FE  0E53               	movlw	83
  6854   002500                     u10017:
  6855   002500  2EE8               	decfsz	wreg,f,c
  6856   002502  D7FE               	bra	u10017
  6857   002504  0000               	nop	
  6858                           
  6859                           ;main.c: 555:         PORTCbits.RC6 = 0;
  6860   002506  9C82               	bcf	130,6,c	;volatile
  6861                           
  6862                           ;main.c: 556:         _delay((unsigned long)((500)*(2000000/4000000.0)));
  6863   002508  0E53               	movlw	83
  6864   00250A                     u10027:
  6865   00250A  2EE8               	decfsz	wreg,f,c
  6866   00250C  D7FE               	bra	u10027
  6867   00250E  0000               	nop	
  6868                           
  6869                           ;main.c: 557:     }
  6870   002510  0100               	movlb	0	; () banked
  6871   002512  4B65               	infsnz	displayDigits@i& (0+255),f,b
  6872   002514  2B66               	incf	(displayDigits@i+1)& (0+255),f,b
  6873                           
  6874                           ; BSR set to: 0
  6875   002516  BF66               	btfsc	(displayDigits@i+1)& (0+255),7,b
  6876   002518  D7B5               	goto	l7505
  6877   00251A  5166               	movf	(displayDigits@i+1)& (0+255),w,b
  6878   00251C  E104               	bnz	u9420
  6879   00251E  0E08               	movlw	8
  6880   002520  5D65               	subwf	displayDigits@i& (0+255),w,b
  6881   002522  A0D8               	btfss	status,0,c
  6882   002524  D7AF               	goto	l7505
  6883   002526                     u9420:
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;main.c: 560:     PORTCbits.RC7 = 1;
  6887   002526  8E82               	bsf	130,7,c	;volatile
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;main.c: 561:     _delay((unsigned long)((500)*(2000000/4000000.0)));
  6891   002528  0E53               	movlw	83
  6892   00252A                     u10037:
  6893   00252A  2EE8               	decfsz	wreg,f,c
  6894   00252C  D7FE               	bra	u10037
  6895   00252E  0000               	nop	
  6896                           
  6897                           ;main.c: 562:     PORTCbits.RC7 = 0;
  6898   002530  9E82               	bcf	130,7,c	;volatile
  6899   002532  0012               	return		;funcret
  6900   002534                     __end_of_displayDigits:
  6901                           	callstack 0
  6902                           
  6903 ;; *************** function _setupTimer1 *****************
  6904 ;; Defined at:
  6905 ;;		line 473 in file "main.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;		None
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;		None
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		wreg, status,2
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6919 ;;      Params:         0       0       0       0
  6920 ;;      Locals:         0       0       0       0
  6921 ;;      Temps:          0       0       0       0
  6922 ;;      Totals:         0       0       0       0
  6923 ;;Total ram usage:        0 bytes
  6924 ;; Hardware stack levels used: 1
  6925 ;; Hardware stack levels required when called: 3
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_main
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text24
  6934   00308C                     __ptext24:
  6935                           	callstack 0
  6936   00308C                     _setupTimer1:
  6937                           	callstack 27
  6938                           
  6939                           ;main.c: 474:     T1CON = 0b00110101;
  6940                           
  6941                           ;incstack = 0
  6942   00308C  0E35               	movlw	53
  6943   00308E  6ECD               	movwf	205,c	;volatile
  6944                           
  6945                           ;main.c: 475:     TMR1 = 0;
  6946   003090  0E00               	movlw	0
  6947   003092  6ECF               	movwf	207,c	;volatile
  6948   003094  0E00               	movlw	0
  6949   003096  6ECE               	movwf	206,c	;volatile
  6950                           
  6951                           ;main.c: 478:     PIR1bits.TMR1IF = 0;
  6952   003098  909E               	bcf	158,0,c	;volatile
  6953                           
  6954                           ;main.c: 479:     PIE1bits.TMR1IE = 1;
  6955   00309A  809D               	bsf	157,0,c	;volatile
  6956                           
  6957                           ;main.c: 485:     TMR1 = 0;
  6958   00309C  0E00               	movlw	0
  6959   00309E  6ECF               	movwf	207,c	;volatile
  6960   0030A0  0E00               	movlw	0
  6961   0030A2  6ECE               	movwf	206,c	;volatile
  6962   0030A4  0012               	return		;funcret
  6963   0030A6                     __end_of_setupTimer1:
  6964                           	callstack 0
  6965                           
  6966 ;; *************** function _setupI2C *****************
  6967 ;; Defined at:
  6968 ;;		line 488 in file "main.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;		None
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1    wreg      void 
  6975 ;; Registers used:
  6976 ;;		wreg, status,2
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6982 ;;      Params:         0       0       0       0
  6983 ;;      Locals:         0       0       0       0
  6984 ;;      Temps:          0       0       0       0
  6985 ;;      Totals:         0       0       0       0
  6986 ;;Total ram usage:        0 bytes
  6987 ;; Hardware stack levels used: 1
  6988 ;; Hardware stack levels required when called: 3
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_main
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text25
  6997   0030BE                     __ptext25:
  6998                           	callstack 0
  6999   0030BE                     _setupI2C:
  7000                           	callstack 27
  7001                           
  7002                           ;main.c: 489:     TRISBbits.RB4 = 1;
  7003                           
  7004                           ;incstack = 0
  7005   0030BE  8893               	bsf	147,4,c	;volatile
  7006                           
  7007                           ;main.c: 490:     TRISBbits.RB6 = 1;
  7008   0030C0  8C93               	bsf	147,6,c	;volatile
  7009                           
  7010                           ;main.c: 491:     SSPCON1 = 0b00101000;
  7011   0030C2  0E28               	movlw	40
  7012   0030C4  6EC6               	movwf	198,c	;volatile
  7013                           
  7014                           ;main.c: 492:     SSPADD = ((2000000 / 4) / 100000) - 1;
  7015   0030C6  0E04               	movlw	4
  7016   0030C8  6EC8               	movwf	200,c	;volatile
  7017                           
  7018                           ;main.c: 493:     SSPSTAT = 0x00;
  7019   0030CA  6AC7               	clrf	199,c	;volatile
  7020                           
  7021                           ;main.c: 495:     SSPCON2 = 0b00000000;
  7022   0030CC  6AC5               	clrf	197,c	;volatile
  7023   0030CE  0012               	return		;funcret
  7024   0030D0                     __end_of_setupI2C:
  7025                           	callstack 0
  7026                           
  7027 ;; *************** function _setupEUSART *****************
  7028 ;; Defined at:
  7029 ;;		line 630 in file "main.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;		None
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;		None
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      void 
  7036 ;; Registers used:
  7037 ;;		wreg, status,2
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7043 ;;      Params:         0       0       0       0
  7044 ;;      Locals:         0       0       0       0
  7045 ;;      Temps:          0       0       0       0
  7046 ;;      Totals:         0       0       0       0
  7047 ;;Total ram usage:        0 bytes
  7048 ;; Hardware stack levels used: 1
  7049 ;; Hardware stack levels required when called: 3
  7050 ;; This function calls:
  7051 ;;		Nothing
  7052 ;; This function is called by:
  7053 ;;		_main
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           	psect	text26
  7058   003050                     __ptext26:
  7059                           	callstack 0
  7060   003050                     _setupEUSART:
  7061                           	callstack 27
  7062                           
  7063                           ;main.c: 634:     BAUDCONbits.BRG16 = 0;
  7064                           
  7065                           ;incstack = 0
  7066   003050  96B8               	bcf	184,3,c	;volatile
  7067                           
  7068                           ;main.c: 635:     BAUDCONbits.ABDEN = 0;
  7069   003052  90B8               	bcf	184,0,c	;volatile
  7070                           
  7071                           ;main.c: 636:     BAUDCONbits.CKTXP = 0;
  7072   003054  98B8               	bcf	184,4,c	;volatile
  7073                           
  7074                           ;main.c: 637:     BAUDCONbits.ABDOVF = 0;
  7075   003056  9EB8               	bcf	184,7,c	;volatile
  7076                           
  7077                           ;main.c: 640:     SPBRG = 12;
  7078   003058  0E0C               	movlw	12
  7079   00305A  6EAF               	movwf	175,c	;volatile
  7080                           
  7081                           ;main.c: 642:     TXSTAbits.BRGH = 0;
  7082   00305C  94AC               	bcf	172,2,c	;volatile
  7083                           
  7084                           ;main.c: 644:     TXSTAbits.SYNC = 0;
  7085   00305E  98AC               	bcf	172,4,c	;volatile
  7086                           
  7087                           ;main.c: 645:     TXSTAbits.TX9 = 0;
  7088   003060  9CAC               	bcf	172,6,c	;volatile
  7089                           
  7090                           ;main.c: 646:     RCSTAbits.SPEN = 1;
  7091   003062  8EAB               	bsf	171,7,c	;volatile
  7092                           
  7093                           ;main.c: 647:     TXSTAbits.TXEN = 1;
  7094   003064  8AAC               	bsf	172,5,c	;volatile
  7095                           
  7096                           ;main.c: 648:     RCSTAbits.CREN = 0;
  7097   003066  98AB               	bcf	171,4,c	;volatile
  7098                           
  7099                           ;main.c: 650:     TXSTAbits.SENDB = 0;
  7100   003068  96AC               	bcf	172,3,c	;volatile
  7101                           
  7102                           ;main.c: 653:     TRISBbits.TRISB7 = 1;
  7103   00306A  8E93               	bsf	147,7,c	;volatile
  7104                           
  7105                           ;main.c: 654:     TRISBbits.TRISB5 = 1;
  7106   00306C  8A93               	bsf	147,5,c	;volatile
  7107   00306E  0012               	return		;funcret
  7108   003070                     __end_of_setupEUSART:
  7109                           	callstack 0
  7110                           
  7111 ;; *************** function _setupADC *****************
  7112 ;; Defined at:
  7113 ;;		line 467 in file "main.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;		None
  7116 ;; Auto vars:     Size  Location     Type
  7117 ;;		None
  7118 ;; Return value:  Size  Location     Type
  7119 ;;                  1    wreg      void 
  7120 ;; Registers used:
  7121 ;;		wreg, status,2
  7122 ;; Tracked objects:
  7123 ;;		On entry : 0/0
  7124 ;;		On exit  : 0/0
  7125 ;;		Unchanged: 0/0
  7126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7127 ;;      Params:         0       0       0       0
  7128 ;;      Locals:         0       0       0       0
  7129 ;;      Temps:          0       0       0       0
  7130 ;;      Totals:         0       0       0       0
  7131 ;;Total ram usage:        0 bytes
  7132 ;; Hardware stack levels used: 1
  7133 ;; Hardware stack levels required when called: 3
  7134 ;; This function calls:
  7135 ;;		Nothing
  7136 ;; This function is called by:
  7137 ;;		_main
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           	psect	text27
  7142   003102                     __ptext27:
  7143                           	callstack 0
  7144   003102                     _setupADC:
  7145                           	callstack 27
  7146                           
  7147                           ;main.c: 468:     ADCON1 = 0b00000000;
  7148                           
  7149                           ;incstack = 0
  7150   003102  6AC1               	clrf	193,c	;volatile
  7151                           
  7152                           ;main.c: 469:     ADCON0 = 0b00001101;
  7153   003104  0E0D               	movlw	13
  7154   003106  6EC2               	movwf	194,c	;volatile
  7155                           
  7156                           ;main.c: 470:     ADCON2 = 0b10101111;
  7157   003108  0EAF               	movlw	175
  7158   00310A  6EC0               	movwf	192,c	;volatile
  7159   00310C  0012               	return		;funcret
  7160   00310E                     __end_of_setupADC:
  7161                           	callstack 0
  7162                           
  7163 ;; *************** function _setDisplayDigits *****************
  7164 ;; Defined at:
  7165 ;;		line 670 in file "main.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;		None
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;		None
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  1    wreg      void 
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 3F/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7179 ;;      Params:         0       0       0       0
  7180 ;;      Locals:         0       0       0       0
  7181 ;;      Temps:          0       0       0       0
  7182 ;;      Totals:         0       0       0       0
  7183 ;;Total ram usage:        0 bytes
  7184 ;; Hardware stack levels used: 1
  7185 ;; Hardware stack levels required when called: 4
  7186 ;; This function calls:
  7187 ;;		___flmul
  7188 ;;		___fltol
  7189 ;;		___lwdiv
  7190 ;;		___lwmod
  7191 ;; This function is called by:
  7192 ;;		_main
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text28
  7197   001AD4                     __ptext28:
  7198                           	callstack 0
  7199   001AD4                     _setDisplayDigits:
  7200                           	callstack 26
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;main.c: 671:     if (fsm_state == 0) {
  7204                           
  7205                           ;incstack = 0
  7206   001AD4  51F9               	movf	_fsm_state& (0+255),w,b
  7207   001AD6  A4D8               	btfss	status,2,c
  7208   001AD8  D007               	goto	l7607
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;main.c: 673:         displayDigit0 = 11;
  7212   001ADA  0E0B               	movlw	11
  7213   001ADC  6E38               	movwf	_displayDigit0^0,c
  7214                           
  7215                           ;main.c: 674:         displayDigit1 = 'A';
  7216   001ADE  0E41               	movlw	65
  7217   001AE0  6E37               	movwf	_displayDigit1^0,c
  7218                           
  7219                           ;main.c: 675:         displayDigit2 = 11;
  7220   001AE2  0E0B               	movlw	11
  7221   001AE4  6E36               	movwf	_displayDigit2^0,c
  7222                           
  7223                           ;main.c: 677:     } else if (fsm_state == 1) {
  7224   001AE6  0012               	return	
  7225   001AE8                     l7607:
  7226                           
  7227                           ; BSR set to: 0
  7228   001AE8  05F9               	decf	_fsm_state& (0+255),w,b
  7229   001AEA  A4D8               	btfss	status,2,c
  7230   001AEC  D057               	goto	l7621
  7231                           
  7232                           ; BSR set to: 0
  7233                           ;main.c: 679:         c_target = (unsigned int) (adc_voltage * 100);
  7234   001AEE  0E00               	movlw	0
  7235   001AF0  6F72               	movwf	___flmul@a& (0+255),b
  7236   001AF2  0E00               	movlw	0
  7237   001AF4  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7238   001AF6  0EC8               	movlw	200
  7239   001AF8  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7240   001AFA  0E42               	movlw	66
  7241   001AFC  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7242   001AFE  C0EA  F06E         	movff	_adc_voltage,___flmul@b
  7243   001B02  C0EB  F06F         	movff	_adc_voltage+1,___flmul@b+1
  7244   001B06  C0EC  F070         	movff	_adc_voltage+2,___flmul@b+2
  7245   001B0A  C0ED  F071         	movff	_adc_voltage+3,___flmul@b+3
  7246   001B0E  EC7B  F007         	call	___flmul	;wreg free
  7247   001B12  C06E  F087         	movff	?___flmul,___fltol@f1
  7248   001B16  C06F  F088         	movff	?___flmul+1,___fltol@f1+1
  7249   001B1A  C070  F089         	movff	?___flmul+2,___fltol@f1+2
  7250   001B1E  C071  F08A         	movff	?___flmul+3,___fltol@f1+3
  7251   001B22  EC9A  F012         	call	___fltol	;wreg free
  7252   001B26  C087  F032         	movff	?___fltol,_c_target
  7253   001B2A  C088  F033         	movff	?___fltol+1,_c_target+1
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;main.c: 680:         c_remainder = c_target % 100;
  7257   001B2E  C032  F060         	movff	_c_target,___lwmod@dividend
  7258   001B32  C033  F061         	movff	_c_target+1,___lwmod@dividend+1
  7259   001B36  0E00               	movlw	0
  7260   001B38  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  7261   001B3A  0E64               	movlw	100
  7262   001B3C  6F62               	movwf	___lwmod@divisor& (0+255),b
  7263   001B3E  EC6C  F017         	call	___lwmod	;wreg free
  7264   001B42  C060  F030         	movff	?___lwmod,_c_remainder
  7265   001B46  C061  F031         	movff	?___lwmod+1,_c_remainder+1
  7266                           
  7267                           ; BSR set to: 0
  7268                           ;main.c: 681:         c_number = c_target / 100;
  7269   001B4A  C032  F060         	movff	_c_target,___lwdiv@dividend
  7270   001B4E  C033  F061         	movff	_c_target+1,___lwdiv@dividend+1
  7271   001B52  0E00               	movlw	0
  7272   001B54  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7273   001B56  0E64               	movlw	100
  7274   001B58  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7275   001B5A  ECFB  F015         	call	___lwdiv	;wreg free
  7276   001B5E  C060  F02E         	movff	?___lwdiv,_c_number
  7277   001B62  C061  F02F         	movff	?___lwdiv+1,_c_number+1
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;main.c: 683:         displayDigit0 = (uint8_t) c_number;
  7281   001B66  C02E  F038         	movff	_c_number,_displayDigit0
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;main.c: 684:         displayDigit1 = (uint8_t) (c_remainder / 10);
  7285   001B6A  C030  F060         	movff	_c_remainder,___lwdiv@dividend
  7286   001B6E  C031  F061         	movff	_c_remainder+1,___lwdiv@dividend+1
  7287   001B72  0E00               	movlw	0
  7288   001B74  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7289   001B76  0E0A               	movlw	10
  7290   001B78  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7291   001B7A  ECFB  F015         	call	___lwdiv	;wreg free
  7292   001B7E  5160               	movf	?___lwdiv& (0+255),w,b
  7293   001B80  6E37               	movwf	_displayDigit1^0,c
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;main.c: 685:         displayDigit2 = c_remainder % 10;
  7297   001B82  C030  F060         	movff	_c_remainder,___lwmod@dividend
  7298   001B86  C031  F061         	movff	_c_remainder+1,___lwmod@dividend+1
  7299   001B8A  0E00               	movlw	0
  7300   001B8C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  7301   001B8E  0E0A               	movlw	10
  7302   001B90  6F62               	movwf	___lwmod@divisor& (0+255),b
  7303   001B92  EC6C  F017         	call	___lwmod	;wreg free
  7304   001B96  5160               	movf	?___lwmod& (0+255),w,b
  7305   001B98  6E36               	movwf	_displayDigit2^0,c
  7306                           
  7307                           ;main.c: 687:     } else if (fsm_state == 2) {
  7308   001B9A  0012               	return	
  7309   001B9C                     l7621:
  7310                           
  7311                           ; BSR set to: 0
  7312   001B9C  0E02               	movlw	2
  7313   001B9E  19F9               	xorwf	_fsm_state& (0+255),w,b
  7314   001BA0  A4D8               	btfss	status,2,c
  7315   001BA2  D04D               	goto	l7635
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;main.c: 689:         c_target = (unsigned int) (adc_voltage * 100);
  7319   001BA4  0E00               	movlw	0
  7320   001BA6  6F72               	movwf	___flmul@a& (0+255),b
  7321   001BA8  0E00               	movlw	0
  7322   001BAA  6F73               	movwf	(___flmul@a+1)& (0+255),b
  7323   001BAC  0EC8               	movlw	200
  7324   001BAE  6F74               	movwf	(___flmul@a+2)& (0+255),b
  7325   001BB0  0E42               	movlw	66
  7326   001BB2  6F75               	movwf	(___flmul@a+3)& (0+255),b
  7327   001BB4  C0EA  F06E         	movff	_adc_voltage,___flmul@b
  7328   001BB8  C0EB  F06F         	movff	_adc_voltage+1,___flmul@b+1
  7329   001BBC  C0EC  F070         	movff	_adc_voltage+2,___flmul@b+2
  7330   001BC0  C0ED  F071         	movff	_adc_voltage+3,___flmul@b+3
  7331   001BC4  EC7B  F007         	call	___flmul	;wreg free
  7332   001BC8  C06E  F087         	movff	?___flmul,___fltol@f1
  7333   001BCC  C06F  F088         	movff	?___flmul+1,___fltol@f1+1
  7334   001BD0  C070  F089         	movff	?___flmul+2,___fltol@f1+2
  7335   001BD4  C071  F08A         	movff	?___flmul+3,___fltol@f1+3
  7336   001BD8  EC9A  F012         	call	___fltol	;wreg free
  7337   001BDC  C087  F032         	movff	?___fltol,_c_target
  7338   001BE0  C088  F033         	movff	?___fltol+1,_c_target+1
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;main.c: 690:         c_remainder = c_target % 100;
  7342   001BE4  C032  F060         	movff	_c_target,___lwmod@dividend
  7343   001BE8  C033  F061         	movff	_c_target+1,___lwmod@dividend+1
  7344   001BEC  0E00               	movlw	0
  7345   001BEE  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  7346   001BF0  0E64               	movlw	100
  7347   001BF2  6F62               	movwf	___lwmod@divisor& (0+255),b
  7348   001BF4  EC6C  F017         	call	___lwmod	;wreg free
  7349   001BF8  C060  F030         	movff	?___lwmod,_c_remainder
  7350   001BFC  C061  F031         	movff	?___lwmod+1,_c_remainder+1
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;main.c: 691:         c_number = c_target / 100;
  7354   001C00  C032  F060         	movff	_c_target,___lwdiv@dividend
  7355   001C04  C033  F061         	movff	_c_target+1,___lwdiv@dividend+1
  7356   001C08  0E00               	movlw	0
  7357   001C0A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7358   001C0C  0E64               	movlw	100
  7359   001C0E  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7360   001C10  ECFB  F015         	call	___lwdiv	;wreg free
  7361   001C14  C060  F02E         	movff	?___lwdiv,_c_number
  7362   001C18  C061  F02F         	movff	?___lwdiv+1,_c_number+1
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;main.c: 693:         displayDigit0 = (uint8_t) c_number;
  7366   001C1C  C02E  F038         	movff	_c_number,_displayDigit0
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;main.c: 694:         displayDigit1 = (uint8_t) (c_remainder / 10);
  7370   001C20  C030  F060         	movff	_c_remainder,___lwdiv@dividend
  7371   001C24  C031  F061         	movff	_c_remainder+1,___lwdiv@dividend+1
  7372   001C28  0E00               	movlw	0
  7373   001C2A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  7374   001C2C  0E0A               	movlw	10
  7375   001C2E  6F62               	movwf	___lwdiv@divisor& (0+255),b
  7376   001C30  ECFB  F015         	call	___lwdiv	;wreg free
  7377   001C34  5160               	movf	?___lwdiv& (0+255),w,b
  7378   001C36  6E37               	movwf	_displayDigit1^0,c
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;main.c: 695:         displayDigit2 = 'C';
  7382   001C38  0E43               	movlw	67
  7383   001C3A  6E36               	movwf	_displayDigit2^0,c
  7384                           
  7385                           ;main.c: 697:     } else if (fsm_state == 3) {
  7386   001C3C  0012               	return	
  7387   001C3E                     l7635:
  7388                           
  7389                           ; BSR set to: 0
  7390   001C3E  0E03               	movlw	3
  7391   001C40  19F9               	xorwf	_fsm_state& (0+255),w,b
  7392   001C42  A4D8               	btfss	status,2,c
  7393   001C44  D007               	goto	l7639
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;main.c: 699:         displayDigit0 = 11;
  7397   001C46  0E0B               	movlw	11
  7398   001C48  6E38               	movwf	_displayDigit0^0,c
  7399                           
  7400                           ;main.c: 700:         displayDigit1 = 'C';
  7401   001C4A  0E43               	movlw	67
  7402   001C4C  6E37               	movwf	_displayDigit1^0,c
  7403                           
  7404                           ;main.c: 701:         displayDigit2 = 11;
  7405   001C4E  0E0B               	movlw	11
  7406   001C50  6E36               	movwf	_displayDigit2^0,c
  7407                           
  7408                           ;main.c: 703:     } else if (fsm_state == 4) {
  7409   001C52  0012               	return	
  7410   001C54                     l7639:
  7411                           
  7412                           ; BSR set to: 0
  7413   001C54  0E04               	movlw	4
  7414   001C56  19F9               	xorwf	_fsm_state& (0+255),w,b
  7415   001C58  A4D8               	btfss	status,2,c
  7416   001C5A  D006               	goto	l7645
  7417                           
  7418                           ; BSR set to: 0
  7419                           ;main.c: 705:         displayDigit0 = 'S';
  7420   001C5C  0E53               	movlw	83
  7421   001C5E  6E38               	movwf	_displayDigit0^0,c
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;main.c: 706:         displayDigit1 = 0;
  7425   001C60  6A37               	clrf	_displayDigit1^0,c
  7426                           
  7427                           ;main.c: 707:         displayDigit2 = 11;
  7428   001C62  0E0B               	movlw	11
  7429   001C64  6E36               	movwf	_displayDigit2^0,c
  7430                           
  7431                           ;main.c: 709:     } else if (fsm_state == 5) {
  7432   001C66  0012               	return	
  7433   001C68                     l7645:
  7434                           
  7435                           ; BSR set to: 0
  7436   001C68  0E05               	movlw	5
  7437   001C6A  19F9               	xorwf	_fsm_state& (0+255),w,b
  7438   001C6C  A4D8               	btfss	status,2,c
  7439   001C6E  D007               	goto	l7649
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;main.c: 711:         displayDigit0 = 'S';
  7443   001C70  0E53               	movlw	83
  7444   001C72  6E38               	movwf	_displayDigit0^0,c
  7445                           
  7446                           ;main.c: 712:         displayDigit1 = 1;
  7447   001C74  0E01               	movlw	1
  7448   001C76  6E37               	movwf	_displayDigit1^0,c
  7449                           
  7450                           ;main.c: 713:         displayDigit2 = 11;
  7451   001C78  0E0B               	movlw	11
  7452   001C7A  6E36               	movwf	_displayDigit2^0,c
  7453                           
  7454                           ;main.c: 715:     } else if (fsm_state == 6) {
  7455   001C7C  0012               	return	
  7456   001C7E                     l7649:
  7457                           
  7458                           ; BSR set to: 0
  7459   001C7E  0E06               	movlw	6
  7460   001C80  19F9               	xorwf	_fsm_state& (0+255),w,b
  7461   001C82  A4D8               	btfss	status,2,c
  7462   001C84  D007               	goto	l7653
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;main.c: 717:         displayDigit0 = 'S';
  7466   001C86  0E53               	movlw	83
  7467   001C88  6E38               	movwf	_displayDigit0^0,c
  7468                           
  7469                           ;main.c: 718:         displayDigit1 = 2;
  7470   001C8A  0E02               	movlw	2
  7471   001C8C  6E37               	movwf	_displayDigit1^0,c
  7472                           
  7473                           ;main.c: 719:         displayDigit2 = 11;
  7474   001C8E  0E0B               	movlw	11
  7475   001C90  6E36               	movwf	_displayDigit2^0,c
  7476                           
  7477                           ;main.c: 721:     } else if (fsm_state == 7) {
  7478   001C92  0012               	return	
  7479   001C94                     l7653:
  7480                           
  7481                           ; BSR set to: 0
  7482   001C94  0E07               	movlw	7
  7483   001C96  19F9               	xorwf	_fsm_state& (0+255),w,b
  7484   001C98  A4D8               	btfss	status,2,c
  7485   001C9A  D007               	goto	l336
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;main.c: 723:         displayDigit0 = 'C';
  7489   001C9C  0E43               	movlw	67
  7490   001C9E  6E38               	movwf	_displayDigit0^0,c
  7491                           
  7492                           ;main.c: 724:         displayDigit1 = 'L';
  7493   001CA0  0E4C               	movlw	76
  7494   001CA2  6E37               	movwf	_displayDigit1^0,c
  7495                           
  7496                           ;main.c: 725:         displayDigit2 = 'r';
  7497   001CA4  0E72               	movlw	114
  7498   001CA6  6E36               	movwf	_displayDigit2^0,c
  7499                           
  7500                           ;main.c: 727:     }
  7501   001CA8  0012               	return	
  7502   001CAA                     l336:
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;main.c: 729:         __nop();
  7506   001CAA  0000               	nop	
  7507   001CAC  0012               	return		;funcret
  7508   001CAE                     __end_of_setDisplayDigits:
  7509                           	callstack 0
  7510                           
  7511 ;; *************** function ___lwmod *****************
  7512 ;; Defined at:
  7513 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwmod.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;  dividend        2    0[BANK0 ] unsigned int 
  7516 ;;  divisor         2    2[BANK0 ] unsigned int 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;  counter         1    4[BANK0 ] unsigned char 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  2    0[BANK0 ] unsigned int 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0
  7523 ;; Tracked objects:
  7524 ;;		On entry : 3F/0
  7525 ;;		On exit  : 3F/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7528 ;;      Params:         0       4       0       0
  7529 ;;      Locals:         0       1       0       0
  7530 ;;      Temps:          0       0       0       0
  7531 ;;      Totals:         0       5       0       0
  7532 ;;Total ram usage:        5 bytes
  7533 ;; Hardware stack levels used: 1
  7534 ;; Hardware stack levels required when called: 3
  7535 ;; This function calls:
  7536 ;;		Nothing
  7537 ;; This function is called by:
  7538 ;;		_setDisplayDigits
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text29
  7543   002ED8                     __ptext29:
  7544                           	callstack 0
  7545   002ED8                     ___lwmod:
  7546                           	callstack 26
  7547                           
  7548                           ; BSR set to: 0
  7549                           
  7550                           ;incstack = 0
  7551   002ED8  5162               	movf	___lwmod@divisor& (0+255),w,b
  7552   002EDA  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  7553   002EDC  B4D8               	btfsc	status,2,c
  7554   002EDE  D018               	goto	l848
  7555                           
  7556                           ; BSR set to: 0
  7557   002EE0  0E01               	movlw	1
  7558   002EE2  6F64               	movwf	___lwmod@counter& (0+255),b
  7559   002EE4  D004               	goto	l7569
  7560   002EE6                     l7567:
  7561                           
  7562                           ; BSR set to: 0
  7563   002EE6  90D8               	bcf	status,0,c
  7564   002EE8  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  7565   002EEA  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  7566   002EEC  2B64               	incf	___lwmod@counter& (0+255),f,b
  7567   002EEE                     l7569:
  7568                           
  7569                           ; BSR set to: 0
  7570   002EEE  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  7571   002EF0  D7FA               	goto	l7567
  7572   002EF2                     u9560:
  7573                           
  7574                           ; BSR set to: 0
  7575   002EF2  5162               	movf	___lwmod@divisor& (0+255),w,b
  7576   002EF4  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  7577   002EF6  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7578   002EF8  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  7579   002EFA  A0D8               	btfss	status,0,c
  7580   002EFC  D004               	goto	l7575
  7581                           
  7582                           ; BSR set to: 0
  7583   002EFE  5162               	movf	___lwmod@divisor& (0+255),w,b
  7584   002F00  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  7585   002F02  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  7586   002F04  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  7587   002F06                     l7575:
  7588                           
  7589                           ; BSR set to: 0
  7590   002F06  90D8               	bcf	status,0,c
  7591   002F08  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  7592   002F0A  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  7593                           
  7594                           ; BSR set to: 0
  7595   002F0C  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  7596   002F0E  D7F1               	goto	u9560
  7597   002F10                     l848:
  7598                           
  7599                           ; BSR set to: 0
  7600   002F10  C060  F060         	movff	___lwmod@dividend,?___lwmod
  7601   002F14  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  7602                           
  7603                           ; BSR set to: 0
  7604   002F18  0012               	return		;funcret
  7605   002F1A                     __end_of___lwmod:
  7606                           	callstack 0
  7607                           
  7608 ;; *************** function ___lwdiv *****************
  7609 ;; Defined at:
  7610 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwdiv.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  dividend        2    0[BANK0 ] unsigned int 
  7613 ;;  divisor         2    2[BANK0 ] unsigned int 
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;  quotient        2    5[BANK0 ] unsigned int 
  7616 ;;  counter         1    4[BANK0 ] unsigned char 
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  2    0[BANK0 ] unsigned int 
  7619 ;; Registers used:
  7620 ;;		wreg, status,2, status,0
  7621 ;; Tracked objects:
  7622 ;;		On entry : 3F/0
  7623 ;;		On exit  : 3F/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7626 ;;      Params:         0       4       0       0
  7627 ;;      Locals:         0       3       0       0
  7628 ;;      Temps:          0       0       0       0
  7629 ;;      Totals:         0       7       0       0
  7630 ;;Total ram usage:        7 bytes
  7631 ;; Hardware stack levels used: 1
  7632 ;; Hardware stack levels required when called: 3
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_setDisplayDigits
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text30
  7641   002BF6                     __ptext30:
  7642                           	callstack 0
  7643   002BF6                     ___lwdiv:
  7644                           	callstack 26
  7645                           
  7646                           ; BSR set to: 0
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;incstack = 0
  7650   002BF6  0E00               	movlw	0
  7651   002BF8  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7652   002BFA  0E00               	movlw	0
  7653   002BFC  6F65               	movwf	___lwdiv@quotient& (0+255),b
  7654                           
  7655                           ; BSR set to: 0
  7656   002BFE  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7657   002C00  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7658   002C02  B4D8               	btfsc	status,2,c
  7659   002C04  D01C               	goto	l838
  7660                           
  7661                           ; BSR set to: 0
  7662   002C06  0E01               	movlw	1
  7663   002C08  6F64               	movwf	___lwdiv@counter& (0+255),b
  7664   002C0A  D004               	goto	l7549
  7665   002C0C                     l7547:
  7666                           
  7667                           ; BSR set to: 0
  7668   002C0C  90D8               	bcf	status,0,c
  7669   002C0E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  7670   002C10  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7671   002C12  2B64               	incf	___lwdiv@counter& (0+255),f,b
  7672   002C14                     l7549:
  7673                           
  7674                           ; BSR set to: 0
  7675   002C14  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7676   002C16  D7FA               	goto	l7547
  7677   002C18                     u9530:
  7678                           
  7679                           ; BSR set to: 0
  7680   002C18  90D8               	bcf	status,0,c
  7681   002C1A  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  7682   002C1C  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7683                           
  7684                           ; BSR set to: 0
  7685   002C1E  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7686   002C20  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  7687   002C22  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7688   002C24  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7689   002C26  A0D8               	btfss	status,0,c
  7690   002C28  D005               	goto	l7559
  7691                           
  7692                           ; BSR set to: 0
  7693   002C2A  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7694   002C2C  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  7695   002C2E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7696   002C30  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7697                           
  7698                           ; BSR set to: 0
  7699   002C32  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  7700   002C34                     l7559:
  7701                           
  7702                           ; BSR set to: 0
  7703   002C34  90D8               	bcf	status,0,c
  7704   002C36  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7705   002C38  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  7706                           
  7707                           ; BSR set to: 0
  7708   002C3A  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  7709   002C3C  D7ED               	goto	u9530
  7710   002C3E                     l838:
  7711                           
  7712                           ; BSR set to: 0
  7713   002C3E  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  7714   002C42  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7715                           
  7716                           ; BSR set to: 0
  7717   002C46  0012               	return		;funcret
  7718   002C48                     __end_of___lwdiv:
  7719                           	callstack 0
  7720                           
  7721 ;; *************** function ___fltol *****************
  7722 ;; Defined at:
  7723 ;;		line 43 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/fltol.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  f1              4   39[BANK0 ] unsigned int 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  exp1            1   48[BANK0 ] unsigned char 
  7728 ;;  sign1           1   47[BANK0 ] unsigned char 
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  4   39[BANK0 ] long 
  7731 ;; Registers used:
  7732 ;;		wreg, status,2, status,0
  7733 ;; Tracked objects:
  7734 ;;		On entry : 3F/0
  7735 ;;		On exit  : 3F/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7738 ;;      Params:         0       4       0       0
  7739 ;;      Locals:         0       2       0       0
  7740 ;;      Temps:          0       4       0       0
  7741 ;;      Totals:         0      10       0       0
  7742 ;;Total ram usage:       10 bytes
  7743 ;; Hardware stack levels used: 1
  7744 ;; Hardware stack levels required when called: 3
  7745 ;; This function calls:
  7746 ;;		Nothing
  7747 ;; This function is called by:
  7748 ;;		_setDisplayDigits
  7749 ;;		_efgtoa
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           
  7753                           	psect	text31
  7754   002534                     __ptext31:
  7755                           	callstack 0
  7756   002534                     ___fltol:
  7757                           	callstack 23
  7758                           
  7759                           ; BSR set to: 0
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;incstack = 0
  7763   002534  3589               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7764   002536  358A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7765   002538  6F90               	movwf	___fltol@exp1& (0+255),b
  7766   00253A  5190               	movf	___fltol@exp1& (0+255),w,b
  7767   00253C  A4D8               	btfss	status,2,c
  7768   00253E  D009               	goto	l7039
  7769   002540                     u8730:
  7770                           
  7771                           ; BSR set to: 0
  7772   002540  0E00               	movlw	0
  7773   002542  6F87               	movwf	?___fltol& (0+255),b
  7774   002544  0E00               	movlw	0
  7775   002546  6F88               	movwf	(?___fltol+1)& (0+255),b
  7776   002548  0E00               	movlw	0
  7777   00254A  6F89               	movwf	(?___fltol+2)& (0+255),b
  7778   00254C  0E00               	movlw	0
  7779   00254E  6F8A               	movwf	(?___fltol+3)& (0+255),b
  7780   002550  0012               	return	
  7781   002552                     l7039:
  7782                           
  7783                           ; BSR set to: 0
  7784   002552  C087  F08B         	movff	___fltol@f1,??___fltol
  7785   002556  C088  F08C         	movff	___fltol@f1+1,??___fltol+1
  7786   00255A  C089  F08D         	movff	___fltol@f1+2,??___fltol+2
  7787   00255E  C08A  F08E         	movff	___fltol@f1+3,??___fltol+3
  7788   002562  0E20               	movlw	32
  7789   002564  D005               	goto	u8740
  7790   002566                     u8745:
  7791   002566  90D8               	bcf	status,0,c
  7792   002568  338E               	rrcf	(??___fltol+3)& (0+255),f,b
  7793   00256A  338D               	rrcf	(??___fltol+2)& (0+255),f,b
  7794   00256C  338C               	rrcf	(??___fltol+1)& (0+255),f,b
  7795   00256E  338B               	rrcf	??___fltol& (0+255),f,b
  7796   002570                     u8740:
  7797   002570  2EE8               	decfsz	wreg,f,c
  7798   002572  D7F9               	goto	u8745
  7799   002574  518B               	movf	??___fltol& (0+255),w,b
  7800   002576  6F8F               	movwf	___fltol@sign1& (0+255),b
  7801                           
  7802                           ; BSR set to: 0
  7803   002578  8F89               	bsf	(___fltol@f1+2)& (0+255),7,b
  7804                           
  7805                           ; BSR set to: 0
  7806   00257A  0EFF               	movlw	255
  7807   00257C  1787               	andwf	___fltol@f1& (0+255),f,b
  7808   00257E  0EFF               	movlw	255
  7809   002580  1788               	andwf	(___fltol@f1+1)& (0+255),f,b
  7810   002582  0EFF               	movlw	255
  7811   002584  1789               	andwf	(___fltol@f1+2)& (0+255),f,b
  7812   002586  0E00               	movlw	0
  7813   002588  178A               	andwf	(___fltol@f1+3)& (0+255),f,b
  7814                           
  7815                           ; BSR set to: 0
  7816   00258A  0E96               	movlw	150
  7817   00258C  5F90               	subwf	___fltol@exp1& (0+255),f,b
  7818                           
  7819                           ; BSR set to: 0
  7820   00258E  AF90               	btfss	___fltol@exp1& (0+255),7,b
  7821   002590  D00D               	goto	l7059
  7822                           
  7823                           ; BSR set to: 0
  7824   002592  5190               	movf	___fltol@exp1& (0+255),w,b
  7825   002594  0A80               	xorlw	128
  7826   002596  0F97               	addlw	151
  7827   002598  A0D8               	btfss	status,0,c
  7828   00259A  D7D2               	goto	u8730
  7829   00259C                     l7055:
  7830                           
  7831                           ; BSR set to: 0
  7832   00259C  90D8               	bcf	status,0,c
  7833   00259E  338A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7834   0025A0  3389               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7835   0025A2  3388               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7836   0025A4  3387               	rrcf	___fltol@f1& (0+255),f,b
  7837                           
  7838                           ; BSR set to: 0
  7839   0025A6  3F90               	incfsz	___fltol@exp1& (0+255),f,b
  7840   0025A8  D7F9               	goto	l7055
  7841   0025AA  D00D               	goto	u8780
  7842   0025AC                     l7059:
  7843                           
  7844                           ; BSR set to: 0
  7845   0025AC  0E1F               	movlw	31
  7846   0025AE  6590               	cpfsgt	___fltol@exp1& (0+255),b
  7847   0025B0  D007               	goto	l7067
  7848   0025B2  D7C6               	goto	u8730
  7849   0025B4                     l7065:
  7850                           
  7851                           ; BSR set to: 0
  7852   0025B4  90D8               	bcf	status,0,c
  7853   0025B6  3787               	rlcf	___fltol@f1& (0+255),f,b
  7854   0025B8  3788               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7855   0025BA  3789               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7856   0025BC  378A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7857   0025BE  0790               	decf	___fltol@exp1& (0+255),f,b
  7858   0025C0                     l7067:
  7859                           
  7860                           ; BSR set to: 0
  7861   0025C0  5190               	movf	___fltol@exp1& (0+255),w,b
  7862   0025C2  A4D8               	btfss	status,2,c
  7863   0025C4  D7F7               	goto	l7065
  7864   0025C6                     u8780:
  7865                           
  7866                           ; BSR set to: 0
  7867   0025C6  518F               	movf	___fltol@sign1& (0+255),w,b
  7868   0025C8  B4D8               	btfsc	status,2,c
  7869   0025CA  D008               	goto	l7073
  7870                           
  7871                           ; BSR set to: 0
  7872   0025CC  1F8A               	comf	(___fltol@f1+3)& (0+255),f,b
  7873   0025CE  1F89               	comf	(___fltol@f1+2)& (0+255),f,b
  7874   0025D0  1F88               	comf	(___fltol@f1+1)& (0+255),f,b
  7875   0025D2  6D87               	negf	___fltol@f1& (0+255),b
  7876   0025D4  0E00               	movlw	0
  7877   0025D6  2388               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7878   0025D8  2389               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7879   0025DA  238A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7880   0025DC                     l7073:
  7881                           
  7882                           ; BSR set to: 0
  7883   0025DC  C087  F087         	movff	___fltol@f1,?___fltol
  7884   0025E0  C088  F088         	movff	___fltol@f1+1,?___fltol+1
  7885   0025E4  C089  F089         	movff	___fltol@f1+2,?___fltol+2
  7886   0025E8  C08A  F08A         	movff	___fltol@f1+3,?___fltol+3
  7887                           
  7888                           ; BSR set to: 0
  7889   0025EC  0012               	return		;funcret
  7890   0025EE                     __end_of___fltol:
  7891                           	callstack 0
  7892                           
  7893 ;; *************** function ___flmul *****************
  7894 ;; Defined at:
  7895 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcmul.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  b               4   14[BANK0 ] long 
  7898 ;;  a               4   18[BANK0 ] long 
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;  prod            4   33[BANK0 ] struct .
  7901 ;;  grs             4   29[BANK0 ] unsigned long 
  7902 ;;  temp            2   37[BANK0 ] struct .
  7903 ;;  bexp            1   28[BANK0 ] unsigned char 
  7904 ;;  aexp            1   27[BANK0 ] unsigned char 
  7905 ;;  sign            1   26[BANK0 ] unsigned char 
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  4   14[BANK0 ] unsigned char 
  7908 ;; Registers used:
  7909 ;;		wreg, status,2, status,0, prodl, prodh
  7910 ;; Tracked objects:
  7911 ;;		On entry : 3F/0
  7912 ;;		On exit  : 3F/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7915 ;;      Params:         0       8       0       0
  7916 ;;      Locals:         0      13       0       0
  7917 ;;      Temps:          0       4       0       0
  7918 ;;      Totals:         0      25       0       0
  7919 ;;Total ram usage:       25 bytes
  7920 ;; Hardware stack levels used: 1
  7921 ;; Hardware stack levels required when called: 3
  7922 ;; This function calls:
  7923 ;;		Nothing
  7924 ;; This function is called by:
  7925 ;;		_main
  7926 ;;		_setDisplayDigits
  7927 ;;		_efgtoa
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text32
  7932   000EF6                     __ptext32:
  7933                           	callstack 0
  7934   000EF6                     ___flmul:
  7935                           	callstack 23
  7936                           
  7937                           ; BSR set to: 0
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;incstack = 0
  7941   000EF6  5171               	movf	(___flmul@b+3)& (0+255),w,b
  7942   000EF8  0B80               	andlw	128
  7943   000EFA  6F7A               	movwf	___flmul@sign& (0+255),b
  7944   000EFC  5171               	movf	(___flmul@b+3)& (0+255),w,b
  7945   000EFE  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  7946   000F00  6F7C               	movwf	___flmul@bexp& (0+255),b
  7947                           
  7948                           ; BSR set to: 0
  7949   000F02  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
  7950                           
  7951                           ; BSR set to: 0
  7952   000F04  817C               	bsf	___flmul@bexp& (0+255),0,b
  7953                           
  7954                           ; BSR set to: 0
  7955   000F06  517C               	movf	___flmul@bexp& (0+255),w,b
  7956   000F08  B4D8               	btfsc	status,2,c
  7957   000F0A  D00D               	goto	l6867
  7958                           
  7959                           ; BSR set to: 0
  7960   000F0C  297C               	incf	___flmul@bexp& (0+255),w,b
  7961   000F0E  A4D8               	btfss	status,2,c
  7962   000F10  D008               	goto	l6865
  7963                           
  7964                           ; BSR set to: 0
  7965   000F12  0E00               	movlw	0
  7966   000F14  6F6E               	movwf	___flmul@b& (0+255),b
  7967   000F16  0E00               	movlw	0
  7968   000F18  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  7969   000F1A  0E00               	movlw	0
  7970   000F1C  6F70               	movwf	(___flmul@b+2)& (0+255),b
  7971   000F1E  0E00               	movlw	0
  7972   000F20  6F71               	movwf	(___flmul@b+3)& (0+255),b
  7973   000F22                     l6865:
  7974                           
  7975                           ; BSR set to: 0
  7976   000F22  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  7977   000F24  D008               	goto	l6869
  7978   000F26                     l6867:
  7979                           
  7980                           ; BSR set to: 0
  7981   000F26  0E00               	movlw	0
  7982   000F28  6F6E               	movwf	___flmul@b& (0+255),b
  7983   000F2A  0E00               	movlw	0
  7984   000F2C  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  7985   000F2E  0E00               	movlw	0
  7986   000F30  6F70               	movwf	(___flmul@b+2)& (0+255),b
  7987   000F32  0E00               	movlw	0
  7988   000F34  6F71               	movwf	(___flmul@b+3)& (0+255),b
  7989   000F36                     l6869:
  7990                           
  7991                           ; BSR set to: 0
  7992   000F36  5175               	movf	(___flmul@a+3)& (0+255),w,b
  7993   000F38  0B80               	andlw	128
  7994   000F3A  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  7995                           
  7996                           ; BSR set to: 0
  7997   000F3C  5175               	movf	(___flmul@a+3)& (0+255),w,b
  7998   000F3E  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  7999   000F40  6F7B               	movwf	___flmul@aexp& (0+255),b
  8000                           
  8001                           ; BSR set to: 0
  8002   000F42  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
  8003                           
  8004                           ; BSR set to: 0
  8005   000F44  817B               	bsf	___flmul@aexp& (0+255),0,b
  8006                           
  8007                           ; BSR set to: 0
  8008   000F46  517B               	movf	___flmul@aexp& (0+255),w,b
  8009   000F48  B4D8               	btfsc	status,2,c
  8010   000F4A  D00D               	goto	l6885
  8011                           
  8012                           ; BSR set to: 0
  8013   000F4C  297B               	incf	___flmul@aexp& (0+255),w,b
  8014   000F4E  A4D8               	btfss	status,2,c
  8015   000F50  D008               	goto	l6883
  8016                           
  8017                           ; BSR set to: 0
  8018   000F52  0E00               	movlw	0
  8019   000F54  6F72               	movwf	___flmul@a& (0+255),b
  8020   000F56  0E00               	movlw	0
  8021   000F58  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8022   000F5A  0E00               	movlw	0
  8023   000F5C  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8024   000F5E  0E00               	movlw	0
  8025   000F60  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8026   000F62                     l6883:
  8027                           
  8028                           ; BSR set to: 0
  8029   000F62  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  8030   000F64  D008               	goto	l961
  8031   000F66                     l6885:
  8032                           
  8033                           ; BSR set to: 0
  8034   000F66  0E00               	movlw	0
  8035   000F68  6F72               	movwf	___flmul@a& (0+255),b
  8036   000F6A  0E00               	movlw	0
  8037   000F6C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  8038   000F6E  0E00               	movlw	0
  8039   000F70  6F74               	movwf	(___flmul@a+2)& (0+255),b
  8040   000F72  0E00               	movlw	0
  8041   000F74  6F75               	movwf	(___flmul@a+3)& (0+255),b
  8042   000F76                     l961:
  8043                           
  8044                           ; BSR set to: 0
  8045   000F76  517B               	movf	___flmul@aexp& (0+255),w,b
  8046   000F78  B4D8               	btfsc	status,2,c
  8047   000F7A  D003               	goto	u8530
  8048                           
  8049                           ; BSR set to: 0
  8050   000F7C  517C               	movf	___flmul@bexp& (0+255),w,b
  8051   000F7E  A4D8               	btfss	status,2,c
  8052   000F80  D009               	goto	l6893
  8053   000F82                     u8530:
  8054                           
  8055                           ; BSR set to: 0
  8056   000F82  0E00               	movlw	0
  8057   000F84  6F6E               	movwf	?___flmul& (0+255),b
  8058   000F86  0E00               	movlw	0
  8059   000F88  6F6F               	movwf	(?___flmul+1)& (0+255),b
  8060   000F8A  0E00               	movlw	0
  8061   000F8C  6F70               	movwf	(?___flmul+2)& (0+255),b
  8062   000F8E  0E00               	movlw	0
  8063   000F90  6F71               	movwf	(?___flmul+3)& (0+255),b
  8064   000F92  0012               	return	
  8065   000F94                     l6893:
  8066                           
  8067                           ; BSR set to: 0
  8068   000F94  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8069   000F96  036E               	mulwf	___flmul@b& (0+255),b
  8070   000F98  CFF3 F085          	movff	prodl,___flmul@temp
  8071   000F9C  CFF4 F086          	movff	prodh,___flmul@temp+1
  8072                           
  8073                           ; BSR set to: 0
  8074   000FA0  5185               	movf	___flmul@temp& (0+255),w,b
  8075   000FA2  6F7D               	movwf	___flmul@grs& (0+255),b
  8076   000FA4  6B7E               	clrf	(___flmul@grs+1)& (0+255),b
  8077   000FA6  6B7F               	clrf	(___flmul@grs+2)& (0+255),b
  8078   000FA8  6B80               	clrf	(___flmul@grs+3)& (0+255),b
  8079                           
  8080                           ; BSR set to: 0
  8081   000FAA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8082   000FAC  6F81               	movwf	___flmul@prod& (0+255),b
  8083   000FAE  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  8084   000FB0  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  8085   000FB2  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  8086   000FB4  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8087   000FB6  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8088   000FB8  CFF3 F085          	movff	prodl,___flmul@temp
  8089   000FBC  CFF4 F086          	movff	prodh,___flmul@temp+1
  8090                           
  8091                           ; BSR set to: 0
  8092   000FC0  5185               	movf	___flmul@temp& (0+255),w,b
  8093   000FC2  277D               	addwf	___flmul@grs& (0+255),f,b
  8094   000FC4  0E00               	movlw	0
  8095   000FC6  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8096   000FC8  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8097   000FCA  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8098                           
  8099                           ; BSR set to: 0
  8100   000FCC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8101   000FCE  2781               	addwf	___flmul@prod& (0+255),f,b
  8102   000FD0  0E00               	movlw	0
  8103   000FD2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8104   000FD4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8105   000FD6  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8106   000FD8  5172               	movf	___flmul@a& (0+255),w,b
  8107   000FDA  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8108   000FDC  CFF3 F085          	movff	prodl,___flmul@temp
  8109   000FE0  CFF4 F086          	movff	prodh,___flmul@temp+1
  8110                           
  8111                           ; BSR set to: 0
  8112   000FE4  5185               	movf	___flmul@temp& (0+255),w,b
  8113   000FE6  277D               	addwf	___flmul@grs& (0+255),f,b
  8114   000FE8  0E00               	movlw	0
  8115   000FEA  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8116   000FEC  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8117   000FEE  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8118                           
  8119                           ; BSR set to: 0
  8120   000FF0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8121   000FF2  2781               	addwf	___flmul@prod& (0+255),f,b
  8122   000FF4  0E00               	movlw	0
  8123   000FF6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8124   000FF8  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8125   000FFA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8126                           
  8127                           ; BSR set to: 0
  8128   000FFC  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
  8129   001000  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
  8130   001004  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
  8131   001008  6B7D               	clrf	___flmul@grs& (0+255),b
  8132                           
  8133                           ; BSR set to: 0
  8134   00100A  5172               	movf	___flmul@a& (0+255),w,b
  8135   00100C  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8136   00100E  CFF3 F085          	movff	prodl,___flmul@temp
  8137   001012  CFF4 F086          	movff	prodh,___flmul@temp+1
  8138                           
  8139                           ; BSR set to: 0
  8140   001016  5185               	movf	___flmul@temp& (0+255),w,b
  8141   001018  277D               	addwf	___flmul@grs& (0+255),f,b
  8142   00101A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8143   00101C  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8144   00101E  0E00               	movlw	0
  8145   001020  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8146   001022  0E00               	movlw	0
  8147   001024  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8148                           
  8149                           ; BSR set to: 0
  8150   001026  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8151   001028  036E               	mulwf	___flmul@b& (0+255),b
  8152   00102A  CFF3 F085          	movff	prodl,___flmul@temp
  8153   00102E  CFF4 F086          	movff	prodh,___flmul@temp+1
  8154                           
  8155                           ; BSR set to: 0
  8156   001032  5185               	movf	___flmul@temp& (0+255),w,b
  8157   001034  277D               	addwf	___flmul@grs& (0+255),f,b
  8158   001036  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8159   001038  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8160   00103A  0E00               	movlw	0
  8161   00103C  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8162   00103E  0E00               	movlw	0
  8163   001040  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8164                           
  8165                           ; BSR set to: 0
  8166   001042  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
  8167   001046  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
  8168   00104A  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
  8169   00104E  6B7D               	clrf	___flmul@grs& (0+255),b
  8170   001050  5172               	movf	___flmul@a& (0+255),w,b
  8171   001052  036E               	mulwf	___flmul@b& (0+255),b
  8172   001054  CFF3 F085          	movff	prodl,___flmul@temp
  8173   001058  CFF4 F086          	movff	prodh,___flmul@temp+1
  8174                           
  8175                           ; BSR set to: 0
  8176   00105C  5185               	movf	___flmul@temp& (0+255),w,b
  8177   00105E  277D               	addwf	___flmul@grs& (0+255),f,b
  8178   001060  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8179   001062  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8180   001064  0E00               	movlw	0
  8181   001066  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8182   001068  0E00               	movlw	0
  8183   00106A  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8184                           
  8185                           ; BSR set to: 0
  8186   00106C  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8187   00106E  036F               	mulwf	(___flmul@b+1)& (0+255),b
  8188   001070  CFF3 F085          	movff	prodl,___flmul@temp
  8189   001074  CFF4 F086          	movff	prodh,___flmul@temp+1
  8190   001078  5185               	movf	___flmul@temp& (0+255),w,b
  8191   00107A  2781               	addwf	___flmul@prod& (0+255),f,b
  8192   00107C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8193   00107E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8194   001080  0E00               	movlw	0
  8195   001082  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8196   001084  0E00               	movlw	0
  8197   001086  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8198                           
  8199                           ; BSR set to: 0
  8200   001088  5173               	movf	(___flmul@a+1)& (0+255),w,b
  8201   00108A  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8202   00108C  CFF3 F085          	movff	prodl,___flmul@temp
  8203   001090  CFF4 F086          	movff	prodh,___flmul@temp+1
  8204                           
  8205                           ; BSR set to: 0
  8206   001094  5185               	movf	___flmul@temp& (0+255),w,b
  8207   001096  2781               	addwf	___flmul@prod& (0+255),f,b
  8208   001098  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8209   00109A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8210   00109C  0E00               	movlw	0
  8211   00109E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8212   0010A0  0E00               	movlw	0
  8213   0010A2  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8214   0010A4  5174               	movf	(___flmul@a+2)& (0+255),w,b
  8215   0010A6  0370               	mulwf	(___flmul@b+2)& (0+255),b
  8216   0010A8  CFF3 F085          	movff	prodl,___flmul@temp
  8217   0010AC  CFF4 F086          	movff	prodh,___flmul@temp+1
  8218                           
  8219                           ; BSR set to: 0
  8220   0010B0  5185               	movf	___flmul@temp& (0+255),w,b
  8221   0010B2  6F76               	movwf	??___flmul& (0+255),b
  8222   0010B4  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8223   0010B6  6F77               	movwf	(??___flmul+1)& (0+255),b
  8224   0010B8  6B78               	clrf	(??___flmul+2)& (0+255),b
  8225   0010BA  6B79               	clrf	(??___flmul+3)& (0+255),b
  8226   0010BC  C078  F079         	movff	??___flmul+2,??___flmul+3
  8227   0010C0  C077  F078         	movff	??___flmul+1,??___flmul+2
  8228   0010C4  C076  F077         	movff	??___flmul,??___flmul+1
  8229   0010C8  6B76               	clrf	??___flmul& (0+255),b
  8230   0010CA  5176               	movf	??___flmul& (0+255),w,b
  8231   0010CC  2781               	addwf	___flmul@prod& (0+255),f,b
  8232   0010CE  5177               	movf	(??___flmul+1)& (0+255),w,b
  8233   0010D0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8234   0010D2  5178               	movf	(??___flmul+2)& (0+255),w,b
  8235   0010D4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8236   0010D6  5179               	movf	(??___flmul+3)& (0+255),w,b
  8237   0010D8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8238                           
  8239                           ; BSR set to: 0
  8240   0010DA  5180               	movf	(___flmul@grs+3)& (0+255),w,b
  8241   0010DC  2781               	addwf	___flmul@prod& (0+255),f,b
  8242   0010DE  0E00               	movlw	0
  8243   0010E0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8244   0010E2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8245   0010E4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8246                           
  8247                           ; BSR set to: 0
  8248   0010E6  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
  8249   0010EA  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
  8250   0010EE  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
  8251   0010F2  6B7D               	clrf	___flmul@grs& (0+255),b
  8252                           
  8253                           ; BSR set to: 0
  8254   0010F4  517B               	movf	___flmul@aexp& (0+255),w,b
  8255   0010F6  C07C  F076         	movff	___flmul@bexp,??___flmul
  8256   0010FA  6B77               	clrf	(??___flmul+1)& (0+255),b
  8257   0010FC  2776               	addwf	??___flmul& (0+255),f,b
  8258   0010FE  0E00               	movlw	0
  8259   001100  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  8260   001102  0E82               	movlw	130
  8261   001104  2576               	addwf	??___flmul& (0+255),w,b
  8262   001106  6F85               	movwf	___flmul@temp& (0+255),b
  8263   001108  0EFF               	movlw	255
  8264   00110A  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  8265   00110C  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  8266   00110E  D00F               	goto	l6941
  8267   001110                     l6935:
  8268                           
  8269                           ; BSR set to: 0
  8270   001110  90D8               	bcf	status,0,c
  8271   001112  3781               	rlcf	___flmul@prod& (0+255),f,b
  8272   001114  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8273   001116  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8274   001118  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8275                           
  8276                           ; BSR set to: 0
  8277   00111A  BF80               	btfsc	(___flmul@grs+3)& (0+255),7,b
  8278                           
  8279                           ; BSR set to: 0
  8280   00111C  8181               	bsf	___flmul@prod& (0+255),0,b
  8281                           
  8282                           ; BSR set to: 0
  8283   00111E  90D8               	bcf	status,0,c
  8284   001120  377D               	rlcf	___flmul@grs& (0+255),f,b
  8285   001122  377E               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8286   001124  377F               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8287   001126  3780               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8288   001128  0785               	decf	___flmul@temp& (0+255),f,b
  8289   00112A  A0D8               	btfss	status,0,c
  8290   00112C  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  8291   00112E                     l6941:
  8292                           
  8293                           ; BSR set to: 0
  8294   00112E  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  8295   001130  D7EF               	goto	l6935
  8296                           
  8297                           ; BSR set to: 0
  8298   001132  6B7B               	clrf	___flmul@aexp& (0+255),b
  8299   001134  AF80               	btfss	(___flmul@grs+3)& (0+255),7,b
  8300   001136  D017               	goto	l970
  8301                           
  8302                           ; BSR set to: 0
  8303   001138  0EFF               	movlw	255
  8304   00113A  157D               	andwf	___flmul@grs& (0+255),w,b
  8305   00113C  6F76               	movwf	??___flmul& (0+255),b
  8306   00113E  0EFF               	movlw	255
  8307   001140  157E               	andwf	(___flmul@grs+1)& (0+255),w,b
  8308   001142  6F77               	movwf	(??___flmul+1)& (0+255),b
  8309   001144  0EFF               	movlw	255
  8310   001146  157F               	andwf	(___flmul@grs+2)& (0+255),w,b
  8311   001148  6F78               	movwf	(??___flmul+2)& (0+255),b
  8312   00114A  0E7F               	movlw	127
  8313   00114C  1580               	andwf	(___flmul@grs+3)& (0+255),w,b
  8314   00114E  6F79               	movwf	(??___flmul+3)& (0+255),b
  8315   001150  5176               	movf	??___flmul& (0+255),w,b
  8316   001152  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  8317   001154  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  8318   001156  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  8319   001158  B4D8               	btfsc	status,2,c
  8320   00115A  D003               	goto	l971
  8321   00115C                     u8570:
  8322                           
  8323                           ; BSR set to: 0
  8324   00115C  0E01               	movlw	1
  8325   00115E  6F7B               	movwf	___flmul@aexp& (0+255),b
  8326   001160  D002               	goto	l970
  8327   001162                     l971:
  8328                           
  8329                           ; BSR set to: 0
  8330   001162  B181               	btfsc	___flmul@prod& (0+255),0,b
  8331   001164  D7FB               	goto	u8570
  8332   001166                     l970:
  8333                           
  8334                           ; BSR set to: 0
  8335   001166  517B               	movf	___flmul@aexp& (0+255),w,b
  8336   001168  B4D8               	btfsc	status,2,c
  8337   00116A  D01F               	goto	l6957
  8338                           
  8339                           ; BSR set to: 0
  8340   00116C  0E01               	movlw	1
  8341   00116E  2781               	addwf	___flmul@prod& (0+255),f,b
  8342   001170  0E00               	movlw	0
  8343   001172  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8344   001174  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8345   001176  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8346                           
  8347                           ; BSR set to: 0
  8348   001178  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  8349   00117A  D017               	goto	l6957
  8350                           
  8351                           ; BSR set to: 0
  8352   00117C  C081  F076         	movff	___flmul@prod,??___flmul
  8353   001180  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  8354   001184  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  8355   001188  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  8356   00118C  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  8357   00118E  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  8358   001190  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  8359   001192  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  8360   001194  3376               	rrcf	??___flmul& (0+255),f,b
  8361   001196  C076  F081         	movff	??___flmul,___flmul@prod
  8362   00119A  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  8363   00119E  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  8364   0011A2  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  8365                           
  8366                           ; BSR set to: 0
  8367   0011A6  4B85               	infsnz	___flmul@temp& (0+255),f,b
  8368   0011A8  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  8369   0011AA                     l6957:
  8370                           
  8371                           ; BSR set to: 0
  8372   0011AA  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8373   0011AC  D00D               	goto	l6961
  8374   0011AE  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8375   0011B0  E103               	bnz	u8610
  8376   0011B2  2985               	incf	___flmul@temp& (0+255),w,b
  8377   0011B4  A0D8               	btfss	status,0,c
  8378   0011B6  D008               	goto	l6961
  8379   0011B8                     u8610:
  8380                           
  8381                           ; BSR set to: 0
  8382   0011B8  0E00               	movlw	0
  8383   0011BA  6F81               	movwf	___flmul@prod& (0+255),b
  8384   0011BC  0E00               	movlw	0
  8385   0011BE  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  8386   0011C0  0E80               	movlw	128
  8387   0011C2  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  8388   0011C4  0E7F               	movlw	127
  8389   0011C6  D01F               	goto	L19
  8390   0011C8                     l6961:
  8391                           
  8392                           ; BSR set to: 0
  8393   0011C8  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8394   0011CA  D005               	goto	u8620
  8395   0011CC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  8396   0011CE  E10D               	bnz	l978
  8397   0011D0  0585               	decf	___flmul@temp& (0+255),w,b
  8398   0011D2  B0D8               	btfsc	status,0,c
  8399   0011D4  D00A               	goto	l978
  8400   0011D6                     u8620:
  8401                           
  8402                           ; BSR set to: 0
  8403   0011D6  0E00               	movlw	0
  8404   0011D8  6F81               	movwf	___flmul@prod& (0+255),b
  8405   0011DA  0E00               	movlw	0
  8406   0011DC  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  8407   0011DE  0E00               	movlw	0
  8408   0011E0  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  8409   0011E2  0E00               	movlw	0
  8410   0011E4  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  8411                           
  8412                           ; BSR set to: 0
  8413   0011E6  6B7A               	clrf	___flmul@sign& (0+255),b
  8414   0011E8  D00F               	goto	l6975
  8415   0011EA                     l978:
  8416                           
  8417                           ; BSR set to: 0
  8418   0011EA  C085  F07C         	movff	___flmul@temp,___flmul@bexp
  8419                           
  8420                           ; BSR set to: 0
  8421   0011EE  0EFF               	movlw	255
  8422   0011F0  1781               	andwf	___flmul@prod& (0+255),f,b
  8423   0011F2  0EFF               	movlw	255
  8424   0011F4  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  8425   0011F6  0E7F               	movlw	127
  8426   0011F8  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  8427   0011FA  0E00               	movlw	0
  8428   0011FC  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  8429                           
  8430                           ; BSR set to: 0
  8431   0011FE  B17C               	btfsc	___flmul@bexp& (0+255),0,b
  8432                           
  8433                           ; BSR set to: 0
  8434   001200  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  8435                           
  8436                           ; BSR set to: 0
  8437   001202  90D8               	bcf	status,0,c
  8438   001204  317C               	rrcf	___flmul@bexp& (0+255),w,b
  8439   001206                     L19:
  8440   001206  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  8441   001208                     l6975:
  8442                           
  8443                           ; BSR set to: 0
  8444   001208  517A               	movf	___flmul@sign& (0+255),w,b
  8445   00120A  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8446                           
  8447                           ; BSR set to: 0
  8448   00120C  C081  F06E         	movff	___flmul@prod,?___flmul
  8449   001210  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  8450   001214  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  8451   001218  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  8452                           
  8453                           ; BSR set to: 0
  8454   00121C  0012               	return		;funcret
  8455   00121E                     __end_of___flmul:
  8456                           	callstack 0
  8457                           
  8458 ;; *************** function _setButtonInterrupt *****************
  8459 ;; Defined at:
  8460 ;;		line 499 in file "main.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;		None
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;		None
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  1    wreg      void 
  8467 ;; Registers used:
  8468 ;;		None
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8474 ;;      Params:         0       0       0       0
  8475 ;;      Locals:         0       0       0       0
  8476 ;;      Temps:          0       0       0       0
  8477 ;;      Totals:         0       0       0       0
  8478 ;;Total ram usage:        0 bytes
  8479 ;; Hardware stack levels used: 1
  8480 ;; Hardware stack levels required when called: 3
  8481 ;; This function calls:
  8482 ;;		Nothing
  8483 ;; This function is called by:
  8484 ;;		_main
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text33
  8489   0030D0                     __ptext33:
  8490                           	callstack 0
  8491   0030D0                     _setButtonInterrupt:
  8492                           	callstack 27
  8493                           
  8494                           ;main.c: 501:     INTCON2bits.INTEDG1 = 1;
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;incstack = 0
  8498   0030D0  8AF1               	bsf	241,5,c	;volatile
  8499                           
  8500                           ;main.c: 502:     INTCON2bits.INTEDG2 = 1;
  8501   0030D2  88F1               	bsf	241,4,c	;volatile
  8502                           
  8503                           ;main.c: 504:     INTCON3bits.INT1IE = 1;
  8504   0030D4  86F0               	bsf	240,3,c	;volatile
  8505                           
  8506                           ;main.c: 505:     INTCON3bits.INT2IE = 1;
  8507   0030D6  88F0               	bsf	240,4,c	;volatile
  8508                           
  8509                           ;main.c: 507:     INTCON3bits.INT1IP = 0;
  8510   0030D8  9CF0               	bcf	240,6,c	;volatile
  8511                           
  8512                           ;main.c: 508:     INTCON3bits.INT2IP = 0;
  8513   0030DA  9EF0               	bcf	240,7,c	;volatile
  8514                           
  8515                           ;main.c: 511:     INTCON3bits.INT1IF = 0;
  8516   0030DC  90F0               	bcf	240,0,c	;volatile
  8517                           
  8518                           ;main.c: 512:     INTCON3bits.INT2IF = 0;
  8519   0030DE  92F0               	bcf	240,1,c	;volatile
  8520   0030E0  0012               	return		;funcret
  8521   0030E2                     __end_of_setButtonInterrupt:
  8522                           	callstack 0
  8523                           
  8524 ;; *************** function _adcSampling *****************
  8525 ;; Defined at:
  8526 ;;		line 139 in file "main.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;		None
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;		None
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  1    wreg      void 
  8533 ;; Registers used:
  8534 ;;		wreg, status,2
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 3F/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8540 ;;      Params:         0       0       0       0
  8541 ;;      Locals:         0       0       0       0
  8542 ;;      Temps:          0       2       0       0
  8543 ;;      Totals:         0       2       0       0
  8544 ;;Total ram usage:        2 bytes
  8545 ;; Hardware stack levels used: 1
  8546 ;; Hardware stack levels required when called: 3
  8547 ;; This function calls:
  8548 ;;		Nothing
  8549 ;; This function is called by:
  8550 ;;		_main
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           	psect	text34
  8555   003070                     __ptext34:
  8556                           	callstack 0
  8557   003070                     _adcSampling:
  8558                           	callstack 27
  8559                           
  8560                           ;main.c: 141:     sampling = 1;
  8561                           
  8562                           ;incstack = 0
  8563   003070  0E01               	movlw	1
  8564   003072  0100               	movlb	0	; () banked
  8565   003074  6FFE               	movwf	_sampling& (0+255),b
  8566                           
  8567                           ; BSR set to: 0
  8568                           ;main.c: 144:     ADCON0bits.GO = 1;
  8569   003076  82C2               	bsf	194,1,c	;volatile
  8570   003078                     l159:
  8571   003078  B2C2               	btfsc	194,1,c	;volatile
  8572   00307A  D7FE               	goto	l159
  8573                           
  8574                           ;main.c: 148:     adcResult = ((uint16_t)ADRESH << 8) | ADRESL;
  8575   00307C  50C4               	movf	196,w,c	;volatile
  8576   00307E  0100               	movlb	0	; () banked
  8577   003080  6F60               	movwf	??_adcSampling& (0+255),b
  8578   003082  50C3               	movf	195,w,c	;volatile
  8579   003084  6FF6               	movwf	_adcResult& (0+255),b
  8580   003086  C060  F0F7         	movff	??_adcSampling,_adcResult+1
  8581                           
  8582                           ; BSR set to: 0
  8583   00308A  0012               	return		;funcret
  8584   00308C                     __end_of_adcSampling:
  8585                           	callstack 0
  8586                           
  8587 ;; *************** function ___xxtofl *****************
  8588 ;; Defined at:
  8589 ;;		line 10 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/xxtofl.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;  sign            1    wreg     unsigned char 
  8592 ;;  val             4    0[BANK0 ] long 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  sign            1    8[BANK0 ] unsigned char 
  8595 ;;  arg             4   10[BANK0 ] unsigned long 
  8596 ;;  exp             1    9[BANK0 ] unsigned char 
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  4    0[BANK0 ] unsigned char 
  8599 ;; Registers used:
  8600 ;;		wreg, status,2, status,0
  8601 ;; Tracked objects:
  8602 ;;		On entry : 3F/0
  8603 ;;		On exit  : 3F/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8606 ;;      Params:         0       4       0       0
  8607 ;;      Locals:         0       6       0       0
  8608 ;;      Temps:          0       4       0       0
  8609 ;;      Totals:         0      14       0       0
  8610 ;;Total ram usage:       14 bytes
  8611 ;; Hardware stack levels used: 1
  8612 ;; Hardware stack levels required when called: 3
  8613 ;; This function calls:
  8614 ;;		Nothing
  8615 ;; This function is called by:
  8616 ;;		_main
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           	psect	text35
  8621   00219A                     __ptext35:
  8622                           	callstack 0
  8623   00219A                     ___xxtofl:
  8624                           	callstack 27
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;incstack = 0
  8628                           ;___xxtofl@sign stored from wreg
  8629   00219A  6F68               	movwf	___xxtofl@sign& (0+255),b
  8630   00219C  0100               	movlb	0	; () banked
  8631   00219E  5168               	movf	___xxtofl@sign& (0+255),w,b
  8632   0021A0  A4D8               	btfss	status,2,c
  8633                           
  8634                           ; BSR set to: 0
  8635   0021A2  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8636   0021A4  D01A               	goto	l1002
  8637                           
  8638                           ; BSR set to: 0
  8639   0021A6  C060  F064         	movff	___xxtofl@val,??___xxtofl
  8640   0021AA  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  8641   0021AE  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  8642   0021B2  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  8643   0021B6  1F64               	comf	??___xxtofl& (0+255),f,b
  8644   0021B8  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  8645   0021BA  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  8646   0021BC  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  8647   0021BE  2B64               	incf	??___xxtofl& (0+255),f,b
  8648   0021C0  0E00               	movlw	0
  8649   0021C2  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  8650   0021C4  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  8651   0021C6  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  8652   0021C8  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  8653   0021CC  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  8654   0021D0  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  8655   0021D4  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  8656   0021D8  D008               	goto	l7769
  8657   0021DA                     l1002:
  8658                           
  8659                           ; BSR set to: 0
  8660   0021DA  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  8661   0021DE  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8662   0021E2  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8663   0021E6  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8664   0021EA                     l7769:
  8665                           
  8666                           ; BSR set to: 0
  8667   0021EA  5160               	movf	___xxtofl@val& (0+255),w,b
  8668   0021EC  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  8669   0021EE  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  8670   0021F0  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  8671   0021F2  A4D8               	btfss	status,2,c
  8672   0021F4  D009               	goto	l7775
  8673                           
  8674                           ; BSR set to: 0
  8675   0021F6  0E00               	movlw	0
  8676   0021F8  6F60               	movwf	?___xxtofl& (0+255),b
  8677   0021FA  0E00               	movlw	0
  8678   0021FC  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  8679   0021FE  0E00               	movlw	0
  8680   002200  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  8681   002202  0E00               	movlw	0
  8682   002204  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  8683   002206  0012               	return	
  8684   002208                     l7775:
  8685                           
  8686                           ; BSR set to: 0
  8687   002208  0E96               	movlw	150
  8688   00220A  6F69               	movwf	___xxtofl@exp& (0+255),b
  8689   00220C  D006               	goto	l7779
  8690   00220E                     l7777:
  8691                           
  8692                           ; BSR set to: 0
  8693   00220E  2B69               	incf	___xxtofl@exp& (0+255),f,b
  8694   002210  90D8               	bcf	status,0,c
  8695   002212  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8696   002214  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8697   002216  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8698   002218  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  8699   00221A                     l7779:
  8700                           
  8701                           ; BSR set to: 0
  8702   00221A  0E00               	movlw	0
  8703   00221C  156A               	andwf	___xxtofl@arg& (0+255),w,b
  8704   00221E  6F64               	movwf	??___xxtofl& (0+255),b
  8705   002220  0E00               	movlw	0
  8706   002222  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8707   002224  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  8708   002226  0E00               	movlw	0
  8709   002228  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8710   00222A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  8711   00222C  0EFE               	movlw	254
  8712   00222E  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8713   002230  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  8714   002232  5164               	movf	??___xxtofl& (0+255),w,b
  8715   002234  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8716   002236  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8717   002238  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8718   00223A  B4D8               	btfsc	status,2,c
  8719   00223C  D00D               	goto	l1009
  8720   00223E  D7E7               	goto	l7777
  8721   002240                     l7781:
  8722                           
  8723                           ; BSR set to: 0
  8724   002240  2B69               	incf	___xxtofl@exp& (0+255),f,b
  8725                           
  8726                           ; BSR set to: 0
  8727   002242  0E01               	movlw	1
  8728   002244  276A               	addwf	___xxtofl@arg& (0+255),f,b
  8729   002246  0E00               	movlw	0
  8730   002248  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8731   00224A  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8732   00224C  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8733                           
  8734                           ; BSR set to: 0
  8735   00224E  90D8               	bcf	status,0,c
  8736   002250  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8737   002252  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8738   002254  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8739   002256  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  8740   002258                     l1009:
  8741                           
  8742                           ; BSR set to: 0
  8743   002258  0E00               	movlw	0
  8744   00225A  156A               	andwf	___xxtofl@arg& (0+255),w,b
  8745   00225C  6F64               	movwf	??___xxtofl& (0+255),b
  8746   00225E  0E00               	movlw	0
  8747   002260  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8748   002262  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  8749   002264  0E00               	movlw	0
  8750   002266  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8751   002268  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  8752   00226A  0EFF               	movlw	255
  8753   00226C  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8754   00226E  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  8755   002270  5164               	movf	??___xxtofl& (0+255),w,b
  8756   002272  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8757   002274  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8758   002276  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8759   002278  B4D8               	btfsc	status,2,c
  8760   00227A  D007               	goto	l7789
  8761   00227C  D7E1               	goto	l7781
  8762   00227E                     l7787:
  8763                           
  8764                           ; BSR set to: 0
  8765   00227E  0769               	decf	___xxtofl@exp& (0+255),f,b
  8766   002280  90D8               	bcf	status,0,c
  8767   002282  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  8768   002284  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8769   002286  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8770   002288  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8771   00228A                     l7789:
  8772                           
  8773                           ; BSR set to: 0
  8774   00228A  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8775   00228C  D003               	goto	u9800
  8776                           
  8777                           ; BSR set to: 0
  8778   00228E  0E02               	movlw	2
  8779   002290  6169               	cpfslt	___xxtofl@exp& (0+255),b
  8780   002292  D7F5               	goto	l7787
  8781   002294                     u9800:
  8782                           
  8783                           ; BSR set to: 0
  8784   002294  A169               	btfss	___xxtofl@exp& (0+255),0,b
  8785                           
  8786                           ; BSR set to: 0
  8787   002296  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  8788                           
  8789                           ; BSR set to: 0
  8790   002298  90D8               	bcf	status,0,c
  8791   00229A  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  8792                           
  8793                           ; BSR set to: 0
  8794   00229C  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  8795   0022A0  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  8796   0022A2  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  8797   0022A4  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  8798   0022A6  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  8799   0022AA  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  8800   0022AC  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  8801   0022AE  6B64               	clrf	??___xxtofl& (0+255),b
  8802   0022B0  5164               	movf	??___xxtofl& (0+255),w,b
  8803   0022B2  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  8804   0022B4  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  8805   0022B6  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8806   0022B8  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  8807   0022BA  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8808   0022BC  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  8809   0022BE  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8810                           
  8811                           ; BSR set to: 0
  8812   0022C0  5168               	movf	___xxtofl@sign& (0+255),w,b
  8813   0022C2  A4D8               	btfss	status,2,c
  8814                           
  8815                           ; BSR set to: 0
  8816   0022C4  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  8817   0022C6  D001               	goto	l7805
  8818                           
  8819                           ; BSR set to: 0
  8820   0022C8  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8821   0022CA                     l7805:
  8822                           
  8823                           ; BSR set to: 0
  8824   0022CA  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  8825   0022CE  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  8826   0022D2  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  8827   0022D6  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  8828                           
  8829                           ; BSR set to: 0
  8830   0022DA  0012               	return		;funcret
  8831   0022DC                     __end_of___xxtofl:
  8832                           	callstack 0
  8833                           
  8834 ;; *************** function _EUSART_TransmitString *****************
  8835 ;; Defined at:
  8836 ;;		line 663 in file "main.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;  a               2    1[BANK0 ] PTR unsigned char 
  8839 ;;		 -> STR_7(3), STR_5(7), STR_4(9), STR_3(3), 
  8840 ;;		 -> uart_buffer(10), STR_1(9), 
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;  i               2    5[BANK0 ] int 
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1    wreg      void 
  8845 ;; Registers used:
  8846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8847 ;; Tracked objects:
  8848 ;;		On entry : 3F/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8852 ;;      Params:         0       2       0       0
  8853 ;;      Locals:         0       2       0       0
  8854 ;;      Temps:          0       2       0       0
  8855 ;;      Totals:         0       6       0       0
  8856 ;;Total ram usage:        6 bytes
  8857 ;; Hardware stack levels used: 1
  8858 ;; Hardware stack levels required when called: 4
  8859 ;; This function calls:
  8860 ;;		_EUSART_TransmitChar
  8861 ;; This function is called by:
  8862 ;;		_main
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           	psect	text36
  8867   002A64                     __ptext36:
  8868                           	callstack 0
  8869   002A64                     _EUSART_TransmitString:
  8870                           	callstack 26
  8871                           
  8872                           ; BSR set to: 0
  8873                           ;main.c: 664:     int i;;main.c: 665:     for( i= 0; a[i] !='\0'; i++ ){
  8874                           
  8875                           ; BSR set to: 0
  8876                           ;incstack = 0
  8877   002A64  0E00               	movlw	0
  8878   002A66  6F66               	movwf	(EUSART_TransmitString@i+1)& (0+255),b
  8879   002A68  0E00               	movlw	0
  8880   002A6A  6F65               	movwf	EUSART_TransmitString@i& (0+255),b
  8881   002A6C  D01C               	goto	l7601
  8882   002A6E                     l7597:
  8883                           
  8884                           ;main.c: 666:        EUSART_TransmitChar(a[i]);
  8885   002A6E  0100               	movlb	0	; () banked
  8886   002A70  5165               	movf	EUSART_TransmitString@i& (0+255),w,b
  8887   002A72  2561               	addwf	EUSART_TransmitString@a& (0+255),w,b
  8888   002A74  6F63               	movwf	??_EUSART_TransmitString& (0+255),b
  8889   002A76  5166               	movf	(EUSART_TransmitString@i+1)& (0+255),w,b
  8890   002A78  2162               	addwfc	(EUSART_TransmitString@a+1)& (0+255),w,b
  8891   002A7A  6F64               	movwf	(??_EUSART_TransmitString+1)& (0+255),b
  8892   002A7C  C063  FFF6         	movff	??_EUSART_TransmitString,tblptrl
  8893   002A80  C064  FFF7         	movff	??_EUSART_TransmitString+1,tblptrh
  8894   002A84  6AF8               	clrf	tblptru,c
  8895   002A86  0E02               	movlw	(high __ramtop+-1)
  8896   002A88  64F7               	cpfsgt	tblptrh,c
  8897   002A8A  D003               	bra	u9607
  8898   002A8C  0008               	tblrd		*
  8899   002A8E  50F5               	movf	tablat,w,c
  8900   002A90  D005               	bra	u9600
  8901   002A92                     u9607:
  8902   002A92  CFF6 FFE1          	movff	tblptrl,fsr1l
  8903   002A96  CFF7 FFE2          	movff	tblptrh,fsr1h
  8904   002A9A  50E7               	movf	indf1,w,c
  8905   002A9C                     u9600:
  8906   002A9C  EC7A  F018         	call	_EUSART_TransmitChar
  8907                           
  8908                           ;main.c: 667:     }
  8909   002AA0  0100               	movlb	0	; () banked
  8910   002AA2  4B65               	infsnz	EUSART_TransmitString@i& (0+255),f,b
  8911   002AA4  2B66               	incf	(EUSART_TransmitString@i+1)& (0+255),f,b
  8912   002AA6                     l7601:
  8913                           
  8914                           ; BSR set to: 0
  8915   002AA6  5165               	movf	EUSART_TransmitString@i& (0+255),w,b
  8916   002AA8  2561               	addwf	EUSART_TransmitString@a& (0+255),w,b
  8917   002AAA  6F63               	movwf	??_EUSART_TransmitString& (0+255),b
  8918   002AAC  5166               	movf	(EUSART_TransmitString@i+1)& (0+255),w,b
  8919   002AAE  2162               	addwfc	(EUSART_TransmitString@a+1)& (0+255),w,b
  8920   002AB0  6F64               	movwf	(??_EUSART_TransmitString+1)& (0+255),b
  8921   002AB2  C063  FFF6         	movff	??_EUSART_TransmitString,tblptrl
  8922   002AB6  C064  FFF7         	movff	??_EUSART_TransmitString+1,tblptrh
  8923   002ABA  6AF8               	clrf	tblptru,c
  8924   002ABC  0E02               	movlw	(high __ramtop+-1)
  8925   002ABE  64F7               	cpfsgt	tblptrh,c
  8926   002AC0  D003               	bra	u9617
  8927   002AC2  0008               	tblrd		*
  8928   002AC4  50F5               	movf	tablat,w,c
  8929   002AC6  D005               	bra	u9610
  8930   002AC8                     u9617:
  8931   002AC8  CFF6 FFE1          	movff	tblptrl,fsr1l
  8932   002ACC  CFF7 FFE2          	movff	tblptrh,fsr1h
  8933   002AD0  50E7               	movf	indf1,w,c
  8934   002AD2                     u9610:
  8935   002AD2  0900               	iorlw	0
  8936   002AD4  B4D8               	btfsc	status,2,c
  8937   002AD6  0012               	return	
  8938   002AD8  D7CA               	goto	l7597
  8939   002ADA                     __end_of_EUSART_TransmitString:
  8940                           	callstack 0
  8941                           
  8942 ;; *************** function _EUSART_TransmitChar *****************
  8943 ;; Defined at:
  8944 ;;		line 658 in file "main.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;  data            1    wreg     unsigned char 
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;  data            1    0[BANK0 ] unsigned char 
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  1    wreg      void 
  8951 ;; Registers used:
  8952 ;;		wreg
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8958 ;;      Params:         0       0       0       0
  8959 ;;      Locals:         0       1       0       0
  8960 ;;      Temps:          0       0       0       0
  8961 ;;      Totals:         0       1       0       0
  8962 ;;Total ram usage:        1 bytes
  8963 ;; Hardware stack levels used: 1
  8964 ;; Hardware stack levels required when called: 3
  8965 ;; This function calls:
  8966 ;;		Nothing
  8967 ;; This function is called by:
  8968 ;;		_EUSART_TransmitString
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text37
  8973   0030F4                     __ptext37:
  8974                           	callstack 0
  8975   0030F4                     _EUSART_TransmitChar:
  8976                           	callstack 26
  8977                           
  8978                           ;incstack = 0
  8979                           ;EUSART_TransmitChar@data stored from wreg
  8980   0030F4  0100               	movlb	0	; () banked
  8981   0030F6  6F60               	movwf	EUSART_TransmitChar@data& (0+255),b
  8982   0030F8                     
  8983                           ;main.c: 659:     while (!TXSTAbits.TRMT);
  8984   0030F8  A2AC               	btfss	172,1,c	;volatile
  8985   0030FA  D7FE               	goto	l7537
  8986                           
  8987                           ;main.c: 660:     TXREG = data;
  8988   0030FC  C060  FFAD         	movff	EUSART_TransmitChar@data,4013	;volatile
  8989   003100  0012               	return		;funcret
  8990   003102                     __end_of_EUSART_TransmitChar:
  8991                           	callstack 0
  8992                           
  8993 ;; *************** function _EEPROMWrite *****************
  8994 ;; Defined at:
  8995 ;;		line 598 in file "main.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;  address         2    2[BANK0 ] unsigned short 
  8998 ;;  data            1    4[BANK0 ] unsigned char 
  8999 ;; Auto vars:     Size  Location     Type
  9000 ;;		None
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  1    wreg      void 
  9003 ;; Registers used:
  9004 ;;		wreg, status,2, cstack
  9005 ;; Tracked objects:
  9006 ;;		On entry : 3E/1
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9010 ;;      Params:         0       3       0       0
  9011 ;;      Locals:         0       0       0       0
  9012 ;;      Temps:          0       1       0       0
  9013 ;;      Totals:         0       4       0       0
  9014 ;;Total ram usage:        4 bytes
  9015 ;; Hardware stack levels used: 1
  9016 ;; Hardware stack levels required when called: 4
  9017 ;; This function calls:
  9018 ;;		_I2CStart
  9019 ;;		_I2CStop
  9020 ;;		_I2CWrite
  9021 ;;		_getHighByte
  9022 ;;		_getLowByte
  9023 ;; This function is called by:
  9024 ;;		_main
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           	psect	text38
  9029   002C48                     __ptext38:
  9030                           	callstack 0
  9031   002C48                     _EEPROMWrite:
  9032                           	callstack 26
  9033                           
  9034                           ;main.c: 599:     I2CStart();
  9035                           
  9036                           ;incstack = 0
  9037   002C48  EC91  F018         	call	_I2CStart	;wreg free
  9038                           
  9039                           ;main.c: 600:     I2CWrite(0b10100000);
  9040   002C4C  0EA0               	movlw	160
  9041   002C4E  EC71  F018         	call	_I2CWrite
  9042                           
  9043                           ;main.c: 602:     address_low_byte = getLowByte(address);
  9044   002C52  C062  F060         	movff	EEPROMWrite@address,getLowByte@number
  9045   002C56  C063  F061         	movff	EEPROMWrite@address+1,getLowByte@number+1
  9046   002C5A  EC99  F018         	call	_getLowByte	;wreg free
  9047   002C5E  6E3D               	movwf	_address_low_byte^0,c
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;main.c: 603:     address_high_byte = getHighByte(address);
  9051   002C60  C062  F060         	movff	EEPROMWrite@address,getHighByte@number
  9052   002C64  C063  F061         	movff	EEPROMWrite@address+1,getHighByte@number+1
  9053   002C68  EC9E  F018         	call	_getHighByte	;wreg free
  9054   002C6C  6E3C               	movwf	_address_high_byte^0,c
  9055                           
  9056                           ; BSR set to: 0
  9057                           ;main.c: 605:     I2CWrite(address_low_byte);
  9058   002C6E  503D               	movf	_address_low_byte^0,w,c
  9059   002C70  EC71  F018         	call	_I2CWrite
  9060                           
  9061                           ;main.c: 606:     I2CWrite(address_high_byte);
  9062   002C74  503C               	movf	_address_high_byte^0,w,c
  9063   002C76  EC71  F018         	call	_I2CWrite
  9064                           
  9065                           ;main.c: 607:     I2CWrite(data);
  9066   002C7A  0100               	movlb	0	; () banked
  9067   002C7C  5164               	movf	EEPROMWrite@data& (0+255),w,b
  9068   002C7E  EC71  F018         	call	_I2CWrite
  9069                           
  9070                           ;main.c: 608:     I2CStop();
  9071   002C82  EC8D  F018         	call	_I2CStop	;wreg free
  9072                           
  9073                           ;main.c: 610:     _delay((unsigned long)((5)*(2000000/4000.0)));
  9074   002C86  0E04               	movlw	4
  9075   002C88  0100               	movlb	0	; () banked
  9076   002C8A  6F65               	movwf	??_EEPROMWrite& (0+255),b
  9077   002C8C  0E3D               	movlw	61
  9078   002C8E                     u10047:
  9079   002C8E  2EE8               	decfsz	wreg,f,c
  9080   002C90  D7FE               	bra	u10047
  9081   002C92  2F65               	decfsz	??_EEPROMWrite& (0+255),f,b
  9082   002C94  D7FC               	bra	u10047
  9083   002C96  D000               	nop2	
  9084   002C98  0012               	return		;funcret
  9085   002C9A                     __end_of_EEPROMWrite:
  9086                           	callstack 0
  9087                           
  9088 ;; *************** function _EEPROMRead *****************
  9089 ;; Defined at:
  9090 ;;		line 613 in file "main.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  address         2    2[BANK0 ] unsigned short 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  data            1    4[BANK0 ] unsigned char 
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  1    wreg      unsigned char 
  9097 ;; Registers used:
  9098 ;;		wreg, status,2, cstack
  9099 ;; Tracked objects:
  9100 ;;		On entry : 3F/0
  9101 ;;		On exit  : 3F/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9104 ;;      Params:         0       2       0       0
  9105 ;;      Locals:         0       1       0       0
  9106 ;;      Temps:          0       0       0       0
  9107 ;;      Totals:         0       3       0       0
  9108 ;;Total ram usage:        3 bytes
  9109 ;; Hardware stack levels used: 1
  9110 ;; Hardware stack levels required when called: 4
  9111 ;; This function calls:
  9112 ;;		_I2CRead
  9113 ;;		_I2CRestart
  9114 ;;		_I2CStart
  9115 ;;		_I2CStop
  9116 ;;		_I2CWrite
  9117 ;;		_getHighByte
  9118 ;;		_getLowByte
  9119 ;; This function is called by:
  9120 ;;		_main
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           	psect	text39
  9125   002CEC                     __ptext39:
  9126                           	callstack 0
  9127   002CEC                     _EEPROMRead:
  9128                           	callstack 26
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;main.c: 614:     uint8_t data;;main.c: 616:     address_low_byte = getLowByte(address);
  9132                           
  9133                           ;incstack = 0
  9134   002CEC  C062  F060         	movff	EEPROMRead@address,getLowByte@number
  9135   002CF0  C063  F061         	movff	EEPROMRead@address+1,getLowByte@number+1
  9136   002CF4  EC99  F018         	call	_getLowByte	;wreg free
  9137   002CF8  6E3D               	movwf	_address_low_byte^0,c
  9138                           
  9139                           ;main.c: 617:     address_high_byte = getHighByte(address);
  9140   002CFA  C062  F060         	movff	EEPROMRead@address,getHighByte@number
  9141   002CFE  C063  F061         	movff	EEPROMRead@address+1,getHighByte@number+1
  9142   002D02  EC9E  F018         	call	_getHighByte	;wreg free
  9143   002D06  6E3C               	movwf	_address_high_byte^0,c
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;main.c: 619:     I2CStart();
  9147   002D08  EC91  F018         	call	_I2CStart	;wreg free
  9148                           
  9149                           ;main.c: 620:     I2CWrite(0b10100000);
  9150   002D0C  0EA0               	movlw	160
  9151   002D0E  EC71  F018         	call	_I2CWrite
  9152                           
  9153                           ;main.c: 621:     I2CWrite(address_low_byte);
  9154   002D12  503D               	movf	_address_low_byte^0,w,c
  9155   002D14  EC71  F018         	call	_I2CWrite
  9156                           
  9157                           ;main.c: 622:     I2CWrite(address_high_byte);
  9158   002D18  503C               	movf	_address_high_byte^0,w,c
  9159   002D1A  EC71  F018         	call	_I2CWrite
  9160                           
  9161                           ;main.c: 623:     I2CRestart();
  9162   002D1E  EC95  F018         	call	_I2CRestart	;wreg free
  9163                           
  9164                           ;main.c: 624:     I2CWrite(0b10100000 | 1);
  9165   002D22  0EA1               	movlw	161
  9166   002D24  EC71  F018         	call	_I2CWrite
  9167                           
  9168                           ;main.c: 625:     data = I2CRead(1);
  9169   002D28  0E01               	movlw	1
  9170   002D2A  EC16  F018         	call	_I2CRead
  9171   002D2E  0100               	movlb	0	; () banked
  9172   002D30  6F64               	movwf	EEPROMRead@data& (0+255),b
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;main.c: 626:     I2CStop();
  9176   002D32  EC8D  F018         	call	_I2CStop	;wreg free
  9177                           
  9178                           ;main.c: 627:     return data;
  9179   002D36  0100               	movlb	0	; () banked
  9180   002D38  5164               	movf	EEPROMRead@data& (0+255),w,b
  9181                           
  9182                           ; BSR set to: 0
  9183   002D3A  0012               	return		;funcret
  9184   002D3C                     __end_of_EEPROMRead:
  9185                           	callstack 0
  9186                           
  9187 ;; *************** function _getLowByte *****************
  9188 ;; Defined at:
  9189 ;;		line 131 in file "main.c"
  9190 ;; Parameters:    Size  Location     Type
  9191 ;;  number          2    0[BANK0 ] unsigned short 
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;		None
  9194 ;; Return value:  Size  Location     Type
  9195 ;;                  1    wreg      unsigned char 
  9196 ;; Registers used:
  9197 ;;		wreg, status,2
  9198 ;; Tracked objects:
  9199 ;;		On entry : 0/0
  9200 ;;		On exit  : 3F/0
  9201 ;;		Unchanged: 0/0
  9202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9203 ;;      Params:         0       2       0       0
  9204 ;;      Locals:         0       0       0       0
  9205 ;;      Temps:          0       0       0       0
  9206 ;;      Totals:         0       2       0       0
  9207 ;;Total ram usage:        2 bytes
  9208 ;; Hardware stack levels used: 1
  9209 ;; Hardware stack levels required when called: 3
  9210 ;; This function calls:
  9211 ;;		Nothing
  9212 ;; This function is called by:
  9213 ;;		_main
  9214 ;;		_EEPROMWrite
  9215 ;;		_EEPROMRead
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text40
  9220   003132                     __ptext40:
  9221                           	callstack 0
  9222   003132                     _getLowByte:
  9223                           	callstack 27
  9224                           
  9225                           ;main.c: 132:     return ( number & 0xFF);
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;incstack = 0
  9229   003132  0100               	movlb	0	; () banked
  9230   003134  5160               	movf	getLowByte@number& (0+255),w,b
  9231                           
  9232                           ; BSR set to: 0
  9233   003136  0012               	return		;funcret
  9234   003138                     __end_of_getLowByte:
  9235                           	callstack 0
  9236                           
  9237 ;; *************** function _getHighByte *****************
  9238 ;; Defined at:
  9239 ;;		line 135 in file "main.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;  number          2    0[BANK0 ] unsigned short 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;		None
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      unsigned char 
  9246 ;; Registers used:
  9247 ;;		wreg, status,2
  9248 ;; Tracked objects:
  9249 ;;		On entry : 3F/0
  9250 ;;		On exit  : 3F/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9253 ;;      Params:         0       2       0       0
  9254 ;;      Locals:         0       0       0       0
  9255 ;;      Temps:          0       0       0       0
  9256 ;;      Totals:         0       2       0       0
  9257 ;;Total ram usage:        2 bytes
  9258 ;; Hardware stack levels used: 1
  9259 ;; Hardware stack levels required when called: 3
  9260 ;; This function calls:
  9261 ;;		Nothing
  9262 ;; This function is called by:
  9263 ;;		_main
  9264 ;;		_EEPROMWrite
  9265 ;;		_EEPROMRead
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           	psect	text41
  9270   00313C                     __ptext41:
  9271                           	callstack 0
  9272   00313C                     _getHighByte:
  9273                           	callstack 27
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;main.c: 136:     return ((number >> 8) & 0xFF);
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;incstack = 0
  9280   00313C  5161               	movf	(getHighByte@number+1)& (0+255),w,b
  9281                           
  9282                           ; BSR set to: 0
  9283   00313E  0012               	return		;funcret
  9284   003140                     __end_of_getHighByte:
  9285                           	callstack 0
  9286                           
  9287 ;; *************** function _I2CWrite *****************
  9288 ;; Defined at:
  9289 ;;		line 581 in file "main.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;  data            1    wreg     unsigned char 
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;  data            1    0[BANK0 ] unsigned char 
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  1    wreg      void 
  9296 ;; Registers used:
  9297 ;;		wreg
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/1
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9303 ;;      Params:         0       0       0       0
  9304 ;;      Locals:         0       1       0       0
  9305 ;;      Temps:          0       0       0       0
  9306 ;;      Totals:         0       1       0       0
  9307 ;;Total ram usage:        1 bytes
  9308 ;; Hardware stack levels used: 1
  9309 ;; Hardware stack levels required when called: 3
  9310 ;; This function calls:
  9311 ;;		Nothing
  9312 ;; This function is called by:
  9313 ;;		_EEPROMWrite
  9314 ;;		_EEPROMRead
  9315 ;; This function uses a non-reentrant model
  9316 ;;
  9317                           
  9318                           	psect	text42
  9319   0030E2                     __ptext42:
  9320                           	callstack 0
  9321   0030E2                     _I2CWrite:
  9322                           	callstack 26
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;incstack = 0
  9326                           ;I2CWrite@data stored from wreg
  9327   0030E2  0100               	movlb	0	; () banked
  9328   0030E4  6F60               	movwf	I2CWrite@data& (0+255),b
  9329                           
  9330                           ;main.c: 582:     SSPBUF = data;
  9331   0030E6  C060  FFC9         	movff	I2CWrite@data,4041	;volatile
  9332   0030EA                     l283:
  9333   0030EA  B0C7               	btfsc	199,0,c	;volatile
  9334   0030EC  D7FE               	goto	l283
  9335   0030EE                     u9460:
  9336   0030EE  ACC5               	btfss	197,6,c	;volatile
  9337   0030F0  0012               	return	
  9338   0030F2  D7FD               	goto	u9460
  9339   0030F4                     __end_of_I2CWrite:
  9340                           	callstack 0
  9341                           
  9342 ;; *************** function _I2CStop *****************
  9343 ;; Defined at:
  9344 ;;		line 571 in file "main.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;		None
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;		None
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  1    wreg      void 
  9351 ;; Registers used:
  9352 ;;		None
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9358 ;;      Params:         0       0       0       0
  9359 ;;      Locals:         0       0       0       0
  9360 ;;      Temps:          0       0       0       0
  9361 ;;      Totals:         0       0       0       0
  9362 ;;Total ram usage:        0 bytes
  9363 ;; Hardware stack levels used: 1
  9364 ;; Hardware stack levels required when called: 3
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_EEPROMWrite
  9369 ;;		_EEPROMRead
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           	psect	text43
  9374   00311A                     __ptext43:
  9375                           	callstack 0
  9376   00311A                     _I2CStop:
  9377                           	callstack 26
  9378                           
  9379                           ;main.c: 572:     SSPCON2bits.PEN = 1;
  9380                           
  9381                           ;incstack = 0
  9382   00311A  84C5               	bsf	197,2,c	;volatile
  9383   00311C                     l271:
  9384   00311C  A4C5               	btfss	197,2,c	;volatile
  9385   00311E  0012               	return	
  9386   003120  D7FD               	goto	l271
  9387   003122                     __end_of_I2CStop:
  9388                           	callstack 0
  9389                           
  9390 ;; *************** function _I2CStart *****************
  9391 ;; Defined at:
  9392 ;;		line 566 in file "main.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;		None
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;		None
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  1    wreg      void 
  9399 ;; Registers used:
  9400 ;;		None
  9401 ;; Tracked objects:
  9402 ;;		On entry : 3E/1
  9403 ;;		On exit  : 3E/0
  9404 ;;		Unchanged: 3E/0
  9405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9406 ;;      Params:         0       0       0       0
  9407 ;;      Locals:         0       0       0       0
  9408 ;;      Temps:          0       0       0       0
  9409 ;;      Totals:         0       0       0       0
  9410 ;;Total ram usage:        0 bytes
  9411 ;; Hardware stack levels used: 1
  9412 ;; Hardware stack levels required when called: 3
  9413 ;; This function calls:
  9414 ;;		Nothing
  9415 ;; This function is called by:
  9416 ;;		_EEPROMWrite
  9417 ;;		_EEPROMRead
  9418 ;; This function uses a non-reentrant model
  9419 ;;
  9420                           
  9421                           	psect	text44
  9422   003122                     __ptext44:
  9423                           	callstack 0
  9424   003122                     _I2CStart:
  9425                           	callstack 26
  9426                           
  9427                           ;main.c: 567:     SSPCON2bits.SEN = 1;
  9428                           
  9429                           ;incstack = 0
  9430   003122  80C5               	bsf	197,0,c	;volatile
  9431   003124                     l265:
  9432   003124  A0C5               	btfss	197,0,c	;volatile
  9433   003126  0012               	return	
  9434   003128  D7FD               	goto	l265
  9435   00312A                     __end_of_I2CStart:
  9436                           	callstack 0
  9437                           
  9438 ;; *************** function _I2CRestart *****************
  9439 ;; Defined at:
  9440 ;;		line 576 in file "main.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;		None
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;		None
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      void 
  9447 ;; Registers used:
  9448 ;;		None
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9454 ;;      Params:         0       0       0       0
  9455 ;;      Locals:         0       0       0       0
  9456 ;;      Temps:          0       0       0       0
  9457 ;;      Totals:         0       0       0       0
  9458 ;;Total ram usage:        0 bytes
  9459 ;; Hardware stack levels used: 1
  9460 ;; Hardware stack levels required when called: 3
  9461 ;; This function calls:
  9462 ;;		Nothing
  9463 ;; This function is called by:
  9464 ;;		_EEPROMRead
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           	psect	text45
  9469   00312A                     __ptext45:
  9470                           	callstack 0
  9471   00312A                     _I2CRestart:
  9472                           	callstack 26
  9473                           
  9474                           ;main.c: 577:     SSPCON2bits.RSEN = 1;
  9475                           
  9476                           ;incstack = 0
  9477   00312A  82C5               	bsf	197,1,c	;volatile
  9478   00312C                     l277:
  9479   00312C  A2C5               	btfss	197,1,c	;volatile
  9480   00312E  0012               	return	
  9481   003130  D7FD               	goto	l277
  9482   003132                     __end_of_I2CRestart:
  9483                           	callstack 0
  9484                           
  9485 ;; *************** function _I2CRead *****************
  9486 ;; Defined at:
  9487 ;;		line 587 in file "main.c"
  9488 ;; Parameters:    Size  Location     Type
  9489 ;;  ack             1    wreg     unsigned char 
  9490 ;; Auto vars:     Size  Location     Type
  9491 ;;  ack             1    0[BANK0 ] unsigned char 
  9492 ;; Return value:  Size  Location     Type
  9493 ;;                  1    wreg      unsigned char 
  9494 ;; Registers used:
  9495 ;;		wreg, status,2
  9496 ;; Tracked objects:
  9497 ;;		On entry : 0/0
  9498 ;;		On exit  : 0/0
  9499 ;;		Unchanged: 0/0
  9500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9501 ;;      Params:         0       0       0       0
  9502 ;;      Locals:         0       1       0       0
  9503 ;;      Temps:          0       0       0       0
  9504 ;;      Totals:         0       1       0       0
  9505 ;;Total ram usage:        1 bytes
  9506 ;; Hardware stack levels used: 1
  9507 ;; Hardware stack levels required when called: 3
  9508 ;; This function calls:
  9509 ;;		Nothing
  9510 ;; This function is called by:
  9511 ;;		_EEPROMRead
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           	psect	text46
  9516   00302C                     __ptext46:
  9517                           	callstack 0
  9518   00302C                     _I2CRead:
  9519                           	callstack 26
  9520                           
  9521                           ;incstack = 0
  9522                           ;I2CRead@ack stored from wreg
  9523   00302C  0100               	movlb	0	; () banked
  9524   00302E  6F60               	movwf	I2CRead@ack& (0+255),b
  9525                           
  9526                           ;main.c: 588:     SSPCON2bits.RCEN = 1;
  9527   003030  86C5               	bsf	197,3,c	;volatile
  9528   003032                     l292:
  9529   003032  A0C7               	btfss	199,0,c	;volatile
  9530   003034  D7FE               	goto	l292
  9531                           
  9532                           ;main.c: 590:     received_data = SSPBUF;
  9533   003036  CFC9 F03E          	movff	4041,_received_data	;volatile
  9534                           
  9535                           ;main.c: 592:     SSPCON2bits.ACKDT = ack;
  9536   00303A  0100               	movlb	0	; () banked
  9537   00303C  B160               	btfsc	I2CRead@ack& (0+255),0,b
  9538   00303E  D002               	bra	u9495
  9539   003040  9AC5               	bcf	197,5,c	;volatile
  9540   003042  D001               	bra	u9496
  9541   003044                     u9495:
  9542   003044  8AC5               	bsf	197,5,c	;volatile
  9543   003046                     u9496:
  9544                           
  9545                           ;main.c: 593:     SSPCON2bits.ACKEN = 1;
  9546   003046  88C5               	bsf	197,4,c	;volatile
  9547   003048                     l295:
  9548   003048  B8C5               	btfsc	197,4,c	;volatile
  9549   00304A  D7FE               	goto	l295
  9550                           
  9551                           ;main.c: 595:     return received_data;
  9552   00304C  503E               	movf	_received_data^0,w,c
  9553   00304E  0012               	return		;funcret
  9554   003050                     __end_of_I2CRead:
  9555                           	callstack 0
  9556                           
  9557 ;; *************** function _ISR *****************
  9558 ;; Defined at:
  9559 ;;		line 177 in file "main.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;		None
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;		None
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  1    wreg      void 
  9566 ;; Registers used:
  9567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9573 ;;      Params:         0       0       0       0
  9574 ;;      Locals:         0       0       0       0
  9575 ;;      Temps:          8       0       0       0
  9576 ;;      Totals:         8       0       0       0
  9577 ;;Total ram usage:        8 bytes
  9578 ;; Hardware stack levels used: 1
  9579 ;; Hardware stack levels required when called: 2
  9580 ;; This function calls:
  9581 ;;		i2_EUSART_TransmitString
  9582 ;;		i2_adcSampling
  9583 ;;		i2_setDisplayDigits
  9584 ;;		i2_show7Segment
  9585 ;; This function is called by:
  9586 ;;		Interrupt level 2
  9587 ;; This function uses a non-reentrant model
  9588 ;;
  9589                           
  9590                           	psect	intcode
  9591   000008                     __pintcode:
  9592                           	callstack 0
  9593   000008                     _ISR:
  9594                           	callstack 20
  9595                           
  9596                           ;incstack = 0
  9597   000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9598   00000A  CFE1 F024          	movff	fsr1l,??_ISR
  9599   00000E  CFE2 F025          	movff	fsr1h,??_ISR+1
  9600   000012  CFF3 F026          	movff	prodl,??_ISR+2
  9601   000016  CFF4 F027          	movff	prodh,??_ISR+3
  9602   00001A  CFF6 F028          	movff	tblptrl,??_ISR+4
  9603   00001E  CFF7 F029          	movff	tblptrh,??_ISR+5
  9604   000022  CFF8 F02A          	movff	tblptru,??_ISR+6
  9605   000026  CFF5 F02B          	movff	tablat,??_ISR+7
  9606                           
  9607                           ;main.c: 179:     if ( PIR1bits.TMR1IF) {
  9608   00002A  A09E               	btfss	158,0,c	;volatile
  9609   00002C  D019               	goto	i2l4809
  9610                           
  9611                           ;main.c: 180:         PIR1bits.TMR1IF = 0;
  9612   00002E  909E               	bcf	158,0,c	;volatile
  9613                           
  9614                           ;main.c: 182:         TMR1 = 0;
  9615   000030  0E00               	movlw	0
  9616   000032  6ECF               	movwf	207,c	;volatile
  9617   000034  0E00               	movlw	0
  9618   000036  6ECE               	movwf	206,c	;volatile
  9619                           
  9620                           ;main.c: 184:         if (fsm_state == 1 || fsm_state == 2 ) {
  9621   000038  0100               	movlb	0	; () banked
  9622   00003A  05F9               	decf	_fsm_state& (0+255),w,b
  9623   00003C  B4D8               	btfsc	status,2,c
  9624   00003E  D004               	goto	i2u540_40
  9625                           
  9626                           ; BSR set to: 0
  9627   000040  0E02               	movlw	2
  9628   000042  19F9               	xorwf	_fsm_state& (0+255),w,b
  9629   000044  A4D8               	btfss	status,2,c
  9630   000046  D008               	goto	i2l4805
  9631   000048                     i2u540_40:
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;main.c: 186:             overflowCount++;
  9635   000048  2A3F               	incf	_overflowCount^0,f,c
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;main.c: 188:             if (overflowCount >= 57) {
  9639   00004A  0E38               	movlw	56
  9640   00004C  643F               	cpfsgt	_overflowCount^0,c
  9641   00004E  D008               	goto	i2l4809
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;main.c: 189:                 overflowCount = 0;
  9645   000050  6A3F               	clrf	_overflowCount^0,c
  9646                           
  9647                           ; BSR set to: 0
  9648                           ;main.c: 192:                 adcSampling();
  9649   000052  EC53  F018         	call	i2_adcSampling	;wreg free
  9650   000056  D004               	goto	i2l4809
  9651   000058                     i2l4805:
  9652                           
  9653                           ; BSR set to: 0
  9654   000058  0E07               	movlw	7
  9655   00005A  19F9               	xorwf	_fsm_state& (0+255),w,b
  9656   00005C  B4D8               	btfsc	status,2,c
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;main.c: 197:             LATAbits.LA5 ^= 1;
  9660   00005E  7A89               	btg	137,5,c	;volatile
  9661   000060                     i2l4809:
  9662                           
  9663                           ;main.c: 202:     if ( INTCON3bits.INT1IF || INTCON3bits.INT2IF ) {
  9664   000060  B0F0               	btfsc	240,0,c	;volatile
  9665   000062  D002               	goto	i2u544_40
  9666   000064  A2F0               	btfss	240,1,c	;volatile
  9667   000066  D089               	goto	i2l200
  9668   000068                     i2u544_40:
  9669                           
  9670                           ;main.c: 204:         button_counter++;
  9671   000068  4A2C               	infsnz	_button_counter^0,f,c
  9672   00006A  2A2D               	incf	(_button_counter+1)^0,f,c
  9673                           
  9674                           ;main.c: 206:         if( INTCON3bits.INT2IF && button_counter > 800 ){
  9675   00006C  A2F0               	btfss	240,1,c	;volatile
  9676   00006E  D051               	goto	i2l177
  9677   000070  0E21               	movlw	33
  9678   000072  5C2C               	subwf	_button_counter^0,w,c
  9679   000074  0E03               	movlw	3
  9680   000076  582D               	subwfb	(_button_counter+1)^0,w,c
  9681   000078  A0D8               	btfss	status,0,c
  9682   00007A  D04B               	goto	i2l177
  9683                           
  9684                           ;main.c: 208:             INTCON3bits.INT2IF = 0;
  9685   00007C  92F0               	bcf	240,1,c	;volatile
  9686                           
  9687                           ;main.c: 210:             displayAddress = 1;
  9688   00007E  0E01               	movlw	1
  9689   000080  6E35               	movwf	_displayAddress^0,c
  9690                           
  9691                           ;main.c: 212:             displaySample = 1;
  9692   000082  0E01               	movlw	1
  9693   000084  6E34               	movwf	_displaySample^0,c
  9694                           
  9695                           ;main.c: 213:             button_counter = 0;
  9696   000086  0E00               	movlw	0
  9697   000088  6E2D               	movwf	(_button_counter+1)^0,c
  9698   00008A  0E00               	movlw	0
  9699   00008C  6E2C               	movwf	_button_counter^0,c
  9700                           
  9701                           ;main.c: 215:             switch(fsm_state){
  9702   00008E  D026               	goto	i2l4837
  9703   000090                     i2l4823:
  9704                           
  9705                           ; BSR set to: 0
  9706                           ;main.c: 217:                     fsm_state = 1;
  9707   000090  0E01               	movlw	1
  9708   000092  6FF9               	movwf	_fsm_state& (0+255),b
  9709                           
  9710                           ;main.c: 218:                     address_index = 0;
  9711   000094  0E00               	movlw	0
  9712   000096  6FF3               	movwf	(_address_index+1)& (0+255),b
  9713   000098  0E00               	movlw	0
  9714   00009A  6FF2               	movwf	_address_index& (0+255),b
  9715                           
  9716                           ;main.c: 219:                     if( turnOnDisplay == 0 ){
  9717   00009C  51FA               	movf	_turnOnDisplay& (0+255),w,b
  9718   00009E  A4D8               	btfss	status,2,c
  9719   0000A0  D05B               	goto	i2l4855
  9720                           
  9721                           ; BSR set to: 0
  9722                           ;main.c: 220:                         adcSampling();
  9723   0000A2  EC53  F018         	call	i2_adcSampling	;wreg free
  9724   0000A6  D058               	goto	i2l4855
  9725   0000A8                     i2l4827:
  9726                           
  9727                           ; BSR set to: 0
  9728                           ;main.c: 225:                     fsm_state = 2;
  9729   0000A8  0E02               	movlw	2
  9730   0000AA  6FF9               	movwf	_fsm_state& (0+255),b
  9731                           
  9732                           ;main.c: 226:                     address_index = 0;
  9733   0000AC  0E00               	movlw	0
  9734   0000AE  6FF3               	movwf	(_address_index+1)& (0+255),b
  9735   0000B0  0E00               	movlw	0
  9736   0000B2  6FF2               	movwf	_address_index& (0+255),b
  9737                           
  9738                           ;main.c: 227:                     break;
  9739   0000B4  D051               	goto	i2l4855
  9740   0000B6                     i2l4829:
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;main.c: 230:                     fsm_state = 3;
  9744   0000B6  0E03               	movlw	3
  9745   0000B8  6FF9               	movwf	_fsm_state& (0+255),b
  9746                           
  9747                           ;main.c: 231:                     address_index = 0;
  9748   0000BA  0E00               	movlw	0
  9749   0000BC  6FF3               	movwf	(_address_index+1)& (0+255),b
  9750   0000BE  0E00               	movlw	0
  9751   0000C0  6FF2               	movwf	_address_index& (0+255),b
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;main.c: 232:                     EUSART_TransmitString("START \r\n");
  9755   0000C2  0E01               	movlw	low STR_1
  9756   0000C4  6E02               	movwf	i2EUSART_TransmitString@a^0,c
  9757   0000C6  5002               	movf	i2EUSART_TransmitString@a^0,w,c
  9758   0000C8  A4D8               	btfss	status,2,c
  9759   0000CA  0E03               	movlw	high __smallconst
  9760   0000CC  6E03               	movwf	(i2EUSART_TransmitString@a+1)^0,c
  9761   0000CE  EC6D  F015         	call	i2_EUSART_TransmitString	;wreg free
  9762                           
  9763                           ;main.c: 233:                     break;
  9764   0000D2  D042               	goto	i2l4855
  9765   0000D4                     i2l4833:
  9766                           
  9767                           ; BSR set to: 0
  9768                           ;main.c: 236:                     fsm_state = 4;
  9769   0000D4  0E04               	movlw	4
  9770   0000D6  D033               	goto	L22
  9771   0000D8                     i2l185:
  9772                           
  9773                           ; BSR set to: 0
  9774                           ;main.c: 240:                     fsm_state = 0;
  9775   0000D8  6BF9               	clrf	_fsm_state& (0+255),b
  9776                           
  9777                           ;main.c: 241:                     break;
  9778   0000DA  D03E               	goto	i2l4855
  9779   0000DC                     i2l4837:
  9780   0000DC  0100               	movlb	0	; () banked
  9781   0000DE  51F9               	movf	_fsm_state& (0+255),w,b
  9782                           
  9783                           ; Switch size 1, requested type "simple"
  9784                           ; Number of cases is 8, Range of values is 0 to 7
  9785                           ; switch strategies available:
  9786                           ; Name         Instructions Cycles
  9787                           ; simple_byte           25    13 (average)
  9788                           ;	Chosen strategy is simple_byte
  9789   0000E0  0A00               	xorlw	0	; case 0
  9790   0000E2  B4D8               	btfsc	status,2,c
  9791   0000E4  D7D5               	goto	i2l4823
  9792   0000E6  0A01               	xorlw	1	; case 1
  9793   0000E8  B4D8               	btfsc	status,2,c
  9794   0000EA  D7DE               	goto	i2l4827
  9795   0000EC  0A03               	xorlw	3	; case 2
  9796   0000EE  B4D8               	btfsc	status,2,c
  9797   0000F0  D7E2               	goto	i2l4829
  9798   0000F2  0A01               	xorlw	1	; case 3
  9799   0000F4  B4D8               	btfsc	status,2,c
  9800   0000F6  D7EE               	goto	i2l4833
  9801   0000F8  0A07               	xorlw	7	; case 4
  9802   0000FA  B4D8               	btfsc	status,2,c
  9803   0000FC  D7ED               	goto	i2l185
  9804   0000FE  0A01               	xorlw	1	; case 5
  9805   000100  B4D8               	btfsc	status,2,c
  9806   000102  D7EA               	goto	i2l185
  9807   000104  0A03               	xorlw	3	; case 6
  9808   000106  B4D8               	btfsc	status,2,c
  9809   000108  D7E7               	goto	i2l185
  9810   00010A  0A01               	xorlw	1	; case 7
  9811   00010C  B4D8               	btfsc	status,2,c
  9812   00010E  D7E4               	goto	i2l185
  9813   000110  D023               	goto	i2l4855
  9814   000112                     i2l177:
  9815   000112  A0F0               	btfss	240,0,c	;volatile
  9816   000114  D021               	goto	i2l4855
  9817   000116  0E21               	movlw	33
  9818   000118  5C2C               	subwf	_button_counter^0,w,c
  9819   00011A  0E03               	movlw	3
  9820   00011C  582D               	subwfb	(_button_counter+1)^0,w,c
  9821   00011E  A0D8               	btfss	status,0,c
  9822   000120  D01B               	goto	i2l4855
  9823                           
  9824                           ;main.c: 260:             INTCON3bits.INT1IF = 0;
  9825   000122  90F0               	bcf	240,0,c	;volatile
  9826                           
  9827                           ;main.c: 262:             displayAddress = 0;
  9828   000124  6A35               	clrf	_displayAddress^0,c
  9829                           
  9830                           ;main.c: 263:             displaySample = 1;
  9831   000126  0E01               	movlw	1
  9832   000128  6E34               	movwf	_displaySample^0,c
  9833                           
  9834                           ;main.c: 264:             button_counter = 0;
  9835   00012A  0E00               	movlw	0
  9836   00012C  6E2D               	movwf	(_button_counter+1)^0,c
  9837   00012E  0E00               	movlw	0
  9838   000130  6E2C               	movwf	_button_counter^0,c
  9839                           
  9840                           ;main.c: 267:             switch(fsm_state){
  9841   000132  D007               	goto	i2l4853
  9842   000134                     i2l4845:
  9843                           
  9844                           ; BSR set to: 0
  9845                           ;main.c: 269:                     fsm_state = 5;
  9846   000134  0E05               	movlw	5
  9847   000136  D003               	goto	L22
  9848   000138                     i2l4847:
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;main.c: 273:                     fsm_state = 6;
  9852   000138  0E06               	movlw	6
  9853   00013A  D001               	goto	L22
  9854   00013C                     i2l4849:
  9855                           
  9856                           ; BSR set to: 0
  9857                           ;main.c: 277:                     fsm_state = 7;
  9858   00013C  0E07               	movlw	7
  9859   00013E                     L22:
  9860   00013E  6FF9               	movwf	_fsm_state& (0+255),b
  9861                           
  9862                           ;main.c: 278:                     break;
  9863   000140  D00B               	goto	i2l4855
  9864   000142                     i2l4853:
  9865   000142  0100               	movlb	0	; () banked
  9866   000144  51F9               	movf	_fsm_state& (0+255),w,b
  9867                           
  9868                           ; Switch size 1, requested type "simple"
  9869                           ; Number of cases is 3, Range of values is 4 to 6
  9870                           ; switch strategies available:
  9871                           ; Name         Instructions Cycles
  9872                           ; simple_byte           10     6 (average)
  9873                           ;	Chosen strategy is simple_byte
  9874   000146  0A04               	xorlw	4	; case 4
  9875   000148  B4D8               	btfsc	status,2,c
  9876   00014A  D7F4               	goto	i2l4845
  9877   00014C  0A01               	xorlw	1	; case 5
  9878   00014E  B4D8               	btfsc	status,2,c
  9879   000150  D7F3               	goto	i2l4847
  9880   000152  0A03               	xorlw	3	; case 6
  9881   000154  B4D8               	btfsc	status,2,c
  9882   000156  D7F2               	goto	i2l4849
  9883   000158                     i2l4855:
  9884                           
  9885                           ;main.c: 285:         if( turnOnDisplay == 1 && button_counter < 10 ){
  9886   000158  0100               	movlb	0	; () banked
  9887   00015A  05FA               	decf	_turnOnDisplay& (0+255),w,b
  9888   00015C  A4D8               	btfss	status,2,c
  9889   00015E  D00B               	goto	i2l4863
  9890                           
  9891                           ; BSR set to: 0
  9892   000160  502D               	movf	(_button_counter+1)^0,w,c
  9893   000162  E109               	bnz	i2l4863
  9894   000164  0E0A               	movlw	10
  9895   000166  5C2C               	subwf	_button_counter^0,w,c
  9896   000168  B0D8               	btfsc	status,0,c
  9897   00016A  D005               	goto	i2l4863
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;main.c: 286:             setDisplayDigits();
  9901   00016C  EC57  F00E         	call	i2_setDisplayDigits	;wreg free
  9902                           
  9903                           ;main.c: 287:             show7Segment();
  9904   000170  EC08  F017         	call	i2_show7Segment	;wreg free
  9905                           
  9906                           ;main.c: 288:         }else{
  9907   000174  D002               	goto	i2l200
  9908   000176                     i2l4863:
  9909                           
  9910                           ; BSR set to: 0
  9911                           ;main.c: 289:             turnOnDisplay = 1;
  9912   000176  0E01               	movlw	1
  9913   000178  6FFA               	movwf	_turnOnDisplay& (0+255),b
  9914   00017A                     i2l200:
  9915   00017A  C02B  FFF5         	movff	??_ISR+7,tablat
  9916   00017E  C02A  FFF8         	movff	??_ISR+6,tblptru
  9917   000182  C029  FFF7         	movff	??_ISR+5,tblptrh
  9918   000186  C028  FFF6         	movff	??_ISR+4,tblptrl
  9919   00018A  C027  FFF4         	movff	??_ISR+3,prodh
  9920   00018E  C026  FFF3         	movff	??_ISR+2,prodl
  9921   000192  C025  FFE2         	movff	??_ISR+1,fsr1h
  9922   000196  C024  FFE1         	movff	??_ISR,fsr1l
  9923   00019A  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9924   00019C  0011               	retfie		f
  9925   00019E                     __end_of_ISR:
  9926                           	callstack 0
  9927                           
  9928 ;; *************** function i2_show7Segment *****************
  9929 ;; Defined at:
  9930 ;;		line 733 in file "main.c"
  9931 ;; Parameters:    Size  Location     Type
  9932 ;;		None
  9933 ;; Auto vars:     Size  Location     Type
  9934 ;;		None
  9935 ;; Return value:  Size  Location     Type
  9936 ;;                  1    wreg      void 
  9937 ;; Registers used:
  9938 ;;		wreg, status,2, status,0, cstack
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9944 ;;      Params:         0       0       0       0
  9945 ;;      Locals:         0       0       0       0
  9946 ;;      Temps:          0       0       0       0
  9947 ;;      Totals:         0       0       0       0
  9948 ;;Total ram usage:        0 bytes
  9949 ;; Hardware stack levels used: 1
  9950 ;; Hardware stack levels required when called: 1
  9951 ;; This function calls:
  9952 ;;		i2_displayDigits
  9953 ;;		i2_get7SegmentPattern
  9954 ;; This function is called by:
  9955 ;;		_ISR
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           	psect	text48
  9960   002E10                     __ptext48:
  9961                           	callstack 0
  9962   002E10                     i2_show7Segment:
  9963                           	callstack 20
  9964                           
  9965                           ;main.c: 735:     segPattern0 = get7SegmentPattern( displayDigit0 );
  9966                           
  9967                           ;incstack = 0
  9968   002E10  5038               	movf	_displayDigit0^0,w,c
  9969   002E12  EC06  F014         	call	i2_get7SegmentPattern
  9970   002E16  6E3B               	movwf	_segPattern0^0,c
  9971                           
  9972                           ;main.c: 737:     if( displaySample == 1 && ( fsm_state == 1 || fsm_state == 2 ) ){
  9973   002E18  0434               	decf	_displaySample^0,w,c
  9974   002E1A  A4D8               	btfss	status,2,c
  9975   002E1C  D00B               	goto	i2l4781
  9976   002E1E  0100               	movlb	0	; () banked
  9977   002E20  05F9               	decf	_fsm_state& (0+255),w,b
  9978   002E22  B4D8               	btfsc	status,2,c
  9979   002E24  D004               	goto	i2u537_40
  9980                           
  9981                           ; BSR set to: 0
  9982   002E26  0E02               	movlw	2
  9983   002E28  19F9               	xorwf	_fsm_state& (0+255),w,b
  9984   002E2A  A4D8               	btfss	status,2,c
  9985   002E2C  D003               	goto	i2l4781
  9986   002E2E                     i2u537_40:
  9987                           
  9988                           ; BSR set to: 0
  9989                           ;main.c: 738:         segPattern0 = segPattern0 | 0b10000000;
  9990   002E2E  503B               	movf	_segPattern0^0,w,c
  9991   002E30  0980               	iorlw	128
  9992   002E32  6E3B               	movwf	_segPattern0^0,c
  9993   002E34                     i2l4781:
  9994                           
  9995                           ;main.c: 741:     segPattern1 = get7SegmentPattern( displayDigit1 );
  9996   002E34  5037               	movf	_displayDigit1^0,w,c
  9997   002E36  EC06  F014         	call	i2_get7SegmentPattern
  9998   002E3A  6E3A               	movwf	_segPattern1^0,c
  9999                           
 10000                           ;main.c: 742:     segPattern2 = get7SegmentPattern( displayDigit2 );
 10001   002E3C  5036               	movf	_displayDigit2^0,w,c
 10002   002E3E  EC06  F014         	call	i2_get7SegmentPattern
 10003   002E42  6E39               	movwf	_segPattern2^0,c
 10004                           
 10005                           ;main.c: 744:     displayDigits( segPattern0, segPattern1, segPattern2 );
 10006   002E44  C03A  F001         	movff	_segPattern1,i2displayDigits@digit1
 10007   002E48  C039  F002         	movff	_segPattern2,i2displayDigits@digit2
 10008   002E4C  503B               	movf	_segPattern0^0,w,c
 10009   002E4E  ECAD  F013         	call	i2_displayDigits
 10010   002E52  0012               	return		;funcret
 10011   002E54                     __end_ofi2_show7Segment:
 10012                           	callstack 0
 10013                           
 10014 ;; *************** function i2_get7SegmentPattern *****************
 10015 ;; Defined at:
 10016 ;;		line 516 in file "main.c"
 10017 ;; Parameters:    Size  Location     Type
 10018 ;;  digit           1    wreg     unsigned char 
 10019 ;; Auto vars:     Size  Location     Type
 10020 ;;  digit           1    0[COMRAM] unsigned char 
 10021 ;;  pattern         1    1[COMRAM] unsigned char 
 10022 ;; Return value:  Size  Location     Type
 10023 ;;                  1    wreg      unsigned char 
 10024 ;; Registers used:
 10025 ;;		wreg, status,2, status,0
 10026 ;; Tracked objects:
 10027 ;;		On entry : 0/0
 10028 ;;		On exit  : 0/0
 10029 ;;		Unchanged: 0/0
 10030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10031 ;;      Params:         0       0       0       0
 10032 ;;      Locals:         2       0       0       0
 10033 ;;      Temps:          0       0       0       0
 10034 ;;      Totals:         2       0       0       0
 10035 ;;Total ram usage:        2 bytes
 10036 ;; Hardware stack levels used: 1
 10037 ;; This function calls:
 10038 ;;		Nothing
 10039 ;; This function is called by:
 10040 ;;		i2_show7Segment
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           	psect	text49
 10045   00280C                     __ptext49:
 10046                           	callstack 0
 10047   00280C                     i2_get7SegmentPattern:
 10048                           	callstack 20
 10049                           
 10050                           ;incstack = 0
 10051                           ;i2get7SegmentPattern@digit stored from wreg
 10052   00280C  6E01               	movwf	i2get7SegmentPattern@digit^0,c
 10053                           
 10054                           ;main.c: 519:     uint8_t pattern;;main.c: 521:     switch (digit) {
 10055   00280E  D021               	goto	i2l4243
 10056   002810                     i2l4209:
 10057   002810  0E3F               	movlw	63
 10058   002812  D01B               	goto	L36
 10059   002814                     i2l4211:
 10060   002814  0E06               	movlw	6
 10061   002816  D019               	goto	L36
 10062   002818                     i2l4213:
 10063   002818  0E5B               	movlw	91
 10064   00281A  D017               	goto	L36
 10065   00281C                     i2l4215:
 10066   00281C  0E4F               	movlw	79
 10067   00281E  D015               	goto	L36
 10068   002820                     i2l4217:
 10069   002820  0E66               	movlw	102
 10070   002822  D013               	goto	L36
 10071   002824                     i2l4219:
 10072   002824  0E6D               	movlw	109
 10073   002826  D011               	goto	L36
 10074   002828                     i2l4221:
 10075   002828  0E7D               	movlw	125
 10076   00282A  D00F               	goto	L36
 10077   00282C                     i2l4223:
 10078   00282C  0E07               	movlw	7
 10079   00282E  D00D               	goto	L36
 10080   002830                     i2l4225:
 10081   002830  0E7F               	movlw	127
 10082   002832  D00B               	goto	L36
 10083   002834                     i2l4227:
 10084   002834  0E6F               	movlw	111
 10085   002836  D009               	goto	L36
 10086   002838                     i2l4229:
 10087   002838  0E79               	movlw	121
 10088   00283A  D007               	goto	L36
 10089   00283C                     i2l4231:
 10090   00283C  0E77               	movlw	119
 10091   00283E  D005               	goto	L36
 10092   002840                     i2l4233:
 10093   002840  0E39               	movlw	57
 10094   002842  D003               	goto	L36
 10095   002844                     i2l4237:
 10096   002844  0E38               	movlw	56
 10097   002846  D001               	goto	L36
 10098   002848                     i2l4239:
 10099   002848  0E31               	movlw	49
 10100   00284A                     L36:
 10101   00284A  6E02               	movwf	i2get7SegmentPattern@pattern^0,c
 10102   00284C  D034               	goto	i2l240
 10103   00284E                     i2l256:
 10104   00284E  6A02               	clrf	i2get7SegmentPattern@pattern^0,c
 10105   002850  D032               	goto	i2l240
 10106   002852                     i2l4243:
 10107   002852  5001               	movf	i2get7SegmentPattern@digit^0,w,c
 10108                           
 10109                           ; Switch size 1, requested type "simple"
 10110                           ; Number of cases is 16, Range of values is 0 to 114
 10111                           ; switch strategies available:
 10112                           ; Name         Instructions Cycles
 10113                           ; simple_byte           49    25 (average)
 10114                           ;	Chosen strategy is simple_byte
 10115   002854  0A00               	xorlw	0	; case 0
 10116   002856  B4D8               	btfsc	status,2,c
 10117   002858  D7DB               	goto	i2l4209
 10118   00285A  0A01               	xorlw	1	; case 1
 10119   00285C  B4D8               	btfsc	status,2,c
 10120   00285E  D7DA               	goto	i2l4211
 10121   002860  0A03               	xorlw	3	; case 2
 10122   002862  B4D8               	btfsc	status,2,c
 10123   002864  D7D9               	goto	i2l4213
 10124   002866  0A01               	xorlw	1	; case 3
 10125   002868  B4D8               	btfsc	status,2,c
 10126   00286A  D7D8               	goto	i2l4215
 10127   00286C  0A07               	xorlw	7	; case 4
 10128   00286E  B4D8               	btfsc	status,2,c
 10129   002870  D7D7               	goto	i2l4217
 10130   002872  0A01               	xorlw	1	; case 5
 10131   002874  B4D8               	btfsc	status,2,c
 10132   002876  D7D6               	goto	i2l4219
 10133   002878  0A03               	xorlw	3	; case 6
 10134   00287A  B4D8               	btfsc	status,2,c
 10135   00287C  D7D5               	goto	i2l4221
 10136   00287E  0A01               	xorlw	1	; case 7
 10137   002880  B4D8               	btfsc	status,2,c
 10138   002882  D7D4               	goto	i2l4223
 10139   002884  0A0F               	xorlw	15	; case 8
 10140   002886  B4D8               	btfsc	status,2,c
 10141   002888  D7D3               	goto	i2l4225
 10142   00288A  0A01               	xorlw	1	; case 9
 10143   00288C  B4D8               	btfsc	status,2,c
 10144   00288E  D7D2               	goto	i2l4227
 10145   002890  0A48               	xorlw	72	; case 65
 10146   002892  B4D8               	btfsc	status,2,c
 10147   002894  D7D3               	goto	i2l4231
 10148   002896  0A02               	xorlw	2	; case 67
 10149   002898  B4D8               	btfsc	status,2,c
 10150   00289A  D7D2               	goto	i2l4233
 10151   00289C  0A0F               	xorlw	15	; case 76
 10152   00289E  B4D8               	btfsc	status,2,c
 10153   0028A0  D7D1               	goto	i2l4237
 10154   0028A2  0A1F               	xorlw	31	; case 83
 10155   0028A4  B4D8               	btfsc	status,2,c
 10156   0028A6  D7BE               	goto	i2l4219
 10157   0028A8  0A0A               	xorlw	10	; case 89
 10158   0028AA  B4D8               	btfsc	status,2,c
 10159   0028AC  D7C5               	goto	i2l4229
 10160   0028AE  0A2B               	xorlw	43	; case 114
 10161   0028B0  B4D8               	btfsc	status,2,c
 10162   0028B2  D7CA               	goto	i2l4239
 10163   0028B4  D7CC               	goto	i2l256
 10164   0028B6                     i2l240:
 10165                           
 10166                           ;main.c: 541:     return pattern;
 10167   0028B6  5002               	movf	i2get7SegmentPattern@pattern^0,w,c
 10168   0028B8  0012               	return		;funcret
 10169   0028BA                     __end_ofi2_get7SegmentPattern:
 10170                           	callstack 0
 10171                           
 10172 ;; *************** function i2_displayDigits *****************
 10173 ;; Defined at:
 10174 ;;		line 544 in file "main.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  digit0          1    wreg     unsigned char 
 10177 ;;  digit1          1    0[COMRAM] unsigned char 
 10178 ;;  digit2          1    1[COMRAM] unsigned char 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  digit0          1    4[COMRAM] unsigned char 
 10181 ;;  i               2    5[COMRAM] int 
 10182 ;; Return value:  Size  Location     Type
 10183 ;;                  1    wreg      void 
 10184 ;; Registers used:
 10185 ;;		wreg, status,2, status,0
 10186 ;; Tracked objects:
 10187 ;;		On entry : 0/0
 10188 ;;		On exit  : 0/0
 10189 ;;		Unchanged: 0/0
 10190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10191 ;;      Params:         2       0       0       0
 10192 ;;      Locals:         3       0       0       0
 10193 ;;      Temps:          2       0       0       0
 10194 ;;      Totals:         7       0       0       0
 10195 ;;Total ram usage:        7 bytes
 10196 ;; Hardware stack levels used: 1
 10197 ;; This function calls:
 10198 ;;		Nothing
 10199 ;; This function is called by:
 10200 ;;		i2_show7Segment
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           	psect	text50
 10205   00275A                     __ptext50:
 10206                           	callstack 0
 10207   00275A                     i2_displayDigits:
 10208                           	callstack 20
 10209                           
 10210                           ;incstack = 0
 10211                           ;i2displayDigits@digit0 stored from wreg
 10212   00275A  6E05               	movwf	i2displayDigits@digit0^0,c
 10213                           
 10214                           ;main.c: 545:     int i;;main.c: 546:     for ( i = 0 ; i < 8 ; i++ ){
 10215   00275C  0E00               	movlw	0
 10216   00275E  6E07               	movwf	(i2displayDigits@i+1)^0,c
 10217   002760  0E00               	movlw	0
 10218   002762  6E06               	movwf	i2displayDigits@i^0,c
 10219   002764                     i2l4251:
 10220                           
 10221                           ;main.c: 548:         PORTCbits.RC5 = (digit0 >> i) & (0x01);
 10222   002764  C006  F003         	movff	i2displayDigits@i,??i2_displayDigits
 10223   002768  C005  F004         	movff	i2displayDigits@digit0,??i2_displayDigits+1
 10224   00276C  2A03               	incf	??i2_displayDigits^0,f,c
 10225   00276E  D002               	goto	i2u462_44
 10226   002770                     i2u462_45:
 10227   002770  90D8               	bcf	status,0,c
 10228   002772  3204               	rrcf	(??i2_displayDigits+1)^0,f,c
 10229   002774                     i2u462_44:
 10230   002774  2E03               	decfsz	??i2_displayDigits^0,f,c
 10231   002776  D7FC               	goto	i2u462_45
 10232   002778  0E01               	movlw	1
 10233   00277A  1604               	andwf	(??i2_displayDigits+1)^0,f,c
 10234   00277C  3A04               	swapf	(??i2_displayDigits+1)^0,f,c
 10235   00277E  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 10236   002780  5082               	movf	130,w,c	;volatile
 10237   002782  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 10238   002784  0BDF               	andlw	-33
 10239   002786  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 10240   002788  6E82               	movwf	130,c	;volatile
 10241                           
 10242                           ;main.c: 549:         PORTCbits.RC4 = (digit1 >> i) & (0x01);
 10243   00278A  C006  F003         	movff	i2displayDigits@i,??i2_displayDigits
 10244   00278E  C001  F004         	movff	i2displayDigits@digit1,??i2_displayDigits+1
 10245   002792  2A03               	incf	??i2_displayDigits^0,f,c
 10246   002794  D002               	goto	i2u463_44
 10247   002796                     i2u463_45:
 10248   002796  90D8               	bcf	status,0,c
 10249   002798  3204               	rrcf	(??i2_displayDigits+1)^0,f,c
 10250   00279A                     i2u463_44:
 10251   00279A  2E03               	decfsz	??i2_displayDigits^0,f,c
 10252   00279C  D7FC               	goto	i2u463_45
 10253   00279E  0E01               	movlw	1
 10254   0027A0  1604               	andwf	(??i2_displayDigits+1)^0,f,c
 10255   0027A2  3A04               	swapf	(??i2_displayDigits+1)^0,f,c
 10256   0027A4  5082               	movf	130,w,c	;volatile
 10257   0027A6  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 10258   0027A8  0BEF               	andlw	-17
 10259   0027AA  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 10260   0027AC  6E82               	movwf	130,c	;volatile
 10261                           
 10262                           ;main.c: 550:         PORTCbits.RC3 = (digit2 >> i) & (0x01);
 10263   0027AE  C006  F003         	movff	i2displayDigits@i,??i2_displayDigits
 10264   0027B2  C002  F004         	movff	i2displayDigits@digit2,??i2_displayDigits+1
 10265   0027B6  2A03               	incf	??i2_displayDigits^0,f,c
 10266   0027B8  D002               	goto	i2u464_44
 10267   0027BA                     i2u464_45:
 10268   0027BA  90D8               	bcf	status,0,c
 10269   0027BC  3204               	rrcf	(??i2_displayDigits+1)^0,f,c
 10270   0027BE                     i2u464_44:
 10271   0027BE  2E03               	decfsz	??i2_displayDigits^0,f,c
 10272   0027C0  D7FC               	goto	i2u464_45
 10273   0027C2  0E01               	movlw	1
 10274   0027C4  1604               	andwf	(??i2_displayDigits+1)^0,f,c
 10275   0027C6  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 10276   0027C8  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 10277   0027CA  4604               	rlncf	(??i2_displayDigits+1)^0,f,c
 10278   0027CC  5082               	movf	130,w,c	;volatile
 10279   0027CE  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 10280   0027D0  0BF7               	andlw	-9
 10281   0027D2  1804               	xorwf	(??i2_displayDigits+1)^0,w,c
 10282   0027D4  6E82               	movwf	130,c	;volatile
 10283                           
 10284                           ;main.c: 553:         PORTCbits.RC6 = 1;
 10285   0027D6  8C82               	bsf	130,6,c	;volatile
 10286                           
 10287                           ;main.c: 554:         _delay((unsigned long)((500)*(2000000/4000000.0)));
 10288   0027D8  0E53               	movlw	83
 10289   0027DA                     i2u1005_47:
 10290   0027DA  2EE8               	decfsz	wreg,f,c
 10291   0027DC  D7FE               	bra	i2u1005_47
 10292   0027DE  0000               	nop	
 10293                           
 10294                           ;main.c: 555:         PORTCbits.RC6 = 0;
 10295   0027E0  9C82               	bcf	130,6,c	;volatile
 10296                           
 10297                           ;main.c: 556:         _delay((unsigned long)((500)*(2000000/4000000.0)));
 10298   0027E2  0E53               	movlw	83
 10299   0027E4                     i2u1006_47:
 10300   0027E4  2EE8               	decfsz	wreg,f,c
 10301   0027E6  D7FE               	bra	i2u1006_47
 10302   0027E8  0000               	nop	
 10303                           
 10304                           ;main.c: 557:     }
 10305   0027EA  4A06               	infsnz	i2displayDigits@i^0,f,c
 10306   0027EC  2A07               	incf	(i2displayDigits@i+1)^0,f,c
 10307   0027EE  BE07               	btfsc	(i2displayDigits@i+1)^0,7,c
 10308   0027F0  D7B9               	goto	i2l4251
 10309   0027F2  5007               	movf	(i2displayDigits@i+1)^0,w,c
 10310   0027F4  E104               	bnz	i2u465_40
 10311   0027F6  0E08               	movlw	8
 10312   0027F8  5C06               	subwf	i2displayDigits@i^0,w,c
 10313   0027FA  A0D8               	btfss	status,0,c
 10314   0027FC  D7B3               	goto	i2l4251
 10315   0027FE                     i2u465_40:
 10316                           
 10317                           ;main.c: 560:     PORTCbits.RC7 = 1;
 10318   0027FE  8E82               	bsf	130,7,c	;volatile
 10319                           
 10320                           ;main.c: 561:     _delay((unsigned long)((500)*(2000000/4000000.0)));
 10321   002800  0E53               	movlw	83
 10322   002802                     i2u1007_47:
 10323   002802  2EE8               	decfsz	wreg,f,c
 10324   002804  D7FE               	bra	i2u1007_47
 10325   002806  0000               	nop	
 10326                           
 10327                           ;main.c: 562:     PORTCbits.RC7 = 0;
 10328   002808  9E82               	bcf	130,7,c	;volatile
 10329   00280A  0012               	return		;funcret
 10330   00280C                     __end_ofi2_displayDigits:
 10331                           	callstack 0
 10332                           
 10333 ;; *************** function i2_setDisplayDigits *****************
 10334 ;; Defined at:
 10335 ;;		line 670 in file "main.c"
 10336 ;; Parameters:    Size  Location     Type
 10337 ;;		None
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;		None
 10340 ;; Return value:  Size  Location     Type
 10341 ;;                  1    wreg      void 
 10342 ;; Registers used:
 10343 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10344 ;; Tracked objects:
 10345 ;;		On entry : 3F/0
 10346 ;;		On exit  : 0/0
 10347 ;;		Unchanged: 0/0
 10348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10349 ;;      Params:         0       0       0       0
 10350 ;;      Locals:         0       0       0       0
 10351 ;;      Temps:          0       0       0       0
 10352 ;;      Totals:         0       0       0       0
 10353 ;;Total ram usage:        0 bytes
 10354 ;; Hardware stack levels used: 1
 10355 ;; Hardware stack levels required when called: 1
 10356 ;; This function calls:
 10357 ;;		i2___flmul
 10358 ;;		i2___fltol
 10359 ;;		i2___lwdiv
 10360 ;;		i2___lwmod
 10361 ;; This function is called by:
 10362 ;;		_ISR
 10363 ;; This function uses a non-reentrant model
 10364 ;;
 10365                           
 10366                           	psect	text51
 10367   001CAE                     __ptext51:
 10368                           	callstack 0
 10369   001CAE                     i2_setDisplayDigits:
 10370                           	callstack 20
 10371                           
 10372                           ; BSR set to: 0
 10373                           ;main.c: 671:     if (fsm_state == 0) {
 10374                           
 10375                           ;incstack = 0
 10376   001CAE  51F9               	movf	_fsm_state& (0+255),w,b
 10377   001CB0  A4D8               	btfss	status,2,c
 10378   001CB2  D007               	goto	i2l4721
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;main.c: 673:         displayDigit0 = 11;
 10382   001CB4  0E0B               	movlw	11
 10383   001CB6  6E38               	movwf	_displayDigit0^0,c
 10384                           
 10385                           ;main.c: 674:         displayDigit1 = 'A';
 10386   001CB8  0E41               	movlw	65
 10387   001CBA  6E37               	movwf	_displayDigit1^0,c
 10388                           
 10389                           ;main.c: 675:         displayDigit2 = 11;
 10390   001CBC  0E0B               	movlw	11
 10391   001CBE  6E36               	movwf	_displayDigit2^0,c
 10392                           
 10393                           ;main.c: 677:     } else if (fsm_state == 1) {
 10394   001CC0  0012               	return	
 10395   001CC2                     i2l4721:
 10396                           
 10397                           ; BSR set to: 0
 10398   001CC2  05F9               	decf	_fsm_state& (0+255),w,b
 10399   001CC4  A4D8               	btfss	status,2,c
 10400   001CC6  D057               	goto	i2l4735
 10401                           
 10402                           ; BSR set to: 0
 10403                           ;main.c: 679:         c_target = (unsigned int) (adc_voltage * 100);
 10404   001CC8  0E00               	movlw	0
 10405   001CCA  6E05               	movwf	i2___flmul@a^0,c
 10406   001CCC  0E00               	movlw	0
 10407   001CCE  6E06               	movwf	(i2___flmul@a+1)^0,c
 10408   001CD0  0EC8               	movlw	200
 10409   001CD2  6E07               	movwf	(i2___flmul@a+2)^0,c
 10410   001CD4  0E42               	movlw	66
 10411   001CD6  6E08               	movwf	(i2___flmul@a+3)^0,c
 10412   001CD8  C0EA  F001         	movff	_adc_voltage,i2___flmul@b
 10413   001CDC  C0EB  F002         	movff	_adc_voltage+1,i2___flmul@b+1
 10414   001CE0  C0EC  F003         	movff	_adc_voltage+2,i2___flmul@b+2
 10415   001CE4  C0ED  F004         	movff	_adc_voltage+3,i2___flmul@b+3
 10416   001CE8  EC0F  F009         	call	i2___flmul	;wreg free
 10417   001CEC  C001  F01A         	movff	?i2___flmul,i2___fltol@f1
 10418   001CF0  C002  F01B         	movff	?i2___flmul+1,i2___fltol@f1+1
 10419   001CF4  C003  F01C         	movff	?i2___flmul+2,i2___fltol@f1+2
 10420   001CF8  C004  F01D         	movff	?i2___flmul+3,i2___fltol@f1+3
 10421   001CFC  ECF7  F012         	call	i2___fltol	;wreg free
 10422   001D00  C01A  F032         	movff	?i2___fltol,_c_target
 10423   001D04  C01B  F033         	movff	?i2___fltol+1,_c_target+1
 10424                           
 10425                           ; BSR set to: 0
 10426                           ;main.c: 680:         c_remainder = c_target % 100;
 10427   001D08  C032  F001         	movff	_c_target,i2___lwmod@dividend
 10428   001D0C  C033  F002         	movff	_c_target+1,i2___lwmod@dividend+1
 10429   001D10  0E00               	movlw	0
 10430   001D12  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 10431   001D14  0E64               	movlw	100
 10432   001D16  6E03               	movwf	i2___lwmod@divisor^0,c
 10433   001D18  EC8D  F017         	call	i2___lwmod	;wreg free
 10434   001D1C  C001  F030         	movff	?i2___lwmod,_c_remainder
 10435   001D20  C002  F031         	movff	?i2___lwmod+1,_c_remainder+1
 10436                           
 10437                           ;main.c: 681:         c_number = c_target / 100;
 10438   001D24  C032  F001         	movff	_c_target,i2___lwdiv@dividend
 10439   001D28  C033  F002         	movff	_c_target+1,i2___lwdiv@dividend+1
 10440   001D2C  0E00               	movlw	0
 10441   001D2E  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 10442   001D30  0E64               	movlw	100
 10443   001D32  6E03               	movwf	i2___lwdiv@divisor^0,c
 10444   001D34  EC4D  F016         	call	i2___lwdiv	;wreg free
 10445   001D38  C001  F02E         	movff	?i2___lwdiv,_c_number
 10446   001D3C  C002  F02F         	movff	?i2___lwdiv+1,_c_number+1
 10447                           
 10448                           ;main.c: 683:         displayDigit0 = (uint8_t) c_number;
 10449   001D40  C02E  F038         	movff	_c_number,_displayDigit0
 10450                           
 10451                           ;main.c: 684:         displayDigit1 = (uint8_t) (c_remainder / 10);
 10452   001D44  C030  F001         	movff	_c_remainder,i2___lwdiv@dividend
 10453   001D48  C031  F002         	movff	_c_remainder+1,i2___lwdiv@dividend+1
 10454   001D4C  0E00               	movlw	0
 10455   001D4E  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 10456   001D50  0E0A               	movlw	10
 10457   001D52  6E03               	movwf	i2___lwdiv@divisor^0,c
 10458   001D54  EC4D  F016         	call	i2___lwdiv	;wreg free
 10459   001D58  5001               	movf	?i2___lwdiv^0,w,c
 10460   001D5A  6E37               	movwf	_displayDigit1^0,c
 10461                           
 10462                           ;main.c: 685:         displayDigit2 = c_remainder % 10;
 10463   001D5C  C030  F001         	movff	_c_remainder,i2___lwmod@dividend
 10464   001D60  C031  F002         	movff	_c_remainder+1,i2___lwmod@dividend+1
 10465   001D64  0E00               	movlw	0
 10466   001D66  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 10467   001D68  0E0A               	movlw	10
 10468   001D6A  6E03               	movwf	i2___lwmod@divisor^0,c
 10469   001D6C  EC8D  F017         	call	i2___lwmod	;wreg free
 10470   001D70  5001               	movf	?i2___lwmod^0,w,c
 10471   001D72  6E36               	movwf	_displayDigit2^0,c
 10472                           
 10473                           ;main.c: 687:     } else if (fsm_state == 2) {
 10474   001D74  0012               	return	
 10475   001D76                     i2l4735:
 10476                           
 10477                           ; BSR set to: 0
 10478   001D76  0E02               	movlw	2
 10479   001D78  19F9               	xorwf	_fsm_state& (0+255),w,b
 10480   001D7A  A4D8               	btfss	status,2,c
 10481   001D7C  D04D               	goto	i2l4749
 10482                           
 10483                           ; BSR set to: 0
 10484                           ;main.c: 689:         c_target = (unsigned int) (adc_voltage * 100);
 10485   001D7E  0E00               	movlw	0
 10486   001D80  6E05               	movwf	i2___flmul@a^0,c
 10487   001D82  0E00               	movlw	0
 10488   001D84  6E06               	movwf	(i2___flmul@a+1)^0,c
 10489   001D86  0EC8               	movlw	200
 10490   001D88  6E07               	movwf	(i2___flmul@a+2)^0,c
 10491   001D8A  0E42               	movlw	66
 10492   001D8C  6E08               	movwf	(i2___flmul@a+3)^0,c
 10493   001D8E  C0EA  F001         	movff	_adc_voltage,i2___flmul@b
 10494   001D92  C0EB  F002         	movff	_adc_voltage+1,i2___flmul@b+1
 10495   001D96  C0EC  F003         	movff	_adc_voltage+2,i2___flmul@b+2
 10496   001D9A  C0ED  F004         	movff	_adc_voltage+3,i2___flmul@b+3
 10497   001D9E  EC0F  F009         	call	i2___flmul	;wreg free
 10498   001DA2  C001  F01A         	movff	?i2___flmul,i2___fltol@f1
 10499   001DA6  C002  F01B         	movff	?i2___flmul+1,i2___fltol@f1+1
 10500   001DAA  C003  F01C         	movff	?i2___flmul+2,i2___fltol@f1+2
 10501   001DAE  C004  F01D         	movff	?i2___flmul+3,i2___fltol@f1+3
 10502   001DB2  ECF7  F012         	call	i2___fltol	;wreg free
 10503   001DB6  C01A  F032         	movff	?i2___fltol,_c_target
 10504   001DBA  C01B  F033         	movff	?i2___fltol+1,_c_target+1
 10505                           
 10506                           ; BSR set to: 0
 10507                           ;main.c: 690:         c_remainder = c_target % 100;
 10508   001DBE  C032  F001         	movff	_c_target,i2___lwmod@dividend
 10509   001DC2  C033  F002         	movff	_c_target+1,i2___lwmod@dividend+1
 10510   001DC6  0E00               	movlw	0
 10511   001DC8  6E04               	movwf	(i2___lwmod@divisor+1)^0,c
 10512   001DCA  0E64               	movlw	100
 10513   001DCC  6E03               	movwf	i2___lwmod@divisor^0,c
 10514   001DCE  EC8D  F017         	call	i2___lwmod	;wreg free
 10515   001DD2  C001  F030         	movff	?i2___lwmod,_c_remainder
 10516   001DD6  C002  F031         	movff	?i2___lwmod+1,_c_remainder+1
 10517                           
 10518                           ;main.c: 691:         c_number = c_target / 100;
 10519   001DDA  C032  F001         	movff	_c_target,i2___lwdiv@dividend
 10520   001DDE  C033  F002         	movff	_c_target+1,i2___lwdiv@dividend+1
 10521   001DE2  0E00               	movlw	0
 10522   001DE4  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 10523   001DE6  0E64               	movlw	100
 10524   001DE8  6E03               	movwf	i2___lwdiv@divisor^0,c
 10525   001DEA  EC4D  F016         	call	i2___lwdiv	;wreg free
 10526   001DEE  C001  F02E         	movff	?i2___lwdiv,_c_number
 10527   001DF2  C002  F02F         	movff	?i2___lwdiv+1,_c_number+1
 10528                           
 10529                           ;main.c: 693:         displayDigit0 = (uint8_t) c_number;
 10530   001DF6  C02E  F038         	movff	_c_number,_displayDigit0
 10531                           
 10532                           ;main.c: 694:         displayDigit1 = (uint8_t) (c_remainder / 10);
 10533   001DFA  C030  F001         	movff	_c_remainder,i2___lwdiv@dividend
 10534   001DFE  C031  F002         	movff	_c_remainder+1,i2___lwdiv@dividend+1
 10535   001E02  0E00               	movlw	0
 10536   001E04  6E04               	movwf	(i2___lwdiv@divisor+1)^0,c
 10537   001E06  0E0A               	movlw	10
 10538   001E08  6E03               	movwf	i2___lwdiv@divisor^0,c
 10539   001E0A  EC4D  F016         	call	i2___lwdiv	;wreg free
 10540   001E0E  5001               	movf	?i2___lwdiv^0,w,c
 10541   001E10  6E37               	movwf	_displayDigit1^0,c
 10542                           
 10543                           ;main.c: 695:         displayDigit2 = 'C';
 10544   001E12  0E43               	movlw	67
 10545   001E14  6E36               	movwf	_displayDigit2^0,c
 10546                           
 10547                           ;main.c: 697:     } else if (fsm_state == 3) {
 10548   001E16  0012               	return	
 10549   001E18                     i2l4749:
 10550                           
 10551                           ; BSR set to: 0
 10552   001E18  0E03               	movlw	3
 10553   001E1A  19F9               	xorwf	_fsm_state& (0+255),w,b
 10554   001E1C  A4D8               	btfss	status,2,c
 10555   001E1E  D007               	goto	i2l4753
 10556                           
 10557                           ; BSR set to: 0
 10558                           ;main.c: 699:         displayDigit0 = 11;
 10559   001E20  0E0B               	movlw	11
 10560   001E22  6E38               	movwf	_displayDigit0^0,c
 10561                           
 10562                           ;main.c: 700:         displayDigit1 = 'C';
 10563   001E24  0E43               	movlw	67
 10564   001E26  6E37               	movwf	_displayDigit1^0,c
 10565                           
 10566                           ;main.c: 701:         displayDigit2 = 11;
 10567   001E28  0E0B               	movlw	11
 10568   001E2A  6E36               	movwf	_displayDigit2^0,c
 10569                           
 10570                           ;main.c: 703:     } else if (fsm_state == 4) {
 10571   001E2C  0012               	return	
 10572   001E2E                     i2l4753:
 10573                           
 10574                           ; BSR set to: 0
 10575   001E2E  0E04               	movlw	4
 10576   001E30  19F9               	xorwf	_fsm_state& (0+255),w,b
 10577   001E32  A4D8               	btfss	status,2,c
 10578   001E34  D006               	goto	i2l4759
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;main.c: 705:         displayDigit0 = 'S';
 10582   001E36  0E53               	movlw	83
 10583   001E38  6E38               	movwf	_displayDigit0^0,c
 10584                           
 10585                           ; BSR set to: 0
 10586                           ;main.c: 706:         displayDigit1 = 0;
 10587   001E3A  6A37               	clrf	_displayDigit1^0,c
 10588                           
 10589                           ;main.c: 707:         displayDigit2 = 11;
 10590   001E3C  0E0B               	movlw	11
 10591   001E3E  6E36               	movwf	_displayDigit2^0,c
 10592                           
 10593                           ;main.c: 709:     } else if (fsm_state == 5) {
 10594   001E40  0012               	return	
 10595   001E42                     i2l4759:
 10596                           
 10597                           ; BSR set to: 0
 10598   001E42  0E05               	movlw	5
 10599   001E44  19F9               	xorwf	_fsm_state& (0+255),w,b
 10600   001E46  A4D8               	btfss	status,2,c
 10601   001E48  D007               	goto	i2l4763
 10602                           
 10603                           ; BSR set to: 0
 10604                           ;main.c: 711:         displayDigit0 = 'S';
 10605   001E4A  0E53               	movlw	83
 10606   001E4C  6E38               	movwf	_displayDigit0^0,c
 10607                           
 10608                           ;main.c: 712:         displayDigit1 = 1;
 10609   001E4E  0E01               	movlw	1
 10610   001E50  6E37               	movwf	_displayDigit1^0,c
 10611                           
 10612                           ;main.c: 713:         displayDigit2 = 11;
 10613   001E52  0E0B               	movlw	11
 10614   001E54  6E36               	movwf	_displayDigit2^0,c
 10615                           
 10616                           ;main.c: 715:     } else if (fsm_state == 6) {
 10617   001E56  0012               	return	
 10618   001E58                     i2l4763:
 10619                           
 10620                           ; BSR set to: 0
 10621   001E58  0E06               	movlw	6
 10622   001E5A  19F9               	xorwf	_fsm_state& (0+255),w,b
 10623   001E5C  A4D8               	btfss	status,2,c
 10624   001E5E  D007               	goto	i2l4767
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;main.c: 717:         displayDigit0 = 'S';
 10628   001E60  0E53               	movlw	83
 10629   001E62  6E38               	movwf	_displayDigit0^0,c
 10630                           
 10631                           ;main.c: 718:         displayDigit1 = 2;
 10632   001E64  0E02               	movlw	2
 10633   001E66  6E37               	movwf	_displayDigit1^0,c
 10634                           
 10635                           ;main.c: 719:         displayDigit2 = 11;
 10636   001E68  0E0B               	movlw	11
 10637   001E6A  6E36               	movwf	_displayDigit2^0,c
 10638                           
 10639                           ;main.c: 721:     } else if (fsm_state == 7) {
 10640   001E6C  0012               	return	
 10641   001E6E                     i2l4767:
 10642                           
 10643                           ; BSR set to: 0
 10644   001E6E  0E07               	movlw	7
 10645   001E70  19F9               	xorwf	_fsm_state& (0+255),w,b
 10646   001E72  A4D8               	btfss	status,2,c
 10647   001E74  D007               	goto	i2l336
 10648                           
 10649                           ; BSR set to: 0
 10650                           ;main.c: 723:         displayDigit0 = 'C';
 10651   001E76  0E43               	movlw	67
 10652   001E78  6E38               	movwf	_displayDigit0^0,c
 10653                           
 10654                           ;main.c: 724:         displayDigit1 = 'L';
 10655   001E7A  0E4C               	movlw	76
 10656   001E7C  6E37               	movwf	_displayDigit1^0,c
 10657                           
 10658                           ;main.c: 725:         displayDigit2 = 'r';
 10659   001E7E  0E72               	movlw	114
 10660   001E80  6E36               	movwf	_displayDigit2^0,c
 10661                           
 10662                           ;main.c: 727:     }
 10663   001E82  0012               	return	
 10664   001E84                     i2l336:
 10665                           
 10666                           ; BSR set to: 0
 10667                           ;main.c: 729:         __nop();
 10668   001E84  0000               	nop	
 10669   001E86  0012               	return		;funcret
 10670   001E88                     __end_ofi2_setDisplayDigits:
 10671                           	callstack 0
 10672                           
 10673 ;; *************** function i2___lwmod *****************
 10674 ;; Defined at:
 10675 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwmod.c"
 10676 ;; Parameters:    Size  Location     Type
 10677 ;;  dividend        2    0[COMRAM] unsigned int 
 10678 ;;  divisor         2    2[COMRAM] unsigned int 
 10679 ;; Auto vars:     Size  Location     Type
 10680 ;;  counter         1    4[COMRAM] unsigned char 
 10681 ;; Return value:  Size  Location     Type
 10682 ;;                  2    0[COMRAM] unsigned int 
 10683 ;; Registers used:
 10684 ;;		wreg, status,2, status,0
 10685 ;; Tracked objects:
 10686 ;;		On entry : 0/0
 10687 ;;		On exit  : 0/0
 10688 ;;		Unchanged: 0/0
 10689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10690 ;;      Params:         4       0       0       0
 10691 ;;      Locals:         1       0       0       0
 10692 ;;      Temps:          0       0       0       0
 10693 ;;      Totals:         5       0       0       0
 10694 ;;Total ram usage:        5 bytes
 10695 ;; Hardware stack levels used: 1
 10696 ;; This function calls:
 10697 ;;		Nothing
 10698 ;; This function is called by:
 10699 ;;		i2_setDisplayDigits
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703                           	psect	text52
 10704   002F1A                     __ptext52:
 10705                           	callstack 0
 10706   002F1A                     i2___lwmod:
 10707                           	callstack 20
 10708                           
 10709                           ;incstack = 0
 10710   002F1A  5003               	movf	i2___lwmod@divisor^0,w,c
 10711   002F1C  1004               	iorwf	(i2___lwmod@divisor+1)^0,w,c
 10712   002F1E  B4D8               	btfsc	status,2,c
 10713   002F20  D018               	goto	i2l848
 10714   002F22  0E01               	movlw	1
 10715   002F24  6E05               	movwf	i2___lwmod@counter^0,c
 10716   002F26  D004               	goto	i2l4345
 10717   002F28                     i2l4343:
 10718   002F28  90D8               	bcf	status,0,c
 10719   002F2A  3603               	rlcf	i2___lwmod@divisor^0,f,c
 10720   002F2C  3604               	rlcf	(i2___lwmod@divisor+1)^0,f,c
 10721   002F2E  2A05               	incf	i2___lwmod@counter^0,f,c
 10722   002F30                     i2l4345:
 10723   002F30  AE04               	btfss	(i2___lwmod@divisor+1)^0,7,c
 10724   002F32  D7FA               	goto	i2l4343
 10725   002F34                     i2u478_40:
 10726   002F34  5003               	movf	i2___lwmod@divisor^0,w,c
 10727   002F36  5C01               	subwf	i2___lwmod@dividend^0,w,c
 10728   002F38  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
 10729   002F3A  5802               	subwfb	(i2___lwmod@dividend+1)^0,w,c
 10730   002F3C  A0D8               	btfss	status,0,c
 10731   002F3E  D004               	goto	i2l4351
 10732   002F40  5003               	movf	i2___lwmod@divisor^0,w,c
 10733   002F42  5E01               	subwf	i2___lwmod@dividend^0,f,c
 10734   002F44  5004               	movf	(i2___lwmod@divisor+1)^0,w,c
 10735   002F46  5A02               	subwfb	(i2___lwmod@dividend+1)^0,f,c
 10736   002F48                     i2l4351:
 10737   002F48  90D8               	bcf	status,0,c
 10738   002F4A  3204               	rrcf	(i2___lwmod@divisor+1)^0,f,c
 10739   002F4C  3203               	rrcf	i2___lwmod@divisor^0,f,c
 10740   002F4E  2E05               	decfsz	i2___lwmod@counter^0,f,c
 10741   002F50  D7F1               	goto	i2u478_40
 10742   002F52                     i2l848:
 10743   002F52  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
 10744   002F56  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 10745   002F5A  0012               	return		;funcret
 10746   002F5C                     __end_ofi2___lwmod:
 10747                           	callstack 0
 10748                           
 10749 ;; *************** function i2___lwdiv *****************
 10750 ;; Defined at:
 10751 ;;		line 7 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/lwdiv.c"
 10752 ;; Parameters:    Size  Location     Type
 10753 ;;  dividend        2    0[COMRAM] unsigned int 
 10754 ;;  divisor         2    2[COMRAM] unsigned int 
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;  quotient        2    4[COMRAM] unsigned int 
 10757 ;;  counter         1    6[COMRAM] unsigned char 
 10758 ;; Return value:  Size  Location     Type
 10759 ;;                  2    0[COMRAM] unsigned int 
 10760 ;; Registers used:
 10761 ;;		wreg, status,2, status,0
 10762 ;; Tracked objects:
 10763 ;;		On entry : 0/0
 10764 ;;		On exit  : 0/0
 10765 ;;		Unchanged: 0/0
 10766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10767 ;;      Params:         4       0       0       0
 10768 ;;      Locals:         3       0       0       0
 10769 ;;      Temps:          0       0       0       0
 10770 ;;      Totals:         7       0       0       0
 10771 ;;Total ram usage:        7 bytes
 10772 ;; Hardware stack levels used: 1
 10773 ;; This function calls:
 10774 ;;		Nothing
 10775 ;; This function is called by:
 10776 ;;		i2_setDisplayDigits
 10777 ;; This function uses a non-reentrant model
 10778 ;;
 10779                           
 10780                           	psect	text53
 10781   002C9A                     __ptext53:
 10782                           	callstack 0
 10783   002C9A                     i2___lwdiv:
 10784                           	callstack 20
 10785                           
 10786                           ;incstack = 0
 10787   002C9A  0E00               	movlw	0
 10788   002C9C  6E06               	movwf	(i2___lwdiv@quotient+1)^0,c
 10789   002C9E  0E00               	movlw	0
 10790   002CA0  6E05               	movwf	i2___lwdiv@quotient^0,c
 10791   002CA2  5003               	movf	i2___lwdiv@divisor^0,w,c
 10792   002CA4  1004               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 10793   002CA6  B4D8               	btfsc	status,2,c
 10794   002CA8  D01C               	goto	i2l838
 10795   002CAA  0E01               	movlw	1
 10796   002CAC  6E07               	movwf	i2___lwdiv@counter^0,c
 10797   002CAE  D004               	goto	i2l4325
 10798   002CB0                     i2l4323:
 10799   002CB0  90D8               	bcf	status,0,c
 10800   002CB2  3603               	rlcf	i2___lwdiv@divisor^0,f,c
 10801   002CB4  3604               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 10802   002CB6  2A07               	incf	i2___lwdiv@counter^0,f,c
 10803   002CB8                     i2l4325:
 10804   002CB8  AE04               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 10805   002CBA  D7FA               	goto	i2l4323
 10806   002CBC                     i2u475_40:
 10807   002CBC  90D8               	bcf	status,0,c
 10808   002CBE  3605               	rlcf	i2___lwdiv@quotient^0,f,c
 10809   002CC0  3606               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 10810   002CC2  5003               	movf	i2___lwdiv@divisor^0,w,c
 10811   002CC4  5C01               	subwf	i2___lwdiv@dividend^0,w,c
 10812   002CC6  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 10813   002CC8  5802               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 10814   002CCA  A0D8               	btfss	status,0,c
 10815   002CCC  D005               	goto	i2l4335
 10816   002CCE  5003               	movf	i2___lwdiv@divisor^0,w,c
 10817   002CD0  5E01               	subwf	i2___lwdiv@dividend^0,f,c
 10818   002CD2  5004               	movf	(i2___lwdiv@divisor+1)^0,w,c
 10819   002CD4  5A02               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 10820   002CD6  8005               	bsf	i2___lwdiv@quotient^0,0,c
 10821   002CD8                     i2l4335:
 10822   002CD8  90D8               	bcf	status,0,c
 10823   002CDA  3204               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 10824   002CDC  3203               	rrcf	i2___lwdiv@divisor^0,f,c
 10825   002CDE  2E07               	decfsz	i2___lwdiv@counter^0,f,c
 10826   002CE0  D7ED               	goto	i2u475_40
 10827   002CE2                     i2l838:
 10828   002CE2  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 10829   002CE6  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 10830   002CEA  0012               	return		;funcret
 10831   002CEC                     __end_ofi2___lwdiv:
 10832                           	callstack 0
 10833                           
 10834 ;; *************** function i2___fltol *****************
 10835 ;; Defined at:
 10836 ;;		line 43 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/fltol.c"
 10837 ;; Parameters:    Size  Location     Type
 10838 ;;  f1              4   25[COMRAM] unsigned int 
 10839 ;; Auto vars:     Size  Location     Type
 10840 ;;  exp1            1   34[COMRAM] unsigned char 
 10841 ;;  sign1           1   33[COMRAM] unsigned char 
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  4   25[COMRAM] long 
 10844 ;; Registers used:
 10845 ;;		wreg, status,2, status,0
 10846 ;; Tracked objects:
 10847 ;;		On entry : 3F/0
 10848 ;;		On exit  : 3F/0
 10849 ;;		Unchanged: 3F/0
 10850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10851 ;;      Params:         4       0       0       0
 10852 ;;      Locals:         2       0       0       0
 10853 ;;      Temps:          4       0       0       0
 10854 ;;      Totals:        10       0       0       0
 10855 ;;Total ram usage:       10 bytes
 10856 ;; Hardware stack levels used: 1
 10857 ;; This function calls:
 10858 ;;		Nothing
 10859 ;; This function is called by:
 10860 ;;		i2_setDisplayDigits
 10861 ;; This function uses a non-reentrant model
 10862 ;;
 10863                           
 10864                           	psect	text54
 10865   0025EE                     __ptext54:
 10866                           	callstack 0
 10867   0025EE                     i2___fltol:
 10868                           	callstack 20
 10869                           
 10870                           ; BSR set to: 0
 10871                           
 10872                           ;incstack = 0
 10873   0025EE  341C               	rlcf	(i2___fltol@f1+2)^0,w,c
 10874   0025F0  341D               	rlcf	(i2___fltol@f1+3)^0,w,c
 10875   0025F2  6E23               	movwf	i2___fltol@exp1^0,c
 10876   0025F4  5023               	movf	i2___fltol@exp1^0,w,c
 10877   0025F6  A4D8               	btfss	status,2,c
 10878   0025F8  D009               	goto	i2l4279
 10879   0025FA                     i2u467_40:
 10880                           
 10881                           ; BSR set to: 0
 10882   0025FA  0E00               	movlw	0
 10883   0025FC  6E1A               	movwf	?i2___fltol^0,c
 10884   0025FE  0E00               	movlw	0
 10885   002600  6E1B               	movwf	(?i2___fltol+1)^0,c
 10886   002602  0E00               	movlw	0
 10887   002604  6E1C               	movwf	(?i2___fltol+2)^0,c
 10888   002606  0E00               	movlw	0
 10889   002608  6E1D               	movwf	(?i2___fltol+3)^0,c
 10890   00260A  0012               	return	
 10891   00260C                     i2l4279:
 10892                           
 10893                           ; BSR set to: 0
 10894   00260C  C01A  F01E         	movff	i2___fltol@f1,??i2___fltol
 10895   002610  C01B  F01F         	movff	i2___fltol@f1+1,??i2___fltol+1
 10896   002614  C01C  F020         	movff	i2___fltol@f1+2,??i2___fltol+2
 10897   002618  C01D  F021         	movff	i2___fltol@f1+3,??i2___fltol+3
 10898   00261C  0E20               	movlw	32
 10899   00261E  D005               	goto	i2u468_40
 10900   002620                     i2u468_45:
 10901   002620  90D8               	bcf	status,0,c
 10902   002622  3221               	rrcf	(??i2___fltol+3)^0,f,c
 10903   002624  3220               	rrcf	(??i2___fltol+2)^0,f,c
 10904   002626  321F               	rrcf	(??i2___fltol+1)^0,f,c
 10905   002628  321E               	rrcf	??i2___fltol^0,f,c
 10906   00262A                     i2u468_40:
 10907   00262A  2EE8               	decfsz	wreg,f,c
 10908   00262C  D7F9               	goto	i2u468_45
 10909   00262E  501E               	movf	??i2___fltol^0,w,c
 10910   002630  6E22               	movwf	i2___fltol@sign1^0,c
 10911                           
 10912                           ; BSR set to: 0
 10913   002632  8E1C               	bsf	(i2___fltol@f1+2)^0,7,c
 10914                           
 10915                           ; BSR set to: 0
 10916   002634  0EFF               	movlw	255
 10917   002636  161A               	andwf	i2___fltol@f1^0,f,c
 10918   002638  0EFF               	movlw	255
 10919   00263A  161B               	andwf	(i2___fltol@f1+1)^0,f,c
 10920   00263C  0EFF               	movlw	255
 10921   00263E  161C               	andwf	(i2___fltol@f1+2)^0,f,c
 10922   002640  0E00               	movlw	0
 10923   002642  161D               	andwf	(i2___fltol@f1+3)^0,f,c
 10924                           
 10925                           ; BSR set to: 0
 10926   002644  0E96               	movlw	150
 10927   002646  5E23               	subwf	i2___fltol@exp1^0,f,c
 10928                           
 10929                           ; BSR set to: 0
 10930   002648  AE23               	btfss	i2___fltol@exp1^0,7,c
 10931   00264A  D00D               	goto	i2l4299
 10932                           
 10933                           ; BSR set to: 0
 10934   00264C  5023               	movf	i2___fltol@exp1^0,w,c
 10935   00264E  0A80               	xorlw	128
 10936   002650  0F97               	addlw	151
 10937   002652  A0D8               	btfss	status,0,c
 10938   002654  D7D2               	goto	i2u467_40
 10939   002656                     i2l4295:
 10940                           
 10941                           ; BSR set to: 0
 10942   002656  90D8               	bcf	status,0,c
 10943   002658  321D               	rrcf	(i2___fltol@f1+3)^0,f,c
 10944   00265A  321C               	rrcf	(i2___fltol@f1+2)^0,f,c
 10945   00265C  321B               	rrcf	(i2___fltol@f1+1)^0,f,c
 10946   00265E  321A               	rrcf	i2___fltol@f1^0,f,c
 10947                           
 10948                           ; BSR set to: 0
 10949   002660  3E23               	incfsz	i2___fltol@exp1^0,f,c
 10950   002662  D7F9               	goto	i2l4295
 10951   002664  D00D               	goto	i2u472_40
 10952   002666                     i2l4299:
 10953                           
 10954                           ; BSR set to: 0
 10955   002666  0E1F               	movlw	31
 10956   002668  6423               	cpfsgt	i2___fltol@exp1^0,c
 10957   00266A  D007               	goto	i2l4307
 10958   00266C  D7C6               	goto	i2u467_40
 10959   00266E                     i2l4305:
 10960                           
 10961                           ; BSR set to: 0
 10962   00266E  90D8               	bcf	status,0,c
 10963   002670  361A               	rlcf	i2___fltol@f1^0,f,c
 10964   002672  361B               	rlcf	(i2___fltol@f1+1)^0,f,c
 10965   002674  361C               	rlcf	(i2___fltol@f1+2)^0,f,c
 10966   002676  361D               	rlcf	(i2___fltol@f1+3)^0,f,c
 10967   002678  0623               	decf	i2___fltol@exp1^0,f,c
 10968   00267A                     i2l4307:
 10969                           
 10970                           ; BSR set to: 0
 10971   00267A  5023               	movf	i2___fltol@exp1^0,w,c
 10972   00267C  A4D8               	btfss	status,2,c
 10973   00267E  D7F7               	goto	i2l4305
 10974   002680                     i2u472_40:
 10975                           
 10976                           ; BSR set to: 0
 10977   002680  5022               	movf	i2___fltol@sign1^0,w,c
 10978   002682  B4D8               	btfsc	status,2,c
 10979   002684  D008               	goto	i2l4313
 10980                           
 10981                           ; BSR set to: 0
 10982   002686  1E1D               	comf	(i2___fltol@f1+3)^0,f,c
 10983   002688  1E1C               	comf	(i2___fltol@f1+2)^0,f,c
 10984   00268A  1E1B               	comf	(i2___fltol@f1+1)^0,f,c
 10985   00268C  6C1A               	negf	i2___fltol@f1^0,c
 10986   00268E  0E00               	movlw	0
 10987   002690  221B               	addwfc	(i2___fltol@f1+1)^0,f,c
 10988   002692  221C               	addwfc	(i2___fltol@f1+2)^0,f,c
 10989   002694  221D               	addwfc	(i2___fltol@f1+3)^0,f,c
 10990   002696                     i2l4313:
 10991                           
 10992                           ; BSR set to: 0
 10993   002696  C01A  F01A         	movff	i2___fltol@f1,?i2___fltol
 10994   00269A  C01B  F01B         	movff	i2___fltol@f1+1,?i2___fltol+1
 10995   00269E  C01C  F01C         	movff	i2___fltol@f1+2,?i2___fltol+2
 10996   0026A2  C01D  F01D         	movff	i2___fltol@f1+3,?i2___fltol+3
 10997                           
 10998                           ; BSR set to: 0
 10999   0026A6  0012               	return		;funcret
 11000   0026A8                     __end_ofi2___fltol:
 11001                           	callstack 0
 11002                           
 11003 ;; *************** function i2___flmul *****************
 11004 ;; Defined at:
 11005 ;;		line 8 in file "/opt/microchip/xc8/v2.50/pic/sources/c99/common/sprcmul.c"
 11006 ;; Parameters:    Size  Location     Type
 11007 ;;  b               4    0[COMRAM] long 
 11008 ;;  a               4    4[COMRAM] long 
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;  prod            4   19[COMRAM] struct .
 11011 ;;  grs             4   14[COMRAM] unsigned long 
 11012 ;;  temp            2   23[COMRAM] struct .
 11013 ;;  bexp            1   18[COMRAM] unsigned char 
 11014 ;;  aexp            1   13[COMRAM] unsigned char 
 11015 ;;  sign            1   12[COMRAM] unsigned char 
 11016 ;; Return value:  Size  Location     Type
 11017 ;;                  4    0[COMRAM] unsigned char 
 11018 ;; Registers used:
 11019 ;;		wreg, status,2, status,0, prodl, prodh
 11020 ;; Tracked objects:
 11021 ;;		On entry : 3F/0
 11022 ;;		On exit  : 3F/0
 11023 ;;		Unchanged: 3F/0
 11024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11025 ;;      Params:         8       0       0       0
 11026 ;;      Locals:        13       0       0       0
 11027 ;;      Temps:          4       0       0       0
 11028 ;;      Totals:        25       0       0       0
 11029 ;;Total ram usage:       25 bytes
 11030 ;; Hardware stack levels used: 1
 11031 ;; This function calls:
 11032 ;;		Nothing
 11033 ;; This function is called by:
 11034 ;;		i2_setDisplayDigits
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text55
 11039   00121E                     __ptext55:
 11040                           	callstack 0
 11041   00121E                     i2___flmul:
 11042                           	callstack 20
 11043                           
 11044                           ; BSR set to: 0
 11045                           
 11046                           ; BSR set to: 0
 11047                           ;incstack = 0
 11048   00121E  5004               	movf	(i2___flmul@b+3)^0,w,c
 11049   001220  0B80               	andlw	128
 11050   001222  6E0D               	movwf	i2___flmul@sign^0,c
 11051   001224  5004               	movf	(i2___flmul@b+3)^0,w,c
 11052   001226  2404               	addwf	(i2___flmul@b+3)^0,w,c
 11053   001228  6E13               	movwf	i2___flmul@bexp^0,c
 11054                           
 11055                           ; BSR set to: 0
 11056   00122A  BE03               	btfsc	(i2___flmul@b+2)^0,7,c
 11057                           
 11058                           ; BSR set to: 0
 11059   00122C  8013               	bsf	i2___flmul@bexp^0,0,c
 11060                           
 11061                           ; BSR set to: 0
 11062   00122E  5013               	movf	i2___flmul@bexp^0,w,c
 11063   001230  B4D8               	btfsc	status,2,c
 11064   001232  D00D               	goto	i2l4369
 11065                           
 11066                           ; BSR set to: 0
 11067   001234  2813               	incf	i2___flmul@bexp^0,w,c
 11068   001236  A4D8               	btfss	status,2,c
 11069   001238  D008               	goto	i2l4367
 11070                           
 11071                           ; BSR set to: 0
 11072   00123A  0E00               	movlw	0
 11073   00123C  6E01               	movwf	i2___flmul@b^0,c
 11074   00123E  0E00               	movlw	0
 11075   001240  6E02               	movwf	(i2___flmul@b+1)^0,c
 11076   001242  0E00               	movlw	0
 11077   001244  6E03               	movwf	(i2___flmul@b+2)^0,c
 11078   001246  0E00               	movlw	0
 11079   001248  6E04               	movwf	(i2___flmul@b+3)^0,c
 11080   00124A                     i2l4367:
 11081                           
 11082                           ; BSR set to: 0
 11083   00124A  8E03               	bsf	(i2___flmul@b+2)^0,7,c
 11084   00124C  D008               	goto	i2l4371
 11085   00124E                     i2l4369:
 11086                           
 11087                           ; BSR set to: 0
 11088   00124E  0E00               	movlw	0
 11089   001250  6E01               	movwf	i2___flmul@b^0,c
 11090   001252  0E00               	movlw	0
 11091   001254  6E02               	movwf	(i2___flmul@b+1)^0,c
 11092   001256  0E00               	movlw	0
 11093   001258  6E03               	movwf	(i2___flmul@b+2)^0,c
 11094   00125A  0E00               	movlw	0
 11095   00125C  6E04               	movwf	(i2___flmul@b+3)^0,c
 11096   00125E                     i2l4371:
 11097                           
 11098                           ; BSR set to: 0
 11099   00125E  5008               	movf	(i2___flmul@a+3)^0,w,c
 11100   001260  0B80               	andlw	128
 11101   001262  1A0D               	xorwf	i2___flmul@sign^0,f,c
 11102                           
 11103                           ; BSR set to: 0
 11104   001264  5008               	movf	(i2___flmul@a+3)^0,w,c
 11105   001266  2408               	addwf	(i2___flmul@a+3)^0,w,c
 11106   001268  6E0E               	movwf	i2___flmul@aexp^0,c
 11107                           
 11108                           ; BSR set to: 0
 11109   00126A  BE07               	btfsc	(i2___flmul@a+2)^0,7,c
 11110                           
 11111                           ; BSR set to: 0
 11112   00126C  800E               	bsf	i2___flmul@aexp^0,0,c
 11113                           
 11114                           ; BSR set to: 0
 11115   00126E  500E               	movf	i2___flmul@aexp^0,w,c
 11116   001270  B4D8               	btfsc	status,2,c
 11117   001272  D00D               	goto	i2l4387
 11118                           
 11119                           ; BSR set to: 0
 11120   001274  280E               	incf	i2___flmul@aexp^0,w,c
 11121   001276  A4D8               	btfss	status,2,c
 11122   001278  D008               	goto	i2l4385
 11123                           
 11124                           ; BSR set to: 0
 11125   00127A  0E00               	movlw	0
 11126   00127C  6E05               	movwf	i2___flmul@a^0,c
 11127   00127E  0E00               	movlw	0
 11128   001280  6E06               	movwf	(i2___flmul@a+1)^0,c
 11129   001282  0E00               	movlw	0
 11130   001284  6E07               	movwf	(i2___flmul@a+2)^0,c
 11131   001286  0E00               	movlw	0
 11132   001288  6E08               	movwf	(i2___flmul@a+3)^0,c
 11133   00128A                     i2l4385:
 11134                           
 11135                           ; BSR set to: 0
 11136   00128A  8E07               	bsf	(i2___flmul@a+2)^0,7,c
 11137   00128C  D008               	goto	i2l961
 11138   00128E                     i2l4387:
 11139                           
 11140                           ; BSR set to: 0
 11141   00128E  0E00               	movlw	0
 11142   001290  6E05               	movwf	i2___flmul@a^0,c
 11143   001292  0E00               	movlw	0
 11144   001294  6E06               	movwf	(i2___flmul@a+1)^0,c
 11145   001296  0E00               	movlw	0
 11146   001298  6E07               	movwf	(i2___flmul@a+2)^0,c
 11147   00129A  0E00               	movlw	0
 11148   00129C  6E08               	movwf	(i2___flmul@a+3)^0,c
 11149   00129E                     i2l961:
 11150                           
 11151                           ; BSR set to: 0
 11152   00129E  500E               	movf	i2___flmul@aexp^0,w,c
 11153   0012A0  B4D8               	btfsc	status,2,c
 11154   0012A2  D003               	goto	i2u487_40
 11155                           
 11156                           ; BSR set to: 0
 11157   0012A4  5013               	movf	i2___flmul@bexp^0,w,c
 11158   0012A6  A4D8               	btfss	status,2,c
 11159   0012A8  D009               	goto	i2l4395
 11160   0012AA                     i2u487_40:
 11161                           
 11162                           ; BSR set to: 0
 11163   0012AA  0E00               	movlw	0
 11164   0012AC  6E01               	movwf	?i2___flmul^0,c
 11165   0012AE  0E00               	movlw	0
 11166   0012B0  6E02               	movwf	(?i2___flmul+1)^0,c
 11167   0012B2  0E00               	movlw	0
 11168   0012B4  6E03               	movwf	(?i2___flmul+2)^0,c
 11169   0012B6  0E00               	movlw	0
 11170   0012B8  6E04               	movwf	(?i2___flmul+3)^0,c
 11171   0012BA  0012               	return	
 11172   0012BC                     i2l4395:
 11173                           
 11174                           ; BSR set to: 0
 11175   0012BC  5007               	movf	(i2___flmul@a+2)^0,w,c
 11176   0012BE  0201               	mulwf	i2___flmul@b^0,c
 11177   0012C0  CFF3 F018          	movff	prodl,i2___flmul@temp
 11178   0012C4  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11179                           
 11180                           ; BSR set to: 0
 11181   0012C8  5018               	movf	i2___flmul@temp^0,w,c
 11182   0012CA  6E0F               	movwf	i2___flmul@grs^0,c
 11183   0012CC  6A10               	clrf	(i2___flmul@grs+1)^0,c
 11184   0012CE  6A11               	clrf	(i2___flmul@grs+2)^0,c
 11185   0012D0  6A12               	clrf	(i2___flmul@grs+3)^0,c
 11186                           
 11187                           ; BSR set to: 0
 11188   0012D2  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11189   0012D4  6E14               	movwf	i2___flmul@prod^0,c
 11190   0012D6  6A15               	clrf	(i2___flmul@prod+1)^0,c
 11191   0012D8  6A16               	clrf	(i2___flmul@prod+2)^0,c
 11192   0012DA  6A17               	clrf	(i2___flmul@prod+3)^0,c
 11193   0012DC  5006               	movf	(i2___flmul@a+1)^0,w,c
 11194   0012DE  0202               	mulwf	(i2___flmul@b+1)^0,c
 11195   0012E0  CFF3 F018          	movff	prodl,i2___flmul@temp
 11196   0012E4  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11197                           
 11198                           ; BSR set to: 0
 11199   0012E8  5018               	movf	i2___flmul@temp^0,w,c
 11200   0012EA  260F               	addwf	i2___flmul@grs^0,f,c
 11201   0012EC  0E00               	movlw	0
 11202   0012EE  2210               	addwfc	(i2___flmul@grs+1)^0,f,c
 11203   0012F0  2211               	addwfc	(i2___flmul@grs+2)^0,f,c
 11204   0012F2  2212               	addwfc	(i2___flmul@grs+3)^0,f,c
 11205                           
 11206                           ; BSR set to: 0
 11207   0012F4  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11208   0012F6  2614               	addwf	i2___flmul@prod^0,f,c
 11209   0012F8  0E00               	movlw	0
 11210   0012FA  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11211   0012FC  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11212   0012FE  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11213   001300  5005               	movf	i2___flmul@a^0,w,c
 11214   001302  0203               	mulwf	(i2___flmul@b+2)^0,c
 11215   001304  CFF3 F018          	movff	prodl,i2___flmul@temp
 11216   001308  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11217                           
 11218                           ; BSR set to: 0
 11219   00130C  5018               	movf	i2___flmul@temp^0,w,c
 11220   00130E  260F               	addwf	i2___flmul@grs^0,f,c
 11221   001310  0E00               	movlw	0
 11222   001312  2210               	addwfc	(i2___flmul@grs+1)^0,f,c
 11223   001314  2211               	addwfc	(i2___flmul@grs+2)^0,f,c
 11224   001316  2212               	addwfc	(i2___flmul@grs+3)^0,f,c
 11225                           
 11226                           ; BSR set to: 0
 11227   001318  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11228   00131A  2614               	addwf	i2___flmul@prod^0,f,c
 11229   00131C  0E00               	movlw	0
 11230   00131E  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11231   001320  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11232   001322  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11233                           
 11234                           ; BSR set to: 0
 11235   001324  C011  F012         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 11236   001328  C010  F011         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 11237   00132C  C00F  F010         	movff	i2___flmul@grs,i2___flmul@grs+1
 11238   001330  6A0F               	clrf	i2___flmul@grs^0,c
 11239                           
 11240                           ; BSR set to: 0
 11241   001332  5005               	movf	i2___flmul@a^0,w,c
 11242   001334  0202               	mulwf	(i2___flmul@b+1)^0,c
 11243   001336  CFF3 F018          	movff	prodl,i2___flmul@temp
 11244   00133A  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11245                           
 11246                           ; BSR set to: 0
 11247   00133E  5018               	movf	i2___flmul@temp^0,w,c
 11248   001340  260F               	addwf	i2___flmul@grs^0,f,c
 11249   001342  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11250   001344  2210               	addwfc	(i2___flmul@grs+1)^0,f,c
 11251   001346  0E00               	movlw	0
 11252   001348  2211               	addwfc	(i2___flmul@grs+2)^0,f,c
 11253   00134A  0E00               	movlw	0
 11254   00134C  2212               	addwfc	(i2___flmul@grs+3)^0,f,c
 11255                           
 11256                           ; BSR set to: 0
 11257   00134E  5006               	movf	(i2___flmul@a+1)^0,w,c
 11258   001350  0201               	mulwf	i2___flmul@b^0,c
 11259   001352  CFF3 F018          	movff	prodl,i2___flmul@temp
 11260   001356  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11261                           
 11262                           ; BSR set to: 0
 11263   00135A  5018               	movf	i2___flmul@temp^0,w,c
 11264   00135C  260F               	addwf	i2___flmul@grs^0,f,c
 11265   00135E  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11266   001360  2210               	addwfc	(i2___flmul@grs+1)^0,f,c
 11267   001362  0E00               	movlw	0
 11268   001364  2211               	addwfc	(i2___flmul@grs+2)^0,f,c
 11269   001366  0E00               	movlw	0
 11270   001368  2212               	addwfc	(i2___flmul@grs+3)^0,f,c
 11271                           
 11272                           ; BSR set to: 0
 11273   00136A  C011  F012         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 11274   00136E  C010  F011         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 11275   001372  C00F  F010         	movff	i2___flmul@grs,i2___flmul@grs+1
 11276   001376  6A0F               	clrf	i2___flmul@grs^0,c
 11277   001378  5005               	movf	i2___flmul@a^0,w,c
 11278   00137A  0201               	mulwf	i2___flmul@b^0,c
 11279   00137C  CFF3 F018          	movff	prodl,i2___flmul@temp
 11280   001380  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11281                           
 11282                           ; BSR set to: 0
 11283   001384  5018               	movf	i2___flmul@temp^0,w,c
 11284   001386  260F               	addwf	i2___flmul@grs^0,f,c
 11285   001388  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11286   00138A  2210               	addwfc	(i2___flmul@grs+1)^0,f,c
 11287   00138C  0E00               	movlw	0
 11288   00138E  2211               	addwfc	(i2___flmul@grs+2)^0,f,c
 11289   001390  0E00               	movlw	0
 11290   001392  2212               	addwfc	(i2___flmul@grs+3)^0,f,c
 11291                           
 11292                           ; BSR set to: 0
 11293   001394  5007               	movf	(i2___flmul@a+2)^0,w,c
 11294   001396  0202               	mulwf	(i2___flmul@b+1)^0,c
 11295   001398  CFF3 F018          	movff	prodl,i2___flmul@temp
 11296   00139C  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11297   0013A0  5018               	movf	i2___flmul@temp^0,w,c
 11298   0013A2  2614               	addwf	i2___flmul@prod^0,f,c
 11299   0013A4  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11300   0013A6  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11301   0013A8  0E00               	movlw	0
 11302   0013AA  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11303   0013AC  0E00               	movlw	0
 11304   0013AE  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11305                           
 11306                           ; BSR set to: 0
 11307   0013B0  5006               	movf	(i2___flmul@a+1)^0,w,c
 11308   0013B2  0203               	mulwf	(i2___flmul@b+2)^0,c
 11309   0013B4  CFF3 F018          	movff	prodl,i2___flmul@temp
 11310   0013B8  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11311                           
 11312                           ; BSR set to: 0
 11313   0013BC  5018               	movf	i2___flmul@temp^0,w,c
 11314   0013BE  2614               	addwf	i2___flmul@prod^0,f,c
 11315   0013C0  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11316   0013C2  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11317   0013C4  0E00               	movlw	0
 11318   0013C6  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11319   0013C8  0E00               	movlw	0
 11320   0013CA  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11321   0013CC  5007               	movf	(i2___flmul@a+2)^0,w,c
 11322   0013CE  0203               	mulwf	(i2___flmul@b+2)^0,c
 11323   0013D0  CFF3 F018          	movff	prodl,i2___flmul@temp
 11324   0013D4  CFF4 F019          	movff	prodh,i2___flmul@temp+1
 11325                           
 11326                           ; BSR set to: 0
 11327   0013D8  5018               	movf	i2___flmul@temp^0,w,c
 11328   0013DA  6E09               	movwf	??i2___flmul^0,c
 11329   0013DC  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11330   0013DE  6E0A               	movwf	(??i2___flmul+1)^0,c
 11331   0013E0  6A0B               	clrf	(??i2___flmul+2)^0,c
 11332   0013E2  6A0C               	clrf	(??i2___flmul+3)^0,c
 11333   0013E4  C00B  F00C         	movff	??i2___flmul+2,??i2___flmul+3
 11334   0013E8  C00A  F00B         	movff	??i2___flmul+1,??i2___flmul+2
 11335   0013EC  C009  F00A         	movff	??i2___flmul,??i2___flmul+1
 11336   0013F0  6A09               	clrf	??i2___flmul^0,c
 11337   0013F2  5009               	movf	??i2___flmul^0,w,c
 11338   0013F4  2614               	addwf	i2___flmul@prod^0,f,c
 11339   0013F6  500A               	movf	(??i2___flmul+1)^0,w,c
 11340   0013F8  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11341   0013FA  500B               	movf	(??i2___flmul+2)^0,w,c
 11342   0013FC  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11343   0013FE  500C               	movf	(??i2___flmul+3)^0,w,c
 11344   001400  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11345                           
 11346                           ; BSR set to: 0
 11347   001402  5012               	movf	(i2___flmul@grs+3)^0,w,c
 11348   001404  2614               	addwf	i2___flmul@prod^0,f,c
 11349   001406  0E00               	movlw	0
 11350   001408  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11351   00140A  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11352   00140C  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11353                           
 11354                           ; BSR set to: 0
 11355   00140E  C011  F012         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 11356   001412  C010  F011         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 11357   001416  C00F  F010         	movff	i2___flmul@grs,i2___flmul@grs+1
 11358   00141A  6A0F               	clrf	i2___flmul@grs^0,c
 11359                           
 11360                           ; BSR set to: 0
 11361   00141C  500E               	movf	i2___flmul@aexp^0,w,c
 11362   00141E  C013  F009         	movff	i2___flmul@bexp,??i2___flmul
 11363   001422  6A0A               	clrf	(??i2___flmul+1)^0,c
 11364   001424  2609               	addwf	??i2___flmul^0,f,c
 11365   001426  0E00               	movlw	0
 11366   001428  220A               	addwfc	(??i2___flmul+1)^0,f,c
 11367   00142A  0E82               	movlw	130
 11368   00142C  2409               	addwf	??i2___flmul^0,w,c
 11369   00142E  6E18               	movwf	i2___flmul@temp^0,c
 11370   001430  0EFF               	movlw	255
 11371   001432  200A               	addwfc	(??i2___flmul+1)^0,w,c
 11372   001434  6E19               	movwf	(i2___flmul@temp+1)^0,c
 11373   001436  D00F               	goto	i2l4443
 11374   001438                     i2l4437:
 11375                           
 11376                           ; BSR set to: 0
 11377   001438  90D8               	bcf	status,0,c
 11378   00143A  3614               	rlcf	i2___flmul@prod^0,f,c
 11379   00143C  3615               	rlcf	(i2___flmul@prod+1)^0,f,c
 11380   00143E  3616               	rlcf	(i2___flmul@prod+2)^0,f,c
 11381   001440  3617               	rlcf	(i2___flmul@prod+3)^0,f,c
 11382                           
 11383                           ; BSR set to: 0
 11384   001442  BE12               	btfsc	(i2___flmul@grs+3)^0,7,c
 11385                           
 11386                           ; BSR set to: 0
 11387   001444  8014               	bsf	i2___flmul@prod^0,0,c
 11388                           
 11389                           ; BSR set to: 0
 11390   001446  90D8               	bcf	status,0,c
 11391   001448  360F               	rlcf	i2___flmul@grs^0,f,c
 11392   00144A  3610               	rlcf	(i2___flmul@grs+1)^0,f,c
 11393   00144C  3611               	rlcf	(i2___flmul@grs+2)^0,f,c
 11394   00144E  3612               	rlcf	(i2___flmul@grs+3)^0,f,c
 11395   001450  0618               	decf	i2___flmul@temp^0,f,c
 11396   001452  A0D8               	btfss	status,0,c
 11397   001454  0619               	decf	(i2___flmul@temp+1)^0,f,c
 11398   001456                     i2l4443:
 11399                           
 11400                           ; BSR set to: 0
 11401   001456  AE16               	btfss	(i2___flmul@prod+2)^0,7,c
 11402   001458  D7EF               	goto	i2l4437
 11403                           
 11404                           ; BSR set to: 0
 11405   00145A  6A0E               	clrf	i2___flmul@aexp^0,c
 11406   00145C  AE12               	btfss	(i2___flmul@grs+3)^0,7,c
 11407   00145E  D017               	goto	i2l970
 11408                           
 11409                           ; BSR set to: 0
 11410   001460  0EFF               	movlw	255
 11411   001462  140F               	andwf	i2___flmul@grs^0,w,c
 11412   001464  6E09               	movwf	??i2___flmul^0,c
 11413   001466  0EFF               	movlw	255
 11414   001468  1410               	andwf	(i2___flmul@grs+1)^0,w,c
 11415   00146A  6E0A               	movwf	(??i2___flmul+1)^0,c
 11416   00146C  0EFF               	movlw	255
 11417   00146E  1411               	andwf	(i2___flmul@grs+2)^0,w,c
 11418   001470  6E0B               	movwf	(??i2___flmul+2)^0,c
 11419   001472  0E7F               	movlw	127
 11420   001474  1412               	andwf	(i2___flmul@grs+3)^0,w,c
 11421   001476  6E0C               	movwf	(??i2___flmul+3)^0,c
 11422   001478  5009               	movf	??i2___flmul^0,w,c
 11423   00147A  100A               	iorwf	(??i2___flmul+1)^0,w,c
 11424   00147C  100B               	iorwf	(??i2___flmul+2)^0,w,c
 11425   00147E  100C               	iorwf	(??i2___flmul+3)^0,w,c
 11426   001480  B4D8               	btfsc	status,2,c
 11427   001482  D003               	goto	i2l971
 11428   001484                     i2u491_40:
 11429                           
 11430                           ; BSR set to: 0
 11431   001484  0E01               	movlw	1
 11432   001486  6E0E               	movwf	i2___flmul@aexp^0,c
 11433   001488  D002               	goto	i2l970
 11434   00148A                     i2l971:
 11435                           
 11436                           ; BSR set to: 0
 11437   00148A  B014               	btfsc	i2___flmul@prod^0,0,c
 11438   00148C  D7FB               	goto	i2u491_40
 11439   00148E                     i2l970:
 11440                           
 11441                           ; BSR set to: 0
 11442   00148E  500E               	movf	i2___flmul@aexp^0,w,c
 11443   001490  B4D8               	btfsc	status,2,c
 11444   001492  D01F               	goto	i2l4459
 11445                           
 11446                           ; BSR set to: 0
 11447   001494  0E01               	movlw	1
 11448   001496  2614               	addwf	i2___flmul@prod^0,f,c
 11449   001498  0E00               	movlw	0
 11450   00149A  2215               	addwfc	(i2___flmul@prod+1)^0,f,c
 11451   00149C  2216               	addwfc	(i2___flmul@prod+2)^0,f,c
 11452   00149E  2217               	addwfc	(i2___flmul@prod+3)^0,f,c
 11453                           
 11454                           ; BSR set to: 0
 11455   0014A0  A017               	btfss	(i2___flmul@prod+3)^0,0,c
 11456   0014A2  D017               	goto	i2l4459
 11457                           
 11458                           ; BSR set to: 0
 11459   0014A4  C014  F009         	movff	i2___flmul@prod,??i2___flmul
 11460   0014A8  C015  F00A         	movff	i2___flmul@prod+1,??i2___flmul+1
 11461   0014AC  C016  F00B         	movff	i2___flmul@prod+2,??i2___flmul+2
 11462   0014B0  C017  F00C         	movff	i2___flmul@prod+3,??i2___flmul+3
 11463   0014B4  340C               	rlcf	(??i2___flmul+3)^0,w,c
 11464   0014B6  320C               	rrcf	(??i2___flmul+3)^0,f,c
 11465   0014B8  320B               	rrcf	(??i2___flmul+2)^0,f,c
 11466   0014BA  320A               	rrcf	(??i2___flmul+1)^0,f,c
 11467   0014BC  3209               	rrcf	??i2___flmul^0,f,c
 11468   0014BE  C009  F014         	movff	??i2___flmul,i2___flmul@prod
 11469   0014C2  C00A  F015         	movff	??i2___flmul+1,i2___flmul@prod+1
 11470   0014C6  C00B  F016         	movff	??i2___flmul+2,i2___flmul@prod+2
 11471   0014CA  C00C  F017         	movff	??i2___flmul+3,i2___flmul@prod+3
 11472                           
 11473                           ; BSR set to: 0
 11474   0014CE  4A18               	infsnz	i2___flmul@temp^0,f,c
 11475   0014D0  2A19               	incf	(i2___flmul@temp+1)^0,f,c
 11476   0014D2                     i2l4459:
 11477                           
 11478                           ; BSR set to: 0
 11479   0014D2  BE19               	btfsc	(i2___flmul@temp+1)^0,7,c
 11480   0014D4  D00D               	goto	i2l4463
 11481   0014D6  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11482   0014D8  E103               	bnz	i2u495_40
 11483   0014DA  2818               	incf	i2___flmul@temp^0,w,c
 11484   0014DC  A0D8               	btfss	status,0,c
 11485   0014DE  D008               	goto	i2l4463
 11486   0014E0                     i2u495_40:
 11487                           
 11488                           ; BSR set to: 0
 11489   0014E0  0E00               	movlw	0
 11490   0014E2  6E14               	movwf	i2___flmul@prod^0,c
 11491   0014E4  0E00               	movlw	0
 11492   0014E6  6E15               	movwf	(i2___flmul@prod+1)^0,c
 11493   0014E8  0E80               	movlw	128
 11494   0014EA  6E16               	movwf	(i2___flmul@prod+2)^0,c
 11495   0014EC  0E7F               	movlw	127
 11496   0014EE  D01F               	goto	L37
 11497   0014F0                     i2l4463:
 11498                           
 11499                           ; BSR set to: 0
 11500   0014F0  BE19               	btfsc	(i2___flmul@temp+1)^0,7,c
 11501   0014F2  D005               	goto	i2u496_40
 11502   0014F4  5019               	movf	(i2___flmul@temp+1)^0,w,c
 11503   0014F6  E10D               	bnz	i2l978
 11504   0014F8  0418               	decf	i2___flmul@temp^0,w,c
 11505   0014FA  B0D8               	btfsc	status,0,c
 11506   0014FC  D00A               	goto	i2l978
 11507   0014FE                     i2u496_40:
 11508                           
 11509                           ; BSR set to: 0
 11510   0014FE  0E00               	movlw	0
 11511   001500  6E14               	movwf	i2___flmul@prod^0,c
 11512   001502  0E00               	movlw	0
 11513   001504  6E15               	movwf	(i2___flmul@prod+1)^0,c
 11514   001506  0E00               	movlw	0
 11515   001508  6E16               	movwf	(i2___flmul@prod+2)^0,c
 11516   00150A  0E00               	movlw	0
 11517   00150C  6E17               	movwf	(i2___flmul@prod+3)^0,c
 11518                           
 11519                           ; BSR set to: 0
 11520   00150E  6A0D               	clrf	i2___flmul@sign^0,c
 11521   001510  D00F               	goto	i2l4477
 11522   001512                     i2l978:
 11523                           
 11524                           ; BSR set to: 0
 11525   001512  C018  F013         	movff	i2___flmul@temp,i2___flmul@bexp
 11526                           
 11527                           ; BSR set to: 0
 11528   001516  0EFF               	movlw	255
 11529   001518  1614               	andwf	i2___flmul@prod^0,f,c
 11530   00151A  0EFF               	movlw	255
 11531   00151C  1615               	andwf	(i2___flmul@prod+1)^0,f,c
 11532   00151E  0E7F               	movlw	127
 11533   001520  1616               	andwf	(i2___flmul@prod+2)^0,f,c
 11534   001522  0E00               	movlw	0
 11535   001524  1617               	andwf	(i2___flmul@prod+3)^0,f,c
 11536                           
 11537                           ; BSR set to: 0
 11538   001526  B013               	btfsc	i2___flmul@bexp^0,0,c
 11539                           
 11540                           ; BSR set to: 0
 11541   001528  8E16               	bsf	(i2___flmul@prod+2)^0,7,c
 11542                           
 11543                           ; BSR set to: 0
 11544   00152A  90D8               	bcf	status,0,c
 11545   00152C  3013               	rrcf	i2___flmul@bexp^0,w,c
 11546   00152E                     L37:
 11547   00152E  6E17               	movwf	(i2___flmul@prod+3)^0,c
 11548   001530                     i2l4477:
 11549                           
 11550                           ; BSR set to: 0
 11551   001530  500D               	movf	i2___flmul@sign^0,w,c
 11552   001532  1217               	iorwf	(i2___flmul@prod+3)^0,f,c
 11553                           
 11554                           ; BSR set to: 0
 11555   001534  C014  F001         	movff	i2___flmul@prod,?i2___flmul
 11556   001538  C015  F002         	movff	i2___flmul@prod+1,?i2___flmul+1
 11557   00153C  C016  F003         	movff	i2___flmul@prod+2,?i2___flmul+2
 11558   001540  C017  F004         	movff	i2___flmul@prod+3,?i2___flmul+3
 11559                           
 11560                           ; BSR set to: 0
 11561   001544  0012               	return		;funcret
 11562   001546                     __end_ofi2___flmul:
 11563                           	callstack 0
 11564                           
 11565 ;; *************** function i2_adcSampling *****************
 11566 ;; Defined at:
 11567 ;;		line 139 in file "main.c"
 11568 ;; Parameters:    Size  Location     Type
 11569 ;;		None
 11570 ;; Auto vars:     Size  Location     Type
 11571 ;;		None
 11572 ;; Return value:  Size  Location     Type
 11573 ;;                  1    wreg      void 
 11574 ;; Registers used:
 11575 ;;		wreg, status,2
 11576 ;; Tracked objects:
 11577 ;;		On entry : 3F/0
 11578 ;;		On exit  : 3F/0
 11579 ;;		Unchanged: 0/0
 11580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11581 ;;      Params:         0       0       0       0
 11582 ;;      Locals:         0       0       0       0
 11583 ;;      Temps:          2       0       0       0
 11584 ;;      Totals:         2       0       0       0
 11585 ;;Total ram usage:        2 bytes
 11586 ;; Hardware stack levels used: 1
 11587 ;; This function calls:
 11588 ;;		Nothing
 11589 ;; This function is called by:
 11590 ;;		_ISR
 11591 ;; This function uses a non-reentrant model
 11592 ;;
 11593                           
 11594                           	psect	text56
 11595   0030A6                     __ptext56:
 11596                           	callstack 0
 11597   0030A6                     i2_adcSampling:
 11598                           	callstack 21
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;main.c: 141:     sampling = 1;
 11602                           
 11603                           ; BSR set to: 0
 11604                           ;incstack = 0
 11605   0030A6  0E01               	movlw	1
 11606   0030A8  6FFE               	movwf	_sampling& (0+255),b
 11607                           
 11608                           ; BSR set to: 0
 11609                           ;main.c: 144:     ADCON0bits.GO = 1;
 11610   0030AA  82C2               	bsf	194,1,c	;volatile
 11611   0030AC                     i2l159:
 11612                           
 11613                           ; BSR set to: 0
 11614   0030AC  B2C2               	btfsc	194,1,c	;volatile
 11615   0030AE  D7FE               	goto	i2l159
 11616                           
 11617                           ; BSR set to: 0
 11618                           ;main.c: 148:     adcResult = ((uint16_t)ADRESH << 8) | ADRESL;
 11619   0030B0  50C4               	movf	196,w,c	;volatile
 11620   0030B2  6E01               	movwf	??i2_adcSampling^0,c
 11621   0030B4  50C3               	movf	195,w,c	;volatile
 11622   0030B6  6FF6               	movwf	_adcResult& (0+255),b
 11623   0030B8  C001  F0F7         	movff	??i2_adcSampling,_adcResult+1
 11624                           
 11625                           ; BSR set to: 0
 11626   0030BC  0012               	return		;funcret
 11627   0030BE                     __end_ofi2_adcSampling:
 11628                           	callstack 0
 11629                           
 11630 ;; *************** function i2_EUSART_TransmitString *****************
 11631 ;; Defined at:
 11632 ;;		line 663 in file "main.c"
 11633 ;; Parameters:    Size  Location     Type
 11634 ;;  a               2    1[COMRAM] PTR unsigned char 
 11635 ;;		 -> STR_7(3), STR_5(7), STR_4(9), STR_3(3), 
 11636 ;;		 -> uart_buffer(10), STR_1(9), 
 11637 ;; Auto vars:     Size  Location     Type
 11638 ;;  i               2    5[COMRAM] int 
 11639 ;; Return value:  Size  Location     Type
 11640 ;;                  1    wreg      void 
 11641 ;; Registers used:
 11642 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11643 ;; Tracked objects:
 11644 ;;		On entry : 3F/0
 11645 ;;		On exit  : 0/0
 11646 ;;		Unchanged: 0/0
 11647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11648 ;;      Params:         2       0       0       0
 11649 ;;      Locals:         2       0       0       0
 11650 ;;      Temps:          2       0       0       0
 11651 ;;      Totals:         6       0       0       0
 11652 ;;Total ram usage:        6 bytes
 11653 ;; Hardware stack levels used: 1
 11654 ;; Hardware stack levels required when called: 1
 11655 ;; This function calls:
 11656 ;;		i2_EUSART_TransmitChar
 11657 ;; This function is called by:
 11658 ;;		_ISR
 11659 ;; This function uses a non-reentrant model
 11660 ;;
 11661                           
 11662                           	psect	text57
 11663   002ADA                     __ptext57:
 11664                           	callstack 0
 11665   002ADA                     i2_EUSART_TransmitString:
 11666                           	callstack 20
 11667                           
 11668                           ; BSR set to: 0
 11669                           ;main.c: 664:     int i;;main.c: 665:     for( i= 0; a[i] !='\0'; i++ ){
 11670                           
 11671                           ; BSR set to: 0
 11672                           ;incstack = 0
 11673   002ADA  0E00               	movlw	0
 11674   002ADC  6E07               	movwf	(i2EUSART_TransmitString@i+1)^0,c
 11675   002ADE  0E00               	movlw	0
 11676   002AE0  6E06               	movwf	i2EUSART_TransmitString@i^0,c
 11677   002AE2  D01A               	goto	i2l4715
 11678   002AE4                     i2l4711:
 11679                           
 11680                           ;main.c: 666:        EUSART_TransmitChar(a[i]);
 11681   002AE4  5006               	movf	i2EUSART_TransmitString@i^0,w,c
 11682   002AE6  2402               	addwf	i2EUSART_TransmitString@a^0,w,c
 11683   002AE8  6E04               	movwf	??i2_EUSART_TransmitString^0,c
 11684   002AEA  5007               	movf	(i2EUSART_TransmitString@i+1)^0,w,c
 11685   002AEC  2003               	addwfc	(i2EUSART_TransmitString@a+1)^0,w,c
 11686   002AEE  6E05               	movwf	(??i2_EUSART_TransmitString+1)^0,c
 11687   002AF0  C004  FFF6         	movff	??i2_EUSART_TransmitString,tblptrl
 11688   002AF4  C005  FFF7         	movff	??i2_EUSART_TransmitString+1,tblptrh
 11689   002AF8  6AF8               	clrf	tblptru,c
 11690   002AFA  0E02               	movlw	(high __ramtop+-1)
 11691   002AFC  64F7               	cpfsgt	tblptrh,c
 11692   002AFE  D003               	bra	i2u524_47
 11693   002B00  0008               	tblrd		*
 11694   002B02  50F5               	movf	tablat,w,c
 11695   002B04  D005               	bra	i2u524_40
 11696   002B06                     i2u524_47:
 11697   002B06  CFF6 FFE1          	movff	tblptrl,fsr1l
 11698   002B0A  CFF7 FFE2          	movff	tblptrh,fsr1h
 11699   002B0E  50E7               	movf	indf1,w,c
 11700   002B10                     i2u524_40:
 11701   002B10  EC87  F018         	call	i2_EUSART_TransmitChar
 11702                           
 11703                           ;main.c: 667:     }
 11704   002B14  4A06               	infsnz	i2EUSART_TransmitString@i^0,f,c
 11705   002B16  2A07               	incf	(i2EUSART_TransmitString@i+1)^0,f,c
 11706   002B18                     i2l4715:
 11707   002B18  5006               	movf	i2EUSART_TransmitString@i^0,w,c
 11708   002B1A  2402               	addwf	i2EUSART_TransmitString@a^0,w,c
 11709   002B1C  6E04               	movwf	??i2_EUSART_TransmitString^0,c
 11710   002B1E  5007               	movf	(i2EUSART_TransmitString@i+1)^0,w,c
 11711   002B20  2003               	addwfc	(i2EUSART_TransmitString@a+1)^0,w,c
 11712   002B22  6E05               	movwf	(??i2_EUSART_TransmitString+1)^0,c
 11713   002B24  C004  FFF6         	movff	??i2_EUSART_TransmitString,tblptrl
 11714   002B28  C005  FFF7         	movff	??i2_EUSART_TransmitString+1,tblptrh
 11715   002B2C  6AF8               	clrf	tblptru,c
 11716   002B2E  0E02               	movlw	(high __ramtop+-1)
 11717   002B30  64F7               	cpfsgt	tblptrh,c
 11718   002B32  D003               	bra	i2u525_47
 11719   002B34  0008               	tblrd		*
 11720   002B36  50F5               	movf	tablat,w,c
 11721   002B38  D005               	bra	i2u525_40
 11722   002B3A                     i2u525_47:
 11723   002B3A  CFF6 FFE1          	movff	tblptrl,fsr1l
 11724   002B3E  CFF7 FFE2          	movff	tblptrh,fsr1h
 11725   002B42  50E7               	movf	indf1,w,c
 11726   002B44                     i2u525_40:
 11727   002B44  0900               	iorlw	0
 11728   002B46  B4D8               	btfsc	status,2,c
 11729   002B48  0012               	return	
 11730   002B4A  D7CC               	goto	i2l4711
 11731   002B4C                     __end_ofi2_EUSART_TransmitString:
 11732                           	callstack 0
 11733                           
 11734 ;; *************** function i2_EUSART_TransmitChar *****************
 11735 ;; Defined at:
 11736 ;;		line 658 in file "main.c"
 11737 ;; Parameters:    Size  Location     Type
 11738 ;;  data            1    wreg     unsigned char 
 11739 ;; Auto vars:     Size  Location     Type
 11740 ;;  data            1    0[COMRAM] unsigned char 
 11741 ;; Return value:  Size  Location     Type
 11742 ;;                  1    wreg      void 
 11743 ;; Registers used:
 11744 ;;		wreg
 11745 ;; Tracked objects:
 11746 ;;		On entry : 0/0
 11747 ;;		On exit  : 0/0
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11750 ;;      Params:         0       0       0       0
 11751 ;;      Locals:         1       0       0       0
 11752 ;;      Temps:          0       0       0       0
 11753 ;;      Totals:         1       0       0       0
 11754 ;;Total ram usage:        1 bytes
 11755 ;; Hardware stack levels used: 1
 11756 ;; This function calls:
 11757 ;;		Nothing
 11758 ;; This function is called by:
 11759 ;;		i2_EUSART_TransmitString
 11760 ;; This function uses a non-reentrant model
 11761 ;;
 11762                           
 11763                           	psect	text58
 11764   00310E                     __ptext58:
 11765                           	callstack 0
 11766   00310E                     i2_EUSART_TransmitChar:
 11767                           	callstack 20
 11768                           
 11769                           ;incstack = 0
 11770                           ;i2EUSART_TransmitChar@data stored from wreg
 11771   00310E  6E01               	movwf	i2EUSART_TransmitChar@data^0,c
 11772   003110                     
 11773                           ;main.c: 659:     while (!TXSTAbits.TRMT);
 11774   003110  A2AC               	btfss	172,1,c	;volatile
 11775   003112  D7FE               	goto	i2l4269
 11776                           
 11777                           ;main.c: 660:     TXREG = data;
 11778   003114  C001  FFAD         	movff	i2EUSART_TransmitChar@data,4013	;volatile
 11779   003118  0012               	return		;funcret
 11780   00311A                     __end_ofi2_EUSART_TransmitChar:
 11781                           	callstack 0
 11782                           
 11783                           	psect	rparam
 11784   000001                     ___rparam_used  equ	1
 11785   000000                     ___param_bank   equ	0
 11786   000000                     __Lparam        equ	__Lrparam
 11787   000000                     __Hparam        equ	__Hrparam
 11788                           
 11789                           	psect	temp
 11790   00004E                     btemp:
 11791                           	callstack 0
 11792   00004E                     	ds	1
 11793   00004E                     int$flags       set	btemp
 11794   00004F                     wtemp8          set	btemp+1
 11795   00004F                     ttemp5          set	btemp+1
 11796   000052                     ttemp6          set	btemp+4
 11797   000056                     ttemp7          set	btemp+8
 11798                           
 11799                           	psect	config
 11800                           
 11801                           ;Config register CONFIG1L @ 0x300000
 11802                           ;	CPU System Clock Selection bits
 11803                           ;	CPUDIV = NOCLKDIV, No CPU System Clock divide
 11804                           ;	USB Clock Selection bit
 11805                           ;	USBDIV = OFF, USB clock comes directly from the OSC1/OSC2 oscillator block; no divide
 11806   300000                     	org	3145728
 11807   300000  00                 	db	0
 11808                           
 11809                           ;Config register CONFIG1H @ 0x300001
 11810                           ;	Oscillator Selection bits
 11811                           ;	FOSC = IRC, Internal RC oscillator
 11812                           ;	4 X PLL Enable bit
 11813                           ;	PLLEN = OFF, PLL is under software control
 11814                           ;	Primary Clock Enable bit
 11815                           ;	PCLKEN = ON, Primary clock enabled
 11816                           ;	Fail-Safe Clock Monitor Enable
 11817                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 11818                           ;	Internal/External Oscillator Switchover bit
 11819                           ;	IESO = ON, Oscillator Switchover mode enabled
 11820   300001                     	org	3145729
 11821   300001  E8                 	db	232
 11822                           
 11823                           ;Config register CONFIG2L @ 0x300002
 11824                           ;	Power-up Timer Enable bit
 11825                           ;	PWRTEN = OFF, PWRT disabled
 11826                           ;	Brown-out Reset Enable bits
 11827                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11828                           ;	Brown-out Reset Voltage bits
 11829                           ;	BORV = 19, VBOR set to 1.9 V nominal
 11830   300002                     	org	3145730
 11831   300002  1F                 	db	31
 11832                           
 11833                           ;Config register CONFIG2H @ 0x300003
 11834                           ;	Watchdog Timer Enable bit
 11835                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 11836                           ;	Watchdog Timer Postscale Select bits
 11837                           ;	WDTPS = 32768, 1:32768
 11838   300003                     	org	3145731
 11839   300003  1E                 	db	30
 11840                           
 11841                           ; Padding undefined space
 11842   300004                     	org	3145732
 11843   300004  FF                 	db	255
 11844                           
 11845                           ;Config register CONFIG3H @ 0x300005
 11846                           ;	HFINTOSC Fast Start-up bit
 11847                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 11848                           ;	MCLR Pin Enable bit
 11849                           ;	MCLRE = ON, MCLR pin enabled; RA3 input pin disabled
 11850   300005                     	org	3145733
 11851   300005  88                 	db	136
 11852                           
 11853                           ;Config register CONFIG4L @ 0x300006
 11854                           ;	Stack Full/Underflow Reset Enable bit
 11855                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11856                           ;	Single-Supply ICSP Enable bit
 11857                           ;	LVP = OFF, Single-Supply ICSP disabled
 11858                           ;	Boot Block Size Select bit
 11859                           ;	BBSIZ = OFF, 1kW boot block size
 11860                           ;	Extended Instruction Set Enable bit
 11861                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11862                           ;	Background Debugger Enable bit
 11863                           ;	DEBUG = 0x1, unprogrammed default
 11864   300006                     	org	3145734
 11865   300006  81                 	db	129
 11866                           
 11867                           ; Padding undefined space
 11868   300007                     	org	3145735
 11869   300007  FF                 	db	255
 11870                           
 11871                           ;Config register CONFIG5L @ 0x300008
 11872                           ;	Code Protection bit
 11873                           ;	CP0 = OFF, Block 0 not code-protected
 11874                           ;	Code Protection bit
 11875                           ;	CP1 = OFF, Block 1 not code-protected
 11876   300008                     	org	3145736
 11877   300008  03                 	db	3
 11878                           
 11879                           ;Config register CONFIG5H @ 0x300009
 11880                           ;	Boot Block Code Protection bit
 11881                           ;	CPB = OFF, Boot block not code-protected
 11882                           ;	Data EEPROM Code Protection bit
 11883                           ;	CPD = OFF, Data EEPROM not code-protected
 11884   300009                     	org	3145737
 11885   300009  C0                 	db	192
 11886                           
 11887                           ;Config register CONFIG6L @ 0x30000A
 11888                           ;	Table Write Protection bit
 11889                           ;	WRT0 = OFF, Block 0 not write-protected
 11890                           ;	Table Write Protection bit
 11891                           ;	WRT1 = OFF, Block 1 not write-protected
 11892   30000A                     	org	3145738
 11893   30000A  03                 	db	3
 11894                           
 11895                           ;Config register CONFIG6H @ 0x30000B
 11896                           ;	Configuration Register Write Protection bit
 11897                           ;	WRTC = OFF, Configuration registers not write-protected
 11898                           ;	Boot Block Write Protection bit
 11899                           ;	WRTB = OFF, Boot block not write-protected
 11900                           ;	Data EEPROM Write Protection bit
 11901                           ;	WRTD = OFF, Data EEPROM not write-protected
 11902   30000B                     	org	3145739
 11903   30000B  E0                 	db	224
 11904                           
 11905                           ;Config register CONFIG7L @ 0x30000C
 11906                           ;	Table Read Protection bit
 11907                           ;	EBTR0 = OFF, Block 0 not protected from table reads executed in other blocks
 11908                           ;	Table Read Protection bit
 11909                           ;	EBTR1 = OFF, Block 1 not protected from table reads executed in other blocks
 11910   30000C                     	org	3145740
 11911   30000C  03                 	db	3
 11912                           
 11913                           ;Config register CONFIG7H @ 0x30000D
 11914                           ;	Boot Block Table Read Protection bit
 11915                           ;	EBTRB = OFF, Boot block not protected from table reads executed in other blocks
 11916   30000D                     	org	3145741
 11917   30000D  40                 	db	64
 11918                           tosu	equ	0xFFF
 11919                           tosh	equ	0xFFE
 11920                           tosl	equ	0xFFD
 11921                           stkptr	equ	0xFFC
 11922                           pclatu	equ	0xFFB
 11923                           pclath	equ	0xFFA
 11924                           pcl	equ	0xFF9
 11925                           tblptru	equ	0xFF8
 11926                           tblptrh	equ	0xFF7
 11927                           tblptrl	equ	0xFF6
 11928                           tablat	equ	0xFF5
 11929                           prodh	equ	0xFF4
 11930                           prodl	equ	0xFF3
 11931                           indf0	equ	0xFEF
 11932                           postinc0	equ	0xFEE
 11933                           postdec0	equ	0xFED
 11934                           preinc0	equ	0xFEC
 11935                           plusw0	equ	0xFEB
 11936                           fsr0h	equ	0xFEA
 11937                           fsr0l	equ	0xFE9
 11938                           wreg	equ	0xFE8
 11939                           indf1	equ	0xFE7
 11940                           postinc1	equ	0xFE6
 11941                           postdec1	equ	0xFE5
 11942                           preinc1	equ	0xFE4
 11943                           plusw1	equ	0xFE3
 11944                           fsr1h	equ	0xFE2
 11945                           fsr1l	equ	0xFE1
 11946                           bsr	equ	0xFE0
 11947                           indf2	equ	0xFDF
 11948                           postinc2	equ	0xFDE
 11949                           postdec2	equ	0xFDD
 11950                           preinc2	equ	0xFDC
 11951                           plusw2	equ	0xFDB
 11952                           fsr2h	equ	0xFDA
 11953                           fsr2l	equ	0xFD9
 11954                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    0
    Data        4
    BSS         139
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      77
    BANK0           160    130     159
    BANK1           256     14      94
    BANK2           256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    EUSART_TransmitString@a	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[9]), STR_3(CODE[3]), STR_4(CODE[9]), STR_5(CODE[7]), 
		 -> STR_7(CODE[3]), uart_buffer(COMRAM[10]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S1626$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    S1626$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> uart_buffer(COMRAM[10]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_11(CODE[4]), STR_8(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_6(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    i2_show7Segment->i2_displayDigits
    i2_setDisplayDigits->i2___fltol
    i2___fltol->i2___flmul
    i2_EUSART_TransmitString->i2_EUSART_TransmitChar

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _show7Segment->_displayDigits
    _setDisplayDigits->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _EUSART_TransmitString->_EUSART_TransmitChar
    _EEPROMWrite->_getHighByte
    _EEPROMWrite->_getLowByte
    _EEPROMRead->_getHighByte
    _EEPROMRead->_getLowByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   36188
                                            128 BANK0      2     2      0
                                             12 BANK1      2     2      0
                         _EEPROMRead
                        _EEPROMWrite
              _EUSART_TransmitString
                            ___flmul
                           ___xxtofl
                        _adcSampling
                        _getHighByte
                         _getLowByte
                 _setButtonInterrupt
                   _setDisplayDigits
                           _setupADC
                        _setupEUSART
                           _setupI2C
                        _setupTimer1
                       _show7Segment
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   25766
                                            122 BANK0      6     0      6
                                              0 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   25272
                                            116 BANK0      6     1      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     8      5   24918
                                            104 BANK0     12     7      5
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   8     5      3     372
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   23056
                                             51 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     164
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     3      6    1458
                                             16 BANK0      9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     670
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     464
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     308
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     144
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     690
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     282
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4302
                                             39 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4188
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      96
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     420
                                             39 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     204
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2466
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (1) _show7Segment                                         0     0      0     600
                      _displayDigits
                 _get7SegmentPattern
 ---------------------------------------------------------------------------------
 (2) _get7SegmentPattern                                   2     2      0     213
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _displayDigits                                        7     5      2     387
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _setupTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupEUSART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setDisplayDigits                                     0     0      0    4518
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     360
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     390
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     504
                                             39 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3264
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _setButtonInterrupt                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcSampling                                          2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     744
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _EUSART_TransmitString                                6     4      2     285
                                              1 BANK0      6     4      2
                _EUSART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _EUSART_TransmitChar                                  1     1      0      69
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EEPROMWrite                                          4     1      3     363
                                              2 BANK0      4     1      3
                           _I2CStart
                            _I2CStop
                           _I2CWrite
                        _getHighByte
                         _getLowByte
 ---------------------------------------------------------------------------------
 (1) _EEPROMRead                                           3     1      2     420
                                              2 BANK0      3     1      2
                            _I2CRead
                         _I2CRestart
                           _I2CStart
                            _I2CStop
                           _I2CWrite
                        _getHighByte
                         _getLowByte
 ---------------------------------------------------------------------------------
 (1) _getLowByte                                           2     0      2      60
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getHighByte                                          2     0      2      72
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2CWrite                                             1     1      0      69
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2CStop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CStart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CRestart                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2CRead                                              1     1      0      69
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  8     8      0    2412
                                             35 COMRAM     8     8      0
            i2_EUSART_TransmitString
                      i2_adcSampling
                 i2_setDisplayDigits
                     i2_show7Segment
 ---------------------------------------------------------------------------------
 (10) i2_show7Segment                                      0     0      0     255
                    i2_displayDigits
               i2_get7SegmentPattern
 ---------------------------------------------------------------------------------
 (11) i2_get7SegmentPattern                                2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) i2_displayDigits                                     7     5      2     187
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) i2_setDisplayDigits                                  0     0      0    2037
                          i2___flmul
                          i2___fltol
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     165
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     170
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) i2___fltol                                          10     6      4     231
                                             25 COMRAM    10     6      4
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___flmul                                          25    17      8    1471
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (10) i2_adcSampling                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) i2_EUSART_TransmitString                             6     4      2     120
                                              1 COMRAM     6     4      2
              i2_EUSART_TransmitChar
 ---------------------------------------------------------------------------------
 (11) i2_EUSART_TransmitChar                               1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMRead
     _I2CRead
     _I2CRestart
     _I2CStart
     _I2CStop
     _I2CWrite
     _getHighByte
     _getLowByte
   _EEPROMWrite
     _I2CStart
     _I2CStop
     _I2CWrite
     _getHighByte
     _getLowByte
   _EUSART_TransmitString
     _EUSART_TransmitChar
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _adcSampling
   _getHighByte
   _getLowByte
   _setButtonInterrupt
   _setDisplayDigits
     ___flmul
     ___fltol
       ___flmul (ARG)
     ___lwdiv
     ___lwmod
   _setupADC
   _setupEUSART
   _setupI2C
   _setupTimer1
   _show7Segment
     _displayDigits
     _get7SegmentPattern
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width

 _ISR (ROOT)
   i2_EUSART_TransmitString
     i2_EUSART_TransmitChar
   i2_adcSampling
   i2_setDisplayDigits
     i2___flmul
     i2___fltol
       i2___flmul (ARG)
     i2___lwdiv
     i2___lwmod
   i2_show7Segment
     i2_displayDigits
     i2_get7SegmentPattern

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM             767      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256     14      94     36.7%
BITBANK0           160      0       0      0.0%
BANK0              160    130     159     99.4%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     43      77     81.9%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlll        43      0       0      0.0%
BITBIGSFRlh         35      0       0      0.0%
BITBIGSFRllh        10      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     324      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Dec 29 13:23:12 2024

                   ___fldiv@aexp 0078                     ___fldiv@bexp 0077                     ___fldiv@sign 0070  
          i2_EUSART_TransmitChar 310E                      _SSPSTATbits 0FC7                 _address_low_byte 003D  
             i2___lwdiv@dividend 0001                              l240 2756                              l219 0ED8  
                            l271 311C                              l159 3078                              l336 1CAA  
                            l256 26EC                              l265 3124                              l283 30EA  
                            l292 3032                              l612 2370                              l277 312C  
                            l295 3048                              l901 17C0                              l902 17BC  
                            l931 19C2                              l908 1828                              l838 2C3E  
                            l942 1A2E                              l943 1A2A                              l848 2F10  
                            l961 0F76                              l970 1166                              l971 1162  
                            l892 175C                              l876 168A                              l877 1668  
                            l978 11EA                              _ISR 0008                              _pad 2B4C  
                __end_of_I2CRead 3050                  __end_of_I2CStop 3122                              wreg 0FE8  
                    i2___flmul@a 0005                      i2___flmul@b 0001                   ?_displayDigits 0060  
                   ___flmul@aexp 007B                     ___flmul@bexp 007C                     ___flmul@sign 007A  
                   ___flmul@temp 0085                     ___flmul@prod 0081                             ?_ISR 0001  
                   ___fltol@exp1 0090                             l1002 21DA                             l1100 09A4  
                           l1009 2258                             l1052 2B58                             l1126 20BE  
                           l1072 0488                             l1163 1F9A                             l7011 2344  
                           l7021 23A8                             l7101 242E                             ?_pad 0070  
                           l7015 235A                             l7007 2310                             l7113 2FD6  
                           l7107 246E                             l7203 03FC                             l7029 301A  
                           l7213 0430                             l7221 0446                             l7055 259C  
                           l7039 2552                             l7143 1FF2                             l7119 2D52  
                           l7073 25DC                             l7065 25B4                             l7129 1F00  
                           l7153 2DDE                             l7161 2DFE                             l7081 2B62  
                           l7067 25C0                             l7059 25AC                             l6603 1676  
                           l6531 1578                             l7147 2020                             l7139 1FBC  
                           l6507 2962                             l7323 099C                             l7171 035E  
                           l7411 209A                             l6605 167A                             l6533 1588  
                           l7085 2B7A                             l7309 08E6                             l7253 0612  
                           l7229 049C                             l7181 0382                             l7421 20C2  
                           l6551 15BC                             l6527 1572                             l6711 2FA0  
                           l7335 09CC                             l7343 09EC                             l7319 0912  
                           l7255 061A                             l7239 056A                             l7247 05D4  
                           l7431 2114                             l7423 20D8                             l7415 20B4  
                           l7601 2AA6                             l7505 2484                             l7097 2424  
                           l7265 064A                             l7185 038E                             l7441 215A  
                           l7433 2122                             l7425 20EC                             l7417 20B8  
                           l6811 19F6                             l6627 16D0                             l6619 16AE  
                           l6563 15E2                             l6555 15C2                             l6715 2FB6  
                           l7275 0684                             l7283 0778                             l7195 03C2  
                           l7435 212E                             l7443 216C                             l7621 1B9C  
                           l6805 19D8                             l6733 1880                             l6629 16D4  
                           l6637 16E6                             l6557 15D2                             l7269 065A  
                           l7197 03D6                             l7607 1AE8                             l7471 26BE  
                           l7463 26AE                             l6831 1A96                             l6735 1890  
                           l6655 1780                             l6671 17A0                             l6647 174C  
                           l7359 0AA6                             l7391 28FE                             l7447 2176  
                           l7537 30F8                             l7481 26D2                             l7473 26C2  
                           l7465 26B2                             l6761 18F6                             l6753 18C2  
                           l6729 187A                             l6665 1796                             l6593 161E  
                           l7377 0B48                             l7297 0822                             l7547 2C0C  
                           l7635 1C3E                             l7491 26E2                             l7483 26D6  
                           l7475 26C6                             l7467 26B6                             l6843 1ACA  
                           l6827 1A72                             l6755 18D2                             l7395 2924  
                           l7805 22CA                             l6941 112E                             l7549 2C14  
                           l7653 1C94                             l7645 1C68                             l7493 26E6  
                           l7485 26DA                             l7477 26CA                             l7469 26BA  
                           l6845 1ACC                             l6837 1ABE                             l6749 18BC  
                           l7581 2F62                             l6935 1110                             l7559 2C34  
                           l7575 2F06                             l7567 2EE6                             l7639 1C54  
                           l7487 26DE                             l7479 26CE                             l6775 1924  
                           l6767 190C                             l6687 1806                             l7583 2F7A  
                           l6961 11C8                             l6865 0F22                             l7569 2EEE  
                           l7649 1C7E                             l7497 26F0                             l6793 199A  
                           l6785 1972                             l6697 1830                             l6883 0F62  
                           l6867 0F26                             l7667 2EB8                             l6699 1832  
                           l7931 0DC8                             l7915 0D78                             l7597 2A6E  
                           l7781 2240                             l6957 11AA                             l6893 0F94  
                           l6885 0F66                             l6869 0F36                             l7925 0DA2  
                           l7775 2208                             l6975 1208                             l6799 19C0  
                           l6991 2A0E                             l7777 220E                             l7769 21EA  
                           l7953 0E94                             l7787 227E                             l7779 221A  
                           l6995 2A42                             l7955 0E9E                             l7859 0BE0  
                           l7789 228A                             l6999 2A60                             l7959 0EA6  
                           l7895 0CC8                             l7889 0CAE                             STR_1 0301  
                           STR_2 0311                             STR_3 030E                             STR_4 0301  
                           STR_5 030A                             STR_6 0311                             STR_7 030E  
                           STR_8 0316                             u8100 17A4                             u8120 17B6  
                           u9100 0500                             u9120 0558                             u8180 1812  
                           u9300 0ACA                             u9220 0812                             u9140 05FC  
                           u8430 1A80                             u9310 0B26                             u8440 1AA4  
                           u7800 295A                             u9320 0B28                             u8610 11B8  
                           u8530 0F82                             u9250 097E                             u8620 11D6  
                           u9420 2526                             u9404 24BC                             u7820 29A2  
                           u9405 24B8                             u9414 24E2                             u8390 1A24  
                           u9350 2940                             u9415 24DE                             u9600 2A9C  
                           u7920 163E                             u9610 2AD2                             u8570 115C  
                           u8730 2540                             u9530 2C18                             u7930 164E  
                           u9460 30EE                             u8740 2570                             u8660 2A5C  
                           u7940 1650                             u8820 23EA                             u8910 1ECE  
                           u9607 2A92                             u9800 2294                             u9560 2EF2  
                           u8920 1EEE                             u9617 2AC8                             u8745 2566  
                           u8825 23E0                             u9394 2494                             u9730 2EB2  
                           u7970 1692                             u9395 2490                             u8915 1EC4  
                           u8780 25C6                             u8870 2466                             u9495 3044  
                           u9496 3046                             u8880 2468                             u8960 1F80  
                           u8865 2448                             u8945 1F18                             u8946 1F1E  
                           u8947 1F2C                             u8980 1FDA                             u8965 1F76  
                           u8985 1FD0                             _TMR1 0FCE                             u9957 0B8A  
                           u9967 0BAA                             u9977 0CBA                             u9987 0D64  
                           u9997 0EC4                   i2_show7Segment 2E10          i2_EUSART_TransmitString 2ADA  
                           _dbuf 0100                             _labs 2D3C                             _main 0B72  
                           _prec 00F0                             pad@i 0077                             pad@p 0074  
                           fsr1h 0FE2               i2___lwdiv@quotient 0005                             fsr2h 0FDA  
                           indf1 0FE7                             indf2 0FDF                             fsr1l 0FE1  
                           fsr2l 0FD9                             btemp 004E                 __end_of_I2CStart 312A  
               __end_of_I2CWrite 30F4                    ___fpclassifyf 23AC                             prodh 0FF4  
                           prodl 0FF3                             start 019E                     i2___fltol@f1 001A  
                ___fldiv@new_exp 0071                     ___param_bank 0000                            ??_ISR 0024  
            displayDigits@digit0 0064              displayDigits@digit1 0060              displayDigits@digit2 0061  
                          ??_pad 0076                    ___fltol@sign1 008F                            ?_labs 0060  
                __end_of___fladd 184E                            ?_main 0001                  __end_of___fldiv 1AD4  
                __end_of___flneg 302C                            STR_11 031A                  __end_of___flmul 121E  
                __end_of___flsub 2DCC                  __end_of___fltol 25EE                            _ANSEL 0F7E  
                          u10007 0EE6                            u10017 2500                            u10027 250A  
                          u10037 252A                            u10047 2C8E                  EEPROMWrite@data 0064  
                          _T1CON 0FCD                  __end_of___lwdiv 2C48                            i2l200 017A  
                __end_of___lwmod 2F1A                            i2l240 28B6                            i2l159 30AC  
                          i2l336 1E84                            i2l256 284E                            i2l185 00D8  
                          i2l177 0112                            i2l838 2CE2                            i2l848 2F52  
                          i2l961 129E                            i2l970 148E                            i2l971 148A  
                          i2l978 1512                     vfpfcnvrt@fmt 00CA                            _SPBRG 0FAF  
                          _TRISA 0F92                            _TXREG 0FAD         i2EUSART_TransmitString@a 0002  
       i2EUSART_TransmitString@i 0006                            _flags 00F8              read_prec_or_width@c 0065  
            read_prec_or_width@n 0066                            _fputc 294A                            _fputs 2F96  
                          labs@a 0060                            pad@fp 0070                            _width 00EE  
                          _putch 3140           __end_ofi2_show7Segment 2E54                            tablat 0FF5  
                          ttemp5 004F                            ttemp6 0052                            ttemp7 0056  
                          status 0FD8                            wtemp8 004F                  __end_of_sprintf 2E96  
                 ?___fpclassifyf 0060                    i2___flmul@grs 000F                    i2_adcSampling 30A6  
                __initialization 2BA4           ?i2_EUSART_TransmitChar 0001                     __end_of_labs 2D86  
                   __end_of_main 0EF6                ??i2_displayDigits 0003                        ??_I2CRead 0060  
                      ??_I2CStop 0060                           ??_labs 0064                           ??_main 00E0  
                  __activetblptr 0002                  ??_displayDigits 0062        i2get7SegmentPattern@digit 0001  
     __end_of_read_prec_or_width 294A                           _ADCON0 0FC2                           _ADCON1 0FC1  
                         _ADCON2 0FC0                           ?_fputc 0060                           ?_fputs 0069  
                         _ADRESH 0FC4                           _ADRESL 0FC3        ??i2_EUSART_TransmitString 0004  
             _get7SegmentPattern 26A8                           ?_putch 0001                     ??_I2CRestart 0060  
                ?i2_show7Segment 0001                           i2l4211 2814                           i2l4221 2828  
                         i2l4213 2818                           i2l4231 283C                           i2l4223 282C  
                         i2l4215 281C                           i2l4313 2696                           i2l4305 266E  
                         i2l4233 2840                           i2l4225 2830                           i2l4217 2820  
                         i2l4209 2810                           i2l4307 267A                           i2l4323 2CB0  
                         i2l4251 2764                           i2l4227 2834                           i2l4219 2824  
                         i2l4243 2852                           i2l4325 2CB8                           i2l4237 2844  
                         i2l4229 2838                           i2l4335 2CD8                           i2l4351 2F48  
                         i2l4343 2F28                           i2l4239 2848                           i2l4345 2F30  
                         i2l4443 1456                           i2l4371 125E                           i2l4269 3110  
                         i2l4437 1438                           i2l4711 2AE4                           i2l4463 14F0  
                         i2l4367 124A                           i2l4295 2656                           i2l4279 260C  
                         i2l4385 128A                           i2l4369 124E                           i2l4721 1CC2  
                         i2l4715 2B18                           i2l4459 14D2                           i2l4395 12BC  
                         i2l4387 128E                           i2l4299 2666                           i2l4477 1530  
                         i2l4805 0058                           i2l4735 1D76                           i2l4823 0090  
                         i2l4753 1E2E                           i2l4833 00D4                           i2l4809 0060  
                         i2l4763 1E58                           i2l4827 00A8                           i2l4749 1E18  
                         i2l4781 2E34                           i2l4845 0134                           i2l4853 0142  
                         i2l4829 00B6                           i2l4837 00DC                           i2l4767 1E6E  
                         i2l4759 1E42                           i2l4863 0176                           i2l4847 0138  
                         i2l4855 0158                           i2l4849 013C                   ?i2_adcSampling 0001  
                         _SSPADD 0FC8                           _SSPBUF 0FC9                 __end_of___xxtofl 22DC  
            ?_get7SegmentPattern 0001               _setButtonInterrupt 30D0                     vfprintf@cfmt 00D9  
                         ___flge 22DC                           ___fleq 29DA                        ??___fladd 0068  
                      ??___fldiv 0068                        ??___flneg 0064                        ??___flmul 0076  
                      ??___flsub 008F                        ??___fltol 008B                           _efgtoa 0320  
                      ??___lwdiv 0064                        ??___lwmod 0064              _EUSART_TransmitChar 30F4  
                         _floorf 1E88                 _setDisplayDigits 1AD4              ?_setButtonInterrupt 0001  
                         _memcpy 2DCC             read_prec_or_width@ap 0061                           clear_0 2BCA  
                         clear_1 2BD6                           clear_2 2BE2                           isa$std 0001  
                         pad@buf 0072               __end_of_I2CRestart 3132                     ?_setupEUSART 0001  
                         _strcpy 2FCE             ??_get7SegmentPattern 0060                     ??_EEPROMRead 0064  
                         fputc@c 0060                           fputs@c 006D                           fputs@i 006E  
                   __pdataCOMRAM 004A                           fputs@s 0069                __end_ofi2___flmul 1546  
              __end_ofi2___fltol 26A8                 __end_of_setupI2C 30D0                 __end_of_setupADC 310E  
                ___fpclassifyf@e 0068                        ?_I2CStart 0001                  ___fpclassifyf@u 006A  
                ___fpclassifyf@x 0060                        ?_I2CWrite 0001                __end_ofi2___lwdiv 2CEC  
                   __mediumconst 0000                __end_ofi2___lwmod 2F5C                           tblptrh 0FF7  
                         tblptrl 0FF6                           tblptru 0FF8      i2get7SegmentPattern@pattern 0002  
                         putch@c 0001                 __end_of_vfprintf 2F96                     ?_setupTimer1 0001  
                      ??_sprintf 00E0          ??_EUSART_TransmitString 0063                   i2___flmul@aexp 000E  
                 i2___flmul@bexp 0013             ?_EUSART_TransmitChar 0001                   i2___flmul@sign 000D  
                 i2___flmul@temp 0018                   i2___flmul@prod 0014             ??_setButtonInterrupt 0060  
               i2displayDigits@i 0006                       ___flge@ff1 0087                       ___flge@ff2 008B  
                ??___fpclassifyf 0064                     ___xxtofl@arg 006A                     ___xxtofl@exp 0069  
                   ___xxtofl@val 0060                       ___fleq@ff1 0060                       ___fleq@ff2 0064  
                     __accesstop 0060          __end_of__initialization 2BE8                   i2___fltol@exp1 0023  
                  _adc_step_size 004A                       ___flneg@f1 0060                    ___rparam_used 0001  
                     ___fltol@f1 0087               __end_of_EEPROMRead 2D3C               i2___lwmod@dividend 0001  
                 __pcstackCOMRAM 0001       __end_ofi2_setDisplayDigits 1E88                    __end_of_fputc 29DA  
                  __end_of_fputs 2FCE                    __end_of_putch 3142                    _turnOnDisplay 00FA  
                     ??_I2CStart 0060                       ??_I2CWrite 0060                          ??_fputc 0064  
          ??_EUSART_TransmitChar 0060                          ??_fputs 006D          EUSART_TransmitChar@data 0060  
                        ??_putch 0060                  ??i2_adcSampling 0001                       __pbssBANK0 00E2  
                     __pbssBANK1 0100                    ??_adcSampling 0060                       I2CRead@ack 0060  
                        ?___flge 0087                          ?___fleq 0060                          ?_efgtoa 0093  
                        ?_floorf 0079                          _I2CRead 302C                          ?_memcpy 0060  
                     _getLowByte 3132                          _I2CStop 311A                          ?_strcpy 0060  
                      ?___xxtofl 0060                          _SSPCON1 0FC6                          _SSPCON2 0FC5  
                  ?_show7Segment 0001                    _address_index 00F2                          _SSPSTAT 0FC7  
                i2_displayDigits 275A          ??i2_EUSART_TransmitChar 0001                          __Hparam 0000  
                        __Lparam 0000              __end_of_adcSampling 308C                        ?_setupI2C 0001  
                      ?_setupADC 0001     __end_ofi2_get7SegmentPattern 28BA                          ___fladd 1546  
                        ___fldiv 184E                          ___flneg 2FFE                          ___flmul 0EF6  
                        ___flsub 2D86                          ___fltol 2534                   displayDigits@i 0065  
                        ___lwdiv 2BF6                          ___lwmod 2ED8                        ?_vfprintf 00D4  
                   __psmallconst 0300                          __pcinit 2BA4                        _ANSELbits 0F7E  
                        __ramtop 0300                          __ptext0 0B72                          __ptext1 2E54  
                        __ptext2 2F5C                          __ptext3 2032                          __ptext4 28BA  
                        __ptext5 0320                          __ptext6 2FCE                          __ptext7 2B4C  
                        __ptext8 2F96                          __ptext9 294A            read_prec_or_width@fmt 0060  
                     ??___xxtofl 0064                 ??i2_show7Segment 0008                     I2CWrite@data 0060  
                        efgtoa@c 0099                          efgtoa@d 00A7                          efgtoa@e 00AB  
                        efgtoa@f 0095                          efgtoa@g 00BE                          efgtoa@h 00B5  
                        efgtoa@i 00B3                          efgtoa@l 00B9                          efgtoa@m 00A9  
                        efgtoa@n 00C2                          efgtoa@p 009E                          efgtoa@t 00A0  
                        efgtoa@u 00C4                          efgtoa@w 00AD                   ??_show7Segment 0067  
                  _received_data 003E                          _sprintf 2E54             end_of_initialization 2BE8  
                        floorf@e 0087                          floorf@m 0083                          floorf@u 0089  
                        floorf@x 0079         __end_of_setDisplayDigits 1CAE                          memcpy@d 0067  
                        memcpy@n 0064                          memcpy@s 0069                          fputc@fp 0062  
                  __Lmediumconst 0000                          fputs@fp 006B                    ??_EEPROMWrite 0065  
                      i2u1005_47 27DA                        i2u1006_47 27E4                        i2u1007_47 2802  
             _read_prec_or_width 28BA                __end_of_vfpfcnvrt 219A                       ??_setupI2C 0060  
                     ??_setupADC 0060                       efgtoa@mode 00A5                       efgtoa@sign 00BD  
                      _RCSTAbits 0FAB                          postdec1 0FE5                          postdec2 0FDD  
            ?_read_prec_or_width 0060                    ??_getHighByte 0062                          postinc0 0FEE  
                        postinc1 0FE6                          postinc2 0FDE                 vfpfcnvrt@convarg 00CE  
                     ??_vfprintf 00D9                      ?_getLowByte 0060                          strcpy@d 0064  
                      _PORTCbits 0F82                      ___fladd@grs 006F            __end_of_displayDigits 2534  
                  ___xxtofl@sign 0068                        _TRISBbits 0F93                        _TRISCbits 0F94  
        __end_ofi2_displayDigits 280C             ??_read_prec_or_width 0063                      ___fldiv@grs 0073  
                    ___fldiv@rem 006C                  i2___fltol@sign1 0022                        i2___flmul 121E  
                      i2___fltol 25EE                i2___lwdiv@divisor 0003                        i2___lwdiv 2C9A  
                      i2___lwmod 2F1A                i2___lwdiv@counter 0007    __end_of_EUSART_TransmitString 2ADA  
                    ___flmul@grs 007D                      _adcSampling 3070                        _TXSTAbits 0FAC  
            __end_of_EEPROMWrite 2C9A                   __end_of___flge 23AC                   __end_of___fleq 2A64  
                    vfpfcnvrt@ap 00CB                      vfpfcnvrt@cp 00D3                      vfpfcnvrt@fp 00C8  
                    _BAUDCONbits 0FB8                    __pidataCOMRAM 3138                   __end_of_efgtoa 0B72  
                 __end_of_floorf 2032                   __end_of_memcpy 2E10                       floorf@F521 00E2  
            __end_of_getHighByte 3140                   __end_of_strcpy 2FFE               i2_setDisplayDigits 1CAE  
            start_initialization 2BA4         ?i2_EUSART_TransmitString 0002                      _adc_voltage 00EA  
                    __end_of_ISR 019E                  _eeprom_data_ctl 00FB                  _eeprom_data_lsb 00FD  
                _eeprom_data_msb 00FC                      __end_of_pad 2BA4                       ?i2___flmul 0001  
                     ?i2___fltol 001A             i2_get7SegmentPattern 280C                       ?i2___lwdiv 0001  
                     ?i2___lwmod 0001              ?i2_setDisplayDigits 0001                 getLowByte@number 0060  
          __end_of___fpclassifyf 2478                      vfprintf@fmt 00D6                         ??___flge 008F  
                       ??___fleq 0068             __end_of_show7Segment 2ED8                         ??_efgtoa 009A  
           ??i2_setDisplayDigits 0024                         ??_floorf 007D                         ?_I2CRead 0001  
                       ??_memcpy 0066                      _c_remainder 0030                         ?_I2CStop 0001  
                       ??_strcpy 0063                        ___fladd@a 0064                        ___fladd@b 0060  
    __end_of_EUSART_TransmitChar 3102                        ___fldiv@a 0064                        ___fldiv@b 0060  
                      ___flmul@a 0072                        ___flmul@b 006E                      __pbssCOMRAM 002C  
                      ___flsub@a 008B                        ___flsub@b 0087                        _adcResult 00F6  
                  __pcstackBANK0 0060                    __pcstackBANK1 0150                i2___lwmod@divisor 0003  
              i2___lwmod@counter 0005                 ?i2_displayDigits 0001            ?i2_get7SegmentPattern 0001  
                 _button_counter 002C            __end_ofi2_adcSampling 30BE                      _EEPROMWrite 2C48  
                    _efgtoa$1751 00A2                        _main$2067 015C                        _main$2068 015D  
               ___lwdiv@dividend 0060    __end_ofi2_EUSART_TransmitChar 311A                        __pintcode 0008  
                       ?___fladd 0060                         ?___fldiv 0060                         ?___flneg 0060  
              getHighByte@number 0060                         ?___flmul 006E                         ?___flsub 0087  
                       ?___fltol 0087        i2EUSART_TransmitChar@data 0001                      _getHighByte 313C  
                       ?___lwdiv 0060                         ?___lwmod 0060  __end_ofi2_EUSART_TransmitString 2B4C  
                    __smallconst 0300                         _I2CStart 3122                         _I2CWrite 30E2  
                      _fsm_state 00F9                 ___lwdiv@quotient 0065                         ?_sprintf 00DA  
                    ??i2___flmul 0009                      ??i2___fltol 001E               EEPROMWrite@address 0062  
                    ??i2___lwdiv 0005                      ??i2___lwmod 0005           EUSART_TransmitString@a 0061  
         EUSART_TransmitString@i 0065                ?_setDisplayDigits 0001                         _LATAbits 0F89  
                       _LATCbits 0F8B                      _eeprom_data 00F4               ??_setDisplayDigits 0091  
                       _PIE1bits 0F9D                         _PIR1bits 0F9E                         i2u524_40 2B10  
                       i2u540_40 0048                         i2u524_47 2B06                         i2u525_40 2B44  
                       i2u525_47 2B3A                         i2u462_44 2774                         i2u462_45 2770  
                       i2u463_44 279A                         i2u463_45 2796                         i2u472_40 2680  
                       i2u544_40 0068                         i2u464_44 27BE                         i2u464_45 27BA  
                       i2u465_40 27FE                         i2u537_40 2E2E                         i2u491_40 1484  
                       i2u467_40 25FA                         i2u475_40 2CBC                         i2u468_40 262A  
                       i2u468_45 2620                         i2u478_40 2F34                         i2u495_40 14E0  
                       i2u487_40 12AA                         i2u496_40 14FE                     ??_getLowByte 0062  
                      _vfpfcnvrt 2032                    ??_setupEUSART 0060                       _ADCON0bits 0FC2  
         ??i2_get7SegmentPattern 0001                    ??_setupTimer1 0060        get7SegmentPattern@pattern 0061  
                     vfpfcnvrt@c 00D2                      _INTCON2bits 0FF1                      _INTCON3bits 0FF0  
                      copy_data0 2BB8                       _I2CRestart 312A                     ?_adcSampling 0001  
             __end_of_getLowByte 3138                EEPROMRead@address 0062          get7SegmentPattern@digit 0060  
                       __Hrparam 0000                        memcpy@tmp 0066                       vfprintf@ap 00D7  
                       __Lrparam 0000                       vfprintf@fp 00D4                       ?_vfpfcnvrt 00C8  
             ___fpclassifyf@F465 00E6                       sprintf@fmt 00DB                       _EEPROMRead 2CEC  
                       _c_target 0032                         ___xxtofl 219A                         _c_number 002E  
                ___lwdiv@divisor 0062                  ___lwdiv@counter 0064              __end_of_setupEUSART 3070  
                       __ptext10 3140                         __ptext11 2DCC                         __ptext20 184E  
                       __ptext12 2D3C                         __ptext21 2E96                         __ptext13 1E88  
                       __ptext30 2BF6                         __ptext22 26A8                         __ptext14 23AC  
                       __ptext31 2534                         __ptext23 2478                         __ptext15 2D86  
                       __ptext40 3132                         __ptext32 0EF6                         __ptext24 308C  
                       __ptext16 1546                         __ptext41 313C                         __ptext33 30D0  
                       __ptext25 30BE                         __ptext17 2FFE                         __ptext50 275A  
                       __ptext42 30E2                         __ptext34 3070                         __ptext26 3050  
                       __ptext18 22DC                         __ptext51 1CAE                         __ptext43 311A  
                       __ptext35 219A                         __ptext27 3102                         __ptext19 29DA  
                       __ptext52 2F1A                         __ptext44 3122                         __ptext36 2A64  
                       __ptext28 1AD4                         __ptext53 2C9A                         __ptext45 312A  
                       __ptext37 30F4                         __ptext29 2ED8                         __ptext54 25EE  
                       __ptext46 302C                         __ptext38 2C48                         __ptext55 121E  
                       __ptext39 2CEC                         __ptext56 30A6                         __ptext48 2E10  
                       __ptext57 2ADA                         __ptext49 280C                         __ptext58 310E  
                   _show7Segment 2E96                      _segPattern0 003B                      _segPattern1 003A  
                    _segPattern2 0039                       strcpy@dest 0060              __end_of_setupTimer1 30A6  
          _EUSART_TransmitString 2A64                         _sampling 00FE                         efgtoa@fp 0093  
                       efgtoa@ne 009C                         efgtoa@pp 00A4                         efgtoa@ou 00AF  
                       _setupI2C 30BE                         _setupADC 3102                         isa$xinst 0000  
                       int$flags 004E            i2displayDigits@digit0 0005            i2displayDigits@digit1 0001  
          i2displayDigits@digit2 0002                         _vfprintf 2F5C       __end_of_get7SegmentPattern 275A  
                     _INTCONbits 0FF2                         memcpy@d1 0060                         memcpy@s1 0062  
     __end_of_setButtonInterrupt 30E2                      ?_I2CRestart 0001                         intlevel2 0000  
                      sprintf@ap 0150                 ___lwmod@dividend 0060                     ?_EEPROMWrite 0062  
                      strcpy@src 0062                   _displayAddress 0035                       _OSCCONbits 0FD3  
                    efgtoa@nmode 00A6                    _overflowCount 003F                     ?_getHighByte 0060  
                    ??_vfpfcnvrt 00CD                      _setupEUSART 3050                      _uart_buffer 0040  
                       sprintf@f 0151                         sprintf@s 00DA                      ?_EEPROMRead 0062  
                ___lwmod@divisor 0062                  ___lwmod@counter 0064                    _displayDigit0 0038  
                  _displayDigit1 0037                    _displayDigit2 0036                    _displayDigits 2478  
                    _SSPCON2bits 0FC5                   EEPROMRead@data 0064                    _displaySample 0034  
                    _setupTimer1 308C                    ___fladd@signs 006C                _address_high_byte 003C  
                   ___fladd@aexp 006D                     ___fladd@bexp 006E           ?_EUSART_TransmitString 0061  
